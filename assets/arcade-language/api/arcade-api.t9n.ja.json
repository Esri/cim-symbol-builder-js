[
  {
    "id": "constants",
    "title": "定数",
    "items": [
      {
        "type": "constant",
        "name": "infinity",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#infinity",
        "description": "他の数値より大きな値を表します。 `-Infinity` は、任意の数値より小さい値としても使用できます。",
        "examples": "\n##### 例\n\n4 つのフィールド値の最大値を計算します\n\n```arcade\nvar values = [ $feature.field1, $feature.field2, $feature.field3, $feature.field4 ];\nvar maxValue = -Infinity;\n\nfor(var i in values){\n  maxValue = IIF(values[i] > maxValue, values[i], maxValue);\n}\n\nreturn maxValue;\n```\n\n",
        "completion": {
          "label": "Infinity",
          "detail": "Infinity",
          "insertText": "Infinity",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "他の数値より大きな値を表します。 `-Infinity` は、任意の数値より小さい値としても使用できます。"
          }
        }
      },
      {
        "type": "constant",
        "name": "pi",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#pi",
        "description": "円周を直径で除算した値で、約 `3.14159` です。",
        "examples": "\n##### 例\n\n円フィーチャの面積を返します\n\n```arcade\nvar r = $feature.radius;\nPI * r * r;\n```\n\n",
        "completion": {
          "label": "PI",
          "detail": "PI",
          "insertText": "PI",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "円周を直径で除算した値で、約 `3.14159` です。"
          }
        }
      },
      {
        "type": "constant",
        "name": "textformatting.backwardslash",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#textformatting.backwardslash",
        "description": "バックスラッシュ文字 `\\` をテキストに挿入します。",
        "examples": "\n##### 例\n\n'\\\\\\serverName\\foo\\bar' を返します\n\n```arcade\nTextFormatting.BackwardSlash + TextFormatting.BackwardSlash + $feature.FILE_PATH\n```\n\n",
        "completion": {
          "label": "TextFormatting.BackwardSlash",
          "detail": "TextFormatting.BackwardSlash",
          "insertText": "TextFormatting.BackwardSlash",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "バックスラッシュ文字 `\\` をテキストに挿入します。"
          }
        }
      },
      {
        "type": "constant",
        "name": "textformatting.doublequote",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#textformatting.doublequote",
        "description": "二重引用符 `\\\"` をテキストに挿入します。",
        "examples": "\n##### 例\n\n'Nicholas \\\"Nick\\\" Anderson' を返します\n\n```arcade\n$feature.NAME + \" \" + TextFormatting.DoubleQuote + $feature.ALIAS + TextFormatting.DoubleQuote + \" \" + $feature.SURNAME\n```\n\n",
        "completion": {
          "label": "TextFormatting.DoubleQuote",
          "detail": "TextFormatting.DoubleQuote",
          "insertText": "TextFormatting.DoubleQuote",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "二重引用符 `\\\"` をテキストに挿入します。"
          }
        }
      },
      {
        "type": "constant",
        "name": "textformatting.forwardslash",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#textformatting.forwardslash",
        "description": "フォワードスラッシュ文字 `/` をテキストに挿入します。",
        "examples": "\n##### 例\n\n'151/low' を返します\n\n```arcade\n$feature.POP_DENSITY + TextFormatting.ForwardSlash + $feature.CLASS\n```\n\n",
        "completion": {
          "label": "TextFormatting.ForwardSlash",
          "detail": "TextFormatting.ForwardSlash",
          "insertText": "TextFormatting.ForwardSlash",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "フォワードスラッシュ文字 `/` をテキストに挿入します。"
          }
        }
      },
      {
        "type": "constant",
        "name": "textformatting.newline",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#textformatting.newline",
        "description": "新しい行または改行をテキストに挿入します。 ArcGIS API 3.x for JavaScript や ArcGIS Online マップ ビューアーでは、複数行のラベルはサポートされていません。",
        "examples": "\n##### 例\n\n\\\"T2N R1W\\\" を返します\n\n```arcade\n\"T\" + $feature.TOWNSHIP + TextFormatting.NewLine + \"R\" + $feature.RANGE\n```\n\n",
        "completion": {
          "label": "TextFormatting.NewLine",
          "detail": "TextFormatting.NewLine",
          "insertText": "TextFormatting.NewLine",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "新しい行または改行をテキストに挿入します。 ArcGIS API 3.x for JavaScript や ArcGIS Online マップ ビューアーでは、複数行のラベルはサポートされていません。"
          }
        }
      },
      {
        "type": "constant",
        "name": "textformatting.singlequote",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/constants/#textformatting.singlequote",
        "description": "単一引用符 `'` をテキストに挿入します。",
        "examples": "\n##### 例\n\n\\\"Nicholas 'Nick' Anderson\\\" を返します\n\n```arcade\n$feature.NAME + \" \" + TextFormatting.SingleQuote + $feature.ALIAS + TextFormatting.SingleQuote + \" \" + $feature.SURNAME\n```\n\n",
        "completion": {
          "label": "TextFormatting.SingleQuote",
          "detail": "TextFormatting.SingleQuote",
          "insertText": "TextFormatting.SingleQuote",
          "insertTextMode": 2,
          "insertTextFormat": 1,
          "kind": 21,
          "documentation": {
            "kind": "markdown",
            "value": "単一引用符 `'` をテキストに挿入します。"
          }
        }
      }
    ]
  },
  {
    "id": "featureset_functions",
    "title": "FeatureSet 関数",
    "items": [
      {
        "type": "function",
        "name": "area",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#area",
        "description": "入力 FeatureSet の面積を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nレイヤーの面積を平方キロメートルで返します\n\n```arcade\nArea($layer, 'square-kilometers')\n```\n\n",
        "completion": {
          "label": "Area",
          "detail": "Area(features, unit?) -> Number",
          "insertText": "Area(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力 FeatureSet の面積を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 平面面積を計算する FeatureSet。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `acres` | `square-feet` | `hectares` | `square-kilometers` | `square-miles` | `square-nautical-miles` | `square-meters` | `square-yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "areageodetic",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#areageodetic",
        "description": "入力 FeatureSet の測地面積を所定の単位で返します。 これは `Area()` よりも信頼性の高い面積の計測です よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nレイヤーの測地面積を平方キロメートルで返します\n\n```arcade\nAreaGeodetic($layer, 'square-kilometers')\n```\n\n",
        "completion": {
          "label": "AreaGeodetic",
          "detail": "AreaGeodetic(features, unit?) -> Number",
          "insertText": "AreaGeodetic(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力 FeatureSet の測地面積を所定の単位で返します。 これは `Area()` よりも信頼性の高い面積の計測です よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 測地面積を計算する FeatureSet。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `acres` | `square-feet` | `hectares` | `square-kilometers` | `square-miles` | `square-nautical-miles` | `square-meters` | `square-yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "attachments",
        "bundle": "data-access",
        "sinceVersion": "1.6",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#attachments",
        "description": "入力フィーチャに関連付けられたアタッチメントのリストを返します。 各結果には、アタッチメントの名前、コンテンツのタイプ、ID、およびサイズ (バイト単位) が含まれます。 フィーチャ サービスから作成されたフィーチャにのみ適用されます。",
        "examples": "\n##### 例\n\nフィーチャに関連付けられている添付ファイルの数を返します。\n\n```arcade\n// Returns the number of attachments associated with the feature\nCount(Attachments($feature))\n```\n\n",
        "completion": {
          "label": "Attachments",
          "detail": "Attachments(inputFeature, options?) -> Array<Attachment>",
          "insertText": "Attachments(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.6](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力フィーチャに関連付けられたアタッチメントのリストを返します。 各結果には、アタッチメントの名前、コンテンツのタイプ、ID、およびサイズ (バイト単位) が含まれます。 フィーチャ サービスから作成されたフィーチャにのみ適用されます。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - このフィーチャに関連付けられている添付ファイルが、サービスから取得されます。\n- **options** (_Optional_): [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - リクエストの設定。 ディクショナリのプロパティ:\n\n  - **types**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 取得するファイル タイプを表すテキスト値の配列。  \n設定可能な値: `bmp`、`ecw`、`emf`、`eps`、`ps`、`gif`、`img`、`jp2`、`jpc`、`j2k`、`jpf`、`jpg`、`jpeg`、`jpe`、`png`、`psd`、`raw`、`sid`、`tif`、 `tiff`、`wmf`、`wps`、`avi`、`mpg`、`mpe`、`mpeg`、`mov`、`wmv`、`aif`、`mid`、`rmi`、`mp2`、`mp3`、`mp4`、`pma`、`mpv2`、`qt`、`ra`、 `ram`、`wav`、`wma`、`doc`、`docx`、`dot`、`xls`、`xlsx`、`xlt`、`pdf`、`ppt`、`pptx`、`txt`、`zip`、`7z`、`gz`、`gtar`、`tar`、`tgz`、 `vrml`、`gml`、`json`、`xml`、`mdb`、`geodatabase`\n  - **minsize**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 添付ファイルのバイト単位の最小ファイル サイズ。\n  - **maxsize**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 添付ファイルのバイト単位の最大ファイル サイズ。\n  - **metadata** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 戻り関数に添付ファイルのメタデータを含めるかどうかを示します。 現在、画像の Exif メタデータのみがサポートされています。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Attachment](https://developers.arcgis.com/arcade/guide/types/#attachment)&gt;"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "average",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#average",
        "description": "FeatureSet の所定の数値フィールドの平均値を返します。",
        "examples": "\n##### 例\n\n該当するフィーチャの人口とレイヤー内のすべてのフィーチャの平均人口の差を算出します。\n\n```arcade\n$feature.population - Average($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの平均人口を算出します。\n\n```arcade\nAverage($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Average",
          "detail": "Average(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Average(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドの平均値を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "count",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#count",
        "description": "FeatureSet 内のフィーチャの数を返します。",
        "examples": "\n##### 例\n\nレイヤー内のフィーチャの数を返します。\n\n```arcade\nCount($layer)\n```\n\n",
        "completion": {
          "label": "Count",
          "detail": "Count(features) -> Number",
          "insertText": "Count(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet 内のフィーチャの数を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - フィーチャの数のカウント元となる FeatureSet。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "crosses",
        "bundle": "data-access",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#crosses",
        "description": "入力ジオメトリをクロスするフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n特定のポリゴンとクロスしている FeatureSet 内のフィーチャの数を返します。\n\n```arcade\nvar geom2 = Polygon({ ... });\nCount( Crosses($layer, geom2) );\n```\n\n",
        "completion": {
          "label": "Crosses",
          "detail": "Crosses(features, crossingGeometry) -> FeatureSet",
          "insertText": "Crosses(${1:features_}, ${2:crossingGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリをクロスするフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 入力 `crossingGeometry` とのクロス リレーションシップをテストするフィーチャ。\n- **crossingGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - クロスされるジオメトリ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "distinct",
        "bundle": "data-access",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#distinct",
        "description": "FeatureSet から一連の個別値または一意の値を返します。",
        "examples": "\n##### 例\n\n'Status' 列を持つ FeatureSet を返します。 FeatureSet の各行には、一意のステータス値が含まれています\n\n```arcade\nDistinct($layer, 'Status')\n```\n\n'Status' 列と 'Type' 列を持つ FeatureSet を返します。 FeatureSet の各行には、'Status' および 'Type' の値の一意の組み合わせが含まれています\n\n```arcade\nDistinct($layer, ['Status', 'Type'])\n```\n\nDensity 列の行に Low、High、N/A の値が含まれる FeatureSet を返します\n\n```arcade\nDistinct($layer, {\n  name: \"Density\",\n  expression: \"CASE WHEN PopDensity < 100 THEN 'Low' WHEN PopDensity >= 100 THEN 'High' ELSE 'N/A' END\"\n})\n```\n\nScore 列と Type 列を持つ FeatureSet を返します\n\n```arcade\nDistinct($layer, [{\n  name: 'Score',\n  expression: 'POPULATION_DENSITY * 0.65 + Status_Code * 0.35'\n}, {\n  name: 'Type',\n  expression: 'Category'\n}])\n```\n\n",
        "completion": {
          "label": "Distinct",
          "detail": "Distinct(features, fields) -> FeatureSet",
          "insertText": "Distinct(${1:features_}, ${2:fields_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet から一連の個別値または一意の値を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 個別値を返す FeatureSet です。\n- **fields**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - 個別値を判別するフィールド/条件式です。 このパラメーターには、フィールド名の配列、条件式の配列、 ディクショナリまたはオブジェクトの配列を使用でき、個別値を格納する出力列名を指定します。 ディクショナリを指定した場合、次の仕様を使用する必要があります。\n\n  - **name**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 所定の条件式の結果を格納する列の名前。\n  - **expression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 個別値を計算する SQL-92 条件式。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "domain",
        "bundle": "data-access",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#domain",
        "description": "指定された `featureSet` の所定のフィールドに割り当てられたドメインを返します。 `featureSet` がサブタイプを持つクラスに属している場合、サブタイプに割り当てられたドメインを返します。",
        "examples": "\n##### 例\n\nフィーチャのサブタイプに割り当てられたドメイン。\n\n```arcade\nvar fsPole = FeatureSetByName($layer, \"Pole\", 1);\nvar d = Domain(fsPole, \"poleType\")\n// the poleType field has a coded value domain called poleTypes\n// the value of d will be\n// {\n//   type: \"codedValue\" ,\n//   name: \"poleTypesThreePhase\",\n//   dataType: \"number\",\n//   codedValues: [\n//     { name: \"Unknown\", code: 0 },\n//     { name: \"Wood\", code: 1 },\n//     { name: \"Steel\", code: 2 }\n//     { name: \"Reinforced Steel\", code: 3 }\n//   ]\n// }\n```\n\n",
        "completion": {
          "label": "Domain",
          "detail": "Domain(features, fieldName, subtype?) -> Dictionary",
          "insertText": "Domain(${1:features_}, ${2:fieldName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された `featureSet` の所定のフィールドに割り当てられたドメインを返します。 `featureSet` がサブタイプを持つクラスに属している場合、サブタイプに割り当てられたドメインを返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - ドメインを保持するフィールドを含むフィーチャの FeatureSet です。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを含むフィールドの名前です (フィールドのエイリアスではありません)。\n- **subtype** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - フィーチャがサブタイプをサポートしている場合のサブタイプのコード値。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **type**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインのタイプ (`codedValue` または `range` のいずれか)。\n- **name**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメイン名。\n- **dataType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメイン フィールドのデータ タイプ。 値は `esriFieldTypeSmallInteger`、`esriFieldTypeInteger`、`esriFieldTypeBigInteger`、`esriFieldTypeSingle`、`esriFieldTypeDouble`、 `esriFieldTypeString`、`esriFieldTypeDate`、`esriFieldTypeOID`、`esriFieldTypeGeometry`、`esriFieldTypeBlob`、 `esriFieldTypeRaster`、`esriFieldTypeGUID`、`esriFieldTypeGlobalID`、`esriFieldTypeXML` のいずれかです。\n- **min**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `range` ドメインにのみ適用されます。 ドメインの最小値。\n- **max**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `range` ドメインにのみ適用されます。 ドメインの最大値。\n- **codedValues**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - `codedValue` ドメインにのみ適用されます。 フィールドの有効な値を記述する辞書の配列。 それぞれの辞書には、実際のフィールド値を保持する `code` プロパティと、 値のわかりやすい説明を保持する `name` プロパティがあります (例: `{ code: 1, name: \\\"pavement\\\" }`)。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "domaincode",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#domaincode",
        "description": "FeatureSet 内の関連付けられたドメインの説明のコードを返します。",
        "examples": "\n##### 例\n\n参照されているフィールドのドメインの説明を出力します。\n\n```arcade\nDomainCode($layer, 'Enabled', 'True', subtype)\n```\n\n",
        "completion": {
          "label": "DomainCode",
          "detail": "DomainCode(features, fieldName, value, subtype?) -> Number,Text",
          "insertText": "DomainCode(${1:features_}, ${2:fieldName_}, ${3:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet 内の関連付けられたドメインの説明のコードを返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - ドメインを保持するフィールドを含むフィーチャ セットです。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを含むフィールドの名前です (フィールドのエイリアスではありません)。\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - コードに再変換する値です。 返されるコードは、サービス メタデータから取得されます。\n- **subtype** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャ セットがサブタイプをサポートしている場合のサブタイプのコード番号または名前です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "domainname",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#domainname",
        "description": "FeatureSet 内のドメイン コードの説明的な名前を返します。",
        "examples": "\n##### 例\n\n参照されているフィールドのドメインの説明を出力します\n\n```arcade\nDomainName($layer, 'fieldName')\n```\n\n",
        "completion": {
          "label": "DomainName",
          "detail": "DomainName(features, fieldName, code?, subtype?) -> Text",
          "insertText": "DomainName(${1:features_}, ${2:fieldName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet 内のドメイン コードの説明的な名前を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - ドメインを保持するフィールドを含む FeatureSet です。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを含むフィールドの名前です (フィールドのエイリアスではありません)。\n- **code** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 目的を説明する名前に関連付けられているコードです。 返されるコードは、サービス メタデータから取得されます。\n- **subtype** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - FeatureSet がサブタイプをサポートしている場合のサブタイプのコード番号または名前です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "envelopeintersects",
        "bundle": "data-access",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#envelopeintersects",
        "description": "一連のフィーチャのエンベロープ (または範囲) が別のジオメトリのエンベロープと交差するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\ngeom2 のエンベロープと交差しているフィーチャの数を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nCount( EnvelopeIntersects($layer, geom2) );\n```\n\n",
        "completion": {
          "label": "EnvelopeIntersects",
          "detail": "EnvelopeIntersects(features, envelope) -> FeatureSet",
          "insertText": "EnvelopeIntersects(${1:features_}, ${2:envelope_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n一連のフィーチャのエンベロープ (または範囲) が別のジオメトリのエンベロープと交差するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 入力 `envelope` との交差関係についてテストされる FeatureSet。\n- **envelope**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 交差されるエンベロープ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "expects",
        "bundle": "data-access",
        "sinceVersion": "1.15",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#expects",
        "description": "指定の FeatureSet の追加の属性をリクエストします。",
        "examples": "\n##### 例\n\nクラスター内のフィーチャの POPULATION フィールドをリクエスト\n\n```arcade\n// If the layer is clustered based on count,\n// only the OBJECTID field is requested by default.\n// To display the sum of the POPULATION field\n// for all features in the cluster, we must\n// explicitly request the POPULATION data. \nExpects($aggregatedFeatures, 'POPULATION')\nText(Sum($aggregatedFeatures, 'POPULATION'), '#,###')\n```\n\n",
        "completion": {
          "label": "Expects",
          "detail": "Expects(features, field1, [field2, ..., fieldN]?) -> Null",
          "insertText": "Expects(${1:features_}, ${2:field1_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.15](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定の FeatureSet の追加の属性をリクエストします。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - リクエストされたフィールドの追加先のフィーチャ セット。\n- **field1**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 指定のフィーチャについてリクエストするフィールド名。 式で使用するために必要なフィールドのみをリストします。 必要に応じて、ワイルドカード文字 `*` を使用してすべてのフィールドをリクエストできます。 ただし、不必要なデータ量が読み込まれて、アプリのパフォーマンスに悪影響を及ぼすのを防ぐために、この文字の使用は避ける必要があります。\n- **[field2, ..., fieldN]** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 指定のフィーチャについてリクエストするフィールド名の継続的なリスト。 式で使用するために必要なフィールドのみをリストします。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": -1
        }
      },
      [
        {
          "type": "function",
          "name": "featureset",
          "bundle": "data-access",
          "sinceVersion": "1.5",
          "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featureset1",
          "description": "ArcGIS REST 仕様に基づいて新しい FeatureSet を JSON から作成します。 この例については、下記のスニペットをご参照ください。",
          "examples": "\n##### 例\n\nFeatureSet を JSON から作成します。\n\n```arcade\n// JSON representation of the feature used in the snippet below\n// {\n//   'fields': [{\n//     'alias': 'RANK',\n//     'name': 'RANK',\n//     'type': 'esriFieldTypeInteger'\n//   }, {\n//     'alias': 'ELEV_m',\n//     'name': 'ELEV_m',\n//     'type': 'esriFieldTypeInteger'\n//   }],\n//   'spatialReference': { 'wkid': 4326 },\n//   'geometryType': 'esriGeometryPoint',\n//   'features': [{\n//     'geometry': {\n//       'spatialReference': { 'wkid': 4326 },\n//       'x': -151.0063,\n//       'y': 63.069\n//     },\n//     'attributes': {\n//       'RANK': 1,\n//       'ELEV_m': 6168\n//     }\n//   }]\n// };\n// The Dictionary representation of the FeatureSet must be a serialized text value\nvar features = FeatureSet('{\"fields\":[{\"alias\":\"RANK\",\"name\":\"RANK\",\"type\":\"esriFieldTypeInteger\"},{\"alias\":\"ELEV_m\",\"name\":\"ELEV_m\",\"type\":\"esriFieldTypeInteger\"}],\"spatialReference\":{\"wkid\":4326},\"geometryType\":\"esriGeometryPoint\",\"features\":[{\"geometry\":{\"spatialReference\":{\"wkid\":4326},\"x\":-151.0063,\"y\":63.069},\"attributes\":{\"RANK\":1,\"ELEV_m\":6168}}]}')\n```\n\n",
          "completion": {
            "label": "FeatureSet",
            "detail": "FeatureSet(definition) -> FeatureSet",
            "insertText": "FeatureSet(${1:definition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nArcGIS REST 仕様に基づいて新しい FeatureSet を JSON から作成します。 この例については、下記のスニペットをご参照ください。\n\n**パラメーター**\n\n- **definition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 一連のフィーチャを記述した JSON です。 JSON は、テキスト値として直列化されている必要があります。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "featureset",
          "bundle": "data-access",
          "sinceVersion": "1.19",
          "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featureset2",
          "description": "ArcGIS REST 仕様に基づいて JSON を表す新しい FeatureSet をディクショナリから作成します。 この例については、下記のスニペットをご参照ください。",
          "examples": "\n##### 例\n\nFeatureSet をディクショナリから作成します。\n\n```arcade\n// JSON representation of the feature used in the snippet below\nvar d = {\n  fields: [{\n    alias: 'RANK',\n    name: 'RANK',\n    type: 'esriFieldTypeInteger'\n  }, {\n    alias: 'ELEV_m',\n    name: 'ELEV_m',\n    type: 'esriFieldTypeInteger'\n  }],\n  spatialReference: { wkid: 4326 },\n  geometryType: 'esriGeometryPoint',\n  features: [{\n    geometry: {\n      spatialReference: { wkid: 4326 },\n      x: -151.0063,\n      y: 63.069\n    },\n    attributes: {\n      RANK: 1,\n      ELEV_m: 6168\n    }\n  }]\n };\nvar features = FeatureSet(d)\n```\n\n",
          "completion": {
            "label": "FeatureSet",
            "detail": "FeatureSet(definition) -> FeatureSet",
            "insertText": "FeatureSet(${1:definition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.19](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nArcGIS REST 仕様に基づいて JSON を表す新しい FeatureSet をディクショナリから作成します。 この例については、下記のスニペットをご参照ください。\n\n**パラメーター**\n\n- **definition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 一連のフィーチャを記述した辞書です。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "featuresetbyassociation",
        "bundle": "data-access",
        "sinceVersion": "1.9",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featuresetbyassociation",
        "description": "入力フィーチャと関連付けられているすべてのフィーチャを FeatureSet として返します。 これは、ユーティリティ ネットワークのワークフローでのみ使用されます。",
        "examples": "\n##### 例\n\n変圧器の下側のターミナルと接続の関連付けがあるすべての対象物を返します。\n\n```arcade\nFeatureSetByAssociation($feature, 'connected', 'Low');\n```\n\nフィーチャに関連付けられている電気デバイスの数を返します。\n\n```arcade\nvar allContent = FeatureSetByAssociation ($feature, \"content\");\nvar devicesRows = Filter(allContent, \"className = 'Electric Device'\");\nvar devicesCount = Count(devicesRows);\nreturn devicesCount;\n```\n\n",
        "completion": {
          "label": "FeatureSetByAssociation",
          "detail": "FeatureSetByAssociation(inputFeature, associationType, terminalName?) -> FeatureSet",
          "insertText": "FeatureSetByAssociation(${1:inputFeature_}, ${2:associationType_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.9](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力フィーチャと関連付けられているすべてのフィーチャを FeatureSet として返します。 これは、ユーティリティ ネットワークのワークフローでのみ使用されます。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 関連付けられているすべてのフィーチャをクエリするフィーチャです。 このフィーチャはフィーチャ サービスから取得される必要があります。フィーチャ コレクションはサポートされていません。\n- **associationType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されるフィーチャとの関連付けのタイプです。  \n  設定可能な値: `connected` \\| `container` \\| `content` \\| `structure` \\| `attached`  \n  バージョン 1.10 で追加された設定可能な値: `junctionEdge` \\| `midspan`\n- **terminalName** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `connected` 関連付けタイプにのみ適用されます。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)  \n以下の表で説明されているフィールドの仕様を持つフィーチャを含む FeatureSet を返します。\n\n- **className**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `TONETWORKSOURCEID` または `FROMNETWORKSOURCEID` の値に基づくクラス名。\n- **globalId**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 他のテーブル内のフィーチャの Global ID (`TOGLOBALID` または `FROMGLOBALID` の値)。\n- **isContentVisible**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `1` (表示) または `0` (非表示) の値を使用できます。 この値は関連する格納器の表示設定を表し、格納の関連付けにのみ適用されます。\n- **objectId**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 関連付けテーブル内の行の ObjectID。\n- **percentAlong**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `midspan` 関連付けタイプに適用されます。 エッジに沿ったジャンクションの位置を (比率として) 示す 0 ～ 1 の浮動小数を返します。\n- **side**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `junctionEdge` 関連付けタイプに適用されます。 ジャンクションがどちら側にあるかを示します。\n\n設定可能な値: `from` または `to`"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "featuresetbyid",
        "bundle": "data-access",
        "sinceVersion": "1.5",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featuresetbyid",
        "description": "マップ内またはフィーチャ サービス内のレイヤー ID に基づいて、FeatureSet をフィーチャ レイヤーから作成します。 リクエスト内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。",
        "examples": "\n##### 例\n\n特定のマップ内で ID が DemoLayerWM_1117 のレイヤーに含まれるフィーチャの数を返します。\n\n```arcade\nvar features = FeatureSetById($map,'DemoLayerWM_1117', ['*'], true);\nCount( features );\n```\n\n",
        "completion": {
          "label": "FeatureSetById",
          "detail": "FeatureSetById(featureSetCollection, id, fields?, includeGeometry?) -> FeatureSet",
          "insertText": "FeatureSetById(${1:featureSetCollection_}, ${2:id_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nマップ内またはフィーチャ サービス内のレイヤー ID に基づいて、FeatureSet をフィーチャ レイヤーから作成します。 リクエスト内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。\n\n**パラメーター**\n\n- **featureSetCollection**: [FeatureSetCollection](https://developers.arcgis.com/arcade/guide/types/#featuresetcollection) - FeatureSet の作成元となる 1 つ以上のレイヤーを含むマップまたはフィーチャ サービスです。 通常、この値は `$map` または `$datastore` グローバルです。\n- **id**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 特定の「マップ」内のレイヤーの ID です。 このレイヤーはフィーチャ サービスから作成される必要があります。フィーチャ コレクションはサポートされていません。 _この値はテキスト リテラルである必要があることに注意してください。_\n- **fields** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - FeatureSet に挿入するフィールドです。 デフォルトでは、すべてのフィールドが挿入されます。 レイヤー内のすべてのフィールドをリクエストするには、この値を `['*']` に設定します。 フィールドの数を制限すると、スクリプトのパフォーマンスが上がります。\n- **includeGeometry** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリをフィーチャに含めるかどうかを示します。 デフォルトではこれは `true` です。 パフォーマンス上の理由で、ジオメトリのリクエストのみ行う必要があります (必要に応じて、 ジオメトリ関数で使用する場合など)。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "featuresetbyname",
        "bundle": "data-access",
        "sinceVersion": "1.5",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featuresetbyname",
        "description": "マップ内またはフィーチャ サービス内の名前に基づいて、FeatureSet をフィーチャ レイヤーから作成します。 この名前が必ずしも一意でないということに、注意してください。 そのため、「FeatureSetById()」を使用して FeatureSet を作成するのが、より適切です。 FeatureSet 内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。",
        "examples": "\n##### 例\n\n特定のマップ内でタイトルが 'Bike routes’ のレイヤーに含まれるフィーチャの数を返します。\n\n```arcade\nvar features = FeatureSetByName($map,'Bike routes', ['*'], true);\nCount(features);\n```\n\n",
        "completion": {
          "label": "FeatureSetByName",
          "detail": "FeatureSetByName(featureSetCollection, title, fields?, includeGeometry?) -> FeatureSet",
          "insertText": "FeatureSetByName(${1:featureSetCollection_}, ${2:title_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nマップ内またはフィーチャ サービス内の名前に基づいて、FeatureSet をフィーチャ レイヤーから作成します。 この名前が必ずしも一意でないということに、注意してください。 そのため、「FeatureSetById()」を使用して FeatureSet を作成するのが、より適切です。 FeatureSet 内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。\n\n**パラメーター**\n\n- **featureSetCollection**: [FeatureSetCollection](https://developers.arcgis.com/arcade/guide/types/#featuresetcollection) - FeatureSet の作成元となる 1 つ以上のレイヤーを含むマップまたはフィーチャ サービスです。 通常、この値は `$map` または `$datastore` グローバルです。\n- **title**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 特定の「マップ」内のレイヤーのタイトルです。 このレイヤーはフィーチャ サービスから作成される必要があります。フィーチャ コレクションはサポートされていません。 _この値はテキスト リテラルである必要があることに注意してください。_\n- **fields** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - FeatureSet に挿入するフィールドです。 デフォルトでは、すべてのフィールドが挿入されます。 レイヤー内のすべてのフィールドをリクエストするには、この値を `['*']` に設定します。 フィールドの数を制限すると、スクリプトのパフォーマンスが上がります。\n- **includeGeometry** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリをフィーチャに含めるかどうかを示します。 デフォルトではこれは `true` です。 パフォーマンス上の理由で、ジオメトリのリクエストのみ行う必要があります (必要に応じて、 ジオメトリ関数で使用する場合など)。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "featuresetbyrelationshipclass",
        "bundle": "data-access",
        "sinceVersion": "1.24",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featuresetbyrelationshipclass",
        "description": "所定のリレーションシップ クラスの名前に基づいて、所定のフィーチャの関連レコードを返します。",
        "examples": "\n##### 例\n\n街灯検査の関連レコードの数を返す\n\n```arcade\n// A calculation rule that returns the count of a pole inspection records.\n// When a pole feature is updated the calculation rule reads all its related inspections records from the comments field and returns the total inspection count for that feature.\nvar fsinspected = FeatureSetByRelationshipClass($feature, “pole_inspection”,  [“comments”], false);\nreturn Count(fsinspected);\n```\n\n",
        "completion": {
          "label": "FeatureSetByRelationshipClass",
          "detail": "FeatureSetByRelationshipClass(inputFeature, relationshipClass, fieldNames?, includeGeometry?) -> FeatureSet",
          "insertText": "FeatureSetByRelationshipClass(${1:inputFeature_}, ${2:relationshipClass_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のリレーションシップ クラスの名前に基づいて、所定のフィーチャの関連レコードを返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 関連レコードを取得するフィーチャです。\n- **relationshipClass**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - データ ソースで定義されているリレーションシップ クラスの名前。\n- **fieldNames** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - FeatureSet に返すフィールドです。 このリストには、リレーションシップ テーブルと入力フィーチャのフィールドが含まれます。\n- **includeGeometry** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 結果のフィーチャのジオメトリを返すかどうかを示します。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "featuresetbyrelationshipname",
        "bundle": "data-access",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#featuresetbyrelationshipname",
        "description": "所定のフィーチャの関連レコードを FeatureSet として返します。",
        "examples": "\n##### 例\n\nすべての関連レコードで、複数のフィールドの合計を返します\n\n```arcade\nvar results = FeatureSetByRelationshipName($feature, 'Election_Results', ['*'], false)\nSum(results, 'democrat + republican + other')\n```\n\n",
        "completion": {
          "label": "FeatureSetByRelationshipName",
          "detail": "FeatureSetByRelationshipName(inputFeature, relationshipName, fieldNames?, includeGeometry?) -> FeatureSet",
          "insertText": "FeatureSetByRelationshipName(${1:inputFeature_}, ${2:relationshipName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のフィーチャの関連レコードを FeatureSet として返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 関連レコードを取得するフィーチャ。\n- **relationshipName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 所定のフィーチャと関連付けられているフィーチャ サービスに基づくリレーションシップの名前です。\n- **fieldNames** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - FeatureSet に返すフィールドです。 このリストには、リレーションシップ テーブルと入力フィーチャのフィールドが含まれます。\n- **includeGeometry** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 結果のフィーチャのジオメトリを返すかどうかを示します。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "filter",
        "bundle": "data-access",
        "sinceVersion": "1.5",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#filter",
        "description": "SQL92 式フィルターを通過するすべてのフィーチャを持つ新しい FeatureSet を作成します。",
        "examples": "\n##### 例\n\nSQL92 式を使用してフィーチャをフィルタリングします。\n\n```arcade\n// Returns all features with a Population greater than 10,000\nvar result = Filter($layer, 'POPULATION > 10000');\n```\n\nSQL92 式と変数置換を使用してフィーチャをフィルタリングします。\n\n```arcade\n// Returns all features with a Population greater than the dataset average\nvar averageValue = Average($layer, 'POPULATION')\nvar result = Filter($layer, 'POPULATION > @averageValue');\n```\n\n",
        "completion": {
          "label": "Filter",
          "detail": "Filter(features, sqlExpression) -> FeatureSet",
          "insertText": "Filter(${1:features_}, ${2:sqlExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nSQL92 式フィルターを通過するすべてのフィーチャを持つ新しい FeatureSet を作成します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - フィルタリング対象の FeatureSet またはレイヤーです。\n- **sqlExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - レイヤー内のフィーチャのフィルタリングに使用される SQL92 式です。 この式では、`@` 文字を使用して Arcade 変数を置換することができます。 例については、下記のスニペットをご参照ください。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "first",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#first",
        "description": "FeatureSet 内の最初のフィーチャを返します。 FeatureSet が空の場合に `null` を返します。",
        "examples": "\n##### 例\n\nレイヤー内の最初のフィーチャの面積を返します。\n\n```arcade\nArea( First($layer) )\n```\n\n",
        "completion": {
          "label": "First",
          "detail": "First(features) -> Feature",
          "insertText": "First(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet 内の最初のフィーチャを返します。 FeatureSet が空の場合に `null` を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 最初のフィーチャが返される元の FeatureSet です。\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "gdbversion",
        "bundle": "data-access",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#gdbversion",
        "description": "ブランチまたはバージョン対応データの現在のジオデータベース バージョン名を返します。 複数ユーザー ジオデータベースにデータがない場合、空のテキスト値が返されます。",
        "examples": "\n##### 例\n\n所定の FeatureSet のジオデータベース バージョンを返します。\n\n```arcade\nGdbVersion($layer)\n```\n\n",
        "completion": {
          "label": "GdbVersion",
          "detail": "GdbVersion(features) -> Text",
          "insertText": "GdbVersion(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nブランチまたはバージョン対応データの現在のジオデータベース バージョン名を返します。 複数ユーザー ジオデータベースにデータがない場合、空のテキスト値が返されます。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 現在のジオデータベース バージョンを返す FeatureSet です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "getfeatureset",
        "bundle": "data-access",
        "sinceVersion": "1.14",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#getfeatureset",
        "description": "入力フィーチャが属する FeatureSet を取得します。 返される FeatureSet は、入力フィーチャの親/ルート レイヤーまたはテーブルのすべてのフィーチャを表します。",
        "examples": "\n##### 例\n\nデータ ソースのすべてのフィーチャを表す FeatureSet を返します。\n\n```arcade\n// The data source for the 'Bike routes' layer has 2,000 features. \n// The map sets a definition expression on the 'Bike routes' layer and filters it to 100 features.\nvar fs1 = FeatureSetByName($map, 'Bike routes', ['*'], true);\nvar fs2 = top(fs1, 10) \nvar f = First(fs2)\nGetFeatureSet(f)\n// returns a FeatureSet representing the data source with 2,000 features\n```\n\nフィーチャのルート FeatureSet を返します。\n\n```arcade\n// The data source for the 'Bike routes' layer has 2,000 features. \n// The map sets a definition expression on the 'Bike routes' layer and filters it to 100 features.\nvar fs1 = FeatureSetByName($map, 'Bike routes', ['*'], true);\nvar fs2 = top(fs1, 10) \nvar f = First(fs2)\nGetFeatureSet(f, 'root')\n// returns the root FeatureSet representing 100 features\n```\n\nフィーチャの親 FeatureSet を返します。\n\n```arcade\n// The data source for the 'Bike routes' layer has 2,000 features. \n// The map sets a definition expression on the 'Bike routes' layer and filters it to 100 features.\nvar fs1 = FeatureSetByName($map, 'Bike routes', ['*'], true);\nvar fs2 = top(fs1, 10) \nvar f = First(fs2)\nGetFeatureSet(f, 'parent')\n// returns the parent FeatureSet representing 10 features\n```\n\nデータ ソース テーブル内で、そのフィーチャから 1 マイルの範囲内にあるフィーチャの数を返します。\n\n```arcade\nvar fullFeatureSet = GetFeatureSet($feature);\nvar featuresOneMile = Intersects(fullFeatureSet, BufferGeodetic($feature, 1, 'miles'))\nCount(featuresOneMile)\n```\n\n",
        "completion": {
          "label": "GetFeatureSet",
          "detail": "GetFeatureSet(inputFeature, source?) -> FeatureSet",
          "insertText": "GetFeatureSet(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.14](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力フィーチャが属する FeatureSet を取得します。 返される FeatureSet は、入力フィーチャの親/ルート レイヤーまたはテーブルのすべてのフィーチャを表します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 親またはルート FeatureSet に属しているフィーチャ。\n- **source** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されるソース FeatureSet を示します。  \n設定可能な値:\n\n  `datasource`: (デフォルト) フィルターや定義式を使用せずに、入力フィーチャのデータソースにあるすべてのフィーチャを FeatureSet として返します。  \n  `root`: 入力フィーチャが属する最初の FeatureSet を返します。 これは、データ ソースにあるすべてのフィーチャのフィルター処理後のサブセットである場合があります。  \n  `parent`: 入力フィーチャの親 FeatureSet を返します。 これは、元のデータ ソースやルート FeatureSet よりもサイズが小さいフィーチャ セットである可能性があります。  \n\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "getfeaturesetinfo",
        "bundle": "data-access",
        "sinceVersion": "1.18",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#getfeaturesetinfo",
        "description": "FeatureSet の元のソース データベースとサービス (該当する場合) のメタデータを返します。",
        "examples": "\n##### 例\n\nベースとなるフィーチャ サービスに接続されている FeatureSet から返されたメタデータ\n\n```arcade\n// $layer originates from a feature service layer in a web map\nGetFeatureSetInfo($layer);\n\n// returns the following: \n{\n  \"layerId\": 7,\n  \"layerName\": \"My Table\",\n  \"itemId\": \"dda795cf2af44d2bb7af2827963b76e8\",\n  \"serviceLayerUrl\": \"https://utilitynetwork.esri.com/server/rest/services/ClassicNapervilleElectric_Postgres/FeatureServer/100\",\n  \"webMapLayerId\": 1,\n  \"webMapLayerTitle\": \"MyTable1\",\n  \"className\": null,\n  \"objectClassId\": null\n}\n```\n\nfilegdb または mobilegdb から生成された FeatureSet から返されたメタデータ\n\n```arcade\n// $featureset originates from a feature class in a filegdb or mobilegdb\nGetFeatureSetInfo($featureset);\n\n// returns the following: \n{\n  \"layerId\": null,\n  \"layerName\": null,\n  \"itemId\": null,\n  \"serviceLayerUrl\": null,\n  \"webMapLayerId\": null,\n  \"webMapLayerTitle\": null,\n  \"className\": \"myTable\",\n  \"objectClassId\": 7\n}\n```\n\nsde ワークスペース (クライアント サーバー ダイレクト コネクション) に接続されている FeatureSet から返されたメタデータ\n\n```arcade\n// Client server direct connection (sqlserver/oracle/etc.)\nGetFeatureSetInfo($featureset);\n\n// returns the following: \n{\n  \"layerId\": null,\n  \"layerName\": null,\n  \"itemId\": null,\n  \"serviceLayerUrl\": null,\n  \"webMapLayerId\": null,\n  \"webMapLayerTitle\": null,\n  \"className\": \"owner.myTable\",\n  \"objectClassId\": 7\n}\n```\n\n",
        "completion": {
          "label": "GetFeatureSetInfo",
          "detail": "GetFeatureSetInfo(inputFeatureSet) -> Dictionary",
          "insertText": "GetFeatureSetInfo(${1:inputFeatureSet_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.18](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet の元のソース データベースとサービス (該当する場合) のメタデータを返します。\n\n**パラメーター**\n\n- **inputFeatureSet**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - メタデータの取得元の FeatureSet です。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **layerId**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - フィーチャ サービスの layerId です。 フィーチャ サービスから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **layerName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャ サービスのレイヤー名です。 フィーチャ サービスから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **itemId**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャ サービスのポータル アイテム ID。 関連するポータル アイテムがあるフィーチャ サービスから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **serviceLayerUrl**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャ サービス レイヤーの URL です。 フィーチャ サービスから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **webMapLayerId**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Web マップのコンテキスト内の関連付けられているレイヤーの layerId です。 Web マップ内に含まれるフィーチャ サービス レイヤーから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **webMapLayerTitle**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Web マップのコンテキスト内の関連付けられているレイヤーのタイトルです。 Web マップ内に含まれるフィーチャ サービス レイヤーから作成された FeatureSet にのみ適用されます。 sde/filegdb/モバイル ワークスペースの場合、この値は `null` になります。\n- **className**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ベースとなるフィーチャクラスの名前です。 filegdb/モバイル ワークスペースのフィーチャクラスから作成された FeatureSet にのみ適用されます。\n- **objectClassId**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - objectClassId です。 filegdb ワークスペースのフィーチャクラスから作成された FeatureSet にのみ適用されます。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "getuser",
          "bundle": "data-access",
          "sinceVersion": "1.12",
          "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#getuser1",
          "description": "ワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。",
          "examples": "\n##### 例\n\nユーザー「tester」に関する情報を返します。\n\n```arcade\nGetUser($layer, \"tester\")\n// returns {\"id\": \"12\", \"username\": \"tester\", \"name\":\"Testy Tester\", \"email\": \"tester@example.com\", ...}\n```\n\nアクティブなポータルの現在ログインしているユーザーのユーザー名を返します。 ユーザーがポータルと関連付けられていない場合、`NULL` が返されます。\n\n```arcade\nvar userInfo = GetUser($layer);\nif(HasValue(userInfo, \"username\")){\n  return userInfo.username;\n}\n```\n\n",
          "completion": {
            "label": "GetUser",
            "detail": "GetUser(features, username?) -> Dictionary",
            "insertText": "GetUser(${1:features_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 現在のユーザーを返す FeatureSet です。\n- **username** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返すユーザーのユーザー名です。 リクエストを行ったときに、権限に基づいて限られた情報のみが返されます。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **id**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー ID です。\n- **username**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー名です。\n- **fullName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーの姓名です。\n- **email**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーのアカウントに関連付けられた電子メール アドレスです。\n- **groups**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーが属するグループの配列です。\n- **role**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 組織内のユーザーのロールです (管理者、公開者、ユーザー、閲覧者、カスタムなど)。\n- **privileges**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 組織内でユーザーが持つ権限の配列です (編集や表示など)。"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "getuser",
          "bundle": "data-access",
          "sinceVersion": "1.12",
          "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#getuser2",
          "description": "ワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベース など、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。",
          "examples": "\n##### 例\n\nユーザー エクステンションがあるレイヤーからのワークスペース接続に基づいて、現在ログインしているユーザーの情報を返します。\n\n```arcade\nGetUser($layer, true)\n```\n\n",
          "completion": {
            "label": "GetUser",
            "detail": "GetUser(features, extensions?) -> Dictionary",
            "insertText": "GetUser(${1:features_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベース など、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 現在のユーザーを返す FeatureSet です。\n- **extensions** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ディレクトリで `userLicenseTypeExtensions` を返すかどうかを指定します。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **id**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー ID です。\n- **username**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー名です。\n- **fullName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーの姓名です。\n- **email**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーのアカウントに関連付けられた電子メール アドレスです。\n- **groups**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーが属するグループの配列です。\n- **role**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 組織内のユーザーのロールです (管理者、公開者、ユーザー、閲覧者、カスタムなど)。\n- **privileges**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 組織内でユーザーが持つ権限の配列です (編集や表示など)。\n- **userLicenseTypeExtensions**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーのアカウントに関連付けられたライセンス タイプ エクステンションの配列です (「Utility Network」や「Parcel Fabric」など)。 これを返すには、`extensions` パラメーターを `true` に設定する必要があります。"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        }
      ],
      {
        "type": "function",
        "name": "groupby",
        "bundle": "data-access",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#groupby",
        "description": "一連のグループ化された値または個別値の統計情報を FeatureSet として返します。",
        "examples": "\n##### 例\n\n各ツリー タイプの数を返します\n\n```arcade\nvar treeStats = GroupBy($layer, 'TreeType', { name: 'NumTrees', expression: '1', statistic: 'COUNT' });\n// treeStats contains features with columns TreeType and NumTrees\n// Each unique tree type will have a count\n```\n\n各ツリー タイプの数と平均の高さを返します\n\n```arcade\nvar treeStats = GroupBy($layer,\n  [  // fields/expressions to group statistics by\n    { name: 'Type', expression: 'TreeType'},\n    { name: 'Status', expression: 'TreeStatus'}\n  ], \n  [  // statistics to return for each unique category\n    { name: 'Total', expression: '1', statistic: 'COUNT' }, \n    { name: 'AvgHeight', expression: 'Height', statistic: 'AVG' }, \n    { name: 'MaxPercentCoverage', expression: 'CoverageRatio * 100', statistic: 'MAX' }\n  ]\n);\n// treeStats contains features with columns Type, Status, Total, AvgHeight, MaxPercentCoverage\n// Each unique tree type (combination of type and status) will have a count, average height, and maximum value of percent coverage\n```\n\n",
        "completion": {
          "label": "GroupBy",
          "detail": "GroupBy(features, groupByFields, statistics) -> FeatureSet",
          "insertText": "GroupBy(${1:features_}, ${2:groupByFields_}, ${3:statistics_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n一連のグループ化された値または個別値の統計情報を FeatureSet として返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 所定の一連のフィールド/条件式から返される個別値の統計情報を返す FeatureSet です。\n- **groupByFields**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - 個別値で統計情報をグループ化するフィールド/条件式です。 このパラメーターは、単一のフィールド名、フィールド名の配列、オブジェクトの配列を使用でき、 出力 FeatureSet の条件式とペアになる列名 (通常はフィールド名) を指定します。 オブジェクトの配列を指定する場合、各オブジェクトは次の仕様に従う必要があります。\n\n  - **name**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 所定の条件式の結果を格納する列の名前。\n  - **expression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報をグループ化する SQL-92 条件式。 これは通常、フィールド名です。\n- **statistics**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - 計算する各グループの要約統計量です。 このパラメーターは、ディクショナリまたはディクショナリの配列を使用でき、各グループに返す出力統計情報を指定します。 次の仕様を使用する必要があります。\n\n  - **name**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 所定の統計クエリの結果を格納する出力 FeatureSet の列の名前。\n  - **expression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報をクエリする SQL-92 条件式またはフィールド名。\n  - **statistic**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - クエリする所定のフィールドまたは条件式の統計の種類。  \n設定可能な値:: SUM \\| COUNT \\| MIN \\| MAX \\| AVG \\| STDEV \\| VAR\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "intersects",
        "bundle": "data-access",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#intersects",
        "description": "別のジオメトリと交差するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nポリゴンと交差しているフィーチャの数を返します。\n\n```arcade\nvar geom2 = Polygon({ ... });\nCount( Intersects($layer, geom2) );\n```\n\n",
        "completion": {
          "label": "Intersects",
          "detail": "Intersects(features, inputGeometry) -> FeatureSet",
          "insertText": "Intersects(${1:features_}, ${2:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n別のジオメトリと交差するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - `geometry` との交差関係についてテストされる FeatureSet。\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 交差されるジオメトリ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "length",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#length",
        "description": "入力 FeatureSet の長さを所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nレイヤーの平面線長をメートルで返します\n\n```arcade\nLength($layer, 'meters')\n```\n\n",
        "completion": {
          "label": "Length",
          "detail": "Length(features, unit?) -> Number",
          "insertText": "Length(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力 FeatureSet の長さを所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 平面線長の計算対象となる FeatureSet。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "length3d",
        "bundle": "data-access",
        "sinceVersion": "1.14",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#length3d",
        "description": "高さ、つまり Z 情報を考慮に入れて、入力 FeatureSet の平面 (直交座標系) 線長を返します。 この関数に指定されたジオメトリには、投影座標系を割り当てる必要があります。 空間参照で Z 単位の値が指定されない場合、結果はメートル単位で返されます。 データに Z 情報が含まれている場合でも、すべてのクライアント (ArcGIS API for JavaScript の 3.x シリーズなど) が Z 値のリクエストをサポートしているわけではないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nレイヤーのフィーチャの 3D 長さをメートルで返します\n\n```arcade\nLength($layer, 'meters')\n```\n\n",
        "completion": {
          "label": "Length3D",
          "detail": "Length3D(features, unit?) -> Number",
          "insertText": "Length3D(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.14](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n高さ、つまり Z 情報を考慮に入れて、入力 FeatureSet の平面 (直交座標系) 線長を返します。 この関数に指定されたジオメトリには、投影座標系を割り当てる必要があります。 空間参照で Z 単位の値が指定されない場合、結果はメートル単位で返されます。 データに Z 情報が含まれている場合でも、すべてのクライアント (ArcGIS API for JavaScript の 3.x シリーズなど) が Z 値のリクエストをサポートしているわけではないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 3D 空間で平面線長の計算対象となる FeatureSet。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "lengthgeodetic",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#lengthgeodetic",
        "description": "入力 FeatureSet の測地線長を所定の単位で返します。 これは、`Length()` より信頼性の高い長さの計測です。 よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nレイヤーの測地線長をメートルで返します\n\n```arcade\nLengthGeodetic($layer, 'meters')\n```\n\n",
        "completion": {
          "label": "LengthGeodetic",
          "detail": "LengthGeodetic(features, unit?) -> Number",
          "insertText": "LengthGeodetic(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力 FeatureSet の測地線長を所定の単位で返します。 これは、`Length()` より信頼性の高い長さの計測です。 よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 測地線長の計算対象となる FeatureSet。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "max",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#max",
        "description": "FeatureSet の所定の数値フィールドの最大値を返します。",
        "examples": "\n##### 例\n\nレイヤー内のすべてのフィーチャの [人口] フィールドの最大値を出力します。\n\n```arcade\nMax($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの最大人口を算出します。\n\n```arcade\nMax($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Max",
          "detail": "Max(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Max(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドの最大値を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "mean",
        "bundle": "data-access",
        "sinceVersion": "1.1",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#mean",
        "description": "FeatureSet の所定の数値フィールドの平均値を返します。",
        "examples": "\n##### 例\n\n該当するフィーチャの人口とレイヤー内のすべてのフィーチャの平均人口の差を算出します。\n\n```arcade\n$feature.population - Mean($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの平均人口を算出します。\n\n```arcade\nMean($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Mean",
          "detail": "Mean(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Mean(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet の所定の数値フィールドの平均値を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 平均値の計算対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "min",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#min",
        "description": "FeatureSet の所定の数値フィールドの最小値を返します。",
        "examples": "\n##### 例\n\nレイヤー内のすべてのフィーチャの [人口] フィールドの最小値を出力します。\n\n```arcade\nMin($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの最小人口を返します。\n\n```arcade\nMin($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Min",
          "detail": "Min(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Min(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドの最小値を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "orderby",
        "bundle": "data-access",
        "sinceVersion": "1.5",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#orderby",
        "description": "SQL92 OrderBy 句を使用して FeatureSet に順序を付けます。",
        "examples": "\n##### 例\n\n人口順にフィーチャを並べ、最も人口の多いフィーチャがリストの先頭に表示されるようにします。\n\n```arcade\nOrderBy($layer, 'POPULATION DESC')\n```\n\nランクの昇順にフィーチャを並べます。\n\n```arcade\nOrderBy($layer, 'Rank ASC')\n```\n\n",
        "completion": {
          "label": "OrderBy",
          "detail": "OrderBy(features, sqlExpression) -> FeatureSet",
          "insertText": "OrderBy(${1:features_}, ${2:sqlExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nSQL92 OrderBy 句を使用して FeatureSet に順序を付けます。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 順序付け対象の FeatureSet またはレイヤーです。\n- **sqlExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - レイヤー内のフィーチャの順序付けに使用される SQL92 式です。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "overlaps",
        "bundle": "data-access",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#overlaps",
        "description": "別のジオメトリと重なるフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nポリゴンと重なっているフィーチャの数を返します。\n\n```arcade\nvar geom2 = Polygon({ ... });\nCount( Overlaps($layer, geom2) );\n```\n\n",
        "completion": {
          "label": "Overlaps",
          "detail": "Overlaps(overlappingFeatures, inputGeometry) -> FeatureSet",
          "insertText": "Overlaps(${1:overlappingFeatures_}, ${2:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n別のジオメトリと重なるフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **overlappingFeatures**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - `geometry` との 'overlaps' リレーションシップをテストされるフィーチャ。\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `overlappingFeatures` との 'overlaps' リレーションシップをテストされる比較ジオメトリ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "schema",
        "bundle": "data-access",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#schema",
        "description": "指定された FeatureSet のスキーマの説明を返します。",
        "examples": "",
        "completion": {
          "label": "Schema",
          "detail": "Schema(features) -> Dictionary",
          "insertText": "Schema(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された FeatureSet のスキーマの説明を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 返すスキーマの FeatureSet。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **objectIdField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - FeatureSet の objectId フィールド。\n- **globalIdField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - FeatureSet の global ID フィールド。 globalId 対応でない場合 `\\\"\\\"` を返します。\n- **geometryType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - FeatureSet 内のフィーチャのジオメトリ タイプ。 ジオメトリのないテーブル場合は `esriGeometryNull` を返します。  \n設定可能な値: `esriGeometryPoint`、`esriGeometryLine`、`esriGeometryPolygon`、`esriGeometryNull`\n- **fields**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - FeatureSet 内のフィールドを記述する辞書の配列を返します。 それぞれの辞書は、フィールドの `name`、`alias`、`type`、`subtype`、`domain`、`length` と、 `editable` および `nullable` であるかどうかを記述します。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "stdev",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#stdev",
        "description": "FeatureSet の所定の数値フィールドから値の標準偏差を返します。",
        "examples": "\n##### 例\n\n[人口] フィールドから値の標準偏差を出力します。\n\n```arcade\nStdev($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの人口の標準偏差を算出します。\n\n```arcade\nStdev($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Stdev",
          "detail": "Stdev(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Stdev(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドから値の標準偏差を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "subtypes",
        "bundle": "data-access",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#subtypes",
        "description": "サブタイプのコード値の辞書を返します。 レイヤーでサブタイプが有効化されていない場合、`null` を返します。",
        "examples": "\n##### 例\n\nFeatureSet のコード値を持つサブタイプを返します。\n\n```arcade\nvar fsTransformer = FeatureSetByName($layer, \"Transformer\")\nSubtypes(fsTransformer)\n// returns the following dictionary\n// {\n//   subtypeField: 'assetGroup',\n//   subtypes: [\n//     { name: \"Unknown\", code: 0 },\n//     { name: \"Single Phase\", code: 1 },\n//     { name: \"Two Phase\", code: 2 }\n//   ]\n// }\n```\n\n",
        "completion": {
          "label": "Subtypes",
          "detail": "Subtypes(features) -> Dictionary",
          "insertText": "Subtypes(${1:features_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nサブタイプのコード値の辞書を返します。 レイヤーでサブタイプが有効化されていない場合、`null` を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - サブタイプの取得元の FeatureSet。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **subtypeField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - サブタイプを含むフィールド。\n- **subtypes**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - サブタイプを記述する辞書の配列。 それぞれの辞書には、実際のフィールド値を保持する `code` プロパティと、 値のわかりやすい説明を保持する `name` プロパティがあります (例: `{ code: 1, name: \\\"pavement\\\" }`)。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "sum",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#sum",
        "description": "FeatureSet の所定の数値フィールドから返された値の合計を返します。",
        "examples": "\n##### 例\n\n現在のフィーチャの人口をレイヤー内のすべてのフィーチャの総人口の割合として算出します。\n\n```arcade\n( $feature.population / Sum($layer, 'population') ) * 100\n```\n\nデータセット全体の選挙での総投票数を算出します。\n\n```arcade\nSum($layer, 'democrat + republican + other')\n```\n\n",
        "completion": {
          "label": "Sum",
          "detail": "Sum(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Sum(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドから返された値の合計を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "top",
        "bundle": "data-access",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#top",
        "description": "FeatureSet を切詰めて、最初の所定のフィーチャ数を返します。",
        "examples": "\n##### 例\n\n人口の多い順に上位 5 つのフィーチャを返します。\n\n```arcade\nTop( OrderBy($layer, 'POPULATION DESC'), 5 )\n```\n\n",
        "completion": {
          "label": "Top",
          "detail": "Top(features, numItems) -> FeatureSet",
          "insertText": "Top(${1:features_}, ${2:numItems_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nFeatureSet を切詰めて、最初の所定のフィーチャ数を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 切り捨てる FeatureSet です。\n- **numItems**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - FeatureSet の先頭から返すフィーチャの数です。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "touches",
        "bundle": "data-access",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#touches",
        "description": "別のジオメトリと接するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリに接しているレイヤー内のフィーチャの数を返します。\n\n```arcade\nvar geom = Polygon({ ... });\nCount( Touches($layer, geom) );\n```\n\n",
        "completion": {
          "label": "Touches",
          "detail": "Touches(touchingFeatures, inputGeometry) -> FeatureSet",
          "insertText": "Touches(${1:touchingFeatures_}, ${2:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n別のジオメトリと接するフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **touchingFeatures**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - `geometry` との 'touches' リレーションシップをテストするフィーチャ。\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `touchingFeatures` との 'touches' リレーションシップをテストするジオメトリ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "variance",
        "bundle": "data-access",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#variance",
        "description": "FeatureSet の所定の数値フィールドから値の分散を返します。",
        "examples": "\n##### 例\n\n特定のレイヤー内の [人口] フィールドの分散を出力します。\n\n```arcade\nVariance($layer, 'population')\n```\n\nレイヤー内のすべてのフィーチャの平方マイルあたりの人口の分散を算出します。\n\n```arcade\nVariance($layer, 'population / area')\n```\n\n",
        "completion": {
          "label": "Variance",
          "detail": "Variance(features, fieldNameOrSQLExpression) -> Number",
          "insertText": "Variance(${1:features_}, ${2:fieldNameOrSQLExpression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "FeatureSet の所定の数値フィールドから値の分散を返します。\n\n**パラメーター**\n\n- **features**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - 演算の実行対象となる FeatureSet。\n- **fieldNameOrSQLExpression**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 統計情報が入力 FeatureSet から算出される数値フィールドまたは SQL92 式の名前を指定します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "within",
        "bundle": "data-access",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/featureset_functions/#within",
        "description": "`innerGeometry` を含むフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nポリゴンに含まれているレイヤー内のフィーチャの数を返します。\n\n```arcade\nvar outerGeom = Polygon({ ... });\nCount( Within(outerGeom, $layer) );\n```\n\n",
        "completion": {
          "label": "Within",
          "detail": "Within(innerGeometry, outerFeatures) -> FeatureSet",
          "insertText": "Within(${1:innerGeometry_}, ${2:outerFeatures_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n`innerGeometry` を含むフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **innerGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `outerFeatures` との 'within' リレーションシップをテストされるベース ジオメトリ。\n- **outerFeatures**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - `innerGeometry` との 'contains' リレーションシップをテストされる比較フィーチャ。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      }
    ]
  },
  {
    "id": "enterprise_functions",
    "title": "エンタープライズ関数",
    "items": [
      {
        "type": "function",
        "name": "nextsequencevalue",
        "bundle": "database",
        "sinceVersion": "1.4",
        "link": "https://developers.arcgis.com/arcade/function-reference/enterprise_functions/#nextsequencevalue",
        "description": "指定されたデータベース シーケンスから次のシーケンスの値を返します。 `inputSequenceName` が存在しない場合、式の結果はエラーになります。",
        "examples": "\n##### 例\n\n次のシーケンスの値を含む数値を返します。\n\n```arcade\nNextSequenceValue('PipeIDSeq')\n```\n\n",
        "completion": {
          "label": "NextSequenceValue",
          "detail": "NextSequenceValue(sequenceName) -> Number",
          "insertText": "NextSequenceValue(${1:sequenceName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.4](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定されたデータベース シーケンスから次のシーケンスの値を返します。 `inputSequenceName` が存在しない場合、式の結果はエラーになります。\n\n**パラメーター**\n\n- **sequenceName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - シーケンスの名前。 これはデータベース内にすでに構成されている名前でなければなりません。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      }
    ]
  },
  {
    "id": "geometry_functions",
    "title": "ジオメトリ関数",
    "items": [
      [
        {
          "type": "function",
          "name": "angle",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#angle1",
          "description": "2 つのポイント間のラインの演算角度を度単位 (0 ～ 360) で返します。 角度は、東から反時計回りに計測されます。 たとえば、90 度の角度は、真北を示します。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、または両方のポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度が返されます。_",
          "examples": "\n##### 例\n\nポイントからフィーチャまでの角度を度単位で返します。\n\n```arcade\nvar pointA = Point({ \"x\":976259, \"y\":8066511, \"spatialReference\": { \"wkid\": 3857 } });\nAngle(pointA, $feature)\n```\n\n",
          "completion": {
            "label": "Angle",
            "detail": "Angle(pointA, pointB) -> Number",
            "insertText": "Angle(${1:pointA_}, ${2:pointB_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのポイント間のラインの演算角度を度単位 (0 ～ 360) で返します。 角度は、東から反時計回りに計測されます。 たとえば、90 度の角度は、真北を示します。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、または両方のポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度が返されます。_\n\n**パラメーター**\n\n- **pointA**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 角度の計算に使用する最初のポイントまたはフィーチャです。\n- **pointB**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 角度の計算に使用する 2 番目のポイントまたはフィーチャです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "angle",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#angle2",
          "description": "3 つのポイント間のラインの演算角度を度単位 (0 ～ 360) で返します。 `pointA` から `pointC` まで、`pointB` の周囲の角度が反時計回りに計測されます。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、またはすべてのポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度か 180 度が返されます (内部数学に依存)。_",
          "examples": "\n##### 例\n\nフィーチャの周囲の 2 つのポイント間の角度を度単位で返します。\n\n```arcade\nvar pointA = Point({ \"x\":976259, \"y\":8066511, \"spatialReference\": { \"wkid\": 3857 } });\nvar pointC = Point({ \"x\":308654, \"y\":9005421, \"spatialReference\": { \"wkid\": 3857 } });\nAngle(pointA, $feature, pointC)\n```\n\n",
          "completion": {
            "label": "Angle",
            "detail": "Angle(pointA, pointB, pointC) -> Number",
            "insertText": "Angle(${1:pointA_}, ${2:pointB_}, ${3:pointC_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n3 つのポイント間のラインの演算角度を度単位 (0 ～ 360) で返します。 `pointA` から `pointC` まで、`pointB` の周囲の角度が反時計回りに計測されます。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、またはすべてのポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度か 180 度が返されます (内部数学に依存)。_\n\n**パラメーター**\n\n- **pointA**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 角度の計算に使用する最初のポイントまたはフィーチャです。\n- **pointB**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 角度の計算に使用する 2 番目のポイントまたはフィーチャです。\n- **pointC**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 角度の計算に使用する 3 番目のポイントまたはフィーチャです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 3,
            "max": 3
          }
        }
      ],
      {
        "type": "function",
        "name": "area",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#area",
        "description": "入力ジオメトリまたはフィーチャの面積を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャの面積を平方メートルで返します\n\n```arcade\nArea($feature, 'square-meters')\n```\n\n",
        "completion": {
          "label": "Area",
          "detail": "Area(polygon, unit?) -> Number",
          "insertText": "Area(${1:polygon_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリまたはフィーチャの面積を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **polygon**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - 平面面積を計算するポリゴンまたはフィーチャ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。  \n設定可能な値: `acres` | `square-feet` | `hectares` | `square-kilometers` | `square-miles` | `square-nautical-miles` | `square-meters` | `square-yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "areageodetic",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#areageodetic",
        "description": "入力ジオメトリまたはフィーチャの測地面積を所定の単位で返します。 これは `Area()` よりも信頼性の高い面積の計測です よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャの測地面積を平方メートルで返します\n\n```arcade\nAreaGeodetic($feature, 'square-meters')\n```\n\n",
        "completion": {
          "label": "AreaGeodetic",
          "detail": "AreaGeodetic(polygon, unit?) -> Number",
          "insertText": "AreaGeodetic(${1:polygon_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリまたはフィーチャの測地面積を所定の単位で返します。 これは `Area()` よりも信頼性の高い面積の計測です よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **polygon**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - 測地面積を計算するポリゴンまたはフィーチャ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。  \n設定可能な値: `acres` | `square-feet` | `hectares` | `square-kilometers` | `square-miles` | `square-nautical-miles` | `square-meters` | `square-yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "bearing",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#bearing1",
          "description": "2 つのポイント間のラインの地理的角度を度単位 (0 ～ 360) で返します。 方位は、北から時計回りに計測されます。 たとえば、225 度の方位は、南西方向を表します。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、または両方のポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 が返されます。_",
          "examples": "\n##### 例\n\nポイントからフィーチャまでの方位を度単位で返します。\n\n```arcade\nvar pointA = Point({ \"x\":976259, \"y\":8066511, \"spatialReference\": { \"wkid\": 3857 } });\nBearing(pointA,$feature)\n```\n\n",
          "completion": {
            "label": "Bearing",
            "detail": "Bearing(pointA, pointB) -> Number",
            "insertText": "Bearing(${1:pointA_}, ${2:pointB_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのポイント間のラインの地理的角度を度単位 (0 ～ 360) で返します。 方位は、北から時計回りに計測されます。 たとえば、225 度の方位は、南西方向を表します。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、または両方のポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 が返されます。_\n\n**パラメーター**\n\n- **pointA**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 方位の計算に使用する最初のポイントです。\n- **pointB**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 方位の計算に使用する 2 番目のポイントです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "bearing",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#bearing2",
          "description": "3 つのポイント間のラインの地理的角度を度単位 (0 ～ 360) で返します。 `pointA` から `pointC` まで、`pointB` の周囲の方位が時計回りに計測されます。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、またはすべてのポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度か 180 度が返されます (内部数学に依存)。_",
          "examples": "\n##### 例\n\nフィーチャの周囲の 2 つのポイント間の方位を度単位で返します。\n\n```arcade\nvar pointA = Point({ \"x\":976259, \"y\":8066511, \"spatialReference\": { \"wkid\": 3857 } });\nvar pointC = Point({ \"x\":308654, \"y\":9005421, \"spatialReference\": { \"wkid\": 3857 } });\nBearing(pointA,$feature,pointC)\n```\n\n",
          "completion": {
            "label": "Bearing",
            "detail": "Bearing(pointA, pointB, pointC) -> Number",
            "insertText": "Bearing(${1:pointA_}, ${2:pointB_}, ${3:pointC_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n3 つのポイント間のラインの地理的角度を度単位 (0 ～ 360) で返します。 `pointA` から `pointC` まで、`pointB` の周囲の方位が時計回りに計測されます。\n\n計測では x-y 面のみが考慮されます。 Z 座標はすべて無視されます。 いずれか、またはすべてのポイント ジオメトリの代わりにポイント フィーチャを使用できます。 _ポイントが同一の場合、角度として 0 度か 180 度が返されます (内部数学に依存)。_\n\n**パラメーター**\n\n- **pointA**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 方位の計算に使用する最初のポイントです。\n- **pointB**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 方位の計算に使用する 2 番目のポイントです。\n- **pointC**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 方位の計算に使用する 3 番目のポイントです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 3,
            "max": 3
          }
        }
      ],
      {
        "type": "function",
        "name": "buffer",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#buffer",
        "description": "入力ジオメトリの周囲から指定した距離にある平面 (またはユークリッド) バッファーを返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ジオメトリの周りに 1/2 マイルのバッファーを表すポリゴンを返します\n\n```arcade\nBuffer($feature, 0.5, 'miles')\n```\n\n",
        "completion": {
          "label": "Buffer",
          "detail": "Buffer(inputGeometry, distance, unit?) -> Polygon",
          "insertText": "Buffer(${1:inputGeometry_}, ${2:distance_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリの周囲から指定した距離にある平面 (またはユークリッド) バッファーを返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - バッファー処理するジオメトリ。\n- **distance**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリからバッファー処理する距離。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - バッファー「距離」の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "buffergeodetic",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#buffergeodetic",
        "description": "入力ジオメトリの周囲から指定した距離にある測地バッファーを返します。 これは、楕円体上の距離を計算する測地計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ジオメトリの周りに 1/2 マイルのバッファーを表すポリゴンを返します\n\n```arcade\nBufferGeodetic($feature, 0.5, 'miles')\n```\n\n",
        "completion": {
          "label": "BufferGeodetic",
          "detail": "BufferGeodetic(inputGeometry, distance, unit?) -> Polygon",
          "insertText": "BufferGeodetic(${1:inputGeometry_}, ${2:distance_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリの周囲から指定した距離にある測地バッファーを返します。 これは、楕円体上の距離を計算する測地計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - バッファー処理するジオメトリ。\n- **distance**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリからバッファー処理する距離。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - バッファー「距離」の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "centroid",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#centroid",
        "description": "入力ジオメトリの重心を返します。",
        "examples": "\n##### 例\n\n所定のポリゴンの重心を返します\n\n```arcade\nCentroid($feature)\n```\n\n所定のポリゴン リングの重心を返します\n\n```arcade\nvar ringPoints = Geometry($feature).rings[0];\nCentroid(ringPoints);\n```\n\n",
        "completion": {
          "label": "Centroid",
          "detail": "Centroid(polygon) -> Point",
          "insertText": "Centroid(${1:polygon_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリの重心を返します。\n\n**パラメーター**\n\n- **polygon**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - ポリゴンまたはポリゴンを構成するポイントの配列。\n\n**戻り値**: [Point](https://developers.arcgis.com/arcade/guide/types/#point)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "clip",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#clip",
        "description": "エンベロープによってターゲット ジオメトリからクリップされたジオメトリを計算します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nクリップされたジオメトリの面積を返します\n\n```arcade\nvar envelope = Extent({ ... });\nArea(Clip($feature, envelope), 'square-miles');\n```\n\n",
        "completion": {
          "label": "Clip",
          "detail": "Clip(inputGeometry, envelope) -> Geometry",
          "insertText": "Clip(${1:inputGeometry_}, ${2:envelope_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nエンベロープによってターゲット ジオメトリからクリップされたジオメトリを計算します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - クリップ対象のジオメトリ。\n- **envelope**: [Extent](https://developers.arcgis.com/arcade/guide/types/#extent) - `geometry` のクリップに使用されるエンベロープ。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "contains",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#contains1",
          "description": "ジオメトリに別のジオメトリが含まれているかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
          "examples": "\n##### 例\n\n所定のポリゴン内にフィーチャが含まれる場合、true を返します\n\n```arcade\nvar container = Polygon({ ... });\nContains(containerGeometry, $feature);\n```\n\n",
          "completion": {
            "label": "Contains",
            "detail": "Contains(containerGeometry, insideGeometry) -> Boolean",
            "insertText": "Contains(${1:containerGeometry_}, ${2:insideGeometry_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリに別のジオメトリが含まれているかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **containerGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `insideGeometry` との 'contains' リレーションシップをテストするジオメトリです。 このジオメトリは、`insideGeometry` の潜在的な 'container' として考えます。\n- **insideGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `containerGeometry` との 'within' リレーションシップをテストするジオメトリです。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "contains",
          "bundle": "geometry",
          "sinceVersion": "1.7",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#contains2",
          "description": "入力ジオメトリに含まれるフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
          "examples": "\n##### 例\n\n特定のポリゴンに含まれているフィーチャの数を返します\n\n```arcade\nvar parcels = FeatureSetByName($map, 'parcels')\nvar projectArea = $feature;\nCount(Contains(projectArea, parcels));\n```\n\n",
          "completion": {
            "label": "Contains",
            "detail": "Contains(containerGeometry, insideFeatures) -> FeatureSet",
            "insertText": "Contains(${1:containerGeometry_}, ${2:insideFeatures_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリに含まれるフィーチャを FeatureSet から返します。 以下の図で、赤でハイライトされた部分は関数がフィーチャを返す場合の空間リレーションシップを示しています。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **containerGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `insideFeatures` との 'contains' リレーションシップをテストするジオメトリです。 このジオメトリは、`insideFeatures` の潜在的な 'container' として考えます。\n- **insideFeatures**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset) - `containerGeometry` との 'within' リレーションシップをテストする FeatureSet です。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 2
          }
        }
      ],
      {
        "type": "function",
        "name": "convertdirection",
        "bundle": "geometry",
        "sinceVersion": "1.13",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#convertdirection",
        "description": "角度には複数の解釈があり、角度を数字、テキスト、または正しい形式の配列として表すことができます。 この関数は 1 つの入力表現を取り、別の表現に変換することができます。\n\n入力値は角度と方向のタイプを指定したディクショナリに よって記述されます。 例:\n\n| 入力 | 角度タイプ | 方向タイプ |\n| :--- | :--- | :--- |\n| 12.34 | dms、度、ラジアン、グラジアン | 北、南、極 |\n| 12.3456 | dms、度、ラジアン、グラジアン | 北、南、極 |\n| [12,34,56] | dms | 北、南、極 |\n| ['N',12.34,'W'] | dms、度、ラジアン、グラジアン | 四分円 |\n| ['N',12,34,56,'W'] | dms | 四分円 |\n| '12.34' | dms、度、ラジアン、グラジアン | 北、南、極 |\n| '12 34 56' | dms | 北、南、極 |\n| 'N 12.34 W' | dms、度、ラジアン、グラジアン | 四分円 |\n| 'N 12 34 56 W' | dms | 四分円 |\n\n\n`angleType` と `directionType` が入力に対して適切ではない場合は変換に失敗します。\n\n望ましい出力値は出力タイプ、角度タイプ、方向タイプ、テキスト出力のオプションの形式を指定した ディクショナリによっても記述されます。\n\n出力タイプが `value` の場合:  \n - 角度タイプ `dms` または方向タイプ `quadrant` の場合は配列が返されます。  \n - 他のすべてのケースでは数字が返されます。\n\n出力タイプが `text` の場合、オプションの `format` プロパティが指定されている場合を除き、 デフォルトのパディングと区切り文字が使用されます。  \n`format` が出力テキストの順序、間隔、パディング、区切り文字を制御します。  \n小数点の前にある形式指定子文字の文字列は最小パディングを示します (例:「DDD -> 000」)。  \n小数点の後にある形式文字の文字列は精度を示します (例:「D.DD -> 0.00」)。\n\nサポートされている `format` 文字:\n\n| コード | 意味 |\n| :--- | :--- |\n| `D` | 度 (10 進) |\n| `R` | ラジアン |\n| `G` | グラジアン |\n| `d` | DMS 度 |\n| `m` | DMS 分 |\n| `s` | DMS 秒 |\n| `P` | 省略していない子午線 (例: `North` と `South`) |\n| `p` | 省略形の子午線 (例: `N` と `S`) |\n| `B` | 省略していない方角 (e.g. `East` と `West`) |\n| `b` | 省略形の方角 (e.g. `E` と `W`) |\n| `[ ]` | エスケープ文字 |\n\n\n`dms` 形式で `s` が使用されていない場合、`m` は最近隣の分に丸められます。 同様に、「m」が使用されていない場合は、「d」が丸められます。",
        "examples": "\n##### 例\n\n「outputType」が「value」の場合の例\n\n```arcade\nConvertDirection( 30, {directionType:'North', angleType: 'Degrees'}, {directionType:'Quadrant', angleType: 'DMS', outputType: 'value'})\n// returns ['N', 30, 0, 0, 'E']\n \nConvertDirection( 25.99, {directionType:'North', angleType : 'Gradians'}, {directionType:'North', outputType: 'value', angleType : 'Gradians'})\n// returns 25.99\n \nConvertDirection( 1, {directionType:'North', angleType: 'DEGREES'}, {directionType: 'Quadrant', angleType: 'Degrees', outputType: 'value'})\n// returns ['N',1,'E']\n \nConvertDirection( 0.9, {directionType: 'North', angleType: 'degrees'}, {directionType:'North', angleType: 'gradians', outputType: 'value'})\n// returns 1.0 \n \nConvertDirection( 180.0, {directionType:'North', angleType: 'degrees'}, {directionType:'North', angleType: 'radians', outputType : 'value'})\n// returns PI\n```\n\n「outputType」が「text」の場合の例\n\n```arcade\nConvertDirection( 25.34, {directionType: 'North', angleType: 'DEGREES'}, {directionType:'North', outputType: 'text', format: 'DDDD.D'})\n// returns '0025.3'\n \nConvertDirection( 25.34, {directionType: 'North', angleType: 'DEGREES'}, {directionType:'North', outputType: 'text', format: 'R'})\n// returns '0'\n \nConvertDirection( 25.34, {directionType: 'North', angleType: 'DEGREES'}, {directionType:'North', outputType: 'text', format: '[DD.DD]'})\n// returns 'DD.DD'\n \nConvertDirection( 25.34, {directionType:'North', angleType: 'DEGREES'}, {directionType:'quadrant', outputType: 'text', format: 'P B'})\n// returns 'North East'\n \nConvertDirection( [001,01,59.99], {directionType:'North', angleType: 'DMS'}, {directionType:'North', angleType: 'DMS', outputType: 'text', format: 'dddA mm[B] ssC'})\n// returns '001A 02B 00C'\n```\n\n",
        "completion": {
          "label": "ConvertDirection",
          "detail": "ConvertDirection(input, inputSpec, outputSpec) -> Array<Number|Text>,Number,Text",
          "insertText": "ConvertDirection(${1:input_}, ${2:inputSpec_}, ${3:outputSpec_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.13](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n角度には複数の解釈があり、角度を数字、テキスト、または正しい形式の配列として表すことができます。 この関数は 1 つの入力表現を取り、別の表現に変換することができます。\n\n入力値は角度と方向のタイプを指定したディクショナリに よって記述されます。 例:\n\n| 入力 | 角度タイプ | 方向タイプ |\n| :--- | :--- | :--- |\n| 12.34 | dms、度、ラジアン、グラジアン | 北、南、極 |\n| 12.3456 | dms、度、ラジアン、グラジアン | 北、南、極 |\n| [12,34,56] | dms | 北、南、極 |\n| ['N',12.34,'W'] | dms、度、ラジアン、グラジアン | 四分円 |\n| ['N',12,34,56,'W'] | dms | 四分円 |\n| '12.34' | dms、度、ラジアン、グラジアン | 北、南、極 |\n| '12 34 56' | dms | 北、南、極 |\n| 'N 12.34 W' | dms、度、ラジアン、グラジアン | 四分円 |\n| 'N 12 34 56 W' | dms | 四分円 |\n\n\n`angleType` と `directionType` が入力に対して適切ではない場合は変換に失敗します。\n\n望ましい出力値は出力タイプ、角度タイプ、方向タイプ、テキスト出力のオプションの形式を指定した ディクショナリによっても記述されます。\n\n出力タイプが `value` の場合:  \n - 角度タイプ `dms` または方向タイプ `quadrant` の場合は配列が返されます。  \n - 他のすべてのケースでは数字が返されます。\n\n出力タイプが `text` の場合、オプションの `format` プロパティが指定されている場合を除き、 デフォルトのパディングと区切り文字が使用されます。  \n`format` が出力テキストの順序、間隔、パディング、区切り文字を制御します。  \n小数点の前にある形式指定子文字の文字列は最小パディングを示します (例:「DDD -> 000」)。  \n小数点の後にある形式文字の文字列は精度を示します (例:「D.DD -> 0.00」)。\n\nサポートされている `format` 文字:\n\n| コード | 意味 |\n| :--- | :--- |\n| `D` | 度 (10 進) |\n| `R` | ラジアン |\n| `G` | グラジアン |\n| `d` | DMS 度 |\n| `m` | DMS 分 |\n| `s` | DMS 秒 |\n| `P` | 省略していない子午線 (例: `North` と `South`) |\n| `p` | 省略形の子午線 (例: `N` と `S`) |\n| `B` | 省略していない方角 (e.g. `East` と `West`) |\n| `b` | 省略形の方角 (e.g. `E` と `W`) |\n| `[ ]` | エスケープ文字 |\n\n\n`dms` 形式で `s` が使用されていない場合、`m` は最近隣の分に丸められます。 同様に、「m」が使用されていない場合は、「d」が丸められます。\n\n**パラメーター**\n\n- **input**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 方位の未処理表現。 このタイプの「input」と「inputSpec」の値によって、入力の解析方法が決まります。\n- **inputSpec**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 入力の解釈方法に関する情報が含まれています。\n\n  - **angleType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 入力角度単位を示します。 サポートされている値: `DEGREES`, `DMS`, `RADIANS`, `GONS`, `GRADIANS`\n  - **directionType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 入力方位の子午線および方向を示します。 サポートされている値: `NORTH`, `SOUTH`, `POLAR`, `QUADRANT`\n- **outputSpec**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 出力の形式を設定する方法に関する情報が含まれています。\n\n  - **outputType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 出力タイプを制御します。 サポートされている値: `value`、`text`\n  - **angleType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 出力角度単位を示します。 サポートされている値: `DEGREES`, `DMS`, `RADIANS`, `GONS`, `GRADIANS`\n  - **directionType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 出力方位の子午線および方向を示します。 サポートされている値: `NORTH`, `SOUTH`, `POLAR`, `QUADRANT`\n  - **format** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - テキストの形式を制御します。 `outputType` が `text` の場合にのみ適用されます。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "convexhull",
        "bundle": "geometry",
        "sinceVersion": "1.19",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#convexhull",
        "description": "ジオメトリの凸包を計算します。 凸包とは、ジオメトリを囲む最も小さい凸ポリゴンです。 凸包は通常はポリゴンですが、劣化した場合にはポリラインやポイントの可能性もあります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
        "examples": "\n##### 例\n\n現在のフィーチャのジオメトリの凸包ジオメトリにある頂点の数を返します。\n\n```arcade\nCount(ConvexHull(Geometry($feature)).Rings[0])\n```\n\n凹面領域 (凸包が無視される) を含むジオメトリの凸包を返します。\n\n```arcade\nvar pacman_like_shape = Polygon({\n       \"rings\": [[[1, 2], [2, 0], [1, -2], [-1, -2], [-2, -1], [-1, -1.5], [0, -1.5], [-2, 1], [-1, 2]]],\n       \"spatialReference\": { \"wkid\": 3857 }\n});\nreturn ConvexHull(pacman_like_shape).rings[0];\n// Returns the geometry [[1,2],[2,0],[1,-2],[-1,-2],[-2,-1],[-2,1],[-1,2],[1,2]]\n```\n\n",
        "completion": {
          "label": "ConvexHull",
          "detail": "ConvexHull(inputGeometry) -> Geometry",
          "insertText": "ConvexHull(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.19](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリの凸包を計算します。 凸包とは、ジオメトリを囲む最も小さい凸ポリゴンです。 凸包は通常はポリゴンですが、劣化した場合にはポリラインやポイントの可能性もあります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 解析対象のポイント、ライン、またはポリゴン ジオメトリ。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "crosses",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#crosses",
        "description": "ジオメトリが別のジオメトリとクロスするかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャが所定のポリゴンとクロスする場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nCrosses($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Crosses",
          "detail": "Crosses(geometry1, geometry2) -> Boolean",
          "insertText": "Crosses(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリとクロスするかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - クロスするジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - クロスされるジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "cut",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#cut",
        "description": "入力ポリラインまたはポリゴンを切断ポリラインと交差する位置で分割します。 ポリラインの場合、切断された左側はグループ化されて最初のジオメトリになります。 右側と切断部分はグループ化されて 2 番目のジオメトリになります。 未定義の各切断部分は未切断部分とともに別々のポリラインとして出力されます。\n\nポリゴンの場合、切断された左側はグループ化されて最初のポリゴンになり、右側はグループ化されて 2 番目のポリゴンになり、 未定義の各切断部分は切断後に残された部分とともに別々のポリゴンとして出力されます。 切断部分が返されない場合、配列は空になります。 未定義の切断部分が作成されるのは、左側または右側の切断部分が作成されて切断後に残された部分が存在するか、 切断部分が抜き型の左右に囲まれている場合のみです。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャのジオメトリを所定のポリラインで切断します\n\n```arcade\nvar cutter = Polyline({ ... });\nCut($feature, cutter));\n```\n\n",
        "completion": {
          "label": "Cut",
          "detail": "Cut(polylineOrPolygon, cutter) -> Array<Geometry>",
          "insertText": "Cut(${1:polylineOrPolygon_}, ${2:cutter_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ポリラインまたはポリゴンを切断ポリラインと交差する位置で分割します。 ポリラインの場合、切断された左側はグループ化されて最初のジオメトリになります。 右側と切断部分はグループ化されて 2 番目のジオメトリになります。 未定義の各切断部分は未切断部分とともに別々のポリラインとして出力されます。\n\nポリゴンの場合、切断された左側はグループ化されて最初のポリゴンになり、右側はグループ化されて 2 番目のポリゴンになり、 未定義の各切断部分は切断後に残された部分とともに別々のポリゴンとして出力されます。 切断部分が返されない場合、配列は空になります。 未定義の切断部分が作成されるのは、左側または右側の切断部分が作成されて切断後に残された部分が存在するか、 切断部分が抜き型の左右に囲まれている場合のみです。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **polylineOrPolygon**: [Polyline](https://developers.arcgis.com/arcade/guide/types/#polyline) \\| [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 切断するジオメトリ。\n- **cutter**: [Polyline](https://developers.arcgis.com/arcade/guide/types/#polyline) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry` の切断に使用されるポリライン。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "densify",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#densify",
        "description": "頂点を挿入して指定した間隔以内のセグメントを作成することで、ジオメトリを高密度化します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n10 m の最大セグメント長で高密度化されたジオメトリを返します。\n\n```arcade\nvar maxLength = 10;\nDensify($feature, maxLength, 'meters');\n```\n\n",
        "completion": {
          "label": "Densify",
          "detail": "Densify(inputGeometry, maxSegmentLength, unit?) -> Geometry",
          "insertText": "Densify(${1:inputGeometry_}, ${2:maxSegmentLength_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n頂点を挿入して指定した間隔以内のセグメントを作成することで、ジオメトリを高密度化します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 高密度化される入力ジオメトリ。\n- **maxSegmentLength**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - セグメントの最大許容長。 正の値である必要があります。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - maxSegmentLength の計測単位。 デフォルトは、入力ジオメトリの単位です。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "densifygeodetic",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#densifygeodetic",
        "description": "入力されたジオメトリの各頂点間に測地線を作成し、その他の頂点を使用して出力ジオメトリを高密度化して、指定された間隔以下のセグメントを作成します。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
        "examples": "\n##### 例\n\n10000 の最大セグメント長で高密度化されたジオメトリを返します。\n\n```arcade\nDensifyGeodetic($feature, 10000, 'meters');\n```\n\n",
        "completion": {
          "label": "DensifyGeodetic",
          "detail": "DensifyGeodetic(inputGeometry, maxSegmentLength, unit?) -> Geometry",
          "insertText": "DensifyGeodetic(${1:inputGeometry_}, ${2:maxSegmentLength_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力されたジオメトリの各頂点間に測地線を作成し、その他の頂点を使用して出力ジオメトリを高密度化して、指定された間隔以下のセグメントを作成します。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 高密度化される入力ジオメトリ。\n- **maxSegmentLength**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - セグメントの最大許容長。 正の値である必要があります。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - maxSegmentLength の計測単位。 デフォルトは、入力ジオメトリの単位です。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "difference",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#difference",
        "description": "2 つのジオメトリに対してトポロジ差操作を実行します。 結果のジオメトリは `subtractor` ではなく `inputGeometry` から求められます。 `subtractor` のディメンションは `inputGeometry` のディメンション以上でなければなりません。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャから所定のポリゴン面積を減算します。\n\n```arcade\nvar subtractor = Polygon({ ... });\nDifference($feature, subtractor);\n```\n\n",
        "completion": {
          "label": "Difference",
          "detail": "Difference(inputGeometry, subtractor) -> Geometry",
          "insertText": "Difference(${1:inputGeometry_}, ${2:subtractor_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリに対してトポロジ差操作を実行します。 結果のジオメトリは `subtractor` ではなく `inputGeometry` から求められます。 `subtractor` のディメンションは `inputGeometry` のディメンション以上でなければなりません。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 減算元の入力ジオメトリ。\n- **subtractor**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry` から減算するジオメトリ。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "disjoint",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#disjoint",
        "description": "ジオメトリが別のジオメトリと一致しない (交差しない) かどうかを示します。 以下の表で、赤でハイライトされた関数は指定したジオメトリで 'true' を返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが交差していない場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nDisjoint($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Disjoint",
          "detail": "Disjoint(geometry1, geometry2) -> Boolean",
          "insertText": "Disjoint(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリと一致しない (交差しない) かどうかを示します。 以下の表で、赤でハイライトされた関数は指定したジオメトリで 'true' を返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry2` との 'disjoint' リレーションシップをテストされるベース ジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry1` との 'disjoint' リレーションシップをテストされる比較ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "distance",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#distance",
        "description": "2 つのジオメトリ間の平面距離を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n2 つのジオメトリ間の距離をメートルで返します\n\n```arcade\nvar geom2 = Point({ ... });\nDistance($feature, geom2, 'meters')\n```\n\n",
        "completion": {
          "label": "Distance",
          "detail": "Distance(geometry1, geometry2, unit?) -> Number",
          "insertText": "Distance(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリ間の平面距離を所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - `geometry2` からの距離の計測に使用されるジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - `geometry1` からの距離の計測に使用されるジオメトリ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "distancegeodetic",
        "bundle": "geometry",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#distancegeodetic",
        "description": "大円に沿った 2 つのポイント間の最短距離を計算します。 地理座標系 (GCS) または Web メルカトル空間参照のポイントのみに適用します。 入力ポイントで Web メルカトル以外の投影座標系が使用されている場合、 `Distance()` 関数。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nストリーム レイヤーのバスから中央ステーションまでの距離をキロメートル単位で返します。\n\n```arcade\nvar unionStation = Point({\"x\": -118.15, \"y\": 33.80, \"spatialReference\": { \"wkid\": 3857 }});\ndistanceGeodetic($feature, unionStation, 'kilometers');\n```\n\n",
        "completion": {
          "label": "DistanceGeodetic",
          "detail": "DistanceGeodetic(point1, point2, units?) -> Number",
          "insertText": "DistanceGeodetic(${1:point1_}, ${2:point2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n大円に沿った 2 つのポイント間の最短距離を計算します。 地理座標系 (GCS) または Web メルカトル空間参照のポイントのみに適用します。 入力ポイントで Web メルカトル以外の投影座標系が使用されている場合、 `Distance()` 関数。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **point1**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `point2` からの距離の計測に使用されるポイント。 このポイントは GCS または Web メルカトル空間参照である必要があります。\n- **point2**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `point1` からの距離の計測に使用されるポイント。 このポイントは GCS または Web メルカトル空間参照である必要があります。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "envelopeintersects",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#envelopeintersects",
        "description": "ジオメトリのエンベロープ (または範囲) が別のジオメトリのエンベロープと交差するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが交差する場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nEnvelopeIntersects($feature, geom2);\n```\n\n",
        "completion": {
          "label": "EnvelopeIntersects",
          "detail": "EnvelopeIntersects(geometry1, geometry2) -> Boolean",
          "insertText": "EnvelopeIntersects(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリのエンベロープ (または範囲) が別のジオメトリのエンベロープと交差するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 他のジオメトリとの交差関係についてテストされるジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 交差されるジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "equals",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#equals",
        "description": "2 つのジオメトリが等しいかどうか、つまり、指定された空間参照とデータの許容値で地理的に同等であるかどうかを示します。 2 つの入力ジオメトリは、クローンでなくても、等しいと見なされます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが等しい場合、true を返します\n\n```arcade\nvar geom2 = Point({ ... });\nEquals($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Equals",
          "detail": "Equals(geometry1, geometry2) -> Boolean",
          "insertText": "Equals(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリが等しいかどうか、つまり、指定された空間参照とデータの許容値で地理的に同等であるかどうかを示します。 2 つの入力ジオメトリは、クローンでなくても、等しいと見なされます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 最初の入力ジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 2 番目の入力ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "extent",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#extent1",
          "description": "辞書から範囲オブジェクトを作成します。",
          "examples": "\n##### 例\n\n範囲オブジェクトを作成します\n\n```arcade\nExtent({\n  xMax: -95.34,\n  xMin: -97.06138,\n  yMax: 32.837,\n  yMin: 12.003,\n  hasM: false,\n  hasZ: false,\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Extent",
            "detail": "Extent(geometryDefinition) -> Extent",
            "insertText": "Extent(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "辞書から範囲オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 範囲ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **xMax**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの上限、または可能な限り大きい X 座標です。\n  - **xMin**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの下限、または可能な限り小さい X 座標です。\n  - **yMax**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの上限、または可能な限り大きい Y 座標です。\n  - **yMin**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの下限、または可能な限り小さい Y 座標です。\n  - **mMax**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの上限、または可能な限り大きい M 値です。 この値を設定する場合、`hasM` を `true` に設定する必要があります。\n  - **mMin**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの下限、または可能な限り小さい M 値です。 この値を設定する場合、`hasM` を `true` に設定する必要があります。\n  - **zMax**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの上限、または可能な限り大きい Z 値です。 この値を設定する場合、`hasZ` を `true` に設定する必要があります。\n  - **zMin**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリの下限、または可能な限り小さい Z 値です。 この値を設定する場合、`hasZ` を `true` に設定する必要があります。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Extent](https://developers.arcgis.com/arcade/guide/types/#extent)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "extent",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#extent2",
          "description": "入力フィーチャ、ポリゴン、ポイント、ポリライン、またはマルチポイントの範囲を返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
          "examples": "\n##### 例\n\nフィーチャの範囲を返します\n\n```arcade\nExtent($feature);\n```\n\n",
          "completion": {
            "label": "Extent",
            "detail": "Extent(inputGeometry) -> Extent",
            "insertText": "Extent(${1:inputGeometry_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "入力フィーチャ、ポリゴン、ポイント、ポリライン、またはマルチポイントの範囲を返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 範囲の取得元であるフィーチャまたはジオメトリです。\n\n**戻り値**: [Extent](https://developers.arcgis.com/arcade/guide/types/#extent)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "extent",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#extent3",
          "description": "直列化された JSON テキストから、範囲オブジェクトを作成します。 JSON スキーマは、エンベロープ オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。",
          "examples": "\n##### 例\n\nJSON から範囲オブジェクトを作成します\n\n```arcade\nvar extentJSON = '{\"xmin\": -109.55, \"ymin\": 25.76, \"xmax\": -86.39, \"ymax\": 49.94, \"spatialReference\": { \"wkid\": 3857 }}';\nExtent(extentJSON);\n```\n\n",
          "completion": {
            "label": "Extent",
            "detail": "Extent(jsonDefinition) -> Extent",
            "insertText": "Extent(${1:jsonDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "直列化された JSON テキストから、範囲オブジェクトを作成します。 JSON スキーマは、エンベロープ オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。\n\n**パラメーター**\n\n- **jsonDefinition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 範囲オブジェクトの作成元である JSON です。\n\n**戻り値**: [Extent](https://developers.arcgis.com/arcade/guide/types/#extent)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "generalize",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#generalize",
        "description": "所定の偏差値に基づいて、入力ジオメトリの頂点の数を減らします。 ポイントおよびマルチポイント ジオメトリは変更されないままとなります。 エンベロープは、ポリゴンに変換されてから単純化されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ジオメトリの単純化されたバージョンを返します。\n\n```arcade\n// Removes vertices so segments are no more than 100 meters from the original geometry\nGeneralize($feature, 100, true, 'meters')\n```\n\n",
        "completion": {
          "label": "Generalize",
          "detail": "Generalize(inputGeometry, maxDeviation, removeDegenerateParts?, maxDeviationUnit?) -> Geometry",
          "insertText": "Generalize(${1:inputGeometry_}, ${2:maxDeviation_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の偏差値に基づいて、入力ジオメトリの頂点の数を減らします。 ポイントおよびマルチポイント ジオメトリは変更されないままとなります。 エンベロープは、ポリゴンに変換されてから単純化されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 単純化される入力ジオメトリ。\n- **maxDeviation**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 単純化されたジオメトリから元のジオメトリまでの最大許容偏差。\n- **removeDegenerateParts** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - `true` の場合、ジオメトリの劣化した部分が出力から削除されます (描画には不適切な場合があります)。\n- **maxDeviationUnit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - maxDeviation の計測単位。 デフォルトは、入力ジオメトリの単位です。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "geometry",
        "bundle": "geometry",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#geometry",
        "description": "直列化された JSON テキストまたはディクショナリから、ジオメトリ オブジェクトを作成します。 JSON スキーマは、ジオメトリ オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。 また、この関数は、入力フィーチャのジオメトリを返すこともあります。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャのジオメトリを返す\n\n```arcade\nGeometry($feature)\n```\n\nポイント ジオメトリを作成します。 この操作には任意のジオメトリ タイプを使用できます。\n\n```arcade\nvar pointJSON = {\"x\": -118.15, \"y\": 33.80, \"spatialReference\": { \"wkid\": 3857 } };\nGeometry(pointJSON);\n```\n\n",
        "completion": {
          "label": "Geometry",
          "detail": "Geometry(inputFeature) -> Geometry",
          "insertText": "Geometry(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "直列化された JSON テキストまたはディクショナリから、ジオメトリ オブジェクトを作成します。 JSON スキーマは、ジオメトリ オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。 また、この関数は、入力フィーチャのジオメトリを返すこともあります。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ジオメトリ オブジェクトの作成元であるフィーチャまたは JSON。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "intersection",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#intersection",
        "description": "2 つのジオメトリ間の集合論的交差を作成し、新しいジオメトリを返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n両方のポリゴンで共通する面積を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nArea(Intersection($feature, geom2), 'square-miles');\n```\n\n",
        "completion": {
          "label": "Intersection",
          "detail": "Intersection(geometry1, geometry2) -> Geometry",
          "insertText": "Intersection(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリ間の集合論的交差を作成し、新しいジオメトリを返します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry2` と交差するジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry1` と交差するジオメトリ。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "intersects",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#intersects",
        "description": "ジオメトリが別のジオメトリと交差するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが交差する場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nIntersects($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Intersects",
          "detail": "Intersects(geometry1, geometry2) -> Boolean",
          "insertText": "Intersects(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリと交差するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry2` との交差関係についてテストされるジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 交差されるジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "isselfintersecting",
        "bundle": "geometry",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#isselfintersecting",
        "description": "入力ジオメトリに、ジオメトリの他のパーツと交差するリング、パス、またはポイントがあるかどうかを示します。 たとえば、パスが互いに交差する 1 つのポリライン フィーチャや、自己交差するリングがあるポリゴンの場合、`true` を返します。 ",
        "examples": "\n##### 例\n\nポリラインのパスが互いに交差する場合、true を返します。\n\n```arcade\nvar polyline = Polyline({ ... });\nIsSelfIntersecting(polyline);\n```\n\n",
        "completion": {
          "label": "IsSelfIntersecting",
          "detail": "IsSelfIntersecting(inputGeometry) -> Boolean",
          "insertText": "IsSelfIntersecting(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリに、ジオメトリの他のパーツと交差するリング、パス、またはポイントがあるかどうかを示します。 たとえば、パスが互いに交差する 1 つのポリライン フィーチャや、自己交差するリングがあるポリゴンの場合、`true` を返します。 \n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 自己交差のテストを行うポリゴン、ポリライン、またはマルチポイント ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "issimple",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#issimple",
        "description": "所定のジオメトリがトポロジ的に単純であるかどうかを示します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリがトポロジ的に単純である場合、true を返します。\n\n```arcade\nIsSimple($feature);\n```\n\n",
        "completion": {
          "label": "IsSimple",
          "detail": "IsSimple(inputGeometry) -> Boolean",
          "insertText": "IsSimple(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のジオメトリがトポロジ的に単純であるかどうかを示します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 入力ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "length",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#length",
        "description": "入力ジオメトリまたはフィーチャの長さを所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャの平面線長をキロメートルで返します\n\n```arcade\nLength($feature, 'kilometers')\n```\n\n",
        "completion": {
          "label": "Length",
          "detail": "Length(inputGeometry, unit?) -> Number",
          "insertText": "Length(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリまたはフィーチャの長さを所定の単位で返します。 これは、直交演算を使用した平面計測です。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - 平面線長の計算対象となるジオメトリ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "length3d",
        "bundle": "geometry",
        "sinceVersion": "1.14",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#length3d",
        "description": "高さ、つまり Z 情報を考慮に入れて、入力ジオメトリまたはフィーチャの平面 (直交座標系) 線長を返します。 この関数に指定されたジオメトリには、投影座標系を割り当てる必要があります。 空間参照で Z 単位の値が指定されない場合、結果はメートル単位で返されます。 データに Z 情報が含まれている場合でも、すべてのクライアント (ArcGIS API for JavaScript の 3.x シリーズなど) が Z 値のリクエストをサポートしているわけではないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n式を実行するコンテキストの空間参照の単位でフィーチャの 3D 平面線長を返します。\n\n```arcade\nLength3D($feature)\n```\n\nフィート単位でフィーチャの 3D 平面線長を返します。\n\n```arcade\nLength3D($feature, 'feet')\n```\n\n",
        "completion": {
          "label": "Length3D",
          "detail": "Length3D(inputGeometry, unit?) -> Number",
          "insertText": "Length3D(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.14](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n高さ、つまり Z 情報を考慮に入れて、入力ジオメトリまたはフィーチャの平面 (直交座標系) 線長を返します。 この関数に指定されたジオメトリには、投影座標系を割り当てる必要があります。 空間参照で Z 単位の値が指定されない場合、結果はメートル単位で返されます。 データに Z 情報が含まれている場合でも、すべてのクライアント (ArcGIS API for JavaScript の 3.x シリーズなど) が Z 値のリクエストをサポートしているわけではないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - 3D 空間の平面線長の計算対象となるジオメトリまたはフィーチャ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "lengthgeodetic",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#lengthgeodetic",
        "description": "入力ジオメトリまたはフィーチャの測地線長を所定の単位で返します。 これは、`Length()` より信頼性の高い長さの計測です。 よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャの測地線長をキロメートルで返します\n\n```arcade\nLengthGeodetic($feature, 'kilometers')\n```\n\n",
        "completion": {
          "label": "LengthGeodetic",
          "detail": "LengthGeodetic(inputGeometry, unit?) -> Number",
          "insertText": "LengthGeodetic(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリまたはフィーチャの測地線長を所定の単位で返します。 これは、`Length()` より信頼性の高い長さの計測です。 よりも信頼性の高い長さの計測です。 サポートは、Web メルカトル (wkid 3857) または WGS 84 (wkid 4326) 空間参照を使用したジオメトリに限られます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - 測地線長の計算対象となるジオメトリ。\n- **unit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 返り値の計測単位。 視覚化、ラベリング、およびポップアップのプロファイルでは、デフォルトの単位がマップの空間参照になります。 フィールド演算など、その他のプロファイルでは、データの空間参照に基づいてデフォルト値が設定されます。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "multiparttosinglepart",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#multiparttosinglepart",
        "description": "マルチパート ジオメトリを別々のジオメトリに変換します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nマルチパート ジオメトリからシングルパート ジオメトリの配列を返します\n\n```arcade\nvar allParts = MultiPartToSinglePart($feature)\n```\n\n",
        "completion": {
          "label": "MultiPartToSinglePart",
          "detail": "MultiPartToSinglePart(inputGeometry) -> Array<Geometry>",
          "insertText": "MultiPartToSinglePart(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nマルチパート ジオメトリを別々のジオメトリに変換します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - シングルパートに分割するマルチパート ジオメトリ。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)&gt;"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "multipoint",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#multipoint1",
          "description": "値の配列のみを座標として使用し、辞書からマルチポイント オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるマルチポイントを作成します\n\n```arcade\nMultipoint({\n  points: [\n    [-97.06138,32.837],\n    [-97.06133,32.836],\n    [-97.06124,32.834],\n    [-97.06127,32.832],\n    [-97.06138,32.837]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nM 値付きのマルチポイントを作成します\n\n```arcade\nMultipoint({\n  hasM: true,\n  points: [\n    [-97.06138,32.837,0],\n    [-97.06133,32.836,15],\n    [-97.06124,32.834,30],\n    [-97.06127,32.832,50],\n    [-97.06138,32.837,0]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値付きのマルチポイントを作成します\n\n```arcade\nMultipoint({\n  hasZ: true,\n  points: [\n    [-97.06138,32.837,1000],\n    [-97.06133,32.836,1500],\n    [-97.06124,32.834,1000],\n    [-97.06127,32.832,500],\n    [-97.06138,32.837,1000]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値および M 値付きのマルチポイントを作成します\n\n```arcade\nMultipoint({\n  hasM: true,\n  hasZ: true,\n  points: [\n    [-97.06138,32.837,1000,0],\n    [-97.06133,32.836,1500,15],\n    [-97.06124,32.834,1000,30],\n    [-97.06127,32.832,500,50],\n    [-97.06138,32.837,1000,0]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Multipoint",
            "detail": "Multipoint(geometryDefinition) -> Multipoint",
            "insertText": "Multipoint(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "値の配列のみを座標として使用し、辞書からマルチポイント オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - マルチポイント ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **points**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - ポイントの位置を表す座標の配列です。\n\n    - **singlePoint**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 1 つのポイントまたは座標を表す数値の配列です。 配列の最初のアイテムは、X 座標を表します。 2 番目のエレメントは Y 座標を表します。 3 番目のエレメントは M 座標を表します (`hasM` が true、`hasZ` が false の場合)。 それ以外の場合、3 番目のエレメントは Z 座標を表します。 `hasZ` と `hasM` が両方とも true の場合、3 番目のエレメントは Z 座標、4 番目のエレメントは M 座標を表します。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Multipoint](https://developers.arcgis.com/arcade/guide/types/#multipoint)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "multipoint",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#multipoint2",
          "description": "ポイント オブジェクトの配列を使用し、辞書からマルチポイント オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるマルチポイントを作成します\n\n```arcade\nMultipoint({\n  points: [\n    Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } }),\n    Point({ x: -97.06133, y: 32.836, spatialReference: { wkid: 3857 } }),\n    Point({ x: -97.06124, y: 32.834, spatialReference: { wkid: 3857 } }),\n    Point({ x: -97.06127, y: 32.832, spatialReference: { wkid: 3857 } }),\n    Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } })\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Multipoint",
            "detail": "Multipoint(geometryDefinition) -> Multipoint",
            "insertText": "Multipoint(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ポイント オブジェクトの配列を使用し、辞書からマルチポイント オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - マルチポイント ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **points**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - ポイント オブジェクトの配列です。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Multipoint](https://developers.arcgis.com/arcade/guide/types/#multipoint)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "multipoint",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#multipoint3",
          "description": "直列化された JSON テキストから、マルチポイント オブジェクトを作成します。 JSON スキーマは、マルチポイント オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。",
          "examples": "\n##### 例\n\n\n\n```arcade\n// Creates a Multipoint object\nvar multipointJSON = '{\"points\": [[-97.06138,32.837],[-97.06133,32.836],[-97.06124,32.834],[-97.06127,32.832]],\"spatialReference\" : { \"wkid\": 3857 }}';\nMultipoint(multipointJSON);\n```\n\n",
          "completion": {
            "label": "Multipoint",
            "detail": "Multipoint(jsonDefinition) -> Multipoint",
            "insertText": "Multipoint(${1:jsonDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "直列化された JSON テキストから、マルチポイント オブジェクトを作成します。 JSON スキーマは、マルチポイント オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。\n\n**パラメーター**\n\n- **jsonDefinition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - マルチポイント ジオメトリ オブジェクトの作成元である JSON です。\n\n**戻り値**: [Multipoint](https://developers.arcgis.com/arcade/guide/types/#multipoint)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "nearestcoordinate",
        "bundle": "geometry",
        "sinceVersion": "1.23",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#nearestcoordinate",
        "description": "検索ポイントに最も近い、入力ジオメトリの座標 (頂点ではない) を返します。 返されるディクショナリには、検索ポイントから最も近い座標までの最短平面距離も含まれます。 検索ポイントが入力ジオメトリと交差している場合は、結果として検索ポイントが距離 0 と一緒に返されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ポリゴンから最も近い座標を、その座標までの距離と一緒に返す\n\n```arcade\nvar buildings = FeatureSetByPortalItem(\n  Portal('https://www.arcgis.com'),\n  '7b1fb95ab77f40bf8aa09c8b59045449',\n  0,\n  ['*'],\n  true\n);\n\nvar nearestBuilding = First(Intersects(buildings, BufferGeodetic($feature, 100, \"feet\")));\n\nvar result = NearestCoordinate(nearestBuilding, $feature);\n\nreturn result.distance;\n\n// or\n\nreturn result.coordinate;\n```\n\n",
        "completion": {
          "label": "NearestCoordinate",
          "detail": "NearestCoordinate(inputGeometry, searchPoint) -> Dictionary",
          "insertText": "NearestCoordinate(${1:inputGeometry_}, ${2:searchPoint_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n検索ポイントに最も近い、入力ジオメトリの座標 (頂点ではない) を返します。 返されるディクショナリには、検索ポイントから最も近い座標までの最短平面距離も含まれます。 検索ポイントが入力ジオメトリと交差している場合は、結果として検索ポイントが距離 0 と一緒に返されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 最も近い座標の取得元のジオメトリです。\n- **searchPoint**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `inputGeometry` の最も近い座標を見つける対象のポイントです。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n次のプロパティを含むディクショナリを返します。\n\n- **coordinate**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) - `inputGeometry` から `searchPoint` に最も近い座標です。\n- **distance**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 最も近い座標から `searchPoint` までの平面距離です。 これは `inputGeometry` と `searchPoint` の間の最短距離を表します。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "nearestvertex",
        "bundle": "geometry",
        "sinceVersion": "1.23",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#nearestvertex",
        "description": "検索ポイントに最も近い入力ジオメトリの頂点を返します。 返されるディクショナリには、検索ポイントから最も近い頂点までの平面距離が含まれます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ポリゴンから最も近い頂点を、その頂点までの距離と一緒に返します。\n\n```arcade\nvar buildings = FeatureSetByPortalItem(\n  Portal('https://www.arcgis.com'),\n  '7b1fb95ab77f40bf8aa09c8b59045449',\n  0,\n  ['*'],\n  true\n);\n\nvar nearestBuilding = First(Intersects(buildings, BufferGeodetic($feature, 100, \"feet\")));\n\nvar result = NearestVertex(nearestBuilding, $feature);\n\nreturn result.distance;\n\n// or\n\nreturn result.coordinate;\n```\n\n",
        "completion": {
          "label": "NearestVertex",
          "detail": "NearestVertex(inputGeometry, searchPoint) -> Dictionary",
          "insertText": "NearestVertex(${1:inputGeometry_}, ${2:searchPoint_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n検索ポイントに最も近い入力ジオメトリの頂点を返します。 返されるディクショナリには、検索ポイントから最も近い頂点までの平面距離が含まれます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 最も近い頂点の取得元のジオメトリです。\n- **searchPoint**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `inputGeometry` の最も近い頂点を見つける対象のポイントです。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n次のプロパティを含むディクショナリを返します。\n\n- **coordinate**: [Point](https://developers.arcgis.com/arcade/guide/types/#point) - `inputGeometry` から `searchPoint` に最も近い頂点を表すポイント位置です。\n- **distance**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 入力ジオメトリの最も近い頂点から `searchPoint` までの平面距離です。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "offset",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#offset",
        "description": "入力ジオメトリから一定の平面距離であるジオメトリを作成します。 これは、バッファー処理に似ていますが、片側の結果が作成されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nオフセット ジオメトリを返します。\n\n```arcade\nOffset($feature, 10, 'meters', 'square');\n```\n\n",
        "completion": {
          "label": "Offset",
          "detail": "Offset(inputGeometry, offsetDistance, offsetUnit?, joinType?, bevelRatio?, flattenError?) -> Geometry",
          "insertText": "Offset(${1:inputGeometry_}, ${2:offsetDistance_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力ジオメトリから一定の平面距離であるジオメトリを作成します。 これは、バッファー処理に似ていますが、片側の結果が作成されます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - オフセットするジオメトリ。 ポイント ジオメトリはサポートされていません。\n- **offsetDistance**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 入力ジオメトリからオフセットする平面距離。 `offsetDistance > 0` の場合、オフセット ジオメトリは入力ジオメトリの右側に作成されます。 `offsetDistance = 0` の場合はジオメトリに変化はなく、それ以外の場合は左側に作成されます。 パスの方向、または入力ジオメトリのリングによって、ジオメトリのどちらのサイドが右、 および左として考慮されるかが決まります。 単純なポリゴンの場合、外部リングの方向は時計回り、 内部リングの場合は反時計回りです。 そのため、単純なポリゴンの右側は常にその内側になります。\n- **offsetUnit** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `offsetDistance` の計測単位。 デフォルトは、入力ジオメトリの単位です。  \n設定可能な値: `feet` | `kilometers` | `miles` | `nautical-miles` | `meters` | `yards`\n- **joinType** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 結合タイプ。 設定可能な値は、`round`、`bevel`、`miter`、または `square` です。\n- **bevelRatio** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `joinType = 'miter'` の場合に適用可能です。`bevelRatio` はオフセット距離で乗算され、 その結果は、斜角を使用せずに鋭角のオフセット交差を配置できる距離を決定します。\n- **flattenError** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `joinType = 'round'` の場合に適用可能です。`flattenError` は、生成されるセグメントの真の円弧と比較した最大距離を決定します。 このアルゴリズムでは、round 結合ごとに約 180 を超える頂点は作成されません。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 6
        }
      },
      {
        "type": "function",
        "name": "overlaps",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#overlaps",
        "description": "ジオメトリが別のジオメトリと重なるかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが重なる場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nOverlaps($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Overlaps",
          "detail": "Overlaps(geometry1, geometry2) -> Boolean",
          "insertText": "Overlaps(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリと重なるかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry2` との 'overlaps' リレーションシップをテストされるベース ジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry1` との 'overlaps' リレーションシップをテストされる比較ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "point",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#point1",
          "description": "辞書からポイント オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるポイントを作成します\n\n```arcade\nPoint({\n  x: -97.06138,\n  y: 32.837,\n  spatialReference: { wkid: 3857 }\n});\n```\n\nM 値付きのポイントを作成します\n\n```arcade\nPoint({\n  hasM: true,\n  x: -97.06138,\n  y: 32.837,\n  m: 15,\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値付きのマルチポイントを作成します\n\n```arcade\nPoint({\n  hasZ: true,\n  x: -97.06138,\n  y: 32.837,\n  z: 1500,\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値および M 値付きのポイントを作成します\n\n```arcade\nPoint({\n  hasM: true,\n  hasZ: true,\n  x: -97.06138,\n  y: 32.837,\n  z: 1500,\n  m: 15,\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Point",
            "detail": "Point(geometryDefinition) -> Point",
            "insertText": "Point(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "辞書からポイント オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ポイント ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **x**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ポイントの位置の X 座標 (経度) です。\n  - **y**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ポイントの位置の Y 座標 (緯度) です。\n  - **m**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ポイントの位置の M 値 (メジャー) です。 M 値を指定する場合、`hasM` を `true` に設定する必要があります。\n  - **z**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ポイントの位置の Z 値 (標高または高さ) です。 Z 値を指定する場合、`hasZ` を `true` に設定する必要があります。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Point](https://developers.arcgis.com/arcade/guide/types/#point)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "point",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#point2",
          "description": "直列化された JSON テキストから、ポイント オブジェクトを作成します。 JSON スキーマは、ポイント オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。",
          "examples": "\n##### 例\n\n\n\n```arcade\n// Creates a Point object\nvar pointJSON = '{ \"x\": -118.15, \"y\": 33.80, \"spatialReference\": { \"wkid\": 3857 }}';\nPoint(pointJSON)\n```\n\n",
          "completion": {
            "label": "Point",
            "detail": "Point(jsonDefinition) -> Point",
            "insertText": "Point(${1:jsonDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "直列化された JSON テキストから、ポイント オブジェクトを作成します。 JSON スキーマは、ポイント オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。\n\n**パラメーター**\n\n- **jsonDefinition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ポイント ジオメトリ オブジェクトの作成元である JSON です。\n\n**戻り値**: [Point](https://developers.arcgis.com/arcade/guide/types/#point)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "polygon",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polygon1",
          "description": "値の配列のみを座標として使用し、辞書からポリゴン オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるポリゴンを作成します\n\n```arcade\n// Creates a Polygon with 2 rings\nPolygon({\n  rings: [\n    [\n      [-97.06138,32.837],\n      [-97.06133,32.836],\n      [-97.06124,32.834],\n      [-97.06127,32.832],\n      [-97.06138,32.837]\n    ],\n    [\n      [-97.06326,32.759],\n      [-97.06298,32.755],\n      [-97.06326,32.759]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nM 値付きのポリゴンを作成します\n\n```arcade\n// Creates a Polygon with 1 ring\nPolygon({\n  hasM: true,\n  rings: [\n    [\n      [-97.06138,32.837,0],\n      [-97.06133,32.836,15],\n      [-97.06124,32.834,30],\n      [-97.06127,32.832,50],\n      [-97.06138,32.837,0]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値付きのポリゴンを作成します\n\n```arcade\n// Creates a Polygon with 1 ring\nPolygon({\n  hasZ: true,\n  rings: [\n    [\n      [-97.06138,32.837,1000],\n      [-97.06133,32.836,1500],\n      [-97.06124,32.834,1000],\n      [-97.06127,32.832,500],\n      [-97.06138,32.837,1000]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値および M 値付きのポリゴンを作成します\n\n```arcade\n// Creates a Polygon with 1 ring\nPolygon({\n  hasM: true,\n  hasZ: true,\n  rings: [\n    [\n      [-97.06138,32.837,1000,0],\n      [-97.06133,32.836,1500,15],\n      [-97.06124,32.834,1000,30],\n      [-97.06127,32.832,500,50],\n      [-97.06138,32.837,1000,0]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Polygon",
            "detail": "Polygon(geometryDefinition) -> Polygon",
            "insertText": "Polygon(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "値の配列のみを座標として使用し、辞書からポリゴン オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ポリゴン ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **rings**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 各リングが頂点の配列になっているリング (または形状) の配列です。\n\n    - **ring**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - リング内の頂点の配列です。 すべてのリングは閉じている必要があります。つまり、各リングの最初の頂点は、常に最後の頂点と同じでなくてはなりません。 頂点は、時計回りの順番で定義する必要があります。 頂点が反時計回りに定義されているリングの場合、ポリゴン ホールが生成されます。\n\n      - **vertex**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - リング内の 1 つの頂点または座標を表す数値の配列です。 配列の最初のアイテムは、X 座標を表します。 2 番目のエレメントは Y 座標を表します。 3 番目のエレメントは M 座標を表します (`hasM` が true、`hasZ` が false の場合)。 それ以外の場合、3 番目のエレメントは Z 座標を表します。 `hasZ` と `hasM` が両方とも true の場合、3 番目のエレメントは Z 座標、4 番目のエレメントは M 座標を表します。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "polygon",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polygon2",
          "description": "ポイントの配列を座標として使用し、辞書からポリゴン オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるポリゴンを作成します\n\n```arcade\n// Creates a Polygon with 2 rings\nPolygon({\n  rings: [\n    [\n      Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06133, y: 32.836, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06124, y: 32.834, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06127, y: 32.832, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } })\n    ],\n    [\n      Point({ x: -97.06326, y: 32.759, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06298, y: 32.755, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06326, y: 32.759, spatialReference: { wkid: 3857 } })\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Polygon",
            "detail": "Polygon(geometryDefinition) -> Polygon",
            "insertText": "Polygon(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ポイントの配列を座標として使用し、辞書からポリゴン オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ポリゴン ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **rings**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 各リングがポイント オブジェクトの配列になっている、リング (または形状) の配列です。\n\n    - **ring**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - リングを表すポイントの配列です。 すべてのリングは閉じている必要があります。つまり、各リングの最初のポイントは、常にリング内の最後のポイントと同じでなくてはなりません。 ポイントは、時計回りの順番で定義する必要があります。 頂点が反時計回りに定義されているリングの場合、ポリゴン ホールが生成されます。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "polygon",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polygon3",
          "description": "直列化された JSON テキストから、ポリゴン オブジェクトを作成します。 JSON スキーマは、ポリゴン オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。",
          "examples": "\n##### 例\n\n\n\n```arcade\n// Creates a Polygon object\nvar polygonJSON = '{\"rings\": [[[-97.06138,32.837],[-97.06133,32.836],[-97.06124,32.834],[-97.06127,32.832], [-97.06138,32.837]],[[-97.06326,32.759],[-97.06298,32.755],[-97.06153,32.749], [-97.06326,32.759]]],\"spatialReference\": { \"wkid\": 3857 }}';\nPolygon(polygonJSON);\n```\n\n",
          "completion": {
            "label": "Polygon",
            "detail": "Polygon(jsonDefinition) -> Polygon",
            "insertText": "Polygon(${1:jsonDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "直列化された JSON テキストから、ポリゴン オブジェクトを作成します。 JSON スキーマは、ポリゴン オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。\n\n**パラメーター**\n\n- **jsonDefinition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ポリゴン ジオメトリ オブジェクトの作成元である JSON です。\n\n**戻り値**: [Polygon](https://developers.arcgis.com/arcade/guide/types/#polygon)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "polyline",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polyline1",
          "description": "値の配列のみを座標として使用し、辞書からポリライン オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるポリラインを作成します\n\n```arcade\n// Creates a Polyline with 2 paths\nPolyline({\n  paths: [\n    [\n      [-97.06138,32.837],\n      [-97.06133,32.836],\n      [-97.06124,32.834],\n      [-97.06127,32.832]\n    ],\n    [\n      [-97.06326,32.759],\n      [-97.06298,32.755]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nM 値付きのポリラインを作成します\n\n```arcade\n// Creates a Polyline with 1 path\nPolyline({\n  hasM: true,\n  paths: [\n    [\n      [-97.06138,32.837,0],\n      [-97.06133,32.836,15],\n      [-97.06124,32.834,30],\n      [-97.06127,32.832,50]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値付きのポリラインを作成します\n\n```arcade\n// Creates a Polyline with 1 path\nPolyline({\n  hasZ: true,\n  paths: [\n    [\n      [-97.06138,32.837,1000],\n      [-97.06133,32.836,1500],\n      [-97.06124,32.834,1000],\n      [-97.06127,32.832,500]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\nZ 値および M 値付きのポリラインを作成します\n\n```arcade\n// Creates a Polyline with 1 path\nPolyline({\n  hasM: true,\n  hasZ: true,\n  paths: [\n    [\n      [-97.06138,32.837,1000,0],\n      [-97.06133,32.836,1500,15],\n      [-97.06124,32.834,1000,30],\n      [-97.06127,32.832,500,50]\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Polyline",
            "detail": "Polyline(geometryDefinition) -> Polyline",
            "insertText": "Polyline(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "値の配列のみを座標として使用し、辞書からポリライン オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ポリライン ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **paths**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 各パスが頂点の配列になっているパス (またはライン セグメント) の配列です。\n\n    - **path**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - ライン セグメント内の頂点、またはパスの配列です。\n\n      - **vertex**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - ライン セグメント内の 1 つの頂点または座標を表す数値の配列です。 配列の最初のアイテムは、X 座標を表します。 2 番目のエレメントは Y 座標を表します。 3 番目のエレメントは M 座標を表します (`hasM` が true、`hasZ` が false の場合)。 それ以外の場合、3 番目のエレメントは Z 座標を表します。 `hasZ` と `hasM` が両方とも true の場合、3 番目のエレメントは Z 座標、4 番目のエレメントは M 座標を表します。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Polyline](https://developers.arcgis.com/arcade/guide/types/#polyline)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "polyline",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polyline2",
          "description": "ポイントの配列を座標として使用し、辞書からポリライン オブジェクトを作成します。",
          "examples": "\n##### 例\n\nX，Y 座標のみが含まれるポリラインを作成します\n\n```arcade\n// Creates a Polyline with 2 paths\nPolyline({\n  paths: [\n    [\n      Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06133, y: 32.836, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06124, y: 32.834, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06127, y: 32.832, spatialReference: { wkid: 3857 } })\n    ],\n    [\n      Point({ x: -97.06326, y: 32.759, spatialReference: { wkid: 3857 } }),\n      Point({ x: -97.06298, y: 32.755, spatialReference: { wkid: 3857 } })\n    ]\n  ],\n  spatialReference: { wkid: 3857 }\n});\n```\n\n",
          "completion": {
            "label": "Polyline",
            "detail": "Polyline(geometryDefinition) -> Polyline",
            "insertText": "Polyline(${1:geometryDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ポイントの配列を座標として使用し、辞書からポリライン オブジェクトを作成します。\n\n**パラメーター**\n\n- **geometryDefinition**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ポリライン ジオメトリ オブジェクトの作成元であるプロパティです。\n\n  - **paths**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 各パスがポイント オブジェクトの配列になっている、パス (またはライン セグメント) の配列です。\n\n    - **path**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - ライン セグメントを表すポイント、またはパスの配列です。\n  - **hasM**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが M 値を持っているかどうかを示します。\n  - **hasZ**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリが Z 値を持っているかどうかを示します。\n  - **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - ジオメトリの空間参照です。\n\n    - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ジオメトリ描画の基準を定義する地理座標系または投影座標系の Well-known ID です。\n\n**戻り値**: [Polyline](https://developers.arcgis.com/arcade/guide/types/#polyline)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "polyline",
          "bundle": "geometry",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#polyline3",
          "description": "直列化された JSON テキストから、ポリライン オブジェクトを作成します。 JSON スキーマは、ポリライン オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。",
          "examples": "\n##### 例\n\n\n\n```arcade\n// Creates a Polyline object\nvar polylineJSON = '{\"paths\": [[[-97.06138,32.837],[-97.06133,32.836],[-97.06124,32.834],[-97.06127,32.832]], [[-97.06326,32.759],[-97.06298,32.755]]], \"spatialReference\": { \"wkid\": 3857 } }'\nPolyline(polylineJSON);\n```\n\n",
          "completion": {
            "label": "Polyline",
            "detail": "Polyline(jsonDefinition) -> Polyline",
            "insertText": "Polyline(${1:jsonDefinition_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "直列化された JSON テキストから、ポリライン オブジェクトを作成します。 JSON スキーマは、ポリライン オブジェクトの ArcGIS REST API JSON 仕様に準拠する必要があります。\n\n**パラメーター**\n\n- **jsonDefinition**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ポリライン ジオメトリ オブジェクトの作成元である JSON テキストです。\n\n**戻り値**: [Polyline](https://developers.arcgis.com/arcade/guide/types/#polyline)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "relate",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#relate",
        "description": "2 つのジオメトリに対して所定の DE-9IM リレーションが `true` であるかどうかを示します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n入力ジオメトリのリレーションが一致する場合、true を返します。\n\n```arcade\nRelate($feature, geometry2, 'TTTFFTFFT')\n```\n\n",
        "completion": {
          "label": "Relate",
          "detail": "Relate(geometry1, geometry2, relation) -> Boolean",
          "insertText": "Relate(${1:geometry1_}, ${2:geometry2_}, ${3:relation_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリに対して所定の DE-9IM リレーションが `true` であるかどうかを示します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - リレーションの最初のジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - リレーションの 2 番目のジオメトリ。\n- **relation**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 2 つのジオメトリのリレーションシップに対してテストする DE-9IM (Dimensionally Extended 9 Intersection Model) マトリックス リレーション (テキスト値としてエンコード)。 このテキストには、DE-9IM マトリックスで表現される各交差のテスト結果が含まれます。 それぞれの結果はテキストの 1 文字で、数値 (返される最大ディメンション: 0、1、2)、 ブール値 (T または F)、またはマスク文字 (結果を無視する場合: '\\*') として表現できます。\n\n例: 次の DE-9IM のテキスト コードは、ポリゴン ジオメトリがライン ジオメトリを完全に含むかどうかをテストするのに有効です: TTTFFTFFT (ブール値)、'T\\*\\*\\*\\*\\*\\*FF\\*' (無関係な交差を無視)、または '102FF\\*FF\\*' (ディメンション形式)。 どれも同じ結果を返します。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "ringisclockwise",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#ringisclockwise",
        "description": "ポリゴン リング内のポイントの順序が時計回りであるかどうかを示します。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// $feature is a polygon feature\nvar polygonRings = Geometry($feature).rings;\nIIf(RingIsClockwise(polygonRings[0]), 'correct polygon', 'incorrect direction')\n```\n\n",
        "completion": {
          "label": "RingIsClockwise",
          "detail": "RingIsClockwise(points) -> Boolean",
          "insertText": "RingIsClockwise(${1:points_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nポリゴン リング内のポイントの順序が時計回りであるかどうかを示します。\n\n**パラメーター**\n\n- **points**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Point](https://developers.arcgis.com/arcade/guide/types/#point)&gt; - ポリゴン リング内のポイントの配列。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "rotate",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#rotate",
        "description": "ジオメトリを指定した角度で反時計回りに回転します。 回転の中心は、重心または所定の回転ポイントです。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n重心から 90 度回転した入力フィーチャを返します。\n\n```arcade\nRotate($feature, 90)\n```\n\n",
        "completion": {
          "label": "Rotate",
          "detail": "Rotate(inputGeometry, angle, rotationOrigin?) -> Geometry",
          "insertText": "Rotate(${1:inputGeometry_}, ${2:angle_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリを指定した角度で反時計回りに回転します。 回転の中心は、重心または所定の回転ポイントです。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 回転するジオメトリ。\n- **angle**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 度単位の回転角度。\n- **rotationOrigin** (_Optional_): [Point](https://developers.arcgis.com/arcade/guide/types/#point) - ジオメトリの回転の中心点。 デフォルトは、ジオメトリの重心です。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "setgeometry",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#setgeometry",
        "description": "ユーザー定義のフィーチャに対してジオメトリを設定または置き換えます。 グローバル変数として参照されるフィーチャは不変であり、これらのフィーチャのジオメトリは変更できないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャに新しいジオメトリを設定します\n\n```arcade\nvar pointFeature = Feature(Point( ... ), 'name', 'buffer centroid');\nvar mileBuffer = BufferGeodetic(Geometry(pointFeature), 1, 'mile');\nSetGeometry(pointFeature, mileBuffer);\n```\n\n",
        "completion": {
          "label": "SetGeometry",
          "detail": "SetGeometry(inputFeature, inputGeometry) -> Null",
          "insertText": "SetGeometry(${1:inputFeature_}, ${2:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nユーザー定義のフィーチャに対してジオメトリを設定または置き換えます。 グローバル変数として参照されるフィーチャは不変であり、これらのフィーチャのジオメトリは変更できないことに注意してください。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 更新されるジオメトリがあるフィーチャ。\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) - 入力フィーチャ上に設定するジオメトリ。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "simplify",
        "bundle": "geometry",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#simplify",
        "description": "ジオメトリに単純化操作を実行します。 トポロジ的に正しくなるように、所定のジオメトリを変更します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャの単純化されたジオメトリを返します。\n\n```arcade\nSimplify($feature);\n```\n\n",
        "completion": {
          "label": "Simplify",
          "detail": "Simplify(inputGeometry) -> Geometry",
          "insertText": "Simplify(${1:inputGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリに単純化操作を実行します。 トポロジ的に正しくなるように、所定のジオメトリを変更します。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 単純化されるジオメトリ。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "symmetricdifference",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#symmetricdifference",
        "description": "2 つのジオメトリに対してシンメトリカル ディファレンス操作を実行します。 シンメトリカル ディファレンスには、2 つのジオメトリで共通しない部分が含まれます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\n両方の入力が重なり合わない領域を表すポリゴンを返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nSymmetricDifference($feature, geom2);\n```\n\n",
        "completion": {
          "label": "SymmetricDifference",
          "detail": "SymmetricDifference(leftGeometry, rightGeometry) -> Geometry",
          "insertText": "SymmetricDifference(${1:leftGeometry_}, ${2:rightGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのジオメトリに対してシンメトリカル ディファレンス操作を実行します。 シンメトリカル ディファレンスには、2 つのジオメトリで共通しない部分が含まれます。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **leftGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - XOR 操作で `rightGeometry` と比較するジオメトリ インスタンス。\n- **rightGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - XOR 操作で `leftGeometry` と比較するジオメトリ インスタンス。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "touches",
        "bundle": "geometry",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#touches",
        "description": "ジオメトリが別のジオメトリと接するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nジオメトリが接する場合、true を返します\n\n```arcade\nvar geom2 = Polygon({ ... });\nTouches($feature, geom2);\n```\n\n",
        "completion": {
          "label": "Touches",
          "detail": "Touches(geometry1, geometry2) -> Boolean",
          "insertText": "Touches(${1:geometry1_}, ${2:geometry2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリと接するかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry2` との 'touches' リレーションシップをテストするジオメトリ。\n- **geometry2**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `geometry1` との 'touches' リレーションシップをテストするジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "union",
          "bundle": "geometry",
          "sinceVersion": "1.3",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#union1",
          "description": "入力配列内のジオメトリまたはフィーチャの集合論的ユニオンを作成し、1 つのジオメトリを返します。 すべての入力は、同じジオメトリ タイプで、同じ空間参照を共有する必要があります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
          "examples": "\n##### 例\n\n\n\n```arcade\nvar geom2 = Polygon({ ... });\nUnion([ $feature, geom2 ]);\n```\n\n",
          "completion": {
            "label": "Union",
            "detail": "Union(geometries) -> Geometry",
            "insertText": "Union(${1:geometries_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力配列内のジオメトリまたはフィーチャの集合論的ユニオンを作成し、1 つのジオメトリを返します。 すべての入力は、同じジオメトリ タイプで、同じ空間参照を共有する必要があります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **geometries**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)&gt; \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Feature](https://developers.arcgis.com/arcade/guide/types/#feature)&gt; - ユニオン処理して 1 つのジオメトリにするジオメトリの配列またはフィーチャの配列です。 任意の数のジオメトリを使用できます。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "union",
          "bundle": "geometry",
          "sinceVersion": "1.3",
          "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#union2",
          "description": "ジオメトリのリストの集合論的ユニオンを作成し、1 つのジオメトリを返します。 すべての入力は、同じジオメトリ タイプで、同じ空間参照を共有する必要があります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**",
          "examples": "\n##### 例\n\n\n\n```arcade\nvar geom2 = Polygon({ ... });\nvar geom3 = Polygon({ ... });\nvar geom4 = Polygon({ ... });\nUnion(Geometry($feature), geom2, geom3, geom4);\n```\n\n",
          "completion": {
            "label": "Union",
            "detail": "Union(geometry1, [geometry2, ..., geometryN]?) -> Geometry",
            "insertText": "Union(${1:geometry1_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリのリストの集合論的ユニオンを作成し、1 つのジオメトリを返します。 すべての入力は、同じジオメトリ タイプで、同じ空間参照を共有する必要があります。\n\n** `$feature` をこの関数の入力値として使用すると、ビューの縮尺解像度と同じ精度の結果しか生成されません。 したがって、この関数を使用した式から返される値は、縮尺を変更して拡大/縮小した後で変わることがあります。**\n\n**パラメーター**\n\n- **geometry1**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 他のジオメトリとユニオン処理して 1 つのジオメトリにするジオメトリです。\n- **[geometry2, ..., geometryN]** (_Optional_): [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - ユニオン処理して 1 つのジオメトリにするジオメトリまたはフィーチャの継続的なリストです。 任意の数のジオメトリを使用できます。\n\n**戻り値**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": -1
          }
        }
      ],
      {
        "type": "function",
        "name": "within",
        "bundle": "geometry",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/geometry_functions/#within",
        "description": "ジオメトリが別のジオメトリ内にあるかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_",
        "examples": "\n##### 例\n\nフィーチャが所定のポリゴン内にある場合、true を返します\n\n```arcade\nvar outerGeom = Polygon({ ... });\nWithin($feature, outerGeom);\n```\n\n",
        "completion": {
          "label": "Within",
          "detail": "Within(innerGeometry, outerGeometry) -> Boolean",
          "insertText": "Within(${1:innerGeometry_}, ${2:outerGeometry_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリが別のジオメトリ内にあるかどうかを示します。 以下の図で、赤でハイライトされた部分は関数が `true` を返す場合のシナリオを示しています。\n\n_視覚化とラベリングのプロファイルにある Feature ジオメトリは、 描画パフォーマンスを向上するために、表示の縮尺解像度に応じて単純化されます。 このため、これらのコンテキストで、フィーチャのジオメトリ (即ち `$feature`) をジオメトリ関数の入力値として使用すると、 縮尺レベルごとに異なる結果が返されます。 その他のプロファイル (ポップアップなど) では、最大解像度のジオメトリが提供されます。_\n\n**パラメーター**\n\n- **innerGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `outerGeometry` との 'within' リレーションシップをテストされるベース ジオメトリ。\n- **outerGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - `innerGeometry` との 'contains' リレーションシップをテストされる比較ジオメトリ。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      }
    ]
  },
  {
    "id": "dictionary_functions",
    "title": "ディクショナリ関数",
    "items": [
      [
        {
          "type": "function",
          "name": "dictionary",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#dictionary1",
          "description": "指定された引数に基づいて、新しいディクショナリを返します。 引数は名前と値のペアです。例: dictionary('field1',val,'field2',val2,...)。",
          "examples": "\n##### 例\n\n3 を出力\n\n```arcade\nvar d = Dictionary('field1', 1, 'field2', 2)\nreturn d.field1 + d.field2\n```\n\n",
          "completion": {
            "label": "Dictionary",
            "detail": "Dictionary([name1, value1, ..., nameN, valueN]?) -> Dictionary",
            "insertText": "Dictionary($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "指定された引数に基づいて、新しいディクショナリを返します。 引数は名前と値のペアです。例: dictionary('field1',val,'field2',val2,...)。\n\n**パラメーター**\n\n- **[name1, value1, ..., nameN, valueN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 継続的な名前と値のペアです。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        },
        {
          "type": "function",
          "name": "dictionary",
          "bundle": "core",
          "sinceVersion": "1.8",
          "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#dictionary2",
          "description": "JSON テキストを Arcade ディクショナリとしてデシリアライズします。",
          "examples": "\n##### 例\n\nJSON をディクショナリとしてデシリアライズします。\n\n```arcade\nvar extraInfo = '{\"id\": 1, \"population\": 200, \"city\": \"Spencer, ID\"}'\nvar spencerIDdata = Dictionary(extraInfo)\nspencerIDdata.population // Returns 200\n```\n\n",
          "completion": {
            "label": "Dictionary",
            "detail": "Dictionary(jsonText) -> Dictionary",
            "insertText": "Dictionary(${1:jsonText_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nJSON テキストを Arcade ディクショナリとしてデシリアライズします。\n\n**パラメーター**\n\n- **jsonText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Arcade ディクショナリに変換する JSON です。 JSON は、テキスト値として直列化されている必要があります。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "dictionary",
          "bundle": "geometry",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#dictionary3",
          "description": "ジオメトリの値をディクショナリに変換します。",
          "examples": "\n##### 例\n\nポイント ジオメトリの X 属性を更新します。\n\n```arcade\n// convert the $feature's geometry to a dictionary\nif (TypeOf(Geometry($feature)) == \"Point\") {\n  var ptDict = Dictionary(Geometry($feature));\n  ptDict.x *= 2; // stretch horizontally\n  // create a new geometry from the updated dictionary\n  return Geometry(ptDict);\n}\n```\n\n",
          "completion": {
            "label": "Dictionary",
            "detail": "Dictionary(inputGeometry) -> Dictionary",
            "insertText": "Dictionary(${1:inputGeometry_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nジオメトリの値をディクショナリに変換します。\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) - Arcade ディクショナリに変換するジオメトリです。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "dictionary",
          "bundle": "core",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#dictionary4",
          "description": "フィーチャをディクショナリに変換します。",
          "examples": "\n##### 例\n\nフィーチャをディクショナリに変換\n\n```arcade\n// convert $feature to a dictionary\nvar featureDict = Dictionary($feature);\n```\n\n",
          "completion": {
            "label": "Dictionary",
            "detail": "Dictionary(inputFeature) -> Dictionary",
            "insertText": "Dictionary(${1:inputFeature_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nフィーチャをディクショナリに変換します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - Arcade ディクショナリに変換するフィーチャです。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "dictionary",
          "bundle": "core",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#dictionary5",
          "description": "ディクショナリのシャロー コピーまたはディープ コピーを作成します。",
          "examples": "\n##### 例\n\nディクショナリのシャロー コピーを作成する\n\n```arcade\nvar inputDict = {\n  company: {\n    name: \"Esri\",\n    location: \"Redlands, CA\"\n  },\n  office: \"M123\"\n};\nvar copiedDict = Dictionary(inputDict);\nreturn inputDict.company == copiedDict.company\n// returns true\n// this is a shallow copy of the Dictionary, so the dictionaries share the same references\n```\n\nディクショナリのディープ コピーを作成する\n\n```arcade\nvar deepCopy = Dictionary(inputDict, true);\nreturn inputDict.company == deepCopy.company\n// returns false\n// this is a deep copy of the Dictionary, so the dictionaries do NOT share the same references\n```\n\n",
          "completion": {
            "label": "Dictionary",
            "detail": "Dictionary(inputDictionary, deep?) -> Dictionary",
            "insertText": "Dictionary(${1:inputDictionary_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nディクショナリのシャロー コピーまたはディープ コピーを作成します。\n\n**パラメーター**\n\n- **inputDictionary**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - コピーするディクショナリです。\n- **deep** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - `true` の場合、ディクショナリのディープ コピーを作成します。つまり、出力ディクショナリのプロパティは入力ディクショナリと同じ参照を共有しません。 デフォルト値は `false` です。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        }
      ],
      {
        "type": "function",
        "name": "fromjson",
        "bundle": "core",
        "sinceVersion": "1.14",
        "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#fromjson",
        "description": "JSON テキストを同等の Arcade データ タイプにデシリアライズします。",
        "examples": "\n##### 例\n\nテキストをブール値に変換\n\n```arcade\nFromJSON(\"true\")\n// Returns true\n```\n\nテキストを数値に変換します。\n\n```arcade\nfromJSON(\"731.1\")\n// returns 731.1\n```\n\nテキストを辞書に変換\n\n```arcade\nvar d = fromJSON('{\"kids\": 3, \"adults\": 4 }')\nd.kids + d.adults\n// returns 7\n```\n\nテキストを配列に変換\n\n```arcade\nfromJSON('[\"one\", 2, \"three\", false]')\n// returns [ \"one\", 2, \"three\", false ]\n```\n\nテキストを NULL に変換\n\n```arcade\nfromJSON(\"null\")\n// returns null\n```\n\n",
        "completion": {
          "label": "FromJSON",
          "detail": "FromJSON(jsonText) -> Dictionary,Array<Any>,Text,Boolean,Number",
          "insertText": "FromJSON(${1:jsonText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.14](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nJSON テキストを同等の Arcade データ タイプにデシリアライズします。\n\n**パラメーター**\n\n- **jsonText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - JSON テキストを Arcade データ タイプにデシリアライズします。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "haskey",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#haskey",
        "description": "入力キーを保持するのがディクショナリまたはフィーチャのいずれであるかを示します。",
        "examples": "\n##### 例\n\n`true` を出力\n\n```arcade\nvar d = Dictionary('Port Hope', 16214,  'Grafton', '<1000', 'Cobourg', 18519);\nHasKey(d, 'Cobourg');\n```\n\n",
        "completion": {
          "label": "HasKey",
          "detail": "HasKey(value, key) -> Boolean",
          "insertText": "HasKey(${1:value_}, ${2:key_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "入力キーを保持するのがディクショナリまたはフィーチャのいずれであるかを示します。\n\n**パラメーター**\n\n- **value**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - キーまたはフィールド名の存在をチェックするディクショナリまたはフィーチャです。\n- **key**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - チェックするキーまたはフィールド名です。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "hasvalue",
        "bundle": "core",
        "sinceVersion": "1.20",
        "link": "https://developers.arcgis.com/arcade/function-reference/dictionary_functions/#hasvalue",
        "description": "キーが値を持つ場合に、ディクショナリがその所定のキーを保持するかどうかを示します。",
        "examples": "\n##### 例\n\n値を持つキーを保持するディクショナリ\n\n```arcade\nvar d = Dictionary('Port Hope', 16214,  'Grafton', '<1000', 'Cobourg', 18519);\nHasValue(d, 'Cobourg');\n// returns true\n```\n\n値を持たないキーを保持するディクショナリ\n\n```arcade\nvar d = Dictionary('Port Hope', 16214,  'Grafton', '<1000', 'Cobourg', null);\nHasValue(d, 'Cobourg');\n// returns false\n```\n\n指定されたキーのないディクショナリ\n\n```arcade\nvar d = Dictionary('Port Hope', 16214,  'Grafton', '<1000');\nHasValue(d, 'Cobourg');\n// returns false\n```\n\n指定されたキーのないディクショナリ\n\n```arcade\nif ( HasValue( Schema($feature).fields[0], \"domain\" ) ) {\n  // Do something with the value if true\n}\n```\n\n",
        "completion": {
          "label": "HasValue",
          "detail": "HasValue(inputDictionary, key) -> Boolean",
          "insertText": "HasValue(${1:inputDictionary_}, ${2:key_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.20](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nキーが値を持つ場合に、ディクショナリがその所定のキーを保持するかどうかを示します。\n\n**パラメーター**\n\n- **inputDictionary**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - チェックするディクショナリまたはフィーチャです。\n- **key**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - チェックするキーまたはフィールド名です。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      }
    ]
  },
  {
    "id": "text_functions",
    "title": "テキスト関数",
    "items": [
      {
        "type": "function",
        "name": "concatenate",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#concatenate",
        "description": "値を 1 つに連結して、テキスト値を返します。",
        "examples": "\n##### 例\n\n'red/blue/green' を出力\n\n```arcade\nConcatenate(['red', 'blue', 'green'], '/')\n```\n\n",
        "completion": {
          "label": "Concatenate",
          "detail": "Concatenate(values?, separator?, format?) -> Text",
          "insertText": "Concatenate($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "値を 1 つに連結して、テキスト値を返します。\n\n**パラメーター**\n\n- **values** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 連結するテキスト値の配列です。\n- **separator** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `values` パラメーターが配列である場合、連結するために使用する区切り記号です。 または、1 番目のパラメーターに単一の値が指定された場合、連結するためのテキストです。 指定されない場合、空になります。\n- **format** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 日付または数字の特別な書式設定文字です。 このパラメーターは Arcade バージョン 1.3 以降で使用できます。  \n設定可能な値:  \n  - `0`: 桁  \n  - `#`: 先頭と末尾の 0 を省略した桁  \n  - `D`: 月の日、桁埋めあり (1 ～ 31)  \n  - `DD`: 月の日、桁埋めあり (01 ～ 31)  \n  - `DDD`: 平年の日 (1 ～ 365)  \n  - `d`: 曜日 (1 ～ 7)  \n  - `ddd`: 曜日の省略名 (例: Mon)  \n  - `dddd`: 曜日の完全名 (例: Monday)  \n  - `M`: 月番号 (1 ～ 12)  \n  - `MM`: 月番号、桁埋めあり (01 ～ 12)  \n  - `MMM`: 月の省略名 (例: Jan)  \n  - `MMMM`: 月の完全名 (例: January)  \n  - `Y`: 年の完全表示  \n  - `YY`: 2 桁の年  \n  - `h`: 12 時間表示、桁埋めなし (0 ～ 12)  \n  - `hh`: 12 時間表示、桁埋めあり (00 ～ 12)  \n  - `H`: 24 時間表示、桁埋めなし (0 ～ 24)  \n  - `HH`: 24 時間表示、桁埋めあり (00 ～ 24)  \n  - `m`: 分、桁埋めなし (0 ～ 59)  \n  - `mm`: 分、桁埋めあり (00 ～ 59)  \n  - `s`: 秒、桁埋めなし (0 ～ 59)  \n  - `ss`: 秒、桁埋めあり (00 ～ 59)  \n  - `SSS`: ミリ秒、0 埋めあり (000 ～ 999)  \n  - `A`: AM/PM  \n  - `Z`: 短縮表記の時間 +/- UTC のタイム ゾーン オフセット (例: `-7` や `+11`)  \n  - `ZZ`: 時間 +/- UTC のタイム ゾーン オフセット (例: `-07:00` や `+11:00`)  \n  - `ZZZ`: コンパクト表記の時間 +/- UTC のタイム ゾーン オフセット (例: `-0700` や `+1100`)  \n  - `ZZZZ`: 省略名が付けられたタイム ゾーン (例: `EST`)  \n  - `ZZZZZ`: 名前付きタイム ゾーン (例: `Eastern Standard Time`)  \n\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "count",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#count",
        "description": "テキスト値の文字数を返します。",
        "examples": "\n##### 例\n\n13 を返す\n\n```arcade\nCount('Graham County')\n```\n\n",
        "completion": {
          "label": "Count",
          "detail": "Count(value) -> Number",
          "insertText": "Count(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値の文字数を返します。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 演算の実行対象となるテキスト値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "find",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#find",
        "description": "テキスト値内の一連の文字を検索します。 ワイルドカードはサポートされていません。 `-1` の値が返された場合、結果が見つからなかったことを示しています。",
        "examples": "\n##### 例\n\n6 を出力\n\n```arcade\nFind('380', 'Esri, 380 New York Street', 0)\n```\n\n",
        "completion": {
          "label": "Find",
          "detail": "Find(searchText, targetText, startPosition?) -> Number",
          "insertText": "Find(${1:searchText_}, ${2:targetText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値内の一連の文字を検索します。 ワイルドカードはサポートされていません。 `-1` の値が返された場合、結果が見つからなかったことを示しています。\n\n**パラメーター**\n\n- **searchText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 検索対象のテキストです。\n- **targetText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 検索対象のテキストです。\n- **startPosition** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 検索元となるテキスト内の文字のゼロベースのインデックスです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "fromcharcode",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#fromcharcode",
        "description": "一連の UTF-16 文字コードから作成されたテキスト値を返します。",
        "examples": "\n##### 例\n\n次の例は 'XYZ' を返します\n\n```arcade\nFromCharCode(88,89,90)\n// returns 'XYZ'\n```\n\n次の例は '🌉' を返します\n\n```arcade\nFromCharCode(55356, 57097)\n// returns '🌉'\n```\n\n",
        "completion": {
          "label": "FromCharCode",
          "detail": "FromCharCode(charCode1, [charCode2, ..., charCodeN]?) -> Text",
          "insertText": "FromCharCode(${1:charCode1_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n一連の UTF-16 文字コードから作成されたテキスト値を返します。\n\n**パラメーター**\n\n- **charCode1**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - UTF-16 コード単位を表す数値。 各単位の範囲は 0 ～ 65535 です。\n- **[charCode2, ..., charCodeN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - UTF-16 コード単位を表す一連の数値。 各単位の範囲は 0 ～ 65535 です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": -1
        }
      },
      {
        "type": "function",
        "name": "fromcodepoint",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#fromcodepoint",
        "description": "一連の UTF-32 コード ポイントから作成されたテキスト値を返します。",
        "examples": "\n##### 例\n\n次の例は 'XYZ' を返します\n\n```arcade\nFromCodePoint(88,89,90)\n// returns 'XYZ'\n```\n\n次の例は '🌉' を返します\n\n```arcade\nFromCodePoint(127753)\n// returns '🌉'\n```\n\n",
        "completion": {
          "label": "FromCodePoint",
          "detail": "FromCodePoint(codePoint1, [codePoint2, ..., codePoint1N]?) -> Text",
          "insertText": "FromCodePoint(${1:codePoint1_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n一連の UTF-32 コード ポイントから作成されたテキスト値を返します。\n\n**パラメーター**\n\n- **codePoint1**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - コード ポイント。\n- **[codePoint2, ..., codePoint1N]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - コード ポイントのリスト\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": -1
        }
      },
      {
        "type": "function",
        "name": "guid",
        "bundle": "core",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#guid",
        "description": "テキスト値としてランダムな GUID を返します。",
        "examples": "\n##### 例\n\n`{db894515-ed21-4df1-af67-36232256f59a}` に似た値を返す\n\n```arcade\nGuid()\n```\n\n`d00cf4dffb184caeb8ed105b2228c247` に似た値を返す\n\n```arcade\nGuid('digits')\n```\n\n",
        "completion": {
          "label": "Guid",
          "detail": "Guid(guidFormat?) -> Text",
          "insertText": "Guid($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nテキスト値としてランダムな GUID を返します。\n\n**パラメーター**\n\n- **guidFormat** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - GUID の名前付き形式。 デフォルト値は `digits-hyphen-braces` です。  \n設定可能な値: `digits` \\| `digits-hyphen` \\| `digits-hyphen-braces` \\| `digits-hyphen-parentheses`\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "left",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#left",
        "description": "テキスト値の先頭から指定した数の文字を返します。",
        "examples": "\n##### 例\n\n'the' を出力\n\n```arcade\nLeft('the quick brown fox', 3)\n```\n\n",
        "completion": {
          "label": "Left",
          "detail": "Left(value, charCount) -> Text",
          "insertText": "Left(${1:value_}, ${2:charCount_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値の先頭から指定した数の文字を返します。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 文字の取得元である値です。\n- **charCount**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - テキストの先頭から取得する文字数です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "lower",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#lower",
        "description": "テキスト値を小文字にします。",
        "examples": "\n##### 例\n\n'hello' を出力\n\n```arcade\nLower('HELLO')\n```\n\n",
        "completion": {
          "label": "Lower",
          "detail": "Lower(inputText) -> Text",
          "insertText": "Lower(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値を小文字にします。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 小文字にするテキストです。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "mid",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#mid",
        "description": "テキスト値の中央部から複数の文字を取得します。",
        "examples": "\n##### 例\n\n'quick' を出力\n\n```arcade\nMid('the quick brown fox', 4, 5)\n```\n\n",
        "completion": {
          "label": "Mid",
          "detail": "Mid(value, startPosition, charCount?) -> Text",
          "insertText": "Mid(${1:value_}, ${2:startPosition_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値の中央部から複数の文字を取得します。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 文字の取得元である値です。 値のタイプがテキストではない場合、値は最初にテキストに変換されます。\n- **startPosition**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - テキストを取得する開始位置です。 0 は 1 番目の位置を示します。\n- **charCount** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 抽出する文字数です。 省略した場合、テキストの末尾までの文字を抽出します\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "proper",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#proper",
        "description": "テキスト値を先頭だけ大文字に変換します。 デフォルトでは、すべての単語の先頭が大文字になります。 オプションの `firstword` を使用すると、最初の単語のみが大文字で始まります。",
        "examples": "\n##### 例\n\n'The Quick Brown Fox' を出力\n\n```arcade\nProper('the quick brown fox', 'everyword')\n```\n\n",
        "completion": {
          "label": "Proper",
          "detail": "Proper(inputText, applyToText?) -> Text",
          "insertText": "Proper(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値を先頭だけ大文字に変換します。 デフォルトでは、すべての単語の先頭が大文字になります。 オプションの `firstword` を使用すると、最初の単語のみが大文字で始まります。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 先頭だけ大文字に変換するテキストです。\n- **applyToText** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 実行される大文字化のタイプを指定するテキスト値です。 デフォルトでは、すべての単語が大文字で始まります。 このパラメーターは、2 つの値 `everyword` または `firstword` のうちの 1 つを受け取ります。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "replace",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#replace",
        "description": "テキスト値内の文字を置換します。 デフォルトでは、すべての出現箇所が置き換えられます。",
        "examples": "\n##### 例\n\n'the quick red fox' を出力\n\n```arcade\nReplace('the quick brown fox', 'brown', 'red')\n```\n\n",
        "completion": {
          "label": "Replace",
          "detail": "Replace(value, searchText, replacementText, allOccurrences?) -> Text",
          "insertText": "Replace(${1:value_}, ${2:searchText_}, ${3:replacementText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値内の文字を置換します。 デフォルトでは、すべての出現箇所が置き換えられます。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 置換を行うテキストです。\n- **searchText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 検索対象のテキストです。\n- **replacementText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 置換テキストです。\n- **allOccurrences** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - テキスト内で `searchText` のすべての出現箇所を置き換えるかどうかを示します。 デフォルトは `true` です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "right",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#right",
        "description": "テキスト値の末尾から指定した数の文字を返します。",
        "examples": "\n##### 例\n\n'fox' を出力\n\n```arcade\nRight('the quick brown fox', 3)\n```\n\n",
        "completion": {
          "label": "Right",
          "detail": "Right(value, charCount) -> Text",
          "insertText": "Right(${1:value_}, ${2:charCount_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値の末尾から指定した数の文字を返します。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 文字の取得元であるテキストです。\n- **charCount**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - テキストの末尾から取得する文字数です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "split",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#split",
        "description": "テキスト値を配列に分割します。",
        "examples": "\n##### 例\n\n'[red,green]' を返す\n\n```arcade\nSplit('red,green,blue,orange', ',', 2)\n```\n\n段落を各スペースで回数に制限なく分割します。 段落内の単語の配列を返します。\n\n```arcade\nSplit(paragraph, ' ', -1, true)\n```\n\n",
        "completion": {
          "label": "Split",
          "detail": "Split(inputText, separatorText, limit?, removeEmpty?) -> Array<Text>",
          "insertText": "Split(${1:inputText_}, ${2:separatorText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキスト値を配列に分割します。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 分割されるテキスト値です。\n- **separatorText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - テキストを分割するのに使用される区切り記号です。\n- **limit** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 分割数を指定する整数です。 デフォルトは `-1` で、分割数に制限がないことを示しています。\n- **removeEmpty** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 空の値を削除するかどうかを示します。 デフォルトでは `false` に設定されます。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "standardizeguid",
        "bundle": "core",
        "sinceVersion": "1.20",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#standardizeguid",
        "description": "標準化され、書式設定された GUID 文字列を返します。",
        "examples": "\n##### 例\n\nGUID を `digits` 形式に変換します。\n\n```arcade\nStandardizeGuid('{4e6f776d-c298-4b4b-86a4-57103b4d0f4a}', 'digits')\n// Returns a value of 4e6f776dc2984b4b86a457103b4d0f4a\n```\n\nGUID を `digits-hyphen` 形式に変換します。\n\n```arcade\nStandardizeGuid('{4e6f776d-c298-4b4b-86a4-57103b4d0f4a}', 'digits-hyphen')\n// Returns a value of 4e6f776d-c298-4b4b-86a4-57103b4d0f4a\n```\n\n",
        "completion": {
          "label": "StandardizeGuid",
          "detail": "StandardizeGuid(inputGuid, format) -> Text",
          "insertText": "StandardizeGuid(${1:inputGuid_}, ${2:format_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.20](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n標準化され、書式設定された GUID 文字列を返します。\n\n**パラメーター**\n\n- **inputGuid**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 標準化する任意の形式の入力 GUID。\n- **format**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - GUID の名前付き形式。  \n設定可能な値: `digits` \\| `digits-hyphen` \\| `digits-hyphen-braces` \\| `digits-hyphen-parentheses`\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "text",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#text",
        "description": "任意の値をテキスト値に変換します。 オプションの `format` パラメーターは、日付と数値のデータ入力を書式設定できるようにするために提供されます。 同等のテキスト変換を特定できない場合は `null` を返します。",
        "examples": "\n##### 例\n\n数値を小数点以上にゼロ埋めする\n\n```arcade\nText(123, '0000') // '0123'\n```\n\n数値を小数点以上に制限する\n\n```arcade\nText(123, '00') // '23'\n```\n\n数値を千単位で区切る\n\n```arcade\nText(1234, '#,###') // '1,234'\n```\n\n数値を小数点以下第 2 位に丸める\n\n```arcade\nText(12345678.123, '#,###.00') // '12,345,678.12'\n```\n\n数値を通貨として書式設定\n\n```arcade\nText(1234.55, '$#,###.00') // '$1,234.55'\n```\n\n数値を小数点以下第 2 位に丸める\n\n```arcade\nText(1.236, '#.00') // '1.24'\n```\n\n有効桁数を維持して、千単位で区切る\n\n```arcade\nText(1234.5678, '#,##0.00#') // '1,234.568'\n```\n\n数値の書式設定で、正/負の書式を設定します。つまり、負のサブパターンが存在する場合、負の接頭辞と接尾辞を指定するだけです\n\n```arcade\nText(-2, 'Floor #;Basement #') // 'Basement 2'\n```\n\n\n\n```arcade\nText(2, 'Floor #;Basement #') // 'Floor 2'\n```\n\n100 で乗算して、パーセントとして書式設定する\n\n```arcade\nText(0.3, '#%') // '30%'\n```\n\n現在の日付と時刻を書式設定します (例: 'Tuesday, October 25, 2016 @ 08:43:11')。\n\n```arcade\nText(Now(), 'dddd, MMMM D, Y @ h:m:s')\n```\n\n日付と時刻をタイム ゾーンで書式設定する\n\n```arcade\nText(startDate, 'ddd, MMM D, Y h:mm:ss A ZZZZ')\n// returns Thu, Sep 14, 2023 10:04:49 AM PDT\n```\n\n",
        "completion": {
          "label": "Text",
          "detail": "Text(value, format?) -> Text",
          "insertText": "Text(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "任意の値をテキスト値に変換します。 オプションの `format` パラメーターは、日付と数値のデータ入力を書式設定できるようにするために提供されます。 同等のテキスト変換を特定できない場合は `null` を返します。\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - テキストに変換される値 (日付、数字、あるいはその他のデータ タイプ)。\n- **format** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 日付または数字の書式設定用の特殊文字。  \n設定可能な値:  \n  - `0`: 桁  \n  - `#`: 先頭と末尾の 0 を省略した桁  \n  - `D`: 月の日、桁埋めあり (1 ～ 31)  \n  - `DD`: 月の日、桁埋めあり (01 ～ 31)  \n  - `DDD`: 平年の日 (1 ～ 365)  \n  - `d`: 曜日 (1 ～ 7)  \n  - `ddd`: 曜日の省略名 (例: Mon)  \n  - `dddd`: 曜日の完全名 (例: Monday)  \n  - `M`: 月番号 (1 ～ 12)  \n  - `MM`: 月番号、桁埋めあり (01 ～ 12)  \n  - `MMM`: 月の省略名 (例: Jan)  \n  - `MMMM`: 月の完全名 (例: January)  \n  - `Y`: 年の完全表示  \n  - `YY`: 2 桁の年  \n  - `h`: 12 時間表示、桁埋めなし (0 ～ 12)  \n  - `hh`: 12 時間表示、桁埋めあり (00 ～ 12)  \n  - `H`: 24 時間表示、桁埋めなし (0 ～ 24)  \n  - `HH`: 24 時間表示、桁埋めあり (00 ～ 24)  \n  - `m`: 分、桁埋めなし (0 ～ 59)  \n  - `mm`: 分、桁埋めあり (00 ～ 59)  \n  - `s`: 秒、桁埋めなし (0 ～ 59)  \n  - `ss`: 秒、桁埋めあり (00 ～ 59)  \n  - `SSS`: ミリ秒、0 埋めあり (000 ～ 999)  \n  - `A`: AM/PM  \n  - `Z`: 短縮表記の時間 +/- UTC のタイム ゾーン オフセット (例: `-7` や `+11`)  \n  - `ZZ`: 時間 +/- UTC のタイム ゾーン オフセット (例: `-07:00` や `+11:00`)  \n  - `ZZZ`: コンパクト表記の時間 +/- UTC のタイムゾーン オフセット (例: `-0700` や `+1100`)  \n  - `ZZZZ`: 省略名が付けられたタイムゾーン (例: `EST`)  \n  - `ZZZZZ`: 名前付きタイム ゾーン (例: `Eastern Standard Time`)  \n\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "tocharcode",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#tocharcode",
        "description": "所定のインデックスで UTF-16 コード単位を表す 0 ～ 65535 の数値を返します。 無効なサロゲート ペアの半分が自動的に削除されます。",
        "examples": "\n##### 例\n\n次の例は、X の Unicode 値である 88 を返します。\n\n```arcade\nToCharCode('XYZ')\n// returns 88\n```\n\n次の例は、Y の Unicode 値である 89 を返します。\n\n```arcade\nToCharCode('XYZ', 1)\n// returns 89\n```\n\n次の例は 65535 を返します。\n\n```arcade\nToCharCode('\\uFFFF\\uFFFE')\n// returns 65535\n```\n\n次の例は 55356 を返します。\n\n```arcade\nToCharCode('🌉')\n// returns 55356\n```\n\n次の例は 57097 を返します。\n\n```arcade\nToCharCode('🌉', 1)\n// returns 57097\n```\n\n",
        "completion": {
          "label": "ToCharCode",
          "detail": "ToCharCode(inputText, index?) -> Number",
          "insertText": "ToCharCode(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のインデックスで UTF-16 コード単位を表す 0 ～ 65535 の数値を返します。 無効なサロゲート ペアの半分が自動的に削除されます。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - UTF-16 コード単位値の取得元のテキスト。\n- **index** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 0 以上かつ `inputText` の文字数以下の値を持つ整数。 デフォルトでは、この値は 0 です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "tocodepoint",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#tocodepoint",
        "description": "入力テキストの UTF-32 コード ポイント値を表す負以外の数値を返します。 サロゲート ペアの前半にインデックス化されると、コード ポイント全体が返されます。 ペアの後半にインデックス化されると、この関数は後半の値を返します。 大きいコードが有効な文字でない場合、関数はインデックス先の半分の値を返します。",
        "examples": "\n##### 例\n\n次の例は、X の Unicode 値である 88 を返します。\n\n```arcade\nToCodePoint('XYZ')\n// returns 88\n```\n\n次の例は、Y の Unicode 値である 89 を返します。\n\n```arcade\nToCodePoint('XYZ', 1)\n// returns 89\n```\n\n次の例は 127753 を返します。\n\n```arcade\nToCodePoint('🌉')\n// returns 127753\n```\n\n次の例は 57097 を返します。\n\n```arcade\nToCodePoint('🌉', 1)\n// returns 57097\n```\n\n",
        "completion": {
          "label": "ToCodePoint",
          "detail": "ToCodePoint(inputText, position?) -> Number",
          "insertText": "ToCodePoint(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力テキストの UTF-32 コード ポイント値を表す負以外の数値を返します。 サロゲート ペアの前半にインデックス化されると、コード ポイント全体が返されます。 ペアの後半にインデックス化されると、この関数は後半の値を返します。 大きいコードが有効な文字でない場合、関数はインデックス先の半分の値を返します。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - UTF-32 コード ポイント値の取得元のテキスト。\n- **position** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - コード ポイント値を返す `inputText` 内の文字の位置。 デフォルト値は 0 です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "tohex",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#tohex",
        "description": "整数を 16 進数表現に変換します。",
        "examples": "\n##### 例\n\n`\\\"64\\\"` を返します。\n\n```arcade\nToHex(100)\n```\n\nRGB 値から紺青色の 16 進数表現 `\\\"#4169E1\\\"` を返します。\n\n```arcade\nvar r = ToHex(65); // returns \"41\"\nvar g = ToHex(105); // returns \"69\"\nvar b = ToHex(225); // returns \"E1\"\nConcatenate(\"#\",r,g,b)\n// Returns \"#4169E1\"\n```\n\n",
        "completion": {
          "label": "ToHex",
          "detail": "ToHex(value) -> Text",
          "insertText": "ToHex(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n整数を 16 進数表現に変換します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 16 進数値に変換する値です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "trim",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#trim",
        "description": "入力テキスト値の先頭または末尾から空白文字を削除します。",
        "examples": "\n##### 例\n\n'hello world' を出力\n\n```arcade\nTrim('   hello world')\n```\n\n",
        "completion": {
          "label": "Trim",
          "detail": "Trim(inputText) -> Text",
          "insertText": "Trim(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "入力テキスト値の先頭または末尾から空白文字を削除します。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 切詰め対象のテキストです。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "upper",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#upper",
        "description": "テキストを大文字にします。",
        "examples": "\n##### 例\n\n'HELLO' を出力\n\n```arcade\nUpper('Hello')\n```\n\n",
        "completion": {
          "label": "Upper",
          "detail": "Upper(inputText) -> Text",
          "insertText": "Upper(${1:inputText_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "テキストを大文字にします。\n\n**パラメーター**\n\n- **inputText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 大文字にするテキスト値です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "urlencode",
        "bundle": "core",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/text_functions/#urlencode",
        "description": "特定の文字の各インスタンスを、文字の UTF-8 エンコードを表す 1、2、3、4 つのエスケープ シーケンスで置き換えることで、URL をエンコードします。",
        "examples": "\n##### 例\n\n指定された URL をエンコードします\n\n```arcade\nvar urlsource ='arcgis-survey123://?';\nvar params = {\n  itemID:'36ff9e8c13e042a58cfce4ad87f55d19',\n  center: '43.567,-117.380'\n};\nreturn urlsource  + UrlEncode(params);\n//arcgis-survey123://?center=43.567%2C-117.380&itemID=36ff9e8c13e042a58cfce4ad87f55d19\n```\n\n",
        "completion": {
          "label": "UrlEncode",
          "detail": "UrlEncode(textOrDictionary) -> Text",
          "insertText": "UrlEncode(${1:textOrDictionary_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n特定の文字の各インスタンスを、文字の UTF-8 エンコードを表す 1、2、3、4 つのエスケープ シーケンスで置き換えることで、URL をエンコードします。\n\n**パラメーター**\n\n- **textOrDictionary**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - エンコードされる URL。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      }
    ]
  },
  {
    "id": "debugging_functions",
    "title": "デバッグ関数",
    "items": [
      {
        "type": "function",
        "name": "console",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/debugging_functions/#console",
        "description": "デバッグする目的でメッセージをコンソールに記録します。 この関数は、式をデバッグする場合に特に役立ちます。 多くの関数と違って、`Console()` は値を返さず、 データの検査目的でのみ別個のウィンドウ内のメッセージをログに記録します。 この関数の使用に成功しても、式の評価に対する計算上の影響はありません。 コンソールの場所は、式が作成されるプロファイルまたはコンテキストによって異なります。 ArcGIS Online で式を作成する場合、ログに記録されたメッセージは Arcade エディターの結果ウィンドウの \\\"コンソール\\\" タブからアクセスできます。 Web クライアントで実行された式によって、ブラウザー コンソールにコンソール メッセージが記録されます。",
        "examples": "\n##### 例\n\nこの関数内のループの反復ごとに `max` の値をログ出力\n\n```arcade\n// The console window will log the following:\n// 'current item is: 10, but max = 10'\n// 'current item is: 0, but max = 10'\n// 'current item is: 84, but max = 84'\n// 'current item is: 30, but max = 84'\n\n// The expression evaluates to 84\nfunction findMax(yourArray) {\n  var maxValue = -Infinity;\n  for (var i in yourArray) {\n    maxValue = IIf(yourArray[i] > maxValue, yourArray[i], maxValue);\n    Console('current item is: ' + i + ', but maxValue = ' + maxValue);\n  }\n  return maxValue;\n}\nvar myArray = [ 10, 0, 84, 30 ];\nfindMax(myArray);\n```\n\n",
        "completion": {
          "label": "Console",
          "detail": "Console([value1, ..., valueN]?) -> Null",
          "insertText": "Console($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "デバッグする目的でメッセージをコンソールに記録します。 この関数は、式をデバッグする場合に特に役立ちます。 多くの関数と違って、`Console()` は値を返さず、 データの検査目的でのみ別個のウィンドウ内のメッセージをログに記録します。 この関数の使用に成功しても、式の評価に対する計算上の影響はありません。 コンソールの場所は、式が作成されるプロファイルまたはコンテキストによって異なります。 ArcGIS Online で式を作成する場合、ログに記録されたメッセージは Arcade エディターの結果ウィンドウの \\\"コンソール\\\" タブからアクセスできます。 Web クライアントで実行された式によって、ブラウザー コンソールにコンソール メッセージが記録されます。\n\n**パラメーター**\n\n- **[value1, ..., valueN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - メッセージ ウィンドウに出力する変数、テキスト、数字、または辞書のリストです。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": -1
        }
      },
      {
        "type": "function",
        "name": "getenvironment",
        "bundle": "core",
        "sinceVersion": "1.23",
        "link": "https://developers.arcgis.com/arcade/function-reference/debugging_functions/#getenvironment",
        "description": "Arcade 式が実行されるコンテキストおよび環境に関する情報を提供します。",
        "examples": "\n##### 例\n\nクライアントまたはシステムの環境を取得する\n\n```arcade\nvar env = GetEnvironment()\n// equals the following when executed in a JavaScript Maps SDK application\n// {\n//  \"version\":\"1.23\",\n//  \"engine\":\"web\",\n//  \"engineVersion\":\"4.27\",\n//  \"application\":\"\",\n//  \"locale\":\"en-US\",\n//  \"spatialReference\": { \"wkid\": 102100 }\n// }\nvar locale = IIF(HasValue(env, \"locale\"), env.locale, \"\");\n// returns the locale if it exists, otherwise returns an empty text value\nreturn locale;\n```\n\n",
        "completion": {
          "label": "GetEnvironment",
          "detail": "GetEnvironment() -> Dictionary",
          "insertText": "GetEnvironment($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nArcade 式が実行されるコンテキストおよび環境に関する情報を提供します。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティを含むディクショナリを返します。 返されるプロパティは、Arcade 式を実行している場所によって異なるため、`HasValue` 関数を使用して、必要な環境プロパティが存在することを確認するようお勧めします。\n\n- **version**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Arcade バージョンです。 バージョニングの詳細については、「Arcade バージョン マトリックス」をご参照ください。\n- **engine**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Arcade 式を実行するエンジンです。 指定可能な値: `web`、`native`、`jvm`\n- **engineVersion**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Arcade 式を実行するエンジンのバージョンです。 バージョニングの詳細については、「Arcade バージョン マトリックス」をご参照ください。\n- **application**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Arcade 式が実行されるアプリケーションです。 この値を設定するかどうかはアプリケーション開発者が判断します。 したがって、このプロパティは、式が実行されるアプリによっては空である場合があります。\n- **locale**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - クライアントまたはシステムのロケールです。\n- **spatialReference**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - Arcade コンテキストの空間参照です。\n\n  - **wkid**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 空間参照の Well-known ID です。\n- **timeZone**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - _Since 1.24_ 式の実行コンテキストのデフォルト タイム ゾーン。 これは、タイム ゾーンが他に指定されていない場合、Date 値を作成および表示するときに使用されます。"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      }
    ]
  },
  {
    "id": "track_functions",
    "title": "トラック関数",
    "items": [
      {
        "type": "function",
        "name": "trackaccelerationat",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackaccelerationat",
        "description": "現在の観測対象に対する観測対象の相対加速度です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル毎秒毎秒で加速度値を表す各フィーチャの数を返します。 この例では、値が '1' のフィーチャ 1 (p1) の結果を調べます。 結果はフィーチャ 2 (p2) の加速度と等しくなります。\n\n```arcade\nvar accelerationAt = TrackAccelerationAt(1)\naccelerationAt;\n// returns 0.0167\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル毎秒毎秒で加速度値を表す各フィーチャの数を返します。 この例では、値が '3' のフィーチャ 1 (p1) の結果を調べます。 結果はフィーチャ 4 (p4) の加速度と等しくなります。\n\n```arcade\nvar accelerationAt = TrackAccelerationAt(3)\naccelerationAt;\n// returns -0.0014\n```\n\n",
        "completion": {
          "label": "TrackAccelerationAt",
          "detail": "TrackAccelerationAt(value) -> Number",
          "insertText": "TrackAccelerationAt(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の観測対象に対する観測対象の相対加速度です。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 現在の観測対象の前または後のフィーチャの数です。  \n現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "trackaccelerationwindow",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackaccelerationwindow",
        "description": "現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から最後の値 (それ自体を含まない) までの加速度値です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、指定した期間の各フィーチャの加速度値を含む配列を返します。 加速度はメートル毎秒毎秒で計算されます。 この例では、`startIndex` が `-1` で `endIndex` が `2` で評価したときのフィーチャ 3 (p3) の結果を調べます。\n\n```arcade\nvar accelerationWindow = TrackAccelerationWindow(-1, 2)\naccelerationWindow;\n// returns [0.0167, 0.0056, -0.0014]\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、指定した期間の各フィーチャの加速度値を含む配列を返します。 加速度はメートル毎秒毎秒で計算されます。 この例では、`startIndex` が `1` で `endIndex` が `3` で評価したときのフィーチャ 3 (p3) の結果を調べます。\n\n```arcade\nvar accelerationWindow = TrackAccelerationWindow(1, 3)\naccelerationWindow;\n// returns [-0.0014, 0.0014, -0.0028]\n```\n\n",
        "completion": {
          "label": "TrackAccelerationWindow",
          "detail": "TrackAccelerationWindow(startIndex, endIndex) -> Array<Number>",
          "insertText": "TrackAccelerationWindow(${1:startIndex_}, ${2:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から最後の値 (それ自体を含まない) までの加速度値です。\n\n**パラメーター**\n\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "trackcurrentacceleration",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackcurrentacceleration",
        "description": "前の観測対象と現在の観測対象の間で測定された現在の観測対象の加速度です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル毎秒毎秒で加速度値を表す各フィーチャの数を返します。 最初の例では、フィーチャ 2 (p2) の結果を調べます。\n\n```arcade\nvar currentAcceleration = TrackCurrentAcceleration()\ncurrentAcceleration;\n// returns 0.0167\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル毎秒毎秒で加速度値を表す各フィーチャの数を返します。 以下の例では、フィーチャ 4 (p4) の結果を調べます。\n\n```arcade\nvar currentAcceleration = TrackCurrentAcceleration()\ncurrentAcceleration;\n// returns -0.0014\n```\n\n",
        "completion": {
          "label": "TrackCurrentAcceleration",
          "detail": "TrackCurrentAcceleration() -> Number",
          "insertText": "TrackCurrentAcceleration($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n前の観測対象と現在の観測対象の間で測定された現在の観測対象の加速度です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackcurrentdistance",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackcurrentdistance",
        "description": "先頭から現在までの観測対象間の移動距離の合計です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式はトラックの現在のフィーチャの値を返します。 最初の例では、フィーチャ 3 (p3) の結果を調べます。 計算は `80 + 60 = 140` となります。\n\n```arcade\nvar currentDistance = TrackCurrentDistance()\ncurrentDistance;\n// returns 140\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式はトラックの現在のフィーチャの値を返します。 上記のとおり、トラックには 6 つのフィーチャがあります。 式はトラックの各フィーチャの値を返します。 以下の例では、フィーチャ 6 (p6) の結果を調べます。 計算は `25 + 35 + 30 + 80 + 60 = 230` となります。\n\n```arcade\nvar currentDistance = TrackCurrentDistance()\ncurrentDistance;\n// returns 230\n```\n\n",
        "completion": {
          "label": "TrackCurrentDistance",
          "detail": "TrackCurrentDistance() -> Number",
          "insertText": "TrackCurrentDistance($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n先頭から現在までの観測対象間の移動距離の合計です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackcurrentspeed",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackcurrentspeed",
        "description": "前の観測対象と現在の観測対象の間の速度です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル/秒で計算された速度を表す各フィーチャの数を返します。 最初の例では、フィーチャ 2 (p2) の結果を調べます。 計算は `60/60` となります。\n\n```arcade\nvar currentSpeed = TrackCurrentSpeed()\ncurrentSpeed;\n// returns 1\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル/秒で計算された速度を表す各フィーチャの数を返します。 以下の例では、フィーチャ 6 (p6) の結果を調べます。 計算は `25/60` となります。\n\n```arcade\nvar currentSpeed = TrackCurrentSpeed()\ncurrentSpeed;\n// returns 0.4167\n```\n\n",
        "completion": {
          "label": "TrackCurrentSpeed",
          "detail": "TrackCurrentSpeed() -> Number",
          "insertText": "TrackCurrentSpeed($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n前の観測対象と現在の観測対象の間の速度です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackcurrenttime",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackcurrenttime",
        "description": "トラック内の現在のフィーチャで、時間を計算します。",
        "examples": "\n##### 例\n\n評価されている現在のフィーチャの時間を返します。 たとえば、2012 年 1 月 1 日、2012 年 12 月 9 日、2013 年 5 月 3 日の 3 つのフィーチャを持つトラックが与えられた場合、 各フィーチャの現在の時間が評価されます。 この例では、中央のフィーチャである 2012 年 12 月 9 日で評価されます。\n\n```arcade\nTrackCurrentTime();\n// returns December 9, 2012\n```\n\n",
        "completion": {
          "label": "TrackCurrentTime",
          "detail": "TrackCurrentTime() -> Date",
          "insertText": "TrackCurrentTime($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nトラック内の現在のフィーチャで、時間を計算します。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackdistanceat",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackdistanceat",
        "description": "先頭から現在までの観測対象間の移動距離に、指定した値を足した合計です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式はトラックの各フィーチャの値を返します。 最初の例では、インデックス値が 2 のフィーチャ 2 (p2) で評価したときの結果を調べます。 計算は `30 + 80 + 60 = 170` となります。\n\n```arcade\nTrackDistanceAt(2)\n// returns 170\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式はトラックの各フィーチャの値を返します。 以下の例では、インデックス値が 4 のフィーチャ 4 (p4) で評価したときの結果を調べます。 計算は `25 + 35 + 30 + 80 + 60 = 230` となります。\n\n```arcade\nTrackDistanceAt(2)\n// returns 230\n```\n\n",
        "completion": {
          "label": "TrackDistanceAt",
          "detail": "TrackDistanceAt(index) -> Number",
          "insertText": "TrackDistanceAt(${1:index_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n先頭から現在までの観測対象間の移動距離に、指定した値を足した合計です。\n\n**パラメーター**\n\n- **index**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 距離を計算するトラック フィーチャのインデックスです。 たとえば、値が `2` の場合、トラックの最初のフィーチャ (インデックス `0`) から トラックの 3 番目のフィーチャ (インデックス `2`) までの距離を計算します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "trackdistancewindow",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackdistancewindow",
        "description": "現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から最後の値 (それ自体を含まない) までの距離です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、期間の各フィーチャの距離値を含む配列を返します。 最初の例では、`startIndex` が `-1` で `endIndex` が `2` で評価したときのフィーチャ 3 (p3) の結果を調べます。\n\n```arcade\nvar distanceWindow = TrackDistanceWindow(-1, 2)\ndistanceWindow;\n// returns [60, 140, 170]\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、期間の各フィーチャの距離値を含む配列を返します。 以下の例では、`startIndex` が `-1` で `endIndex` が `2` で評価したときのフィーチャ 5 (p5) の結果を調べます。\n\n```arcade\nvar distanceWindow = TrackDistanceWindow(-1, 2)\ndistanceWindow;\n// returns [170, 205, 230]\n```\n\n",
        "completion": {
          "label": "TrackDistanceWindow",
          "detail": "TrackDistanceWindow(startIndex, endIndex) -> Array<Number>",
          "insertText": "TrackDistanceWindow(${1:startIndex_}, ${2:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から最後の値 (それ自体を含まない) までの距離です。\n\n**パラメーター**\n\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "trackduration",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackduration",
        "description": "開始フィーチャから現在のフィーチャまでのトラックの期間をエポックからのミリ秒で計算します。",
        "examples": "\n##### 例\n\n2012 年 1 月 1 日に開始して 2013 年 5 月 3 日の現在のフィーチャまでのトラックの期間を返します。\n\n```arcade\nTrackDuration();\n// returns 42163200000\n```\n\n",
        "completion": {
          "label": "TrackDuration",
          "detail": "TrackDuration() -> Number",
          "insertText": "TrackDuration($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n開始フィーチャから現在のフィーチャまでのトラックの期間をエポックからのミリ秒で計算します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackfieldwindow",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackfieldwindow",
        "description": "指定した期間の指定した「フィールド」から属性値の配列を返します。 ウィンドウ機能により、時間を前後できます。",
        "examples": "\n##### 例\n\nトラックには、`[10, 20, 30, 40, 50]` という順番に並べられた値を持つフィールドがあります。 フィーチャのジオメトリは `[{x: 1, y: 1}、{x: 2, y: 2}、{x: null, y: null}、{x: 4, y: 4}、{x: 5, y: 5}]` です。 式はトラック内の各フィーチャで評価されます。 返される結果には、開始フィーチャが含まれ、終了フィーチャは含まれません。 この例は、2 番目のフィーチャ (20) で評価され、前の値 (-1) の配列を返します。\n\n```arcade\nvar window = TrackFieldWindow('MyField', -1,0)\nwindow;\n// returns [10]\n```\n\nトラックには、`[10, 20, 30, 40, 50]` という順番に並べられた値を持つ `Speed` という名前のフィールドがあります。 フィーチャのジオメトリは `[{x: 1, y: 1}、{x: 2, y: 2}、{x: null, y: null}、{x: 4, y: 4}、{x: 5, y: 5}]` です。 式はトラック内の各フィーチャで評価されます。 この例では、3 番目のフィーチャ (30) で評価したときの結果を調べます。 返される結果には、開始フィーチャが含まれ、終了フィーチャは含まれません。 \n\n```arcade\nvar window = TrackFieldWindow('Speed', -2,2)\nwindow;\n// returns [10,20,30,40]\n```\n\n",
        "completion": {
          "label": "TrackFieldWindow",
          "detail": "TrackFieldWindow(fieldName, startIndex, endIndex) -> Array<Number>",
          "insertText": "TrackFieldWindow(${1:fieldName_}, ${2:startIndex_}, ${3:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定した期間の指定した「フィールド」から属性値の配列を返します。 ウィンドウ機能により、時間を前後できます。\n\n**パラメーター**\n\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 値を返すフィールド名です。\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt;"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "trackgeometrywindow",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackgeometrywindow",
        "description": "指定された時間インデックスのジオメトリの配列を返します。 ウィンドウ機能により、時間を前後できます。",
        "examples": "\n##### 例\n\nトラックには、`[10, 20, 30, 40, 50]` という順番に並べられた値を持つフィールドがあります。 フィーチャのジオメトリは `[{x: 1, y: 1}、{x: 2, y: 2}、{x: null, y: null}、{x: 4, y: 4}、{x: 5, y: 5}]` です。 式はトラック内の各フィーチャで評価されます。 この例では、3 番目のフィーチャ (30) で評価したときの結果を調べます。 開始フィーチャを含め、終了フィーチャを除外した結果が返されます。\n\n```arcade\nvar window = TrackGeometryWindow(-2,2)\nwindow;\n// returns [{x: 1, y: 1},{x: 2, y: 2} ,{x: null, y: null},{x: 4, y: 4}]\n```\n\n",
        "completion": {
          "label": "TrackGeometryWindow",
          "detail": "TrackGeometryWindow(startIndex, endIndex) -> Array<Geometry>",
          "insertText": "TrackGeometryWindow(${1:startIndex_}, ${2:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された時間インデックスのジオメトリの配列を返します。 ウィンドウ機能により、時間を前後できます。\n\n**パラメーター**\n\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "trackindex",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackindex",
        "description": "計算されるフィーチャのインデックスを返します。 フィーチャはトラック内の時間の順序でインデックスが付けられます。",
        "examples": "\n##### 例\n\nトラック内の最初のフィーチャのインデックスを返します。\n\n```arcade\nTrackIndex() // returns 0\n```\n\n",
        "completion": {
          "label": "TrackIndex",
          "detail": "TrackIndex() -> Number",
          "insertText": "TrackIndex($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n計算されるフィーチャのインデックスを返します。 フィーチャはトラック内の時間の順序でインデックスが付けられます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackspeedat",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackspeedat",
        "description": "現在の観測対象に対する観測対象の相対速度です。 たとえば、値が 2 の場合、現在より 2 つ後の観測対象の速度になります。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル/秒で計算された速度を表す各フィーチャの数を返します。 最初の例では、値が '2' のフィーチャ 1 (p1) の結果を調べます。 計算は `80/60` となります。\n\n```arcade\nvar speedAt = TrackSpeedAt(2)\nspeedAt;\n// returns 1.33\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、メートル/秒で計算された速度を表す各フィーチャの数を返します。 以下の例では、値が '-1' のフィーチャ 3 (p3) の結果を調べます。 計算は `60/60` となります。\n\n```arcade\nvar speedAt = TrackSpeedAt(2)\nspeedAt;\n// returns 1\n```\n\n",
        "completion": {
          "label": "TrackSpeedAt",
          "detail": "TrackSpeedAt(value) -> Number",
          "insertText": "TrackSpeedAt(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の観測対象に対する観測対象の相対速度です。 たとえば、値が 2 の場合、現在より 2 つ後の観測対象の速度になります。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 現在の観測対象の前または後のフィーチャの数です。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "trackspeedwindow",
        "bundle": "track",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackspeedwindow",
        "description": "現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から 最後の値 (それ自体を含まない) までの速度値です。",
        "examples": "\n##### 例\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、指定した期間の各フィーチャの速度値を含む配列を返します。 速度はメートル/秒で計算されます。 この例では、`startIndex` が `-1` で `endIndex` が `2` で評価したときのフィーチャ 3 (p3) の結果を調べます。\n\n```arcade\nvar speedWindow = TrackSpeedWindow(-1, 2)\nspeedWindow // returns [1, 1.3, 0.5]\n```\n\n上記のとおり、トラックには 6 つのフィーチャがあります。 式は、指定した期間の各フィーチャの速度値を含む配列を返します。 速度はメートル/秒で計算されます。 この例では、`startIndex` が `1` で `endIndex` が `3` で評価したときのフィーチャ 3 (p3) の結果を調べます。\n\n```arcade\nvar speedWindow = TrackSpeedWindow(1,3)\nspeedWindow // returns [0.5, 0.583, 0.4167]\n```\n\n",
        "completion": {
          "label": "TrackSpeedWindow",
          "detail": "TrackSpeedWindow(startIndex, endIndex) -> Array<Number>",
          "insertText": "TrackSpeedWindow(${1:startIndex_}, ${2:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の観測対象 (0) の前後の期間における、最初の値 (それ自体を含む) から 最後の値 (それ自体を含まない) までの速度値です。\n\n**パラメーター**\n\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス 0 です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、1 は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、-1 は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "trackstarttime",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackstarttime",
        "description": "トラックの開始時間を計算します。",
        "examples": "\n##### 例\n\n2012 年 1 月 1 日から 2013 年 5 月 3 日までのトラックの開始時間を返します。\n\n```arcade\nTrackStartTime() // returns January 1, 2012\n```\n\n",
        "completion": {
          "label": "TrackStartTime",
          "detail": "TrackStartTime() -> Date",
          "insertText": "TrackStartTime($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nトラックの開始時間を計算します。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "trackwindow",
        "bundle": "track",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/track_functions/#trackwindow",
        "description": "指定された時間インデックスのフィーチャの配列を返します。 この関数により、時間を前後できます。",
        "examples": "\n##### 例\n\nトラックには、`[10, 20, 30, 40, 50]` という順番に並べられた値を持つフィールドがあります。 フィーチャのジオメトリは `[{x: 1, y: 1}、{x: 2, y: 2}、{x: null, y: null}、{x: 4, y: 4}、{x: 5, y: 5}]` です。 式はトラック内の各フィーチャで評価されます。 返される結果には、開始フィーチャが含まれ、終了フィーチャは含まれません。 この例は、2 番目のフィーチャ (20) で評価され、単一値の配列 (前のフィーチャ) を返します。\n\n```arcade\nvar window = TrackWindow(-1,0)\nwindow;\n// returns [{'geometry': {x: 1, y: 1}}, {'attributes': {'MyField' : 10, 'trackName':'ExampleTrack1'}}]\n```\n\nトラックには、`[10, 20, 30, 40, 50]` という順番に並べられた値を持つフィールドがあります。 フィーチャのジオメトリは `[{x: 1, y: 1}、{x: 2, y: 2}、{x: null, y: null}、{x: 4, y: 4}、{x: 5, y: 5}]` です。 式はトラック内の各フィーチャで評価されます。 この例では、3 番目のフィーチャ (30) で評価したときの結果を調べます。 返される結果には、開始フィーチャが含まれ、終了フィーチャは含まれません。\n\n```arcade\nvar window = TrackWindow(-2,2)\nwindow;\n/* returns\n[{\n  geometry: [{\n    x: 1,\n    y: 1\n  }, {\n    x: 2,\n    y: 2\n  }, {\n    x: null,\n     y: null\n  }, {\n    x: 4,\n    y: 4\n  }]\n}, {\n  attributes: [{\n    MyField: 10,\n    trackName: 'ExampleTrack1'\n  }, {\n    MyField: 20,\n    trackName: 'ExampleTrack1'\n  }, {\n    MyField: 30,\n    trackName: 'ExampleTrack1'\n  }, {\n    MyField: 40,\n    trackName: 'ExampleTrack1'\n  }]\n}]\n```\n\n",
        "completion": {
          "label": "TrackWindow",
          "detail": "TrackWindow(startIndex, endIndex) -> Array<Feature>",
          "insertText": "TrackWindow(${1:startIndex_}, ${2:endIndex_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された時間インデックスのフィーチャの配列を返します。 この関数により、時間を前後できます。\n\n**パラメーター**\n\n- **startIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 開始フィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n- **endIndex**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ウィンドウの最後にあるフィーチャのインデックスです。 現在のフィーチャはインデックス `0` です。 正の値は将来発生するフィーチャを表します (現在の値より後)。 たとえば、`1` は配列の次の値です。 負の数字は、過去に発生した (現在のフィーチャの前にある) フィーチャを表します。 たとえば、`-1` は配列の前の値です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Feature](https://developers.arcgis.com/arcade/guide/types/#feature)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      }
    ]
  },
  {
    "id": "feature_functions",
    "title": "フィーチャ関数",
    "items": [
      {
        "type": "function",
        "name": "domain",
        "bundle": "core",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#domain",
        "description": "指定された `feature` の所定のフィールドに割り当てられたドメインを返します。 `feature` がサブタイプを持つクラスに属している場合、サブタイプに割り当てられたドメインを返します。",
        "examples": "\n##### 例\n\nフィーチャのサブタイプに割り当てられたドメイン。\n\n```arcade\nvar d = Domain($feature, \"poleType\")\n// the poleType field has a coded value domain called poleTypes\n// the value of d will be\n// {\n//   type: \"codedValue\" ,\n//   name: \"poleTypes\",\n//   dataType: \"number\",\n//   codedValues: [\n//     { name: \"Unknown\", code: 0 },\n//     { name: \"Wood\", code: 1 },\n//     { name: \"Steel\", code: 2 }\n//   ]\n// }\n```\n\n",
        "completion": {
          "label": "Domain",
          "detail": "Domain(inputFeature, fieldName) -> Dictionary",
          "insertText": "Domain(${1:inputFeature_}, ${2:fieldName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された `feature` の所定のフィールドに割り当てられたドメインを返します。 `feature` がサブタイプを持つクラスに属している場合、サブタイプに割り当てられたドメインを返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - ドメインを保持するフィールドを含むフィーチャです。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを割り当てられたフィールドの名前です (フィールドのエイリアスではありません)。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **type**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインのタイプ (`codedValue` または `range` のいずれか)。\n- **name**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメイン名。\n- **dataType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメイン フィールドのデータ タイプ。 値は `esriFieldTypeSmallInteger`、`esriFieldTypeInteger`、`esriFieldTypeBigInteger`、`esriFieldTypeSingle`、`esriFieldTypeDouble`、`esriFieldTypeString`、 `esriFieldTypeDate`、`esriFieldTypeOID`、`esriFieldTypeGeometry`、`esriFieldTypeBlob`、`esriFieldTypeRaster`、 `esriFieldTypeGUID`、`esriFieldTypeGlobalID`、`esriFieldTypeXML` のいずれかです。\n- **codedValues**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - `codedValue` ドメインにのみ適用されます。 フィールドの有効な値を記述する辞書の配列。 それぞれの辞書には、実際のフィールド値を保持する `code` プロパティと、 値のわかりやすい説明を保持する `name` プロパティがあります (例: `{ code: 1, name: \\\"pavement\\\" }`)。\n- **min**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `range` ドメインにのみ適用されます。 ドメインの最小値。\n- **max**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `range` ドメインにのみ適用されます。 ドメインの最大値。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "domaincode",
        "bundle": "core",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#domaincode",
        "description": "フィーチャ内の関連付けられたドメインの説明のコードを返します。",
        "examples": "\n##### 例\n\n参照されているフィールドのドメインの説明を出力します。\n\n```arcade\nDomainCode($feature, 'Enabled', 'True')\n```\n\n",
        "completion": {
          "label": "DomainCode",
          "detail": "DomainCode(inputFeature, fieldName, value?, subtype?) -> Number,Text",
          "insertText": "DomainCode(${1:inputFeature_}, ${2:fieldName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nフィーチャ内の関連付けられたドメインの説明のコードを返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - ドメインを保持するフィールドを含むフィーチャです。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを含むフィールドの名前です (フィールドのエイリアスではありません)。\n- **value** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - コードに再変換する値です。\n- **subtype** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャがサブタイプをサポートしている場合のサブタイプのコード番号または名前です。 指定されない場合、現在のフィーチャのサブタイプ (フィーチャにサブタイプがある場合) が使用されます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "domainname",
        "bundle": "core",
        "sinceVersion": "1.7",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#domainname",
        "description": "フィーチャ内のドメイン コードの説明的な名前を返します。",
        "examples": "\n##### 例\n\n参照されているフィールドのドメインの説明を出力します\n\n```arcade\nDomainName($feature, 'fieldName')\n```\n\n",
        "completion": {
          "label": "DomainName",
          "detail": "DomainName(inputFeature, fieldName, code?, subtype?) -> Text",
          "insertText": "DomainName(${1:inputFeature_}, ${2:fieldName_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.7](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nフィーチャ内のドメイン コードの説明的な名前を返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - ドメインを保持するフィールドを含むフィーチャです。\n- **fieldName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ドメインを含むフィールドの名前です (フィールドのエイリアスではありません)。\n- **code** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 目的を説明する名前に関連付けられているコードです。 指定しないと、フィーチャのフィールド値が返されます。\n- **subtype** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャがサブタイプをサポートしている場合のサブタイプのコード番号または名前です。 指定されない場合、フィーチャのサブタイプ (フィーチャにサブタイプがある場合) が使用されます。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 4
        }
      },
      {
        "type": "function",
        "name": "expects",
        "bundle": "core",
        "sinceVersion": "1.15",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#expects",
        "description": "指定のフィーチャの追加の属性をリクエストします。 視覚化やラベリングなどの一部のプロファイルでは、アプリが各フィーチャまたはラベルのレンダリングに必要なデータ属性のみをリクエストします。 式によっては、テキスト リテラルではなく、変数を含むフィールド名を動的に参照するものがあります。 このような場合は、レンダリングおよびラベリング エンジンがレンダリングに必要なフィールドを検出することが困難になります。 この関数を使用すると、必須フィールドをリストとして明示的に示すことができます。 また、ワイルドカードを使用して、すべてのフィールドまたはフィールドのサブセットをリクエストすることもできます。 式はフィーチャ単位で実行されるため、特に、多数のフィーチャを含むレイヤーでは、注意してワイルドカードを使用する必要があります。 リクエストするデータが多すぎると、アプリのパフォーマンスが大幅に低下するおそれがあります。",
        "examples": "\n##### 例\n\nレンダラーによって簡単には検出されないフィールドをリクエスト\n\n```arcade\n// Request multiple years of population data if the\n// fields cannot be easily detected by the renderer or labels\nExpects($feature, 'POP_2020', 'POP_2010')\nvar thisYear = 2020;\nvar lastDecade = thisYear - 10;\nreturn $feature['POP_'+thisYear] - $feature['POP_'+lastDecade]\n```\n\nフィールド名のパターンに一致するすべてのデータをリクエスト\n\n```arcade\n// Request all the data beginning with 'POP'. This is\n// necessary because the renderer can't easily detect\n// the required fields based on this expression\nExpects($feature, 'POP*')\n\nvar startYear = 1880;\nvar endYear = 2020;\nvar changes = [];\n\nfor(var y=startYear; y<endYear; y+=10){\n  var startPop = $feature['POP_' + y];\n  var endPop = $feature['POP_' + (y+10)];\n  var change = endPop - startPop;\n  Push(changes, change);\n}\nMax(changes);\n```\n\nフィーチャのすべてのデータをリクエスト\n\n```arcade\n// Request all fields because the required fields may\n// be based on unknown information like a relative date\nExpects($feature, '*')\n\nvar casesToday = $feature[ 'CASES_' + Text(d, 'MM_DD_Y') ];\nvar casesYesterday = $feature[ 'CASES_' + Text(DateAdd( Today(), -1, 'days', 'MM_DD_Y') ];\n// Change in cases from yesterday\nreturn casesToday - casesYesterday;\n```\n\n",
        "completion": {
          "label": "Expects",
          "detail": "Expects(inputFeature, field1, [field2, ..., fieldN]?) -> Null",
          "insertText": "Expects(${1:inputFeature_}, ${2:field1_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.15](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定のフィーチャの追加の属性をリクエストします。 視覚化やラベリングなどの一部のプロファイルでは、アプリが各フィーチャまたはラベルのレンダリングに必要なデータ属性のみをリクエストします。 式によっては、テキスト リテラルではなく、変数を含むフィールド名を動的に参照するものがあります。 このような場合は、レンダリングおよびラベリング エンジンがレンダリングに必要なフィールドを検出することが困難になります。 この関数を使用すると、必須フィールドをリストとして明示的に示すことができます。 また、ワイルドカードを使用して、すべてのフィールドまたはフィールドのサブセットをリクエストすることもできます。 式はフィーチャ単位で実行されるため、特に、多数のフィーチャを含むレイヤーでは、注意してワイルドカードを使用する必要があります。 リクエストするデータが多すぎると、アプリのパフォーマンスが大幅に低下するおそれがあります。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - リクエストされたフィールドの追加先のフィーチャ。\n- **field1**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 指定のフィーチャについてリクエストするフィールド名。 式で使用するために必要なフィールドのみをリストします。 必要に応じて、ワイルドカード文字 `*` を使用してすべてのフィールドをリクエストできます。 ただし、不必要なデータ量が読み込まれて、アプリのパフォーマンスに悪影響を及ぼすのを防ぐために、この文字の使用は避ける必要があります。\n- **[field2, ..., fieldN]** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 指定のフィーチャについてリクエストするフィールド名の継続的なリスト。 式で使用するために必要なフィールドのみをリストします。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": -1
        }
      },
      [
        {
          "type": "function",
          "name": "feature",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#feature1",
          "description": "新しいフィーチャを作成します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nFeature(pointGeometry, 'city_name', 'Spokane', 'population', 210721)\n```\n\n",
          "completion": {
            "label": "Feature",
            "detail": "Feature(inputGeometry, attribute1, value1, [attribute2, value2, ..., attributeN, valueN]?) -> Feature",
            "insertText": "Feature(${1:inputGeometry_}, ${2:attribute1_}, ${3:value1_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "新しいフィーチャを作成します。\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) - フィーチャのジオメトリです。\n- **attribute1**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 最初の属性の名前です。\n- **value1**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 最初の属性の値です。\n- **[attribute2, value2, ..., attributeN, valueN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - フィーチャの各属性の継続的な名前と値のペアです。\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
            }
          },
          "parametersInfo": {
            "min": 3,
            "max": -1
          }
        },
        {
          "type": "function",
          "name": "feature",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#feature2",
          "description": "シリアル化された JSON 文字列から新しいフィーチャを作成します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nvar JSONString = '{\"geometry\":{\"x\":10,\"y\":20,\"spatialReference\":{\"wkid\":102100}},\"attributes\":{\"hello\":10}}'\nvar ftr1 = Feature(JSONString)\n```\n\n",
          "completion": {
            "label": "Feature",
            "detail": "Feature(jsonText) -> Feature",
            "insertText": "Feature(${1:jsonText_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "シリアル化された JSON 文字列から新しいフィーチャを作成します。\n\n**パラメーター**\n\n- **jsonText**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャを表すシリアル化された JSON です。\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "feature",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#feature3",
          "description": "ジオメトリおよび属性のディクショナリから新しいフィーチャを作成します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nvar dict = { hello:10 }\nvar p = point({x:10, y:20, spatialReference:{wkid:102100}})\nvar ftr = Feature(p,dict)\n```\n\n",
          "completion": {
            "label": "Feature",
            "detail": "Feature(inputGeometry, attributes) -> Feature",
            "insertText": "Feature(${1:inputGeometry_}, ${2:attributes_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ジオメトリおよび属性のディクショナリから新しいフィーチャを作成します。\n\n**パラメーター**\n\n- **inputGeometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) - フィーチャのジオメトリです。\n- **attributes**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 属性とその値を含むディクショナリです。\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "feature",
          "bundle": "core",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#feature4",
          "description": "ディクショナリから新しいフィーチャを作成します。",
          "examples": "\n##### 例\n\nディクショナリから新しいフィーチャを作成する\n\n```arcade\nvar featureDict = {\n  geometry: Point({ x: -97.06138, y: 32.837, spatialReference: { wkid: 3857 } }),\n  attributes: {\n    name1: \"value1\",\n    name2: \"value2\"\n  }\n};\n// create a new feature from a dictionary of geometry and attributes\nvar newFeature = Feature(featureDict);\n```\n\n",
          "completion": {
            "label": "Feature",
            "detail": "Feature(inputDictionary) -> Feature",
            "insertText": "Feature(${1:inputDictionary_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nディクショナリから新しいフィーチャを作成します。\n\n**パラメーター**\n\n- **inputDictionary**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - フィーチャのジオメトリおよび属性を含むディクショナリです。\n\n  - **geometry**: [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - フィーチャのジオメトリです。 `geometry` が Dictionary の場合は、`Geometry` 関数を使用して新しいジオメトリが作成されます。 `geometry` が null であるか、ディクショナリで見つからない場合は、`null` ジオメトリを使用してフィーチャが作成されます。\n  - **attributes**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) - 属性とその値を含むディクショナリです。\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "feature",
          "bundle": "core",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#feature5",
          "description": "フィーチャのコピーを作成します。",
          "examples": "\n##### 例\n\nフィーチャのコピーを作成する\n\n```arcade\nvar copiedFeature = Feature($feature);\n```\n\n",
          "completion": {
            "label": "Feature",
            "detail": "Feature(inputFeature) -> Feature",
            "insertText": "Feature(${1:inputFeature_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nフィーチャのコピーを作成します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - コピーするフィーチャ\n\n**戻り値**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "gdbversion",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#gdbversion",
        "description": "ブランチまたはバージョン対応データの現在のジオデータベース バージョン名を返します。 複数ユーザー ジオデータベースにデータがない場合、空のテキスト値が返されます。",
        "examples": "\n##### 例\n\n所定のフィーチャのジオデータベース バージョンを返します。\n\n```arcade\nGdbVersion($feature)\n```\n\n",
        "completion": {
          "label": "GdbVersion",
          "detail": "GdbVersion(inputFeature) -> Text",
          "insertText": "GdbVersion(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nブランチまたはバージョン対応データの現在のジオデータベース バージョン名を返します。 複数ユーザー ジオデータベースにデータがない場合、空のテキスト値が返されます。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 関連付けられたレイヤーの現在のジオデータベース バージョンを返す Feature です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "schema",
        "bundle": "core",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#schema",
        "description": "指定されたフィーチャのスキーマの説明を返します。",
        "examples": "",
        "completion": {
          "label": "Schema",
          "detail": "Schema(inputFeature) -> Dictionary",
          "insertText": "Schema(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定されたフィーチャのスキーマの説明を返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - 返すスキーマのフィーチャ。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **fields**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - Feature 内のフィールドを記述する辞書の配列を返します。 それぞれの辞書は、フィールドの `name`、`alias`、`type`、`subtype`、`domain`、`length`、および `editable` と `nullable` であるかどうかを記述します。\n- **geometryType**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Feature 内のフィーチャのジオメトリ タイプ。 ジオメトリのないテーブル場合は `esriGeometryNull` を返します。  \n設定可能な値: `esriGeometryPoint`、`esriGeometryLine`、`esriGeometryPolygon`、`esriGeometryNull`\n- **globalIdField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Feature の global ID フィールド。 globalId 対応でない場合 `\\\"\\\"` を返します。\n- **objectIdField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Feature の objectId フィールド。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "subtypecode",
        "bundle": "core",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#subtypecode",
        "description": "所定のフィーチャのサブタイプ コードを返します。",
        "examples": "\n##### 例\n\nサブタイプのコードを返します\n\n```arcade\n// feature has a field named `assetGroup`\n// with the subtype described in the Subtypes function example\nSubtypeCode($feature)  // returns 1\n```\n\n",
        "completion": {
          "label": "SubtypeCode",
          "detail": "SubtypeCode(inputFeature) -> Number,Text,Date",
          "insertText": "SubtypeCode(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のフィーチャのサブタイプ コードを返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - サブタイプ コードの取得元のフィーチャ。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "subtypename",
        "bundle": "core",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#subtypename",
        "description": "所定のフィーチャのサブタイプ名を返します。",
        "examples": "\n##### 例\n\nサブタイプの名前を返します。\n\n```arcade\n// feature has a field named `assetGroup`\n// with the subtype described in the Subtypes function example\nSubtypeName($feature) // returns \"Single Phase\"\n```\n\n",
        "completion": {
          "label": "SubtypeName",
          "detail": "SubtypeName(inputFeature) -> Text",
          "insertText": "SubtypeName(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のフィーチャのサブタイプ名を返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - サブタイプ名の取得元のフィーチャ。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "subtypes",
        "bundle": "core",
        "sinceVersion": "1.11",
        "link": "https://developers.arcgis.com/arcade/function-reference/feature_functions/#subtypes",
        "description": "サブタイプのコード値の辞書を返します。 レイヤーでサブタイプが有効化されていない場合、`null` を返します。",
        "examples": "\n##### 例\n\nフィーチャのコード値を持つサブタイプを返します。\n\n```arcade\nSubtypes($feature)\n// returns the following dictionary\n// {\n//   subtypeField: 'assetGroup',\n//   subtypes: [\n//     { name: \"Unknown\", code: 0 },\n//     { name: \"Single Phase\", code: 1 },\n//     { name: \"Two Phase\", code: 2 }\n//   ]\n// }\n```\n\n",
        "completion": {
          "label": "Subtypes",
          "detail": "Subtypes(inputFeature) -> Dictionary",
          "insertText": "Subtypes(${1:inputFeature_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.11](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nサブタイプのコード値の辞書を返します。 レイヤーでサブタイプが有効化されていない場合、`null` を返します。\n\n**パラメーター**\n\n- **inputFeature**: [Feature](https://developers.arcgis.com/arcade/guide/types/#feature) - サブタイプの取得元のフィーチャ。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **subtypeField**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - サブタイプを含むフィールド。\n- **subtypes**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)&gt; - サブタイプを記述する辞書の配列。 それぞれの辞書には、実際のフィールド値を保持する `code` プロパティと、 値のわかりやすい説明を保持する `name` プロパティがあります (例: `{ code: 1, name: \\\"pavement\\\" }`)。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      }
    ]
  },
  {
    "id": "portal_functions",
    "title": "ポータル関数",
    "items": [
      {
        "type": "function",
        "name": "featuresetbyportalitem",
        "bundle": "portal-access",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/portal_functions/#featuresetbyportalitem",
        "description": "所定のポータルから、ポータル アイテム内のフィーチャ レイヤーから FeatureSet を作成します。 FeatureSet 内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。",
        "examples": "\n##### 例\n\nマップ内のフィーチャとは異なるポータルから、レイヤーに含まれるフィーチャの数を返します。\n\n```arcade\nvar features = FeatureSetByPortalItem(\n  Portal('https://www.arcgis.com'),\n  '7b1fb95ab77f40bf8aa09c8b59045449',\n  0,\n  ['Name', 'Count'],\n  false\n);\nCount(features);\n```\n\n",
        "completion": {
          "label": "FeatureSetByPortalItem",
          "detail": "FeatureSetByPortalItem(portalObject, itemId, layerId?, fields?, includeGeometry?) -> FeatureSet",
          "insertText": "FeatureSetByPortalItem(${1:portalObject_}, ${2:itemId_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のポータルから、ポータル アイテム内のフィーチャ レイヤーから FeatureSet を作成します。 FeatureSet 内のフィールドの数を制限し、ジオメトリを除外すると、スクリプトのパフォーマンスが上がることがあります。\n\n**パラメーター**\n\n- **portalObject**: [Portal](https://developers.arcgis.com/arcade/guide/types/#portal) - 所定のポータル アイテム ID からフィーチャをクエリするポータルです。\n- **itemId**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - フィーチャ レイヤーまたはフィーチャ サービスを参照するポータル アイテムの GUID です。 _この値はテキスト リテラルである必要があることに注意してください。_\n- **layerId** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - フィーチャ サービス内のレイヤーの ID です。 このレイヤーはフィーチャ サービスから作成される必要があります。フィーチャ コレクションはサポートされていません。\n- **fields** (_Optional_): [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - FeatureSet に挿入するフィールドです。 デフォルトでは、すべてのフィールドが挿入されます。 レイヤー内のすべてのフィールドをリクエストするには、この値を `['*']` に設定します。 フィールドの数を制限すると、スクリプトのパフォーマンスが上がります。\n- **includeGeometry** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ジオメトリをフィーチャに含めるかどうかを示します。 パフォーマンス上の理由で、ジオメトリのリクエストのみ行う必要があります (必要に応じて、ジオメトリ関数で使用する場合など)。\n\n**戻り値**: [FeatureSet](https://developers.arcgis.com/arcade/guide/types/#featureset)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 5
        }
      },
      [
        {
          "type": "function",
          "name": "getuser",
          "bundle": "data-access",
          "sinceVersion": "1.12",
          "link": "https://developers.arcgis.com/arcade/function-reference/portal_functions/#getuser1",
          "description": "ワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。",
          "examples": "\n##### 例\n\nアクティブなポータルの現在ログインしているユーザーのユーザー名を返します。 ユーザーがポータルと関連付けられていない場合、`NULL` が返されます。\n\n```arcade\nvar userInfo = GetUser();\nif(HasValue(userInfo, \"username\")){\n  return userInfo.username;\n}\n```\n\n所定のポータルからのワークスペース接続に基づいて、現在ログインしているユーザーのディレクトリを返します。\n\n```arcade\nGetUser(Portal('https://www.arcgis.com'))\n```\n\n",
          "completion": {
            "label": "GetUser",
            "detail": "GetUser(portalObject?, username?) -> Dictionary",
            "insertText": "GetUser($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。\n\n**パラメーター**\n\n- **portalObject** (_Optional_): [Portal](https://developers.arcgis.com/arcade/guide/types/#portal) - 現在のユーザーを返すポータルです。 ポータルが指定されていない場合は、アクティブなポータルのユーザー情報が返されます。\n- **username** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返すユーザーのユーザー名です。 リクエストを行ったときに、権限に基づいて限られた情報のみが返されます。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **email**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーのアカウントに関連付けられた電子メール アドレスです。\n- **fullName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーの姓名です。\n- **groups**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーが属するグループの配列です。\n- **id**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー ID です。\n- **privileges**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 組織内でユーザーが持つ権限の配列です (編集や表示など)。\n- **role**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 組織内のユーザーのロールです (管理者、公開者、ユーザー、閲覧者、カスタムなど)。\n- **username**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー名です。"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "getuser",
          "bundle": "data-access",
          "sinceVersion": "1.12",
          "link": "https://developers.arcgis.com/arcade/function-reference/portal_functions/#getuser2",
          "description": "ワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。",
          "examples": "\n##### 例\n\nアクティブなポータルのユーザー情報を返します。 ユーザーがポータルと関連付けられていない場合、`NULL` が返されます。\n\n```arcade\nGetUser()\n```\n\nユーザー エクステンションがあるポータルに基づいて、現在ログインしているユーザーの情報を返します。\n\n```arcade\nGetUser(Portal('https://www.arcgis.com'), true)\n```\n\n",
          "completion": {
            "label": "GetUser",
            "detail": "GetUser(portalObject?, extensions?) -> Dictionary",
            "insertText": "GetUser($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nワークスペースの現在のユーザーを返します。 サービスからのデータの場合、Portal ユーザーか Server ユーザーのいずれかが返されます。 データベース接続からのデータの場合、データベース ユーザーが返されます。 ファイル ジオデータベースなど、ワークスペースにユーザーが関連付けられていない場合、 ファイル ジオデータベースなど、`NULL` 値が返されます。\n\n**パラメーター**\n\n- **portalObject** (_Optional_): [Portal](https://developers.arcgis.com/arcade/guide/types/#portal) - 現在のユーザーを返すポータルです。 ポータルが指定されていない場合は、アクティブなポータルのユーザー情報が返されます。\n- **extensions** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - ディレクトリで `userLicenseTypeExtensions` を返すかどうかを指定します。\n\n**戻り値**: [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary)  \n以下のプロパティで記述されているディクショナリを返します。\n\n- **id**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー ID です。\n- **username**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 返されたユーザーのユーザー名です。\n- **fullName**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーの姓名です。\n- **email**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ユーザーのアカウントに関連付けられた電子メール アドレスです。\n- **groups**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーが属するグループの配列です。\n- **role**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 組織内のユーザーのロールです (管理者、公開者、ユーザー、閲覧者、カスタムなど)。\n- **privileges**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - 組織内でユーザーが持つ権限の配列です (編集や表示など)。\n- **userLicenseTypeExtensions**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Text](https://developers.arcgis.com/arcade/guide/types/#text)&gt; - ユーザーのアカウントに関連付けられたライセンス タイプ エクステンションの配列です (「Utility Network」や「Parcel Fabric」など)。 これを返すには、`extensions` パラメーターを `true` に設定する必要があります。"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 2
          }
        }
      ],
      {
        "type": "function",
        "name": "portal",
        "bundle": "data-access",
        "sinceVersion": "1.8",
        "link": "https://developers.arcgis.com/arcade/function-reference/portal_functions/#portal",
        "description": "ArcGIS Portal への参照を作成します。",
        "examples": "\n##### 例\n\nArcGIS Online のポータル アイテムからフィーチャをクエリします\n\n```arcade\nvar arcgisPortal = Portal('https://www.arcgis.com');\nvar features = FeatureSetByPortalItem(arcgisPortal, '7b1fb95ab77f40bf8aa09c8b59045449', 0, ['Name', 'Count'], false);\n```\n\nエンタープライズ ポータル\n\n```arcade\nPortal('https://www.example.com/arcgis')\n```\n\n",
        "completion": {
          "label": "Portal",
          "detail": "Portal(url) -> Portal",
          "insertText": "Portal(${1:url_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.8](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nArcGIS Portal への参照を作成します。\n\n**パラメーター**\n\n- **url**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - ポータルの URL\n\n**戻り値**: [Portal](https://developers.arcgis.com/arcade/guide/types/#portal)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      }
    ]
  },
  {
    "id": "math_functions",
    "title": "数学関数",
    "items": [
      {
        "type": "function",
        "name": "abs",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#abs",
        "description": "数値の絶対値を返します。 NULL の場合は、0 を返します。",
        "examples": "\n##### 例\n\n3 を出力\n\n```arcade\nAbs(-3)\n```\n\n",
        "completion": {
          "label": "Abs",
          "detail": "Abs(value) -> Number",
          "insertText": "Abs(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "数値の絶対値を返します。 NULL の場合は、0 を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "acos",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#acos",
        "description": "0 ～ PI の範囲のラジアン単位で入力値のアークコサインを返します。 入力値が +/- 1 の適正範囲外にある場合、NaN が返されます。",
        "examples": "\n##### 例\n\n1.266104 を出力\n\n```arcade\nAcos(0.3)\n```\n\n",
        "completion": {
          "label": "Acos",
          "detail": "Acos(value) -> Number",
          "insertText": "Acos(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "0 ～ PI の範囲のラジアン単位で入力値のアークコサインを返します。 入力値が +/- 1 の適正範囲外にある場合、NaN が返されます。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる -1 ～ 1 までの数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "asin",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#asin",
        "description": "-PI/2 ～ PI/2 の範囲のラジアン単位で入力値のアークコサインを返します。 入力値が +/- 1 の適正範囲外にある場合、NaN が返されます。",
        "examples": "\n##### 例\n\n0.304693 を出力\n\n```arcade\nAsin(0.3)\n```\n\n",
        "completion": {
          "label": "Asin",
          "detail": "Asin(value) -> Number",
          "insertText": "Asin(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "-PI/2 ～ PI/2 の範囲のラジアン単位で入力値のアークコサインを返します。 入力値が +/- 1 の適正範囲外にある場合、NaN が返されます。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる -1 ～ 1 までの数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "atan",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#atan",
        "description": "-PI/2 ～ PI/2 の範囲のラジアン単位で入力値の逆正接を返します。",
        "examples": "\n##### 例\n\n0.785398 を出力\n\n```arcade\nAtan(1)\n```\n\n",
        "completion": {
          "label": "Atan",
          "detail": "Atan(value) -> Number",
          "insertText": "Atan(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "-PI/2 ～ PI/2 の範囲のラジアン単位で入力値の逆正接を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "atan2",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#atan2",
        "description": "引数の符号に基づいて -PI ～ 0 または 0 ～ PI の範囲のラジアン単位で入力値の商の逆正接を返します。",
        "examples": "\n##### 例\n\n-2.356194 を出力\n\n```arcade\nAtan2(-1, -1)\n```\n\n",
        "completion": {
          "label": "Atan2",
          "detail": "Atan2(y, x) -> Number",
          "insertText": "Atan2(${1:y_}, ${2:x_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "引数の符号に基づいて -PI ～ 0 または 0 ～ PI の範囲のラジアン単位で入力値の商の逆正接を返します。\n\n**パラメーター**\n\n- **y**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - y 座標を表す数値\n- **x**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - x 座標を表す数値\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "average",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#average1",
          "description": "数値の配列の平均値を返します。",
          "examples": "\n##### 例\n\n5 を出力\n\n```arcade\nvar values = [0,5,10]\nAverage(values)\n```\n\n",
          "completion": {
            "label": "Average",
            "detail": "Average(numbers) -> Number",
            "insertText": "Average(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値の配列の平均値を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 演算の実行対象となる数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "average",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#average2",
          "description": "数値のリストの平均値を返します。",
          "examples": "\n##### 例\n\n5 を出力\n\n```arcade\nAverage(0,5,10)\n```\n\n",
          "completion": {
            "label": "Average",
            "detail": "Average([number1, ..., numberN]?) -> Number",
            "insertText": "Average($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値のリストの平均値を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      {
        "type": "function",
        "name": "ceil",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#ceil",
        "description": "所定の小数点以下の桁数に切り上げられた入力値を返します。",
        "examples": "\n##### 例\n\n2135.1 を出力\n\n```arcade\nCeil(2135.0905, 2)\n```\n\n",
        "completion": {
          "label": "Ceil",
          "detail": "Ceil(value, numPlaces?) -> Number",
          "insertText": "Ceil(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の小数点以下の桁数に切り上げられた入力値を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 切り上げられる数値です。\n- **numPlaces** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 数値を丸める小数点以下の桁数です。 デフォルトは 0 です。 末尾のゼロは切り捨てられます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "constrain",
        "bundle": "core",
        "sinceVersion": "1.2",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#constrain",
        "description": "指定した入力値を下限値と上限値に制限します。 たとえば、入力値が `10`、下限値が `50`、上限値が `100` の場合、`50` が返されます。",
        "examples": "\n##### 例\n\n5 を返す\n\n```arcade\nConstrain(5, 0, 10)\n```\n\n0 を返す\n\n```arcade\nConstrain(-3, 0, 10)\n```\n\n10 を返す\n\n```arcade\nConstrain(553, 0, 10)\n```\n\n",
        "completion": {
          "label": "Constrain",
          "detail": "Constrain(value, lowerBound, upperBound) -> Number",
          "insertText": "Constrain(${1:value_}, ${2:lowerBound_}, ${3:upperBound_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.2](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定した入力値を下限値と上限値に制限します。 たとえば、入力値が `10`、下限値が `50`、上限値が `100` の場合、`50` が返されます。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 指定した下限値と上限値に制限する値。\n- **lowerBound**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 入力値を制限する下限値。 指定した値が下限値未満の場合、下限値が返されます。\n- **upperBound**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 入力値を制限する上限値。 指定した値が上限値より大きい場合、上限値が返されます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "cos",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#cos",
        "description": "ラジアン単位で入力値の余弦を返します。",
        "examples": "\n##### 例\n\n0.540302 を出力\n\n```arcade\nCos(1)\n```\n\n",
        "completion": {
          "label": "Cos",
          "detail": "Cos(value) -> Number",
          "insertText": "Cos(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "ラジアン単位で入力値の余弦を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となるラジアン単位の数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "exp",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#exp",
        "description": "e の x 乗の値を返します。ここで、e は自然対数の底である `2.718281828` です。",
        "examples": "\n##### 例\n\n7.389056 を出力\n\n```arcade\nExp(2)\n```\n\n",
        "completion": {
          "label": "Exp",
          "detail": "Exp(x) -> Number",
          "insertText": "Exp(${1:x_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "e の x 乗の値を返します。ここで、e は自然対数の底である `2.718281828` です。\n\n**パラメーター**\n\n- **x**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - `e` の累乗です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "floor",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#floor",
        "description": "所定の小数点以下の桁数に切り下げられた入力値を返します。",
        "examples": "\n##### 例\n\n2316.25 を出力\n\n```arcade\nFloor(2316.2562, 2)\n```\n\n",
        "completion": {
          "label": "Floor",
          "detail": "Floor(value, numPlaces?) -> Number",
          "insertText": "Floor(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の小数点以下の桁数に切り下げられた入力値を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 切り下げられる数値です。\n- **numPlaces** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 数値を丸める小数点以下の桁数です。 デフォルトは 0 です。 末尾のゼロは切り捨てられます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "hash",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#hash",
        "description": "所定の変数のハッシュ コード値を生成します。",
        "examples": "\n##### 例\n\n`1649420691` を返します。\n\n```arcade\nHash('text value')\n```\n\n",
        "completion": {
          "label": "Hash",
          "detail": "Hash(value) -> Number",
          "insertText": "Hash(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の変数のハッシュ コード値を生成します。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) \\| [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) \\| [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; \\| [Dictionary](https://developers.arcgis.com/arcade/guide/types/#dictionary) \\| [Geometry](https://developers.arcgis.com/arcade/guide/types/#geometry) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) \\| [Time](https://developers.arcgis.com/arcade/guide/types/#time) - ハッシュ化する変数です。 DateOnly および Time 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "log",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#log",
        "description": "x の自然対数 (底を e とする) を返します。",
        "examples": "\n##### 例\n\n2.302585 を出力\n\n```arcade\nLog(10)\n```\n\n",
        "completion": {
          "label": "Log",
          "detail": "Log(x) -> Number",
          "insertText": "Log(${1:x_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "x の自然対数 (底を e とする) を返します。\n\n**パラメーター**\n\n- **x**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "max",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#max1",
          "description": "数値の配列から最大値を返します。",
          "examples": "\n##### 例\n\n89 を出力\n\n```arcade\nMax([23,56,89])\n```\n\n",
          "completion": {
            "label": "Max",
            "detail": "Max(numbers) -> Number",
            "insertText": "Max(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値の配列から最大値を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "max",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#max2",
          "description": "数値のリストから最大値を返します。",
          "examples": "\n##### 例\n\n120 を出力\n\n```arcade\nMax(23,5,120,43,9)\n```\n\n",
          "completion": {
            "label": "Max",
            "detail": "Max([number1, ..., numberN]?) -> Number",
            "insertText": "Max($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値のリストから最大値を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "mean",
          "bundle": "core",
          "sinceVersion": "1.1",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#mean1",
          "description": "数値の配列の平均値を返します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nvar values = [1,2,3,4,5,6,7,8,9];\nMean(values);\n// returns 5\n```\n\n",
          "completion": {
            "label": "Mean",
            "detail": "Mean(numbers) -> Number",
            "insertText": "Mean(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n数値の配列の平均値を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 平均の計算対象の数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "mean",
          "bundle": "core",
          "sinceVersion": "1.1",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#mean2",
          "description": "数値のリストの平均値を返します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nMean(1,2,3,4,5,6,7,8,9);\n// returns 5\n```\n\n",
          "completion": {
            "label": "Mean",
            "detail": "Mean([number1, ..., numberN]?) -> Number",
            "insertText": "Mean($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n数値のリストの平均値を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 平均の計算対象の数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "min",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#min1",
          "description": "所定の数値の配列内の最小値を返します。",
          "examples": "\n##### 例\n\n23 を出力\n\n```arcade\nMin([23,56,89])\n```\n\n",
          "completion": {
            "label": "Min",
            "detail": "Min(numbers) -> Number",
            "insertText": "Min(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の数値の配列内の最小値を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "min",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#min2",
          "description": "所定の数値のリスト内の最小値を返します。",
          "examples": "\n##### 例\n\n5 を出力\n\n```arcade\nMin(23,5,120,43,9)\n```\n\n",
          "completion": {
            "label": "Min",
            "detail": "Min([number1, ..., numberN]?) -> Number",
            "insertText": "Min($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の数値のリスト内の最小値を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      {
        "type": "function",
        "name": "number",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#number",
        "description": "入力値を数値に変換します。 日付値は、1970 年 1 月 1 日 (Unix エポック) からのミリ秒の数値に変換されます。",
        "examples": "\n##### 例\n\n式が実行されるローカルに適したグループ化区切り記号を使用して数値を解析します。\n\n```arcade\nNumber('1,365', ',###') // returns 1365\n```\n\n数値からテキスト文字を削除します。\n\n```arcade\nNumber('abc10def', 'abc##def') // return 10\n```\n\n小数点以下の最小桁数を 2、小数点以下の最大桁数を 4 に指定します。\n\n```arcade\nNumber('10.456','00.00##') // returns 10.456\n```\n\n小数点以下の最小桁数を 2、小数点以下の最大桁数を 4 に指定します。 この関数の左辺と右辺は一致していなければならず、そうでない場合は、NaN が返されます。\n\n```arcade\nNumber('10.4','00.00##') // returns NaN\n```\n\n入力値の繰り返される群のサイズと最終的な群のサイズを示します。\n\n```arcade\nNumber('12,12,456', ',##,###') // returns 1212456\n```\n\n負のサブパターンが存在する場合、負の接頭辞と接尾辞を指定する場合だけ機能します。\n\n```arcade\nNumber('-12,23,345', ',##,###;-,##,###') // returns -1223345\n```\n\n100 で除算されます。 最大で小数第 3 位まで入力できます。\n\n```arcade\nNumber('99.99%', '#.##%') // 0.9999\n```\n\n1970 年 1 月 1 日からのミリ秒の数値を返します。\n\n```arcade\nNumber(Date(1996,11,10)) // returns 850204800000\n```\n\n",
        "completion": {
          "label": "Number",
          "detail": "Number(value, pattern?) -> Number",
          "insertText": "Number(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "入力値を数値に変換します。 日付値は、1970 年 1 月 1 日 (Unix エポック) からのミリ秒の数値に変換されます。\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 数値に変換される値です。\n- **pattern** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - テキスト値から数値にローカライズされたコンテキストで書式設定された数字を解析する際に使用される書式設定パターン テキストです。 パターンの定義に使用される特殊文字を次に示します。\n\n  - 0: 必須の桁数  \n  - #: オプションの桁数  \n  - %: 100 で除算  \n\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "pow",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#pow",
        "description": "x を y 乗した値を返します。",
        "examples": "\n##### 例\n\n9 を出力\n\n```arcade\nPow(3, 2)\n```\n\n",
        "completion": {
          "label": "Pow",
          "detail": "Pow(x, y) -> Number",
          "insertText": "Pow(${1:x_}, ${2:y_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "x を y 乗した値を返します。\n\n**パラメーター**\n\n- **x**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ベース値です。\n- **y**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 指数です。 これは、`x` の累乗を示します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "random",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#random",
        "description": "0 ～ 1 の範囲の乱数を返します。",
        "examples": "\n##### 例\n\n\n\n```arcade\nRandom()\n```\n\n",
        "completion": {
          "label": "Random",
          "detail": "Random() -> Number",
          "insertText": "Random($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "0 ～ 1 の範囲の乱数を返します。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "round",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#round",
        "description": "所定の小数点の桁数に丸められた入力値を返します。  \n_注意: ラベルまたはポップアップに表示する値を書式設定する場合は、`Text()` を使用します。_",
        "examples": "\n##### 例\n\n2316.26 を出力\n\n```arcade\nRound(2316.2562, 2)\n```\n\n",
        "completion": {
          "label": "Round",
          "detail": "Round(value, numPlaces?) -> Number",
          "insertText": "Round(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の小数点の桁数に丸められた入力値を返します。  \n_注意: ラベルまたはポップアップに表示する値を書式設定する場合は、`Text()` を使用します。_\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 丸められる数値です。\n- **numPlaces** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 数値を丸める小数点以下の桁数です。 デフォルトは `0` です。 末尾のゼロは切り捨てられます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "sin",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#sin",
        "description": "入力値の正弦を返します。",
        "examples": "\n##### 例\n\n0.841741 を出力\n\n```arcade\nSin(1)\n```\n\n",
        "completion": {
          "label": "Sin",
          "detail": "Sin(value) -> Number",
          "insertText": "Sin(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "入力値の正弦を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となるラジアン単位の数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "sqrt",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#sqrt",
        "description": "数値の平方根を返します。",
        "examples": "\n##### 例\n\n3 を出力\n\n```arcade\nSqrt(9)\n```\n\n",
        "completion": {
          "label": "Sqrt",
          "detail": "Sqrt(value) -> Number",
          "insertText": "Sqrt(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "数値の平方根を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 平方根の計算対象となる数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "stdev",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#stdev1",
          "description": "数値の配列の標準偏差 (母標準偏差) を返します。",
          "examples": "\n##### 例\n\n27.5 を出力\n\n```arcade\nStdev([23,56,89,12,45,78])\n```\n\n",
          "completion": {
            "label": "Stdev",
            "detail": "Stdev(numbers) -> Number",
            "insertText": "Stdev(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値の配列の標準偏差 (母標準偏差) を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 演算の実行対象となる数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "stdev",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#stdev2",
          "description": "数値のリストの標準偏差 (母標準偏差) を返します。",
          "examples": "\n##### 例\n\n27.5 を出力\n\n```arcade\nStdev(23,56,89,12,45,78)\n```\n\n",
          "completion": {
            "label": "Stdev",
            "detail": "Stdev([number1, ..., numberN]?) -> Number",
            "insertText": "Stdev($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値のリストの標準偏差 (母標準偏差) を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "sum",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#sum1",
          "description": "数値の配列の合計値を返します。",
          "examples": "\n##### 例\n\n303 を出力\n\n```arcade\nSum([23,56,89,12,45,78])\n```\n\n",
          "completion": {
            "label": "Sum",
            "detail": "Sum(numbers) -> Number",
            "insertText": "Sum(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値の配列の合計値を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 演算の実行対象となる数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "sum",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#sum2",
          "description": "数値のリストの合計値を返します。",
          "examples": "\n##### 例\n\n303 を出力\n\n```arcade\nSum(23,56,89,12,45,78)\n```\n\n",
          "completion": {
            "label": "Sum",
            "detail": "Sum([number1, ..., numberN]?) -> Number",
            "insertText": "Sum($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値のリストの合計値を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値のリストです。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      {
        "type": "function",
        "name": "tan",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#tan",
        "description": "ラジアン単位で角度の正接を返します。",
        "examples": "\n##### 例\n\n0.57389 を出力\n\n```arcade\nTan(0.521)\n```\n\n",
        "completion": {
          "label": "Tan",
          "detail": "Tan(value) -> Number",
          "insertText": "Tan(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "ラジアン単位で角度の正接を返します。\n\n**パラメーター**\n\n- **value**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 正接の計算対象となる数値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "variance",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#variance1",
          "description": "数値の配列の分散 (母分散) を返します。",
          "examples": "\n##### 例\n\n756.25 を出力\n\n```arcade\nVariance([12,23,45,56,78,89])\n```\n\n",
          "completion": {
            "label": "Variance",
            "detail": "Variance(numbers) -> Number",
            "insertText": "Variance(${1:numbers_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値の配列の分散 (母分散) を返します。\n\n**パラメーター**\n\n- **numbers**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Number](https://developers.arcgis.com/arcade/guide/types/#number)&gt; - 演算の実行対象となる数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "variance",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/math_functions/#variance2",
          "description": "数値のリストの分散 (母分散) を返します。",
          "examples": "\n##### 例\n\n756.25 を出力\n\n```arcade\nVariance(12,23,45,56,78,89)\n```\n\n",
          "completion": {
            "label": "Variance",
            "detail": "Variance([number1, ..., numberN]?) -> Number",
            "insertText": "Variance($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "数値のリストの分散 (母分散) を返します。\n\n**パラメーター**\n\n- **[number1, ..., numberN]** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 演算の実行対象となる数値の配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ]
    ]
  },
  {
    "id": "date_functions",
    "title": "日付関数",
    "items": [
      {
        "type": "function",
        "name": "changetimezone",
        "bundle": "core",
        "sinceVersion": "1.24",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#changetimezone",
        "description": "所定の Date 値を表示するために使用するタイム ゾーンを変更します。 入力 `dateValue` に `unknown` タイム ゾーンがある場合、出力される Date 値は、入力 `dateValue` と同じ日付と時刻で表示されますが、`newTimeZone` が割り当てられます。",
        "examples": "\n##### 例\n\n所定の Date のタイム ゾーンを `America/New_York` から `America/Los_Angeles` に変更する\n\n```arcade\nvar inputDate = Date(2011,10,11,8,0,0,0, \"America/New_York\")\nChangeTimeZone(inputDate, \"America/Los_Angeles\");\n// returns a Date representing Nov 11, 2011, 5:00:00 AM PST\n```\n\n`unknown` タイム ゾーンの日付を `+07:00` のタイム オフセットに割り当てる\n\n```arcade\nvar inputDate = Date(2011,10,11,8,0,0,0, \"unknown\")\nChangeTimeZone(inputDate, \"+07:00\");\n// returns a Date representing Nov 11, 2011, 8:00:00 AM +07:00\n```\n\n",
        "completion": {
          "label": "ChangeTimeZone",
          "detail": "ChangeTimeZone(dateValue, newTimeZone) -> Date",
          "insertText": "ChangeTimeZone(${1:dateValue_}, ${2:newTimeZone_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の Date 値を表示するために使用するタイム ゾーンを変更します。 入力 `dateValue` に `unknown` タイム ゾーンがある場合、出力される Date 値は、入力 `dateValue` と同じ日付と時刻で表示されますが、`newTimeZone` が割り当てられます。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - 日付および時間の情報が格納されている Date 値。\n- **newTimeZone**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 所定の Date 値を表示するために使用される、新しいタイム ゾーン。 タイム ゾーンは、以下のいずれかでなければなりません。\n\n  - IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n  - UTC に加算する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n  - `system` - タイム ゾーンはデバイスまたはシステムのローカル タイム ゾーンに設定される\n\n  - `default` - プロファイルの実行コンテキストのタイム ゾーン\n\n  - `UTC` - 協定世界時\n\n  - `unknown` - 所定の値のタイム ゾーン情報を削除し、式で定義された日付と時刻を表示する\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "date",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#date1",
          "description": "日付オブジェクトを一連のパラメーターから作成します。 デフォルトでは、日付は、プロファイルの実行コンテキストのタイム ゾーンで作成されます。",
          "examples": "\n##### 例\n\nArcade を実行しているプロファイルの実行コンテキストのタイム ゾーンで指定された時刻を表す Date を作成します。\n\n```arcade\n// Date that represents Jun 02, 1987, 12:00:00 AM PST\nDate(1987,05,02)\n```\n\n特定のタイム ゾーンで定義された時刻を使用して Date を作成します。\n\n```arcade\nDate(1990, 10, 2, 2, 23, 0, 0, \"America/New_York\");\n // Date represents Nov 2, 1990, 2:23:00 AM EST\n```\n\n",
          "completion": {
            "label": "Date",
            "detail": "Date(year, month, day, hour?, minute?, second?, millisecond?, timeZone?) -> Date",
            "insertText": "Date(${1:year_}, ${2:month_}, ${3:day_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "日付オブジェクトを一連のパラメーターから作成します。 デフォルトでは、日付は、プロファイルの実行コンテキストのタイム ゾーンで作成されます。\n\n**パラメーター**\n\n- **year**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 年を表す数値です。\n- **month**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - month (0-11) では、`0` は 1 月、`11` は 12 月を示します。\n- **day**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 1 月の日付 (1-31) です。\n- **hour** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 1 日の時刻 (0-23) です。\n- **minute** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 分 (0-59) です。\n- **second** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 秒 (0-59) です。\n- **millisecond** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ミリ秒 (0-999) です。\n- **timeZone** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - _Since 1.24_ Date のタイム ゾーン。 指定しない場合、Date は、プロファイルの実行コンテキストのデフォルト タイム ゾーンで作成されます。 設定可能な値:\n\n  - IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n  - UTC に加算する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n  - `system` - タイム ゾーンはデバイスまたはシステムのローカル タイム ゾーンに設定される\n\n  - `default` - プロファイルの実行コンテキストのタイム ゾーン\n\n  - `UTC` - 協定世界時\n\n  - `unknown` - 所定の値のタイム ゾーン情報を削除し、式で定義された日付と時刻を表示する\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 3,
            "max": 8
          }
        },
        {
          "type": "function",
          "name": "date",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#date2",
          "description": "所定の UNIX のエポック数を使用して日付を作成します。 デフォルトでは、Date は、プロファイルの実行コンテキストのタイム ゾーンで表示されます。 エポックが入力されない場合は、プロファイルのデフォルト タイム ゾーンの現在の日付と時刻で日付を作成します。",
          "examples": "\n##### 例\n\n1970 年 1 月 1 日からの経過ミリ秒数\n\n```arcade\nDate(1476987783555) // 'Thu Oct 20 2016 11:23:03 GMT-0700 (PDT)'\n```\n\nArcade を実行しているプロファイルの実行コンテキストのタイム ゾーンで現在の時刻を表す Date を作成します。\n\n```arcade\n// Date represents Jan 27, 2023, 12:41:20 PM PST\nDate()\n```\n\n",
          "completion": {
            "label": "Date",
            "detail": "Date(epoch?) -> Date",
            "insertText": "Date($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の UNIX のエポック数を使用して日付を作成します。 デフォルトでは、Date は、プロファイルの実行コンテキストのタイム ゾーンで表示されます。 エポックが入力されない場合は、プロファイルのデフォルト タイム ゾーンの現在の日付と時刻で日付を作成します。\n\n**パラメーター**\n\n- **epoch** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - UTC の 1970 年 1 月 1 日からの経過ミリ秒数です。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "date",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#date3",
          "description": "ISO 8601 テキスト値から Date 値を作成します。 UTC オフセットが入力された場合、日付はプロファイルのタイム ゾーンで表示されます。 テキスト値が入力されない場合は、プロファイルのタイム ゾーンの現在の日付と時刻で日付を作成します。",
          "examples": "\n##### 例\n\n既知の時間オフセットを使用して、ISO 8601 テキスト値から Date を作成します。\n\n```arcade\nDate('2016-10-20T17:41:37+00:00') // 'Thu Oct 20 2016 10:41:37 GMT-0700 (PDT)'\n```\n\n不明な時間オフセットを使用して、ISO 8601 テキスト値から Date を作成します。\n\n```arcade\nDate('2016-10-20T17:41:37') // 'Thu Oct 20 2016 5:41:37 PM PDT'\n```\n\n",
          "completion": {
            "label": "Date",
            "detail": "Date(timestamp?) -> Date",
            "insertText": "Date($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ISO 8601 テキスト値から Date 値を作成します。 UTC オフセットが入力された場合、日付はプロファイルのタイム ゾーンで表示されます。 テキスト値が入力されない場合は、プロファイルのタイム ゾーンの現在の日付と時刻で日付を作成します。\n\n**パラメーター**\n\n- **timestamp** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Date に変換される ISO 8601 テキスト値。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "date",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#date4",
          "description": "オプションの Time およびタイム ゾーン値を使用して、DateOnly 値から Date を作成します。",
          "examples": "\n##### 例\n\nDateOnly および時間タイプから Date を作成する\n\n```arcade\nDate(DateOnly(2022,10,11), Time(\"11:20 am\"))\n// returns a Date representing Nov 11, 2022, 11:20:00 AM in an unknown time zone\n```\n\n",
          "completion": {
            "label": "Date",
            "detail": "Date(dateOnlyValue, timeValue?, timeZone?) -> Date",
            "insertText": "Date(${1:dateOnlyValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nオプションの Time およびタイム ゾーン値を使用して、DateOnly 値から Date を作成します。\n\n**パラメーター**\n\n- **dateOnlyValue**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 日付値の作成元となる DateOnly 値。\n- **timeValue** (_Optional_): [Time](https://developers.arcgis.com/arcade/guide/types/#time) - Date の Time 値。 指定されない場合、Date は時間を `00:00:00` として作成されます。\n- **timeZone** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Date のタイム ゾーン。 指定されない場合、Date は `unknown` タイム ゾーンで作成されます。 設定可能な値:\n\n  - IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n  - UTC に加算する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n  - `system` - タイム ゾーンはデバイスまたはシステムのローカル タイム ゾーンに設定される\n\n  - `default` - プロファイルの実行コンテキストのタイム ゾーン\n\n  - `UTC` - 協定世界時\n\n  - `unknown` - 所定の値のタイム ゾーン情報を削除し、式で定義された日付と時刻を表示する\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 3
          }
        },
        {
          "type": "function",
          "name": "date",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#date5",
          "description": "所定の Date のコピーを作成します。",
          "examples": "\n##### 例\n\n現在の Date 値のコピーを作成する\n\n```arcade\nvar copiedDate = Date(Now())\n```\n\n",
          "completion": {
            "label": "Date",
            "detail": "Date(dateValue) -> Date",
            "insertText": "Date(${1:dateValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の Date のコピーを作成します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - コピーする Date。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "dateadd",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateadd1",
          "description": "指定された時間を所定の単位で Date に加算して、新しい Date を返します。 Date に IANA タイム ゾーンがある場合は、サマータイムおよびその他のタイム ゾーン ドリブンのロジックが適用されます。",
          "examples": "\n##### 例\n\n所定の Date に 7 日を加算する\n\n```arcade\nvar startDate = Date(2023, 9, 1, 12, 00);\nvar oneWeekLater = DateAdd(startDate, 7, 'days');\nreturn oneWeekLater;\n// returns a Date representing Oct 8, 2023, 12:00:00 PM PDT\n```\n\n",
          "completion": {
            "label": "DateAdd",
            "detail": "DateAdd(dateValue, addValue, units?) -> Date",
            "insertText": "DateAdd(${1:dateValue_}, ${2:addValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "指定された時間を所定の単位で Date に加算して、新しい Date を返します。 Date に IANA タイム ゾーンがある場合は、サマータイムおよびその他のタイム ゾーン ドリブンのロジックが適用されます。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - 時刻を追加する入力 Date。\n- **addValue**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 所定の単位で Date に加算する値。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - Date に加算する数字の単位。 デフォルトは 'milliseconds` です。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours`、`days`、`months`、`years` です。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 3
          }
        },
        {
          "type": "function",
          "name": "dateadd",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateadd2",
          "description": "指定された単位で所定の時間を DateOnly 値に加算し、新しい DateOnly 値を返します。",
          "examples": "\n##### 例\n\n指定されたフィールドの Date に 7 日を加算する\n\n```arcade\nvar startDate = DateOnly(2023,5,4); // equivalent to 2023-06-04\nvar oneWeekLater = DateAdd(startDate, 7, 'days');\nreturn oneWeekLater;\n// returns 2023-06-11\n```\n\n指定されたフィールドの Date に 12 時間を加算する\n\n```arcade\nvar startDate = DateOnly(2023,5,4); // equivalent to 2023-06-04\nvar hoursLater = DateAdd(startDate, 12, 'hours');\nreturn hoursLater;\n// returns the original start date, 2023-06-04\n// since 12 hours < 1 day, the DateOnly input is not changed\n```\n\n",
          "completion": {
            "label": "DateAdd",
            "detail": "DateAdd(dateOnlyValue, addValue, units?) -> DateOnly",
            "insertText": "DateAdd(${1:dateOnlyValue_}, ${2:addValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された単位で所定の時間を DateOnly 値に加算し、新しい DateOnly 値を返します。\n\n**パラメーター**\n\n- **dateOnlyValue**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 時間を加算する入力 DateOnly 値。\n- **addValue**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 所定の単位で日付に追加する値です。 DateOnly 入力の場合、この値は 24 時間間隔に基づいて最も近い日に切り下げられます。 加算される値が 24 時間未満の場合、DateOnly 入力に値は加算されません。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 日付に追加する数字の単位。 デフォルトは 'milliseconds` です。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours`、`days`、`months`、`years` です。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 3
          }
        },
        {
          "type": "function",
          "name": "dateadd",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateadd3",
          "description": "指定された単位で所定の時間を Time 値に加算し、新しい Time 値を返します。",
          "examples": "\n##### 例\n\n所定の Time に 7 時間を加算する\n\n```arcade\nvar startTime = Time(11,30); // equivalent to 11:30:00\nvar hoursLater = DateAdd(startTime, 7, 'hours');\nreturn hoursLater;\n// returns 18:30:00\n```\n\n所定の Time に 90 秒を加算する\n\n```arcade\nvar startTime = Time(11,30); // equivalent to 11:30:00\nvar secondsLater = DateAdd(startTime, 90, \"seconds\");\nreturn secondsLater;\n// returns 11:31:30\n```\n\n所定の Time に 25 時間を加算する\n\n```arcade\nvar startTime = Time(11,30); // equivalent to 11:30:00\nvar hoursLater = DateAdd(startTime, 25, 'hours');\nreturn hoursLater;\n// returns 12:30:00\n```\n\n",
          "completion": {
            "label": "DateAdd",
            "detail": "DateAdd(timeValue, addValue, units?) -> Time",
            "insertText": "DateAdd(${1:timeValue_}, ${2:addValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された単位で所定の時間を Time 値に加算し、新しい Time 値を返します。\n\n**パラメーター**\n\n- **timeValue**: [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 時間を加算する入力 Time 値。\n- **addValue**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 所定の単位で時間に加算する値。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 日付に追加する数字の単位。 デフォルトは 'milliseconds` です。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours` です。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 3
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "datediff",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#datediff1",
          "description": "ある Date から別の Date を減算して、その差を指定の単位で返します。",
          "examples": "\n##### 例\n\nある Date から別の Date を減算して期間を返す\n\n```arcade\nvar startDate = Date($feature.startDateField);\nvar endDate = Date($feature.endDateField);\nvar age = DateDiff(endDate, startDate, 'years');\nreturn age;\n```\n\nある Date から別の Date を減算して、その差を返します。 タイム ゾーンがロサンゼルス\n\n```arcade\nvar startDate = Date(2022,2,23,2,23,22,0, \"America/New_York\"); // Mar 23, 2022, 2:23:22 AM EDT\nvar endDate = Date(2022,2,23,5,23,22,0, \"unknown\"); // Mar 23, 2022, 5:23:22 AM\n\nDateDiff(endDate, startDate, 'hours')\n// returns 3, since the Date with an unknown time zone is assumed to be New York time before the difference is calculated\n\nDateDiff(endDate, startDate, 'hours', \"America/Los_Angeles\");\n// returns 6, since the Date with an unknown time zone is now considered to be Los Angeles time before the difference is calculated\n```\n\n",
          "completion": {
            "label": "DateDiff",
            "detail": "DateDiff(date1, date2, units?, timeZone?) -> Number",
            "insertText": "DateDiff(${1:date1_}, ${2:date2_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "ある Date から別の Date を減算して、その差を指定の単位で返します。\n\n**パラメーター**\n\n- **date1**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - 2 つ目の日付を減算する Date 値。\n- **date2**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - 1 つ目の所定の Date から減算する Date 値。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 2 つの所定の Date の差として返す値の単位です。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours`、`days`、`months`、`years` です。 デフォルト値は `milliseconds` です。\n- **timeZone** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - _Since version 1.24_ タイム ゾーンが不明な入力 Date に割り当てるタイム ゾーン。 指定しない場合は、以下が発生します。 (1) 一方の入力にタイム ゾーンが定義されており、もう一方の入力が不明な場合、タイム ゾーンが不明な値は、もう一方の入力と一致するタイム ゾーンを想定します。 (2) 両方の入力が不明なタイム ゾーンの場合、DateDiff は、両方の日付が同じタイム ゾーンで定義されているものとして計算されます。 設定可能な値:\n\n  - IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n  - UTC に追加する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n  - `system` - タイム ゾーンはデバイスまたはシステムのローカル タイム ゾーンに設定される\n\n  - `default` - プロファイルの実行コンテキストのタイム ゾーン\n\n  - `UTC` - 協定世界時\n\n  - `unknown` - 所定の値のタイム ゾーン情報を削除し、式で定義された日付と時刻を表示する\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 4
          }
        },
        {
          "type": "function",
          "name": "datediff",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#datediff2",
          "description": "ある DateOnly 値から別の DateOnly 値を減算して、その差を指定の単位で返します。",
          "examples": "\n##### 例\n\nある DateOnly 値から別の DateOnly 値を減算して、その差を年で返します。\n\n```arcade\nvar startDate = DateOnly(1996,11,10);\nvar endDate = DateOnly(); // today's date\nvar age = DateDiff(endDate, startDate, 'years');\nFloor(age); // round down\n// returns 26\n```\n\n",
          "completion": {
            "label": "DateDiff",
            "detail": "DateDiff(dateOnly1, dateOnly2, units?) -> Number",
            "insertText": "DateDiff(${1:dateOnly1_}, ${2:dateOnly2_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nある DateOnly 値から別の DateOnly 値を減算して、その差を指定の単位で返します。\n\n**パラメーター**\n\n- **dateOnly1**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 2 つ目の DateOnly 値を減算する DateOnly 値。\n- **dateOnly2**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 1 つ目の DateOnly 値から減算する DateOnly 値。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 2 つの所定の DateOnly の差として返す値の単位。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours`、`days`、`months`、`years` です。 デフォルト値は `milliseconds` です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 3
          }
        },
        {
          "type": "function",
          "name": "datediff",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#datediff3",
          "description": "ある Time 値から別の Time 値を減算して、その差を指定の単位で返します。",
          "examples": "\n##### 例\n\nある Time 値から別の Time 値を減算して、その差を時間で返します。\n\n```arcade\nDateDiff(Time(23,0), Time(9,0), 'hours')\n// returns 14\n```\n\n",
          "completion": {
            "label": "DateDiff",
            "detail": "DateDiff(time1, time2, units?) -> Number",
            "insertText": "DateDiff(${1:time1_}, ${2:time2_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nある Time 値から別の Time 値を減算して、その差を指定の単位で返します。\n\n**パラメーター**\n\n- **time1**: [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 2 つ目の Time 値を減算する Time 値。\n- **time2**: [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 1 つ目の所定の Time 値から減算する Time 値。\n- **units** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 2 つの所定の Time 値の差として返す値の単位。 サポートされている単位タイプは、`milliseconds`、`seconds`、`minutes`、`hours` です。 デフォルト値は `milliseconds` です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 3
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly1",
          "description": "プロファイルの実行コンテキストのタイム ゾーンでの現在の日付に基づいて、DateOnly 値を作成します。",
          "examples": "\n##### 例\n\n現在の DateOnly (時刻なし) を返す\n\n```arcade\nDateOnly()\n// returns the current date, i.e. 2023-09-12\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly() -> DateOnly",
            "insertText": "DateOnly($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nプロファイルの実行コンテキストのタイム ゾーンでの現在の日付に基づいて、DateOnly 値を作成します。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 0
          }
        },
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly2",
          "description": "年、月、日を表す入力から、DateOnly 値を作成します。",
          "examples": "\n##### 例\n\n年、月、日を表す入力から、DateOnly 値を作成する\n\n```arcade\nDateOnly(1996, 11, 10)\n// returns 1996-12-10\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly(year, month, day) -> DateOnly",
            "insertText": "DateOnly(${1:year_}, ${2:month_}, ${3:day_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n年、月、日を表す入力から、DateOnly 値を作成します。\n\n**パラメーター**\n\n- **year**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 年を表す数値です。\n- **month**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - month (0-11) では、`0` は 1 月、`11` は 12 月を示します。 この値が通常範囲 (0 ～ 11) から外れている場合、関数は `null` を返します。\n- **day**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 1 月の日付 (1-31) です。 この値が通常範囲 (1 ～ 31) から外れている場合、関数は `null` を返します。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 3,
            "max": 3
          }
        },
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly3",
          "description": "所定の UNIX のエポック数から DateOnly 値を作成します。",
          "examples": "\n##### 例\n\n1970 年 1 月 1 日からの経過ミリ秒数から DateOnly を返します。\n\n```arcade\nDateOnly(1476987783555);\n// returns 2016-10-20\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly(epoch) -> DateOnly",
            "insertText": "DateOnly(${1:epoch_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の UNIX のエポック数から DateOnly 値を作成します。\n\n**パラメーター**\n\n- **epoch**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - UTC の 1970 年 1 月 1 日からの経過ミリ秒数です。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly4",
          "description": "ISO 形式の日付または別の形式のテキスト パターンを表すテキスト入力から DateOnly 値を作成します。",
          "examples": "\n##### 例\n\n日付を表すテキスト値から DateOnly 値を作成します。\n\n```arcade\nDateOnly(\"2023-05-11T13:43:18.990+01:00\");\n// returns 2023-05-11\n```\n\n日付を表すテキスト値から、所定の形式で DateOnly 値を作成します。\n\n```arcade\nDateOnly(\"10 Jan 2022\",\"D MMM Y\")\n// returns 2022-01-10\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly(textValue, format?) -> DateOnly",
            "insertText": "DateOnly(${1:textValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nISO 形式の日付または別の形式のテキスト パターンを表すテキスト入力から DateOnly 値を作成します。\n\n**パラメーター**\n\n- **textValue**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 日付を表すテキスト値。 これは、ISO 形式の日付、または日付を表す別の形式のテキストのいずれかである必要があります。 この値が ISO 形式に準拠していない場合は、日付の形式を示す `format` パラメーターを定義する必要があります。\n- **format** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `dateValue` 入力の形式を示すテキスト値。  \n設定可能な値:  \n  - `D`: 月の日、桁埋めあり (1 ～ 31)  \n  - `DD`: 月の日、桁埋めあり (01 ～ 31)  \n  - `DDD`: 平年の日 (1 ～ 365)  \n  - `d`: 曜日 (1 ～ 7)  \n  - `ddd`: 曜日の省略名 (例: Mon)  \n  - `dddd`: 曜日の完全名 (例: Monday)  \n  - `M`: 月番号 (1 ～ 12)  \n  - `MM`: 月番号、桁埋めあり (01 ～ 12)  \n  - `MMM`: 月の省略名 (例: Jan)  \n  - `MMMM`: 月の完全名 (例: January)  \n  - `Y`: 年の完全表示  \n  - `YY`: 2 桁の年  \n\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly5",
          "description": "所定の日付から DateOnly 値を作成します。",
          "examples": "\n##### 例\n\n所定の日付から DateOnly 値を返す\n\n```arcade\nDateOnly(Date(2008,10,11,10,30));\n// returns 2008-11-11\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly(dateValue) -> DateOnly",
            "insertText": "DateOnly(${1:dateValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の日付から DateOnly 値を作成します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - DateOnly 値の作成元となる日付。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "dateonly",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#dateonly6",
          "description": "DateOnly 値のコピーを作成します。",
          "examples": "\n##### 例\n\nDateOnly 値のコピーを作成する\n\n```arcade\nvar originalDateOnly = DateOnly(1996,11,10)\nvar copiedDateOnly = DateOnly(originalDateOnly)\nreturn copiedDateOnly;\n```\n\n",
          "completion": {
            "label": "DateOnly",
            "detail": "DateOnly(dateOnlyValue) -> DateOnly",
            "insertText": "DateOnly(${1:dateOnlyValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nDateOnly 値のコピーを作成します。\n\n**パラメーター**\n\n- **dateOnlyValue**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - コピーする DateOnly 値。\n\n**戻り値**: [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "day",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#day",
        "description": "所定の日付を返します。",
        "examples": "\n##### 例\n\n現在の日付を取得\n\n```arcade\nDay(Now())\n```\n\nDateOnly 値からその月の日付を返す\n\n```arcade\nDay(DateOnly(1996, 11, 10))\n// returns 10\n```\n\n",
        "completion": {
          "label": "Day",
          "detail": "Day(dateValue) -> Number",
          "insertText": "Day(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の日付を返します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - その月の日付を取得するための日付値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "hour",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#hour1",
          "description": "所定の日付の Date または Time 値 (0 ～ 23) の時刻を、時間で返します。",
          "examples": "\n##### 例\n\n現在の時刻の時間を返す\n\n```arcade\nHour(Now())\n```\n\n時刻の時間を返す\n\n```arcade\nHour(Date(2023, 1, 1, 12, 59, 23))\n// returns 12\n```\n\n時刻の時間を返す\n\n```arcade\nHour(Time(2, 59, 23))\n// returns 2\n```\n\n",
          "completion": {
            "label": "Hour",
            "detail": "Hour(dateTimeValue) -> Number",
            "insertText": "Hour(${1:dateTimeValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の日付の Date または Time 値 (0 ～ 23) の時刻を、時間で返します。\n\n**パラメーター**\n\n- **dateTimeValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 時刻の時間を取得するための Date または Time 値。 Time 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "isomonth",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#isomonth",
        "description": "ISO 8601 標準に基づいて、指定した日付の月を返します。 値の範囲は 1 ～ 12 で、1 月が「1」、12 月が「12」となります。",
        "examples": "\n##### 例\n\nISO 8601 標準に基づいて、指定した日付の月を取得します。 12 月の場合は「12」を返します。\n\n```arcade\nISOMonth(Date(1980, 11, 31))\n```\n\nISO 8601 標準に基づいて、所定の DateOnly 値の月を取得します。\n\n```arcade\nISOMonth(DateOnly(1996, 0, 10))\n// returns 1, for January\n```\n\n",
        "completion": {
          "label": "ISOMonth",
          "detail": "ISOMonth(dateValue) -> Number",
          "insertText": "ISOMonth(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nISO 8601 標準に基づいて、指定した日付の月を返します。 値の範囲は 1 ～ 12 で、1 月が「1」、12 月が「12」となります。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 月を取得するための Date 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "isoweek",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#isoweek",
        "description": "ISO 8601 の週日付カレンダーに基づいて、指定した日付の年の週を返します。 値の範囲は 1 ～ 53 で、年の最初の週が「1」で、年の最後の週はその年に応じて「52」か「53」となります。",
        "examples": "\n##### 例\n\nISO 8601 標準に基づいて、指定した日付の週を取得します。 この日付は翌年の最初の週に含まれているため、「1」を返します。\n\n```arcade\nISOWeek(Date(1980, 11, 31))\n```\n\nISO 8601 標準に基づいて、所定の DateOnly 値の週を取得します。\n\n```arcade\nISOWeek(DateOnly(1996, 11, 10))\n// returns 50\n```\n\n",
        "completion": {
          "label": "ISOWeek",
          "detail": "ISOWeek(dateValue) -> Number",
          "insertText": "ISOWeek(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nISO 8601 の週日付カレンダーに基づいて、指定した日付の年の週を返します。 値の範囲は 1 ～ 53 で、年の最初の週が「1」で、年の最後の週はその年に応じて「52」か「53」となります。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 週の取得元の Date 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "isoweekday",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#isoweekday",
        "description": "ISO 8601 標準に基づいて、指定した日付の曜日を返します。 値の範囲は 1 ～ 7 で、月曜日が「1」、日曜日が「7」となります。",
        "examples": "\n##### 例\n\nISO 8601 標準に基づいて、指定した日付の曜日を返します。 水曜日の場合は「3」を返します。\n\n```arcade\nISOWeekday(Date(1980, 11, 31))\n```\n\nISO 8601 標準に基づいて、所定の DateOnly 値の曜日を返します。\n\n```arcade\nISOWeekday(DateOnly(1996, 11, 10))\n// returns 2, for Tuesday\n```\n\n",
        "completion": {
          "label": "ISOWeekday",
          "detail": "ISOWeekday(dateValue) -> Number",
          "insertText": "ISOWeekday(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nISO 8601 標準に基づいて、指定した日付の曜日を返します。 値の範囲は 1 ～ 7 で、月曜日が「1」、日曜日が「7」となります。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 曜日を返すための Date 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "isoyear",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#isoyear",
        "description": "ISO 8601 の週日付カレンダーに基づいて、指定した日付の年を返します。",
        "examples": "\n##### 例\n\nISO 8601 の週日付カレンダーに基づいて、指定した日付の年を取得します。 この日付は翌年の最初の週に含まれているため、「1981」を返します。\n\n```arcade\nISOYear(Date(1980, 11, 31))\n```\n\nISO 8601 の週日付カレンダーに基づいて、所定の DateOnly 値の年を取得します。\n\n```arcade\nISOYear(DateOnly(1996, 11, 10))\n// returns 1996\n```\n\n",
        "completion": {
          "label": "ISOYear",
          "detail": "ISOYear(dateValue) -> Number",
          "insertText": "ISOYear(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nISO 8601 の週日付カレンダーに基づいて、指定した日付の年を返します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 年を取得するための Date 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "millisecond",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#millisecond1",
          "description": "所定の Time または Date 値の時刻のミリ秒を返します。",
          "examples": "\n##### 例\n\n現在の時刻のミリ秒を返す\n\n```arcade\nMillisecond(Now())\n```\n\n時刻のミリ秒を返す\n\n```arcade\nMillisecond(Date(2023, 1, 1, 12, 59, 23, 999))\n// returns 999\n```\n\n時刻のミリ秒を返す\n\n```arcade\nMillisecond(Time(2, 59, 23, 450))\n// returns 450\n```\n\n",
          "completion": {
            "label": "Millisecond",
            "detail": "Millisecond(dateTimeValue) -> Number",
            "insertText": "Millisecond(${1:dateTimeValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の Time または Date 値の時刻のミリ秒を返します。\n\n**パラメーター**\n\n- **dateTimeValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 時刻のミリ秒を取得するための Date または Time 値。 Time 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "minute",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#minute1",
          "description": "所定の Time または Date 値の時刻の分を返します。",
          "examples": "\n##### 例\n\n現在の時刻の分を返します。\n\n```arcade\nMinute(Now())\n```\n\n時刻の分を返す\n\n```arcade\nMinute(Date(2013, 1, 1, 2, 15, 23))\n// returns 15\n```\n\n時刻の分を返す\n\n```arcade\nMinute(Time(2, 59, 23))\n// returns 59\n```\n\n",
          "completion": {
            "label": "Minute",
            "detail": "Minute(dateTimeValue) -> Number",
            "insertText": "Minute(${1:dateTimeValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の Time または Date 値の時刻の分を返します。\n\n**パラメーター**\n\n- **dateTimeValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 時刻の分を取得するための Date または Time 値。 Time 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "month",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#month",
        "description": "所定の日付の月を返します。 値の範囲は 0-11 であり、1 月は `0`、12 月は `11` です。",
        "examples": "\n##### 例\n\n指定した日付の月を取得します。 値は 0 ～ 11 の範囲で指定でき、`0` は 1 月、`11` は 12 月を表します。\n\n```arcade\nMonth(Date(1980, 11, 31))\n// returns 11\n```\n\n所定の DateOnly 値の月を取得します。\n\n```arcade\nMonth(DateOnly(1996, 0, 31))\n// returns 0, for the month of January\n```\n\n",
        "completion": {
          "label": "Month",
          "detail": "Month(dateValue) -> Number",
          "insertText": "Month(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の日付の月を返します。 値の範囲は 0-11 であり、1 月は `0`、12 月は `11` です。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 月を取得するための Date 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "now",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#now",
        "description": "プロファイルの実行コンテキストのタイム ゾーンでの現在の日付および時刻に基づいて、Date 値を作成します。",
        "examples": "\n##### 例\n\nプロファイルのデフォルト タイム ゾーンでの現在の日付および時刻を返します。\n\n```arcade\n// Date represents Jan 27, 2023, 12:41:20 PM PST\nNow()\n```\n\n",
        "completion": {
          "label": "Now",
          "detail": "Now() -> Date",
          "insertText": "Now($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "プロファイルの実行コンテキストのタイム ゾーンでの現在の日付および時刻に基づいて、Date 値を作成します。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      [
        {
          "type": "function",
          "name": "second",
          "bundle": "core",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#second1",
          "description": "所定の Date または Time 値の時刻の秒を返します。",
          "examples": "\n##### 例\n\n現在の時刻の秒を取得\n\n```arcade\nSecond(Now())\n```\n\n時刻の秒を取得します。\n\n```arcade\nSecond(Date(2023, 1, 1, 2, 59, 01))\n// returns 1\n```\n\n時刻の秒を取得する\n\n```arcade\nSecond(Time(2, 59, 23))\n// returns 23\n```\n\n",
          "completion": {
            "label": "Second",
            "detail": "Second(dateTimeValue) -> Number",
            "insertText": "Second(${1:dateTimeValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "所定の Date または Time 値の時刻の秒を返します。\n\n**パラメーター**\n\n- **dateTimeValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [Time](https://developers.arcgis.com/arcade/guide/types/#time) - 時刻の秒を取得するための Date または Time 値。 Time 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      [
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time1",
          "description": "プロファイルの実行コンテキストのタイム ゾーンでの現在の時刻を表す Time 値を作成します。",
          "examples": "\n##### 例\n\nプロファイルのデフォルト タイム ゾーンを使用して表示される現在の時刻を返します。\n\n```arcade\n// Time represents 12:41:20 PM\nTime()\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time() -> Time",
            "insertText": "Time($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nプロファイルの実行コンテキストのタイム ゾーンでの現在の時刻を表す Time 値を作成します。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": 0
          }
        },
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time2",
          "description": "時間、分、秒、ミリ秒を表す入力から Time 値を作成します。",
          "examples": "\n##### 例\n\n時間、分、秒、ミリ秒を表す入力から Time 値を作成する\n\n```arcade\nTime(13, 20);\n// returns a Time value of 13:20:00\n \nTime(2, 59, 23)\n// returns a Time value of 02:59:23\n \nTime(15, 47, 0, 474)\n// returns a Time value of 15:47:00.474\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time(hours, minutes, seconds?, milliseconds?) -> Time",
            "insertText": "Time(${1:hours_}, ${2:minutes_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n時間、分、秒、ミリ秒を表す入力から Time 値を作成します。\n\n**パラメーター**\n\n- **hours**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - Time 値 (0 ～ 23) の時間を表す数字。 この値が通常範囲 (0 ～ 23) から外れている場合、関数は `null` を返します。\n- **minutes**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - Time 値 (0 ～ 59) の分を表す数字。 この値が通常範囲 (0 ～ 59) から外れている場合、関数は `null` を返します。\n- **seconds** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - Time 値 (0 ～ 59) の秒を表す数字。 この値が通常範囲 (0 ～ 59) から外れている場合、関数は `null` を返します。\n- **milliseconds** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - Time 値 (0 ～ 999) のミリ秒を表す数字。 この値が通常範囲 (0 ～ 999) から外れている場合、関数は `null` を返します。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 2,
            "max": 4
          }
        },
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time3",
          "description": "0 時からの経過ミリ秒数を表す所定の数字から Time 値を作成します。",
          "examples": "\n##### 例\n\n0 時からの経過ミリ秒数の数字から Time を返します。\n\n```arcade\nTime(8119800);\n// returns a Time value of 02:15:19.800\n```\n\n0 時からの経過ミリ秒数の数字から Time を返す\n\n```arcade\nTime(86400001);\n// returns null - the input value exceeds the number of milliseconds in a day\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time(numValue) -> Time",
            "insertText": "Time(${1:numValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n0 時からの経過ミリ秒数を表す所定の数字から Time 値を作成します。\n\n**パラメーター**\n\n- **numValue**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 0 時からの経過ミリ秒数の数字。 この値が 86,400,000 (1 日の最大ミリ秒数) より大きい場合、または 0 より小さい場合、関数は `null` を返します。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time4",
          "description": "時刻を表すテキスト入力とテキストの形式を示すオプション入力から Time 値を作成します。",
          "examples": "\n##### 例\n\n時刻を表すテキスト値から Time 値を作成します。\n\n```arcade\nTime(\"1:20 PM\");\n// returns a Time value of 13:20:00\n```\n\n時刻と形式を表すテキスト値から Time 値を作成します。\n\n```arcade\nTime(\"12 05 04\", \"HH MM ss\")\n// returns a Time value of 12:05:04\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time(textValue, format?) -> Time",
            "insertText": "Time(${1:textValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n時刻を表すテキスト入力とテキストの形式を示すオプション入力から Time 値を作成します。\n\n**パラメーター**\n\n- **textValue**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) - 時刻を表すテキスト値。\n- **format** (_Optional_): [Text](https://developers.arcgis.com/arcade/guide/types/#text) - `timeValue` 入力の形式を示すテキスト値。  \n設定可能な値:  \n  - `h`: 12 時間表示、桁埋めなし (0 ～ 12)  \n  - `hh`: 12 時間表示、桁埋めあり (00 ～ 12)  \n  - `H`: 24 時間表示、桁埋めなし (0 ～ 24)  \n  - `HH`: 24 時間表示、桁埋めあり (00 ～ 24)  \n  - `m`: 分、桁埋めなし (0 ～ 59)  \n  - `mm`: 分、桁埋めあり (00 ～ 59)  \n  - `s`: 秒、桁埋めなし (0 ～ 59)  \n  - `ss`: 秒、桁埋めあり (00 ～ 59)  \n  - `A`: AM/PM  \n\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time5",
          "description": "所定の日付から Time 値を作成します。",
          "examples": "\n##### 例\n\n所定の日付から Time を返す\n\n```arcade\nTime(Date(2008,10,11,10,30));\n// returns a Time value of 10:30:00 AM\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time(dateValue) -> Time",
            "insertText": "Time(${1:dateValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の日付から Time 値を作成します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - 時刻を取得するための日付。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "time",
          "bundle": "core",
          "sinceVersion": "1.24",
          "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#time6",
          "description": "Time 値のコピーを作成します。",
          "examples": "\n##### 例\n\nTime 値のコピーを作成する\n\n```arcade\nvar originalTime = Time(23,32,00)\nvar copiedTime = Time(originalTime)\nreturn copiedTime;\n```\n\n",
          "completion": {
            "label": "Time",
            "detail": "Time(timeValue) -> Time",
            "insertText": "Time(${1:timeValue_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nTime 値のコピーを作成します。\n\n**パラメーター**\n\n- **timeValue**: [Time](https://developers.arcgis.com/arcade/guide/types/#time) - コピーする Time 値。\n\n**戻り値**: [Time](https://developers.arcgis.com/arcade/guide/types/#time)"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        }
      ],
      {
        "type": "function",
        "name": "timestamp",
        "bundle": "core",
        "sinceVersion": "1.1",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#timestamp",
        "description": "現在の日付と時刻を表す Date 値を UTC で作成します。",
        "examples": "\n##### 例\n\n日付を UTC 時間で作成する\n\n```arcade\n// Date that represents Jan 27, 2023, 8:41:20 PM UTC\nTimestamp()\n```\n\n",
        "completion": {
          "label": "Timestamp",
          "detail": "Timestamp() -> Date",
          "insertText": "Timestamp($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n現在の日付と時刻を表す Date 値を UTC で作成します。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "timezone",
        "bundle": "core",
        "sinceVersion": "1.24",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#timezone",
        "description": "所定の日付のタイム ゾーンを返します。 タイム ゾーンは、以下のいずれかになります。\n\n- IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n- UTC に加算する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n- `system` - タイム ゾーンはクライアントまたはシステムのローカル タイム ゾーンに基づく\n\n- `UTC` - 協定世界時\n\n- `Unknown` - タイム ゾーン情報は定義されていません。",
        "examples": "\n##### 例\n\nDate のタイム ゾーンを返します。\n\n```arcade\nvar natlPizzaDay = Date(2024, 1, 9, 0, 0, 0, 0, \"America/Los_Angeles\");\nTimeZone(natlPizzaDay);\n// Returns 'America/Los_Angeles'\n```\n\n",
        "completion": {
          "label": "TimeZone",
          "detail": "TimeZone(dateValue) -> Text",
          "insertText": "TimeZone(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の日付のタイム ゾーンを返します。 タイム ゾーンは、以下のいずれかになります。\n\n- IANA タイム ゾーン データベースのエントリを表すテキスト (例: `America/New_York`)\n\n- UTC に加算する必要がある時間と分を表すテキスト (例: `+07:00` や `-03:00`)\n\n- `system` - タイム ゾーンはクライアントまたはシステムのローカル タイム ゾーンに基づく\n\n- `UTC` - 協定世界時\n\n- `Unknown` - タイム ゾーン情報は定義されていません。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - タイム ゾーンを取得するための Date 値。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "timezoneoffset",
        "bundle": "core",
        "sinceVersion": "1.24",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#timezoneoffset",
        "description": "所定の Date の UTC からのタイム ゾーン オフセットをミリ秒で返します。",
        "examples": "\n##### 例\n\nUTC からのタイム ゾーン オフセットをミリ秒で返す\n\n```arcade\nvar inputDate = Date(2011, 10, 11, 8, 0, 0, 0, \"America/New_York\")\nTimeZoneOffset(inputDate);\n// returns -18000000\n```\n\n",
        "completion": {
          "label": "TimeZoneOffset",
          "detail": "TimeZoneOffset(dateValue) -> Number",
          "insertText": "TimeZoneOffset(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の Date の UTC からのタイム ゾーン オフセットをミリ秒で返します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - タイム ゾーン オフセットを取得するための Date 値。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "today",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#today",
        "description": "プロファイルの実行コンテキストのタイム ゾーンでの 0 時現在の Date を返します。",
        "examples": "\n##### 例\n\n0 時現在の Date を返す (例: Mon Oct 24 2016 00:00:00 GMT-0700 (PDT))\n\n```arcade\nToday()\n```\n\n",
        "completion": {
          "label": "Today",
          "detail": "Today() -> Date",
          "insertText": "Today($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "プロファイルの実行コンテキストのタイム ゾーンでの 0 時現在の Date を返します。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": 0
        }
      },
      {
        "type": "function",
        "name": "tolocal",
        "bundle": "core",
        "sinceVersion": "1.1",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#tolocal",
        "description": "入力された日付のエポックと一致する新しい Date 値を作成し、タイム ゾーンをクライアントのローカル タイム ゾーンまたはシステム タイム ゾーンに設定します。",
        "examples": "\n##### 例\n\n入力日付と同じエポックの現地時間で日付を作成する\n\n```arcade\n// Date represents Jan 27, 2023, 8:41:20 PM UTC\nTimestamp()\n// Date represents Jan 27, 2023, 12:41:20 PM PST\nToLocal(Timestamp())\n```\n\n",
        "completion": {
          "label": "ToLocal",
          "detail": "ToLocal(inputDate) -> Date",
          "insertText": "ToLocal(${1:inputDate_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力された日付のエポックと一致する新しい Date 値を作成し、タイム ゾーンをクライアントのローカル タイム ゾーンまたはシステム タイム ゾーンに設定します。\n\n**パラメーター**\n\n- **inputDate**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - クライアントの現地時間で表す Date 値。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "toutc",
        "bundle": "core",
        "sinceVersion": "1.1",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#toutc",
        "description": "入力された日付のエポックと一致する新しい Date 値を作成し、タイム ゾーンを UTC (協定世界時) に設定します。",
        "examples": "\n##### 例\n\n入力日付と同じエポックの UTC 時間で Date を作成します。\n\n```arcade\n// Date represents Jan 27, 2023, 12:41:20 PM PST\nNow()\n// Date represents Jan 27, 2023, 8:41:20 PM UTC\nToUTC(Now())\n```\n\n",
        "completion": {
          "label": "ToUTC",
          "detail": "ToUTC(inputDate) -> Date",
          "insertText": "ToUTC(${1:inputDate_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力された日付のエポックと一致する新しい Date 値を作成し、タイム ゾーンを UTC (協定世界時) に設定します。\n\n**パラメーター**\n\n- **inputDate**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) - UTC 時間で表す Date 値。\n\n**戻り値**: [Date](https://developers.arcgis.com/arcade/guide/types/#date)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "week",
        "bundle": "core",
        "sinceVersion": "1.14",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#week",
        "description": "所定の Date の年の週数を返します。 値の範囲は 0 ～ 53 で、年の最初の週が「0」で、年の最後の週はその年に応じて「51」、 「52」、「53」のいずれかになります。 最初と最後の週の長さは完全な 7 日間ではない場合があります。",
        "examples": "\n##### 例\n\n週のデフォルトの開始曜日 (日曜日) を使用\n\n```arcade\nWeek( Date(1974,0,3) )\n// Returns 0\n```\n\n週の開始曜日を木曜日に設定\n\n```arcade\nWeek( Date(1974,0,3), 4 )\n// Returns 1\n```\n\n週の開始曜日を金曜日に設定\n\n```arcade\nWeek( Date(1974,0,3), 5 )\n// Returns 0\n```\n\n\n\n```arcade\nWeek( Date(1945,8,23) )\n// Returns 38\n```\n\n\n\n```arcade\nWeek( Date(2022,7,20) )\n// Returns 33\n```\n\nDateOnly 値から週を返す\n\n```arcade\nWeek(DateOnly(1996, 11, 10))\n// returns 49\n```\n\n",
        "completion": {
          "label": "Week",
          "detail": "Week(dateValue, startDay?) -> Number",
          "insertText": "Week(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.14](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の Date の年の週数を返します。 値の範囲は 0 ～ 53 で、年の最初の週が「0」で、年の最後の週はその年に応じて「51」、 「52」、「53」のいずれかになります。 最初と最後の週の長さは完全な 7 日間ではない場合があります。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 週を取得するための Date または DateOnly 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n- **startDay** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 週の開始曜日を表す番号。 日曜日 = 0; 月曜日 = 1; 火曜日 = 2; 水曜日 = 3; 木曜日 = 4; 金曜日 = 5; 土曜日 = 6 デフォルトは「0」(日曜日) です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "weekday",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#weekday",
        "description": "所定の Date の曜日を返します。 値の範囲は 0-6 であり、日曜日は `0`、土曜日は `6` です。",
        "examples": "\n##### 例\n\n指定した日付の曜日を返します。 水曜日の場合は「3」を返します。\n\n```arcade\nWeekday(Date(1980, 11, 31))\n```\n\n所定の DateOnly 値の曜日を返します。\n\n```arcade\nWeekday(DateOnly(1996, 11, 10))\n// returns 2, for Tuesday\n```\n\n",
        "completion": {
          "label": "Weekday",
          "detail": "Weekday(dateValue) -> Number",
          "insertText": "Weekday(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の Date の曜日を返します。 値の範囲は 0-6 であり、日曜日は `0`、土曜日は `6` です。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 曜日を返すための Date または DateOnly 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "year",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/date_functions/#year",
        "description": "所定の Date の年を返します。",
        "examples": "\n##### 例\n\n現在の Date の年を取得する\n\n```arcade\nYear(Now())\n```\n\n所定の DateOnly 値の年を取得する\n\n```arcade\nYear(DateOnly(1996, 11, 10))\n// returns 1996\n```\n\n",
        "completion": {
          "label": "Year",
          "detail": "Year(dateValue) -> Number",
          "insertText": "Year(${1:dateValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "所定の Date の年を返します。\n\n**パラメーター**\n\n- **dateValue**: [Date](https://developers.arcgis.com/arcade/guide/types/#date) \\| [DateOnly](https://developers.arcgis.com/arcade/guide/types/#dateonly) - 年を取得するための Date または DateOnly 値。 DateOnly 値は、バージョン 1.24 以降でサポートされます。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      }
    ]
  },
  {
    "id": "logical_functions",
    "title": "論理関数",
    "items": [
      {
        "type": "function",
        "name": "boolean",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#boolean",
        "description": "任意の非ブール値をブール値に変換しようと試みます。 たとえば、テキスト値「true」は `true` になります。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// returns `true`\nBoolean('true')\n```\n\n\n\n```arcade\n// returns `false`. A value of 1 would return `true`\nBoolean(0)\n```\n\n\n\n```arcade\n// returns `false`\nBoolean('hello')\n```\n\n",
        "completion": {
          "label": "Boolean",
          "detail": "Boolean(value) -> Boolean",
          "insertText": "Boolean(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "任意の非ブール値をブール値に変換しようと試みます。 たとえば、テキスト値「true」は `true` になります。\n\n**パラメーター**\n\n- **value**: [Text](https://developers.arcgis.com/arcade/guide/types/#text) \\| [Number](https://developers.arcgis.com/arcade/guide/types/#number) - ブール値に変換されるテキストまたは数値です。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "decode",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#decode",
        "description": "式を値に評価し、結果の値を後続のパラメーターの値と比較します。 式が一致する値に評価される場合、後続のパラメーター値が返されます。 一致が見つからない場合は、`default` 値を指定できます。 これはスイッチ/ケース ステートメントと似ています。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// returns a meaningful value when a field contains coded values\nvar code = $feature.codedValue;\nvar decodedValue = Decode(code, 1, 'Residential', 2, 'Commercial', 3, 'Mixed', 'Other');\n```\n\n",
        "completion": {
          "label": "Decode",
          "detail": "Decode(expression, [compare1, return1, ..., compareN, returnN]?, default?) -> Any",
          "insertText": "Decode(${1:expression_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "式を値に評価し、結果の値を後続のパラメーターの値と比較します。 式が一致する値に評価される場合、後続のパラメーター値が返されます。 一致が見つからない場合は、`default` 値を指定できます。 これはスイッチ/ケース ステートメントと似ています。\n\n**パラメーター**\n\n- **expression**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 指定された case 値と比較できる値に評価される必要がある Arcade 条件式です。\n- **[compare1, return1, ..., compareN, returnN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 比較値と戻り値のペアの集合です。\n- **default** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 比較値が 1 つも一致しない場合に返されるデフォルト値です。 これは、どのタイプの値にもなります。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)  \n一致した戻り値を返します。 一致が見つからない場合は、`default` 値が返されます。"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": -1
        }
      },
      {
        "type": "function",
        "name": "defaultvalue",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#defaultvalue",
        "description": "空の値が検出された場合、指定したデフォルト値を返します。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// If a feature has no value in the POP_2000 field\n// then 'no data' is returned\nDefaultValue($feature.POP_2000, 'no data')\n```\n\n",
        "completion": {
          "label": "DefaultValue",
          "detail": "DefaultValue(value, defaultValue) -> Any",
          "insertText": "DefaultValue(${1:value_}, ${2:defaultValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "空の値が検出された場合、指定したデフォルト値を返します。\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - `null` または `''` と比較する入力値です。 これは、どのタイプの値にもなります。 ただし、この値が空の配列である場合は、空の配列が返されます。\n- **defaultValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 指定された `value` が空の場合にこの値を返します。 `defaultValue` のデータ タイプは `value` のデータ タイプと一致する必要があります。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)  \n`value` が空の場合、`defaultValue` が返されます。 それ以外の場合、`value` の値が返されます。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "equals",
        "bundle": "core",
        "sinceVersion": "1.24",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#equals",
        "description": "2 つの値が等しいかどうかを示します。 オブジェクト タイプ (配列、フィーチャ、ディクショナリ、ジオメトリ) は、同じオブジェクトである場合にのみ true を返します。",
        "examples": "\n##### 例\n\n2 つの値が等しいかどうかを比較します。\n\n```arcade\nEquals(1, \"1\") // returns false\n\nvar testVal = \"test\";\nEquals(testVal, \"test\") // returns true\n\nvar array1 = Array(5);\nvar array2 = Array(5);\nEquals(array1, array2); // returns false\nEquals(array1, array1); // returns true\n```\n\n",
        "completion": {
          "label": "Equals",
          "detail": "Equals(value1, value2) -> Boolean",
          "insertText": "Equals(${1:value1_}, ${2:value2_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.24](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つの値が等しいかどうかを示します。 オブジェクト タイプ (配列、フィーチャ、ディクショナリ、ジオメトリ) は、同じオブジェクトである場合にのみ true を返します。\n\n**パラメーター**\n\n- **value1**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 最初の入力値。\n- **value2**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 2 つ目の入力値。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "iif",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#iif",
        "description": "条件式が `true` と評価された場合に任意の値を返し、その条件が `false` と評価された場合に代替値を返します。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// returns 'below' if the value is less than 1,000,000.\n// if the value is more than 1,000,000, then returns 'above'\nvar population = $feature.POP_2007;\nIIf(population < 1000000, 'below', 'above');\n```\n\n",
        "completion": {
          "label": "IIf",
          "detail": "IIf(condition, trueValue, falseValue) -> Any",
          "insertText": "IIf(${1:condition_}, ${2:trueValue_}, ${3:falseValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "条件式が `true` と評価された場合に任意の値を返し、その条件が `false` と評価された場合に代替値を返します。\n\n**パラメーター**\n\n- **condition**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - `true` または `false` のいずれかに評価される必要がある論理式です。\n- **trueValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - `condition` が `true` と評価された場合に返される値です。 これは、どのタイプの値にもなります。\n- **falseValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - `condition` が `false` と評価された場合に返される値です。 これは、どのタイプの値にもなります。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)  \n`condition` が `true` の場合、`trueValue` が返されます。 それ以外の場合、`falseValue` の値が返されます。"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "isempty",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#isempty",
        "description": "指定された値が `null` または空のテキスト (`''` など) の場合に `true` を返します。 空の配列やディクショナリを含む、その他すべての場合は `false` を返します。",
        "examples": "\n##### 例\n\n\n\n```arcade\n// Returns true\nIsEmpty(null)\n```\n\n\n\n```arcade\n// Returns false\nIsEmpty('hello world')\n```\n\n",
        "completion": {
          "label": "IsEmpty",
          "detail": "IsEmpty(value) -> Boolean",
          "insertText": "IsEmpty(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "指定された値が `null` または空のテキスト (`''` など) の場合に `true` を返します。 空の配列やディクショナリを含む、その他すべての場合は `false` を返します。\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - `null` または `''` と比較される値です。 これは、どのタイプの値にもなります。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "isnan",
        "bundle": "core",
        "sinceVersion": "1.5",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#isnan",
        "description": "入力値が数値でない (NaN) かどうかを示します。 次のいずれかのシナリオでは、数値が NaN と見なされます。 - `0/0` - `Infinity / Infinity` - `Infinity * 0` - NaN がオペランドになる演算 - 数値への数値以外のテキストまたは「未定義」の内容のキャスト",
        "examples": "\n##### 例\n\n\n\n```arcade\n// Returns true\nIsNan(Infinity / Infinity)\n```\n\n\n\n```arcade\n// Returns false\nIsNan('4')\n```\n\n",
        "completion": {
          "label": "IsNan",
          "detail": "IsNan(value) -> Boolean",
          "insertText": "IsNan(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.5](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力値が数値でない (NaN) かどうかを示します。 次のいずれかのシナリオでは、数値が NaN と見なされます。 - `0/0` - `Infinity / Infinity` - `Infinity * 0` - NaN がオペランドになる演算 - 数値への数値以外のテキストまたは「未定義」の内容のキャスト\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - NaN かどうかを確認するための値です。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "typeof",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#typeof",
        "description": "入力値のタイプを返します。 配列、日付、テキスト、 ブール値、数値、辞書、フィーチャ、FeatureSet、ポイント、ポリゴン、ポリライン、マルチポイント、範囲、関数、不明なタイプのうち、いずれかのタイプが返されます。",
        "examples": "\n##### 例\n\n'Boolean' を出力\n\n```arcade\nTypeOf(true)\n```\n\n'Date' を出力\n\n```arcade\nTypeOf(Now())\n```\n\n",
        "completion": {
          "label": "TypeOf",
          "detail": "TypeOf(value) -> Text",
          "insertText": "TypeOf(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "入力値のタイプを返します。 配列、日付、テキスト、 ブール値、数値、辞書、フィーチャ、FeatureSet、ポイント、ポリゴン、ポリライン、マルチポイント、範囲、関数、不明なタイプのうち、いずれかのタイプが返されます。\n\n**パラメーター**\n\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 入力値、変数、またはフィーチャ属性です。\n\n**戻り値**: [Text](https://developers.arcgis.com/arcade/guide/types/#text)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "when",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/logical_functions/#when",
        "description": "1 つの式が `true` と評価されるまで、一連の条件式を評価します。",
        "examples": "\n##### 例\n\n数値フィールドの値を一般的なランキング (テキスト) に再分類する  \nすべての式が `false` の場合、'n/a' が返される\n\n```arcade\nvar density = $feature.densityField;\nvar ranking = When(density < 50, 'low', density >=50 && density < 100, 'medium', density >= 100, 'high', 'n/a');\n```\n\n",
        "completion": {
          "label": "When",
          "detail": "When(expression1, result1, [expression2, result2, ..., expressionN, resultN]?, defaultValue) -> Any",
          "insertText": "When(${1:expression1_}, ${2:result1_}, ${3:defaultValue_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "1 つの式が `true` と評価されるまで、一連の条件式を評価します。\n\n**パラメーター**\n\n- **expression1**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - 条件式で、`true` に評価される場合は `result1` が返されます。\n- **result1**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - `expression1` が `true` に評価される場合に結果が返されます。 これは、どのタイプの値にもなります。\n- **[expression2, result2, ..., expressionN, resultN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 所定の条件式が `true` と評価された場合の一連の条件式と戻り値。 これは、どのタイプの値にもなります。\n- **defaultValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - すべての式が `false` と評価された場合にこの値を返します。 これは、どのタイプの値にもなります。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": -1
        }
      }
    ]
  },
  {
    "id": "array_functions",
    "title": "配列関数",
    "items": [
      {
        "type": "function",
        "name": "all",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#all",
        "description": "所定の配列内にあるすべてのエレメントが指定された関数からのテストに合格したかどうかを示します。 入力配列内のすべてのアイテムに対して関数が `true` を返した場合、`true` を返します。",
        "examples": "\n##### 例\n\n入力配列内の一部のエレメントが `isEven` テストに合格しなかったため、`false` を返します\n\n```arcade\n// isEven is used to test if each element in the array is even\n// it returns true if the element is divisible by two, false if is not\nfunction isEven(value) { return value % 2 == 0 }\n// The isEven function will execute for each element in the array,\n// returning the following values: false, true, false, true, false\n// Since some of the values in the array did not pass the test\n// (return true), the return value will be false\nAll([1,2,3,4,5], isEven)\n```\n\n既存の `isEmpty` Arcade 関数を `testFunction` 関数として使用します。 `isEmpty` は 1 つのパラメーターを取り、ブール値を返すため、これは有効です。 すべてのフィールドが空の場合、この式は `true` を返します。\n\n```arcade\nvar myArray = [ $feature.field1, $feature.field2, $feature.field3, $feature.field4];\nAll(myArray, isEmpty)\n```\n\n",
        "completion": {
          "label": "All",
          "detail": "All(inputArray, testFunction) -> Boolean",
          "insertText": "All(${1:inputArray_}, ${2:testFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の配列内にあるすべてのエレメントが指定された関数からのテストに合格したかどうかを示します。 入力配列内のすべてのアイテムに対して関数が `true` を返した場合、`true` を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - テストする入力配列。\n- **testFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列 `testFunction(value: Any) -> Boolean` の各エレメントのテストに使用される関数。 エレメントがテストに合格した場合は、真と見なされる値を関数で返す必要があります。 ユーザー定義関数、または次のパラメーターで定義されたコア Arcade 関数を関数として使用できます。\n\n  - **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内のエレメントの値を表します。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)  \nテスト関数ですべてのエレメントに対して真と見なされる値を返す場合は `true` となります。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "any",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#any",
        "description": "所定の配列内にある任意のエレメントが指定された関数からのテストに合格したかどうかをテストします。 入力配列内の少なくとも 1 つのアイテムに対して関数が `true` を返した場合、`true` を返します。",
        "examples": "\n##### 例\n\n入力配列内の少なくとも 1 つのエレメントが `isEven` テストに合格したため、`true` を返します。\n\n```arcade\n// isEven is used to test if each element in the array is even\n// it returns true if the element is divisible by two, false if is not\nfunction isEven(value) { return value % 2 == 0 } \n// The isEven function will execute for each element in the array,\n// returning the following values: false, true, false, true, false\n// Since at least one value in the array passed the test\n// (return true), the return value will be true\nAny([1,2,3,4,5], isEven)\n```\n\n既存の `isEmpty` Arcade 関数を `testFunction` 関数として使用します。 `isEmpty` は 1 つのパラメーターを取り、ブール値を返すため、これは有効です。 いずれかのフィールドが空の場合、この式は `true` を返します。\n\n```arcade\nvar myArray = [ $feature.field1, $feature.field2, $feature.field3, $feature.field4];\nAny(myArray, isEmpty)\n```\n\n",
        "completion": {
          "label": "Any",
          "detail": "Any(inputArray, testFunction) -> Boolean",
          "insertText": "Any(${1:inputArray_}, ${2:testFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の配列内にある任意のエレメントが指定された関数からのテストに合格したかどうかをテストします。 入力配列内の少なくとも 1 つのアイテムに対して関数が `true` を返した場合、`true` を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - テストする入力配列。\n- **testFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列 `testFunction(value: Any) -> Boolean` の各エレメントのテストに使用される関数。 エレメントがテストに合格した場合は、真と見なされる値を関数で返す必要があります。 ユーザー定義関数、または次のパラメーターで定義されたコア Arcade 関数を関数として使用できます。\n\n  - **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内のエレメントの値を表します。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)  \nテスト関数でいずれかのエレメントに対して真とみ見なされる値を返す場合は `true` となります。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      [
        {
          "type": "function",
          "name": "array",
          "bundle": "core",
          "sinceVersion": "1.12",
          "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#array1",
          "description": "所定の長さの新しい配列を返します。",
          "examples": "\n##### 例\n\n`[null, null, null, null, null]` を返します。\n\n```arcade\nArray(5)\n```\n\n`[\\\"hello\\\",\\\"hello\\\"]` を返します\n\n```arcade\nArray(2, \"hello\")\n```\n\n`[1,1,1]` を返します。\n\n```arcade\nArray(3, 1)\n```\n\n",
          "completion": {
            "label": "Array",
            "detail": "Array(arrayLength, defaultValue?) -> Array<Any>",
            "insertText": "Array(${1:arrayLength_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の長さの新しい配列を返します。\n\n**パラメーター**\n\n- **arrayLength**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 新しい配列で希望する長さです。\n- **defaultValue** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列の各要素の値です。 値を指定しない場合、デフォルトでは `null` になります。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        },
        {
          "type": "function",
          "name": "array",
          "bundle": "core",
          "sinceVersion": "1.23",
          "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#array2",
          "description": "入力配列のシャロー コピーまたはディープ コピーを返します。",
          "examples": "\n##### 例\n\n入力配列のシャロー コピーを作成する\n\n```arcade\nvar person1 = {\n  firstName: \"Jane\",\n  lastName: \"Doe\"\n};\nvar person2 = {\n  firstName: \"John\",\n  lastName: \"Smith\"\n};\nvar people = [ person1, person2 ];\n// create a shallow copy of the array\nvar copiedArray = Array(people);\npeople[0] == copiedArray[0];\n// returns true\n// this is a shallow copy of the array, so the elements share the same references\n```\n\n入力配列のディープ コピーを作成する\n\n```arcade\nvar deepCopy = Array(people, true);\npeople[0] == deepCopy[0]\n// returns false\n// this is a deep copy of the array, so the elements do NOT share the same references\n```\n\n",
          "completion": {
            "label": "Array",
            "detail": "Array(inputArray, deep?) -> Array<Any>",
            "insertText": "Array(${1:inputArray_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.23](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力配列のシャロー コピーまたはディープ コピーを返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - コピーする配列です。\n- **deep** (_Optional_): [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean) - `true` の場合、入力配列内の各要素のディープ コピーを作成します。つまり、出力配列内の要素は入力配列の要素と同じ参照を共有しません。 デフォルト値は `false` です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 2
          }
        }
      ],
      {
        "type": "function",
        "name": "back",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#back",
        "description": "配列の最後の要素を返します。 入力配列が空の場合、式の評価が失敗します。",
        "examples": "\n##### 例\n\n`'gray'` を返します。\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nBack(colors)\n```\n\n",
        "completion": {
          "label": "Back",
          "detail": "Back(inputArray) -> Any",
          "insertText": "Back(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列の最後の要素を返します。 入力配列が空の場合、式の評価が失敗します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 最後の値を取得する配列です。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "count",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#count",
        "description": "配列内のアイテム数を返します。",
        "examples": "\n##### 例\n\n6 を返す\n\n```arcade\nCount([12,21,32,44,58,63])\n```\n\n",
        "completion": {
          "label": "Count",
          "detail": "Count(value) -> Number",
          "insertText": "Count(${1:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "配列内のアイテム数を返します。\n\n**パラメーター**\n\n- **value**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 演算の実行対象となる配列です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      [
        {
          "type": "function",
          "name": "distinct",
          "bundle": "core",
          "sinceVersion": "1.1",
          "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#distinct1",
          "description": "値の配列に関して一連の個別値または一意の値を返します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nDistinct([1,1,2,1,1,2,2,3,4,5])\n// Returns [1,2,3,4,5]\n```\n\n",
          "completion": {
            "label": "Distinct",
            "detail": "Distinct(values) -> Array<Any>",
            "insertText": "Distinct(${1:values_})$0",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n値の配列に関して一連の個別値または一意の値を返します。\n\n**パラメーター**\n\n- **values**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 演算の実行対象となる値の配列です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
            }
          },
          "parametersInfo": {
            "min": 1,
            "max": 1
          }
        },
        {
          "type": "function",
          "name": "distinct",
          "bundle": "core",
          "sinceVersion": "1.1",
          "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#distinct2",
          "description": "値のリストに関して一連の個別値または一意の値を返します。",
          "examples": "\n##### 例\n\n\n\n```arcade\nDistinct('high','medium','low',0,'high','high','low')\n// Returns ['high','medium','low',0]\n```\n\n",
          "completion": {
            "label": "Distinct",
            "detail": "Distinct([value1, ..., valueN]?) -> Array<Any>",
            "insertText": "Distinct($0)",
            "insertTextMode": 2,
            "insertTextFormat": 2,
            "kind": 3,
            "documentation": {
              "kind": "markdown",
              "value": "**[バージョン以降 1.1](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n値のリストに関して一連の個別値または一意の値を返します。\n\n**パラメーター**\n\n- **[value1, ..., valueN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 演算の実行対象となる値のリストです。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
            }
          },
          "parametersInfo": {
            "min": 0,
            "max": -1
          }
        }
      ],
      {
        "type": "function",
        "name": "erase",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#erase",
        "description": "所定のインデックスの配列から値を削除します。 所定のインデックスより上にある既存の要素はインデックス値が 1 つ下がります。 配列のサイズが 1 つ小さくなります。",
        "examples": "\n##### 例\n\n\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nErase(colors, 1)\n// colors = ['orange','gray']\n```\n\n\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nErase(colors, -1)\n// colors = ['orange','purple']\n```\n\n",
        "completion": {
          "label": "Erase",
          "detail": "Erase(inputArray, index) -> Null",
          "insertText": "Erase(${1:inputArray_}, ${2:index_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のインデックスの配列から値を削除します。 所定のインデックスより上にある既存の要素はインデックス値が 1 つ下がります。 配列のサイズが 1 つ小さくなります。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 値を削除する配列です。\n- **index**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 配列から削除する値のインデックスです。 負のインデックスが指定された場合、配列末尾からのオフセットとして使用されます。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "filter",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#filter",
        "description": "指定された関数からのテストに合格する入力配列からフィルタリングされたエレメントを持つ新しい配列を作成します。",
        "examples": "\n##### 例\n\n`isEven` フィルターを通過したエレメントで構成される新しい配列を返します。\n\n```arcade\nfunction isEven(i) { return i % 2 == 0 } \nFilter([1,2,3,4,5], isEven) // Returns [2,4]\n// Since 2 and 4 are even, they are the only values\n// included in the output array.\n```\n\n`filterFunction` 内の既存の `isEmpty` Arcade 関数を使用します。 空でないフィールドの新しい配列を返します。\n\n```arcade\nvar myArray = [ $feature.field1, $feature.field2, $feature.field3, $feature.field4];\n\nfunction isNotEmpty(value){\n  return !isEmpty(value);\n}\nFilter(myArray, isNotEmpty)\n// Returns only values that are defined,\n// excluding empty values from the result\n```\n\n",
        "completion": {
          "label": "Filter",
          "detail": "Filter(inputArray, filterFunction) -> Array<Any>",
          "insertText": "Filter(${1:inputArray_}, ${2:filterFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n指定された関数からのテストに合格する入力配列からフィルタリングされたエレメントを持つ新しい配列を作成します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - フィルタリングする入力配列。\n- **filterFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列 `filterFunction(value: Any) -> Boolean` のエレメントのフィルタリングに使用される関数。 エレメントがテストに合格した場合は、真と見なされる値を関数で返す必要があります。 ユーザー定義関数、または次のパラメーターで定義されたコア Arcade 関数を関数として使用できます。\n\n  - **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内のエレメントの値を表します。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;  \nエレメントがテスト関数に合格した配列を返します。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "first",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#first",
        "description": "配列内の最初の要素を返します。 配列が空の場合に `null` を返します。",
        "examples": "\n##### 例\n\n'orange' を出力\n\n```arcade\nFirst(['orange', 'purple', 'gray'])\n```\n\n",
        "completion": {
          "label": "First",
          "detail": "First(inputArray) -> Any",
          "insertText": "First(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "配列内の最初の要素を返します。 配列が空の場合に `null` を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 最初のアイテムを返す元の配列です。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "front",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#front",
        "description": "配列の最初の要素を返します。 入力配列が空の場合、式の評価が失敗します。",
        "examples": "\n##### 例\n\n`'orange'` を返します。\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nFront(colors)\n```\n\n",
        "completion": {
          "label": "Front",
          "detail": "Front(inputArray) -> Any",
          "insertText": "Front(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列の最初の要素を返します。 入力配列が空の場合、式の評価が失敗します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 最初の値を取得する配列です。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "includes",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#includes",
        "description": "配列に所定の値を含めるかどうかを指定します。 配列内に値が見つかった場合に `true` を返します。",
        "examples": "\n##### 例\n\n`true` を返します。\n\n```arcade\nIncludes(['orange', 'purple', 'gray'], 'purple')\n```\n\n`false` を返します。\n\n```arcade\nIncludes(['orange', 'purple', 'gray'], 'red')\n```\n\n",
        "completion": {
          "label": "Includes",
          "detail": "Includes(inputArray, value) -> Boolean",
          "insertText": "Includes(${1:inputArray_}, ${2:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列に所定の値を含めるかどうかを指定します。 配列内に値が見つかった場合に `true` を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 入力配列です。\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 所定の配列で検索する値です。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "indexof",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#indexof",
        "description": "配列内の入力アイテムのゼロベースのインデックス ロケーションを返します。 `item` が存在しない場合は、`-1` が返されます。",
        "examples": "\n##### 例\n\n2 を出力\n\n```arcade\nvar num = [1,2,3,4];\nreturn indexof(num, 3);\n```\n\n",
        "completion": {
          "label": "IndexOf",
          "detail": "IndexOf(inputArray, item) -> Number",
          "insertText": "IndexOf(${1:inputArray_}, ${2:item_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "配列内の入力アイテムのゼロベースのインデックス ロケーションを返します。 `item` が存在しない場合は、`-1` が返されます。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 検索対象の配列です。\n- **item**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内に配置する項目です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "insert",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#insert",
        "description": "所定のインデックスの配列に新しい値を挿入します。 所定のインデックスより上にある既存の要素はインデックス値が 1 つ上がります。 配列のサイズが 1 つ大きくなります。",
        "examples": "\n##### 例\n\n\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nInsert(colors, 1, 'yellow')\n// colors = ['orange','yellow','purple','gray']\n```\n\n\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nInsert(colors, -1, 'yellow')\n// colors = ['orange','purple','yellow','gray']\n```\n\n",
        "completion": {
          "label": "Insert",
          "detail": "Insert(inputArray, index, value) -> Null",
          "insertText": "Insert(${1:inputArray_}, ${2:index_}, ${3:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定のインデックスの配列に新しい値を挿入します。 所定のインデックスより上にある既存の要素はインデックス値が 1 つ上がります。 配列のサイズが 1 つ大きくなります。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 新しい値を挿入する配列です。\n- **index**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 新しい値が挿入される配列のインデックスです。 インデックスが 0 の場合、配列の先頭に値を挿入します。 配列のサイズと等しいインデックスによって、配列の末尾に値が挿入されます。 配列のサイズより大きいインデックスではエラーが発生します。  負のインデックスが指定された場合、配列末尾からのオフセットとして使用されます。\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列に挿入する値です。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 3,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "map",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#map",
        "description": "入力配列内の各エレメント上で指定された関数を呼び出した結果に基づいて新しい配列を作成します。",
        "examples": "\n##### 例\n\n配列内のすべてのエレメントを華氏から摂氏に変換し、新しい配列に返します。\n\n```arcade\n// This function will take in values from the input array and convert them to Celsius\nfunction toCelsius(f) {\n  return Round((f - 32) * 5/9, 2)\n}\n// The toCelsius function executes for each each item\n// in the input array.\n// Map returns the resulting array of converted values.\nMap([82, 67, 96, 55, 34], toCelsius)\n// returns [27.78, 19.44, 35.56, 12.78, 1.11]\n```\n\nデータ オブジェクトを書式設定されたテキストに変換します\n\n```arcade\nvar dates = [ Date(1996, 11, 10), Date(1995, 1, 6), Date(1992, 2, 27), Date(1990, 10, 2)];\nfunction formatDates(dateVal) { return Text(dateVal, 'MMM D, Y') }\nMap(dates, formatDates);\n// returns ['Dec 10, 1996', 'Feb 6, 1995', 'Mar 27, 1992', 'Nov 2, 1990']\n```\n\n",
        "completion": {
          "label": "Map",
          "detail": "Map(inputArray, mappingFunction) -> Array<Any>",
          "insertText": "Map(${1:inputArray_}, ${2:mappingFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力配列内の各エレメント上で指定された関数を呼び出した結果に基づいて新しい配列を作成します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - マッピングする入力配列。\n- **mappingFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列 `mappingFunction(value: Any) -> Any` の各エレメントを呼び出すための関数。 関数は、返される配列の一部になる新しいアイテムを返す必要があります。 ユーザー定義関数、または次のパラメーターで定義されたコア Arcade 関数を関数として使用できます。\n\n  - **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内のエレメントの値を表します。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;  \nマッピング関数によって返されるアイテムです。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "none",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#none",
        "description": "所定の配列内にある任意のエレメントが指定された関数からのテストに合格していないかどうかをテストします。 入力配列内のすべてのアイテムに対して `testFunction` が `false` を返した場合、`true` を返します。",
        "examples": "\n##### 例\n\n入力配列内の一部のエレメントが `isEven` テストに合格したため、`false` を返します\n\n```arcade\n// isEven is used to test if each element in the array is even\n// it returns true if the element is divisible by two, false if is not\nfunction isEven(value) { return value % 2 == 0 } \n// The isEven function will execute for each element in the array,\n// returning the following values: false, true, false, true, false\n// Since at least one value in the array passed the test\n// (return true), the return value will be false\nNone([1,2,3,4,5], isEven)\n```\n\n既存の `isEmpty` Arcade 関数を `testFunction` 関数として使用します。 `isEmpty` は 1 つのパラメーターを取り、ブール値を返すため、これは有効です。 どのフィールドも空でない場合、この式は `true` を返します。\n\n```arcade\nvar myArray = [ $feature.field1, $feature.field2, $feature.field3, $feature.field4];\nNone(myArray, isEmpty)\n```\n\n",
        "completion": {
          "label": "None",
          "detail": "None(inputArray, testFunction) -> Boolean",
          "insertText": "None(${1:inputArray_}, ${2:testFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n所定の配列内にある任意のエレメントが指定された関数からのテストに合格していないかどうかをテストします。 入力配列内のすべてのアイテムに対して `testFunction` が `false` を返した場合、`true` を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - テストする入力配列。\n- **testFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列 `testFunction(value: Any) -> Boolean` の各エレメントをテストするための関数。 エレメントがテストに合格しなかった場合は、偽と見なされる値を関数で返す必要があります。 ユーザー定義関数、または次のパラメーターで定義されたコア Arcade 関数を関数として使用できます。\n\n  - **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列内のエレメントの値を表します。\n\n**戻り値**: [Boolean](https://developers.arcgis.com/arcade/guide/types/#boolean)  \n配列内のすべてのエレメントがテスト関数に合格しなかった場合に `true` となります。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "pop",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#pop",
        "description": "配列の末尾の要素を削除および返します。 配列が空の場合、エラーがスローされます。",
        "examples": "\n##### 例\n\n'gray' を返します。 これで、入力配列が `['orange', 'purple']` と等しくなります。\n\n```arcade\nPop(['orange', 'purple', 'gray'])\n```\n\n",
        "completion": {
          "label": "Pop",
          "detail": "Pop(inputArray) -> Any",
          "insertText": "Pop(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列の末尾の要素を削除および返します。 配列が空の場合、エラーがスローされます。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 末尾の要素が削除および返される入力配列です。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "push",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#push",
        "description": "配列の末尾に要素を追加して、配列の新しい長さを返します。",
        "examples": "\n##### 例\n\n4 を返します。 これで、入力配列が `['orange', 'purple', 'gray', 'red']` と等しくなります。\n\n```arcade\nPush(['orange', 'purple', 'gray'], 'red')\n```\n\n",
        "completion": {
          "label": "Push",
          "detail": "Push(inputArray, value) -> Number",
          "insertText": "Push(${1:inputArray_}, ${2:value_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列の末尾に要素を追加して、配列の新しい長さを返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 要素をプッシュする配列です。\n- **value**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 入力配列の末尾の要素として追加する値です。\n\n**戻り値**: [Number](https://developers.arcgis.com/arcade/guide/types/#number)"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "reduce",
        "bundle": "core",
        "sinceVersion": "1.16",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#reduce",
        "description": "配列内の各エレメント上で指定された \\\"reducer\\\" 関数を実行し、前のエレメントの計算からの戻り値を渡します。",
        "examples": "\n##### 例\n\n`initialValue` パラメーターが指定されていない場合、`cities` 配列の最初の 2 つのエレメントが引数として add 関数に渡されます。\n\n```arcade\nvar cities = [{\n   name: 'Columbus',\n   pop: 913921\n}, {\n   name: 'Cincinnati',\n   pop: 307266\n}, {\n   name: 'Dayton',\n   pop: 140343\n}, {\n   name: 'Cleveland',\n   pop: 376599\n}];\n// the first time this function is called it will take the first two elements of the array as x and y\n// The subsequent times the function is executed, it will take the return value\n// from the previous function call as x and the next array value as y\nfunction mostPopulated(city1, city2) {\n   IIf (city1.pop > city2.pop, city1, city2)\n}\nvar largestCity = Reduce(cities, mostPopulated)\nConsole(largestCity.name + ' is the biggest city in the list with a population of ' + largestCity.pop)\n// Columbus is the biggest city in the list with a population of 913921\n```\n\n`initialValue` パラメーターが設定されているため、その値が関数の最初の引数 (`city1`) になり、 `cities` の最初のエレメントが関数の 2 番目の引数 (`city2`) になります。\n\n```arcade\nvar los_angeles = { name: 'Los Angeles', pop: 3898747 }\n// since an initialValue is provided, it will be passed into the maxPop function as x\n// and the first value of the array will be passed in as y for the initial function call\n// The subsequent times the function is executed, it will take the return value\n// from the previous function call as x and the next array value as y\nvar largestCity = Reduce(cities, mostPopulated, los_angeles)\nConsole(largestCity.name + ' is the biggest city in the list with a population of ' + largestCity.pop)\n// Los Angeles is the biggest city in the list with a population of 3898747\n```\n\n",
        "completion": {
          "label": "Reduce",
          "detail": "Reduce(inputArray, reducerFunction, initialValue?) -> Any",
          "insertText": "Reduce(${1:inputArray_}, ${2:reducerFunction_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.16](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列内の各エレメント上で指定された \\\"reducer\\\" 関数を実行し、前のエレメントの計算からの戻り値を渡します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 削減する入力配列。\n- **reducerFunction**: [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 配列値 `reducerFunction(previousValue: Any, arrayValue: Any) -> Any` を集計する reducer 関数。\n\n  - **previousValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - この関数を初めて実行したときは、この値が入力配列 (指定されている場合は `initialValue`) 内の最初のエレメントになります。\n  - **arrayValue**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 入力配列内のエレメントの現在の値を表します。\n- **initialValue** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - reducer 関数の最初の引数に渡されるアイテム。\n\n**戻り値**: [Any](https://developers.arcgis.com/arcade/guide/types/#any)  \n配列の各エレメントで reducer 関数によって集められた値。"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "resize",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#resize",
        "description": "配列の要素の数を指定したサイズに変更します。 配列を拡張したり、早めに切り捨てるために使用できます。 サイズを変更した後に新たな末尾の要素よりも後にインデックスしようとするとエラーが発生します。 ただし、次の要素をインデックスすると、要素 1 つ分配列を拡張します。",
        "examples": "\n##### 例\n\n`['orange', 'purple', 'gray', null, null]` を返します。\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nResize(colors, 5)\nreturn colors\n```\n\n`['orange', 'purple', 'gray', 'red', 'red']` を返します。\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nResize(colors, 5, 'red')\nreturn colors\n```\n\n`['orange']` を返します。\n\n```arcade\nvar colors = ['orange', 'purple', 'gray']\nResize(colors, 1)\nreturn colors\n```\n\n",
        "completion": {
          "label": "Resize",
          "detail": "Resize(inputArray, newSize, value?) -> Null",
          "insertText": "Resize(${1:inputArray_}, ${2:newSize_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n配列の要素の数を指定したサイズに変更します。 配列を拡張したり、早めに切り捨てるために使用できます。 サイズを変更した後に新たな末尾の要素よりも後にインデックスしようとするとエラーが発生します。 ただし、次の要素をインデックスすると、要素 1 つ分配列を拡張します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - サイズを変更する配列です。\n- **newSize**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - サイズを変更する配列での要素数です。\n- **value** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 配列に追加するすべての新しい要素で使用されるオプションの値です。 値を指定しないと、新たに追加された要素の値は 'null' になります。\n\n**戻り値**: Null"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "reverse",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#reverse",
        "description": "配列の内容を反転させます。",
        "examples": "\n##### 例\n\n`['gray', 'purple', 'orange']` を返します。\n\n```arcade\nReverse(['orange', 'purple', 'gray'])\n```\n\n",
        "completion": {
          "label": "Reverse",
          "detail": "Reverse(inputArray) -> Array<Any>",
          "insertText": "Reverse(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "配列の内容を反転させます。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 反転させる配列です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 1
        }
      },
      {
        "type": "function",
        "name": "slice",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#slice",
        "description": "2 つのインデックス間にある配列の一部を新しい配列として返します。",
        "examples": "\n##### 例\n\n`['purple', 'gray']` を返します。\n\n```arcade\nSlice(['orange', 'purple', 'gray', 'red', 'blue'], 1, 3)\n```\n\n`['red', 'blue']` を返します。\n\n```arcade\nSlice(['orange', 'purple', 'gray', 'red', 'blue'], 3)\n```\n\n`['orange', 'purple', 'gray', 'red', 'blue']` を返します。\n\n```arcade\nSlice(['orange', 'purple', 'gray', 'red', 'blue'])\n```\n\n`['blue']` を返します。\n\n```arcade\nSlice(['orange', 'purple', 'gray', 'red', 'blue'], -1)\n```\n\n",
        "completion": {
          "label": "Slice",
          "detail": "Slice(inputArray, startIndex?, endIndex?) -> Array<Any>",
          "insertText": "Slice(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n2 つのインデックス間にある配列の一部を新しい配列として返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - スライスする配列です。\n- **startIndex** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - スライスを開始するインデックスです。 デフォルトで `0` に設定されます。 負のインデックスが指定された場合、配列末尾からのオフセットとして使用されます。\n- **endIndex** (_Optional_): [Number](https://developers.arcgis.com/arcade/guide/types/#number) - スライスを終了するインデックスです。 このインデックスの値は返される配列には含まれません。 デフォルトで配列のサイズに設定されます。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 3
        }
      },
      {
        "type": "function",
        "name": "sort",
        "bundle": "core",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#sort",
        "description": "ASCII 値に従って配列を並べ替えます。 配列内のすべての項目が同じタイプである場合、適切な並べ替え関数が使用されます。 配列内の項目のタイプが異なる場合、それらの項目はテキストに変換されます。 配列にディクショナリが含まれ、ユーザー定義関数が指定されていない場合、並べ替えは行われません。 配列に NULL 値が含まれる場合は、テキストに変換されず、並べ替えられた配列の末尾で返されます。",
        "examples": "\n##### 例\n\n`['$', 1, 'A', 'a']` を返します\n\n```arcade\nSort([1, 'a', '$', 'A'])\n```\n\nユーザー定義関数を使用した並べ替え\n\n```arcade\nvar peopleArray = [{ 'NAME': 'Sam', 'AGE': 25 }, {'NAME': 'Bob', 'AGE': 27 },{ 'NAME': 'Emma', 'AGE': 24 }];\nfunction compareAge(a,b){\n  if (a['AGE']<b['AGE'])\n    return -1;\n  if (a['AGE']>b['AGE'])\n    return 1;\n  return 0;\n}\nreturn Sort(peopleArray, compareAge);\n// returns '[{ 'AGE': 24, 'NAME': 'Emma' }, { 'AGE': 25, 'NAME': 'Sam' }, { 'AGE': 27, 'NAME': 'Bob' } ]'\n```\n\n",
        "completion": {
          "label": "Sort",
          "detail": "Sort(inputArray, comparatorFunction?) -> Array<Any>",
          "insertText": "Sort(${1:inputArray_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "ASCII 値に従って配列を並べ替えます。 配列内のすべての項目が同じタイプである場合、適切な並べ替え関数が使用されます。 配列内の項目のタイプが異なる場合、それらの項目はテキストに変換されます。 配列にディクショナリが含まれ、ユーザー定義関数が指定されていない場合、並べ替えは行われません。 配列に NULL 値が含まれる場合は、テキストに変換されず、並べ替えられた配列の末尾で返されます。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 並べ替え対象の配列です。\n- **comparatorFunction** (_Optional_): [Function](https://developers.arcgis.com/arcade/guide/logic/#user-defined-functions) - 並べ替え `orderingFunction(a: Any, b: Any) -> Number` のために使用されるユーザー定義関数。 関数では 2 つのエレメントを受信し、 2 つのエレメントの並べ替え順を示す数字を返します。  \n`> 0`: `a` の前に `b` を並べ替え  \n`= 0`: `a` と `b` の順序を維持  \n`< 0`: `b` の前に `a` を並べ替え\n\n  - **a**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 比較する 1 番目のエレメント。\n  - **b**: [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 比較する 2 番目のエレメント。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
          }
        },
        "parametersInfo": {
          "min": 1,
          "max": 2
        }
      },
      {
        "type": "function",
        "name": "splice",
        "bundle": "core",
        "sinceVersion": "1.12",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#splice",
        "description": "すべてのパラメーターを新しい配列に連結します。",
        "examples": "\n##### 例\n\n`['orange', 'purple', 1, 2, 'red']` を返します。\n\n```arcade\nSplice(['orange', 'purple'], 1, 2, 'red')\n```\n\n`[1, 2, 3, 4]` を返します。\n\n```arcade\nSplice([1,2], [3,4])\n```\n\n",
        "completion": {
          "label": "Splice",
          "detail": "Splice([value1, ..., valueN]?) -> Array<Any>",
          "insertText": "Splice($0)",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.12](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\nすべてのパラメーターを新しい配列に連結します。\n\n**パラメーター**\n\n- **[value1, ..., valueN]** (_Optional_): [Any](https://developers.arcgis.com/arcade/guide/types/#any) - 新しい配列に結合する値の継続中のリストです。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
          }
        },
        "parametersInfo": {
          "min": 0,
          "max": -1
        }
      },
      {
        "type": "function",
        "name": "top",
        "bundle": "core",
        "sinceVersion": "1.3",
        "link": "https://developers.arcgis.com/arcade/function-reference/array_functions/#top",
        "description": "入力配列を切詰めて、最初の所定のエレメント数を返します。",
        "examples": "\n##### 例\n\n`[ 43,32,19 ]` を返す\n\n```arcade\nTop([ 43,32,19,0,3,55 ], 3)\n```\n\n",
        "completion": {
          "label": "Top",
          "detail": "Top(inputArray, numItems) -> Array<Any>",
          "insertText": "Top(${1:inputArray_}, ${2:numItems_})$0",
          "insertTextMode": 2,
          "insertTextFormat": 2,
          "kind": 3,
          "documentation": {
            "kind": "markdown",
            "value": "**[バージョン以降 1.3](https://developers.arcgis.com/arcade/guide/version-matrix)**\n\n入力配列を切詰めて、最初の所定のエレメント数を返します。\n\n**パラメーター**\n\n- **inputArray**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt; - 切り捨てる配列です。\n- **numItems**: [Number](https://developers.arcgis.com/arcade/guide/types/#number) - 配列の先頭から返すアイテム数です。\n\n**戻り値**: [Array](https://developers.arcgis.com/arcade/guide/types/#array)&lt;[Any](https://developers.arcgis.com/arcade/guide/types/#any)&gt;"
          }
        },
        "parametersInfo": {
          "min": 2,
          "max": 2
        }
      }
    ]
  }
]
