"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[8541,1053,2731,3209],{11053:(e,t,n)=>{n.d(t,{c:()=>r,g:()=>a});var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function a(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}},12731:(e,t,n)=>{n.r(t),n.d(t,{hydratedAdapter:()=>u});var r=n(5443),a=n(48526),i=n(86738),o=n(39829),c=n(82799);const u={convertToGEGeometry:function(e,t){if(null==t)return null;let n="cache"in t?t.cache._geVersion:void 0;return null==n&&(n=e.convertJSONToGeometry(t),"cache"in t&&(t.cache._geVersion=n)),n},exportPoint:function(e,t,n){const r=e.hasZ(t),a=e.hasM(t),o=new i.A({x:e.getPointX(t),y:e.getPointY(t),spatialReference:n});return r&&(o.z=e.getPointZ(t)),a&&(o.m=e.getPointM(t)),o.cache._geVersion=t,o},exportPolygon:function(e,t,n){const r=new o.A({rings:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportPolyline:function(e,t,n){const r=new c.A({paths:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportMultipoint:function(e,t,n){const r=new a.A({hasZ:e.hasZ(t),hasM:e.hasM(t),points:e.exportPoints(t),spatialReference:n});return r.cache._geVersion=t,r},exportExtent:function(e,t,n){const a=e.hasZ(t),i=e.hasM(t),o=new r.A({xmin:e.getXMin(t),ymin:e.getYMin(t),xmax:e.getXMax(t),ymax:e.getYMax(t),spatialReference:n});if(a){const n=e.getZExtent(t);o.zmin=n.vmin,o.zmax=n.vmax}if(i){const n=e.getMExtent(t);o.mmin=n.vmin,o.mmax=n.vmax}return o.cache._geVersion=t,o}}},33209:(e,t,n)=>{n.r(t),n.d(t,{buffer:()=>T,changeDefaultSpatialReferenceTolerance:()=>q,clearDefaultSpatialReferenceTolerance:()=>B,clip:()=>d,contains:()=>f,convexHull:()=>M,crosses:()=>l,cut:()=>s,densify:()=>H,difference:()=>v,disjoint:()=>g,distance:()=>p,equals:()=>h,extendedSpatialReferenceInfo:()=>u,flipHorizontal:()=>L,flipVertical:()=>O,generalize:()=>k,geodesicArea:()=>I,geodesicBuffer:()=>b,geodesicDensify:()=>J,geodesicLength:()=>X,intersect:()=>S,intersectLinesToPoints:()=>Y,intersects:()=>y,isSimple:()=>w,nearestCoordinate:()=>_,nearestVertex:()=>D,nearestVertices:()=>z,offset:()=>Z,overlaps:()=>x,planarArea:()=>N,planarLength:()=>j,relate:()=>m,rotate:()=>E,simplify:()=>R,symmetricDifference:()=>P,touches:()=>A,union:()=>V,within:()=>G}),n(59456);var r=n(56507),a=n(49930),i=n(12731),o=n(16930);function c(e){const t=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return t?(0,r.PZ)(o.A,t):o.A.WGS84}function u(e){return a.G.extendedSpatialReferenceInfo(e)}function d(e,t){return a.G.clip(i.hydratedAdapter,c(e),e,t)}function s(e,t){return a.G.cut(i.hydratedAdapter,c(e),e,t)}function f(e,t){return a.G.contains(i.hydratedAdapter,c(e),e,t)}function l(e,t){return a.G.crosses(i.hydratedAdapter,c(e),e,t)}function p(e,t,n){return a.G.distance(i.hydratedAdapter,c(e),e,t,n)}function h(e,t){return a.G.equals(i.hydratedAdapter,c(e),e,t)}function y(e,t){return a.G.intersects(i.hydratedAdapter,c(e),e,t)}function A(e,t){return a.G.touches(i.hydratedAdapter,c(e),e,t)}function G(e,t){return a.G.within(i.hydratedAdapter,c(e),e,t)}function g(e,t){return a.G.disjoint(i.hydratedAdapter,c(e),e,t)}function x(e,t){return a.G.overlaps(i.hydratedAdapter,c(e),e,t)}function m(e,t,n){return a.G.relate(i.hydratedAdapter,c(e),e,t,n)}function w(e){return a.G.isSimple(i.hydratedAdapter,c(e),e)}function R(e){return a.G.simplify(i.hydratedAdapter,c(e),e)}function M(e,t=!1){return a.G.convexHull(i.hydratedAdapter,c(e),e,t)}function v(e,t){return a.G.difference(i.hydratedAdapter,c(e),e,t)}function P(e,t){return a.G.symmetricDifference(i.hydratedAdapter,c(e),e,t)}function S(e,t){return a.G.intersect(i.hydratedAdapter,c(e),e,t)}function V(e,t=null){return a.G.union(i.hydratedAdapter,c(e),e,t)}function Z(e,t,n,r,o,u){return a.G.offset(i.hydratedAdapter,c(e),e,t,n,r,o,u)}function T(e,t,n,r=!1){return a.G.buffer(i.hydratedAdapter,c(e),e,t,n,r)}function b(e,t,n,r,o,u){return a.G.geodesicBuffer(i.hydratedAdapter,c(e),e,t,n,r,o,u)}function _(e,t,n=!0){return a.G.nearestCoordinate(i.hydratedAdapter,c(e),e,t,n)}function D(e,t){return a.G.nearestVertex(i.hydratedAdapter,c(e),e,t)}function z(e,t,n,r){return a.G.nearestVertices(i.hydratedAdapter,c(e),e,t,n,r)}function C(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function E(e,t,n){if(null==e)throw new W;const r=e.spatialReference;if(null==(n=n??C(e)))throw new W;const i=e.constructor.fromJSON(a.G.rotate(e,t,n));return i.spatialReference=r,i}function L(e,t){if(null==e)throw new W;const n=e.spatialReference;if(null==(t=t??C(e)))throw new W;const r=e.constructor.fromJSON(a.G.flipHorizontal(e,t));return r.spatialReference=n,r}function O(e,t){if(null==e)throw new W;const n=e.spatialReference;if(null==(t=t??C(e)))throw new W;const r=e.constructor.fromJSON(a.G.flipVertical(e,t));return r.spatialReference=n,r}function k(e,t,n,r){return a.G.generalize(i.hydratedAdapter,c(e),e,t,n,r)}function H(e,t,n){return a.G.densify(i.hydratedAdapter,c(e),e,t,n)}function J(e,t,n,r=0){return a.G.geodesicDensify(i.hydratedAdapter,c(e),e,t,n,r)}function N(e,t){return a.G.planarArea(i.hydratedAdapter,c(e),e,t)}function j(e,t){return a.G.planarLength(i.hydratedAdapter,c(e),e,t)}function I(e,t,n){return a.G.geodesicArea(i.hydratedAdapter,c(e),e,t,n)}function X(e,t,n){return a.G.geodesicLength(i.hydratedAdapter,c(e),e,t,n)}function Y(e,t){return a.G.intersectLinesToPoints(i.hydratedAdapter,c(e),e,t)}function q(e,t){a.G.changeDefaultSpatialReferenceTolerance(e,t)}function B(e){a.G.clearDefaultSpatialReferenceTolerance(e)}class W extends Error{constructor(){super("Illegal Argument Exception")}}}}]);