"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[3148,2442],{76604:(e,t,r)=>{r.r(t),r.d(t,{default:()=>p});var o=r(43697),i=r(20102),n=r(5600),s=(r(75215),r(67676),r(80442),r(52011)),a=r(19238);function l(e){return(t,r,o)=>{if(!t)return null;const i=t[0].orientedImageryProperties;return i?.[e]??null}}let y=class extends a.default{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){const{elevationSource:e,demPathPrefix:t,demPathSuffix:r}=this;if(!e?.url?.trim())return e;let o=e.url.trim();return t?.trim()&&(o=`${t.trim()}/${o}`),r?.trim()&&(o+=`/${r.trim()}`),{...e,url:o}}_verifySource(){if(super._verifySource(),"point"!==this.geometryType)throw new i.Z("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("cameraHeading")}}})],y.prototype,"cameraHeading",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("cameraHeight")}}})],y.prototype,"cameraHeight",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("cameraPitch")}}})],y.prototype,"cameraPitch",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("cameraRoll")}}})],y.prototype,"cameraRoll",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("coveragePercent")}}})],y.prototype,"coveragePercent",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("demPathPrefix")}}})],y.prototype,"demPathPrefix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("demPathSuffix")}}})],y.prototype,"demPathSuffix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("depthImagePathPrefix")}}})],y.prototype,"depthImagePathPrefix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("depthImagePathSuffix")}}})],y.prototype,"depthImagePathSuffix",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("farDistance")}}})],y.prototype,"farDistance",void 0),(0,o._)([(0,n.Cb)({json:{write:!0}})],y.prototype,"geometryType",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("horizontalFieldOfView")}}})],y.prototype,"horizontalFieldOfView",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("horizontalMeasurementUnit")}}})],y.prototype,"horizontalMeasurementUnit",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("imagePathPrefix")}}})],y.prototype,"imagePathPrefix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("imagePathSuffix")}}})],y.prototype,"imagePathSuffix",void 0),(0,o._)([(0,n.Cb)({json:{type:Number,write:!0,read:{source:"layers",reader:l("imageRotation")}}})],y.prototype,"imageRotation",void 0),(0,o._)([(0,n.Cb)({type:Number,json:{write:!0,read:{source:"layers",reader:l("maximumDistance")}}})],y.prototype,"maximumDistance",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("nearDistance")}}})],y.prototype,"nearDistance",void 0),(0,o._)([(0,n.Cb)({type:["OrientedImageryLayer"]})],y.prototype,"operationalLayerType",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("orientedImageryType")}}})],y.prototype,"orientedImageryType",void 0),(0,o._)([(0,n.Cb)({json:{read:!1},value:"oriented-imagery",readOnly:!0})],y.prototype,"type",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("verticalFieldOfView")}}})],y.prototype,"verticalFieldOfView",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("verticalMeasurementUnit")}}})],y.prototype,"verticalMeasurementUnit",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("videoPathPrefix")}}})],y.prototype,"videoPathPrefix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("videoPathSuffix")}}})],y.prototype,"videoPathSuffix",void 0),(0,o._)([(0,n.Cb)({json:{write:!0,read:{source:"layers",reader:l("elevationSource")}}})],y.prototype,"elevationSource",void 0),(0,o._)([(0,n.Cb)()],y.prototype,"effectiveElevationSource",null),y=(0,o._)([(0,s.j)("esri.layers.OrientedImageryLayer")],y);const p=y},16451:(e,t,r)=>{r.d(t,{Z:()=>c});var o=r(43697),i=r(2368),n=r(96674),s=r(5600),a=(r(75215),r(67676),r(80442),r(71715)),l=r(52011),y=r(30556),p=r(72729),u=r(70082);let d=class extends((0,i.J)(n.wq)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const r of Object.keys(e))t[r]=(0,p.im)(e[r]);return t}writeDomains(e,t){const r={};for(const t of Object.keys(e))e[t]&&(r[t]=e[t]?.toJSON());t.domains=r}};(0,o._)([(0,s.Cb)({json:{write:!0}})],d.prototype,"id",void 0),(0,o._)([(0,s.Cb)({json:{write:!0}})],d.prototype,"name",void 0),(0,o._)([(0,s.Cb)({json:{write:!0}})],d.prototype,"domains",void 0),(0,o._)([(0,a.r)("domains")],d.prototype,"readDomains",null),(0,o._)([(0,y.c)("domains")],d.prototype,"writeDomains",null),(0,o._)([(0,s.Cb)({type:[u.Z],json:{write:!0}})],d.prototype,"templates",void 0),d=(0,o._)([(0,l.j)("esri.layers.support.FeatureType")],d);const c=d},28694:(e,t,r)=>{r.d(t,{p:()=>i});var o=r(69285);function i(e,t,r){if(!r||!r.features||!r.hasZ)return;const i=(0,o.k)(r.geometryType,t,e.outSpatialReference);if(null!=i)for(const e of r.features)i(e.geometry)}},74889:(e,t,r)=>{r.d(t,{Z:()=>S});var o,i=r(43697),n=r(66577),s=r(38171),a=r(35454),l=r(96674),y=r(22974),p=r(5600),u=(r(75215),r(71715)),d=r(52011),c=r(30556),m=r(82971),f=r(33955),h=r(1231);const g=new a.X({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let v=o=class extends l.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=m.Z.fromJSON(t.spatialReference),o=[];for(let t=0;t<e.length;t++){const i=e[t],n=s.Z.fromJSON(i),a=i.geometry&&i.geometry.spatialReference;null==n.geometry||a||(n.geometry.spatialReference=r);const l=i.aggregateGeometries,y=n.aggregateGeometries;if(l&&null!=y)for(const e in y){const t=y[e],o=l[e],i=o?.spatialReference;null==t||i||(t.spatialReference=r)}o.push(n)}return o}writeGeometryType(e,t,r,o){if(e)return void g.write(e,t,r,o);const{features:i}=this;if(i)for(const e of i)if(e&&null!=e.geometry)return void g.write(e.geometry.type,t,r,o)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,o=(0,f.im)(e);return o&&!r&&t.spatialReference&&(o.spatialReference=m.Z.fromJSON(t.spatialReference)),o}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new o(this.cloneProperties())}cloneProperties(){return(0,y.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e&&e[r];o.geometry=t&&t.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,r],translate:[o,i]}=e,n=this.features,s=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-o)/t)),(e=>Math.round((i-e)/r)));for(let e=0,t=n.length;e<t;e++)s?.(n[e].geometry)||(n.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[o,i],scale:[n,s]}=r;let a=null,l=null;if(this.hasZ&&null!=r?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=r;a=r=>r*t+e}if(this.hasM&&null!=r?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=r;l=r=>null==r?r:r*t+e}const y=this._getHydrationFunction(e,(e=>e*n+o),(e=>i-e*s),a,l);for(const{geometry:e}of t)null!=e&&y&&y(e);return this.transform=null,this}_quantizePoints(e,t,r){let o,i;const n=[];for(let s=0,a=e.length;s<a;s++){const a=e[s];if(s>0){const e=t(a[0]),s=r(a[1]);e===o&&s===i||(n.push([e-o,s-i]),o=e,i=s)}else o=t(a[0]),i=r(a[1]),n.push([o,i])}return n.length>0?n:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=(0,f.oU)(e)?e.rings:e.paths,i=[];for(let e=0,n=o.length;e<n;e++){const n=o[e],s=this._quantizePoints(n,t,r);s&&i.push(s)}return i.length>0?((0,f.oU)(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,r);return o&&o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r,o,i){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y),o&&(e.z=o(e.z))}:"polyline"===e||"polygon"===e?e=>{const n=(0,f.oU)(e)?e.rings:e.paths;let s,a;for(let e=0,o=n.length;e<o;e++){const o=n[e];for(let e=0,i=o.length;e<i;e++){const i=o[e];e>0?(s+=i[0],a+=i[1]):(s=i[0],a=i[1]),i[0]=t(s),i[1]=r(a)}}if(o&&i)for(let e=0,t=n.length;e<t;e++){const t=n[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2]),r[3]=i(r[3])}}else if(o)for(let e=0,t=n.length;e<t;e++){const t=n[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2])}}else if(i)for(let e=0,t=n.length;e<t;e++){const t=n[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=i(r[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax),o&&null!=e.zmax&&null!=e.zmin&&(e.zmax=o(e.zmax),e.zmin=o(e.zmin)),i&&null!=e.mmax&&null!=e.mmin&&(e.mmax=i(e.mmax),e.mmin=i(e.mmin))}:"multipoint"===e?e=>{const n=e.points;let s,a;for(let e=0,o=n.length;e<o;e++){const o=n[e];e>0?(s+=o[0],a+=o[1]):(s=o[0],a=o[1]),o[0]=t(s),o[1]=r(a)}if(o&&i)for(let e=0,t=n.length;e<t;e++){const t=n[e];t[2]=o(t[2]),t[3]=i(t[3])}else if(o)for(let e=0,t=n.length;e<t;e++){const t=n[e];t[2]=o(t[2])}else if(i)for(let e=0,t=n.length;e<t;e++){const t=n[e];t[2]=i(t[2])}}:null}};(0,i._)([(0,p.Cb)({type:String,json:{write:!0}})],v.prototype,"displayFieldName",void 0),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"exceededTransferLimit",void 0),(0,i._)([(0,p.Cb)({type:[s.Z],json:{write:!0}})],v.prototype,"features",void 0),(0,i._)([(0,u.r)("features")],v.prototype,"readFeatures",null),(0,i._)([(0,p.Cb)({type:[h.Z],json:{write:!0}})],v.prototype,"fields",void 0),(0,i._)([(0,p.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:g.read}}})],v.prototype,"geometryType",void 0),(0,i._)([(0,c.c)("geometryType")],v.prototype,"writeGeometryType",null),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasM",void 0),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasZ",void 0),(0,i._)([(0,p.Cb)({types:n.qM,json:{write:!0}})],v.prototype,"queryGeometry",void 0),(0,i._)([(0,u.r)("queryGeometry")],v.prototype,"readQueryGeometry",null),(0,i._)([(0,p.Cb)({type:m.Z,json:{write:!0}})],v.prototype,"spatialReference",void 0),(0,i._)([(0,c.c)("spatialReference")],v.prototype,"writeSpatialReference",null),(0,i._)([(0,p.Cb)({json:{write:!0}})],v.prototype,"transform",void 0),v=o=(0,i._)([(0,d.j)("esri.rest.support.FeatureSet")],v),v.prototype.toJSON.isDefaultToJSON=!0;const S=v},58333:(e,t,r)=>{r.d(t,{ET:()=>n,I4:()=>i,eG:()=>l,lF:()=>s,lj:()=>p,qP:()=>a,wW:()=>y});const o=[252,146,31,255],i={type:"esriSMS",style:"esriSMSCircle",size:6,color:o,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},n={type:"esriSLS",style:"esriSLSSolid",width:.75,color:o},s={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},a={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},l={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},y={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},p={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}}}]);