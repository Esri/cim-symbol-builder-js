"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[1728],{71728:(e,t,a)=>{a.r(t),a.d(t,{default:()=>A});var i,n,s=a(90237),o=(a(59456),a(5503)),r=a(49186),l=a(53966),h=a(91869),d=a(74887),u=a(10107),c=(a(44208),a(87811),a(40608)),p=a(4146),y=a(90708),g=a(92722);(n=i||(i={})).MULTIPLIER="multiplier",n.ABSOLUTE="absoluteValue";var m=a(61184),f=a(70643),L=a(85342),C=a(45654),M=a(63074),k=a(25036),w=a(8460),b=a(71402),T=a(5443),E=a(86738),N=a(82799);let I=class extends((0,M.dM)((0,k.j)(p.A))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new o.A,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new T.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new o.A,this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new r.A("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new r.A("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((n,s)=>{const o=this._graphTypeLookup.get(s);if(!o)return l.A.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);"relationship"===o.type?t.has(s)||(t.add(s),i.push(o)):"entity"===o.type?t.has(s)||(t.add(s),a.push(o)):(l.A.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new m.P({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){return this.addResolvingPromise(new Promise((t=>{(0,b.fetchKnowledgeGraph)(this.url).then((async a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),await(0,L.qN)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof g.A?e.linkChartLocation:e.linkChartLocation?(0,y.Ux)(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?this.entityLinkChartDiagramLookup.set(e.id,t):this.relationshipLinkChartDiagramLookup.set(e.id,t)})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{(0,d.Te)(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),await(0,L.qN)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,C.aq)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(i)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let i=[];for(const t of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id)&&i.push(t);if(t){const e=new Set,t=[];for(const t of i)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const a of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(a);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});i=i.concat(t)}this.dataManager.removeFromLayer(i);for(const e of i)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);a&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const n=[];return this.layers.forEach((e=>{n.push(e.refreshCachedQueryEngine())})),await Promise.all(n),this._refreshNamedTypes(),i}async expand(e,t){const a=await this.dataManager.getConnectedRecordIds(e,t),i=a.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=this._createSublayer(e);t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=this._createSublayer(e);t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=(0,h.tE)(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof g.A)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation);else{const a=(0,y.Ux)(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null)}}))}))}async calculateLinkChartLayout(e="RADIAL_TREE",t){const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const s=new Map,o=new Map,h=new Map,d=new Map,u=new Uint8Array(a.length),c=new Float64Array(a.length),p=new Float64Array(a.length),g=new Float64Array(a.length),m=new Float64Array(a.length),f=new Uint32Array(i.length),C=new Uint32Array(i.length),M=new Float64Array(i.length),k=new Float64Array(i.length),b=[],I=new T.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let A,D="FORCE_DIRECTED",x=0,_=0;const R=w.i6.apply;switch(D="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,D){case"FORCE_DIRECTED":A=w.pM.apply;break;case"COMMUNITY":A=w.Tu.apply;break;case"HIERARCHICAL":A=w.$C.apply;break;case"RADIAL_TREE":A=w.vJ.apply;break;case"SMART_TREE":A=w.Xq.apply;break;default:A=w.Wg.apply}let O=!1;a.forEach((({typeName:a,feature:i})=>{if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e&&t?.lockedNodeLocations?.has(i.attributes[L.dr])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)?u[x]=w.tx.IsGeographic:u[x]=w.tx.None;const n=t.lockedNodeLocations.get(i.attributes[L.dr]);c[x]=n.x,p[x]=n.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)){u[x]=w.tx.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],n=this.dataManager.geographicLookup.get(a)?.geometryType;switch(n){case"esriGeometryPoint":c[x]=t?.x,p[x]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(c[x]=e.x,p[x]=e.y):u[x]=w.tx.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(c[x]=e.x,p[x]=e.y):u[x]=w.tx.IsMovable;break;default:u[x]=w.tx.IsMovable}(null==c[x]||null==p[x]||Number.isNaN(c[x])||Number.isNaN(p[x]))&&(u[x]=w.tx.IsMovable,c[x]=0,p[x]=0)}else if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){!O&&t?.lockedNodeLocations?.has(i.attributes[L.dr])&&(O=!0);const e=t?.timeInfoByTypeName?.get(a),n=e?.startField,s=n&&e?.startField?i.attributes[n]:null;g[x]=s?new Date(s).getTime():NaN;const o=e?.endField,r=o&&e?.endField?i.attributes[o]:null;m[x]=r?new Date(r).getTime():NaN,c[x]=0,p[x]=0,u[x]=w.tx.IsMovable}else u[x]=w.tx.IsMovable,c[x]=0,p[x]=0;d.set(i.attributes[L.dr],x),b[x]={feature:i,typeName:a},x++})),O&&l.A.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let v=!1;const G=new Map;i.forEach((a=>{const i=a.feature.attributes[L.Cz],s=a.feature.attributes[L.KQ],o=d.get(i),r=d.get(s),l=t?.timeInfoByTypeName?.get(a.typeName),h=t?.timeInfoByTypeName?l?.startField:null,u=h?a.feature.attributes[h]:null,c=l?.endField,p=c?a.feature.attributes[c]:null;if(void 0!==o&&void 0!==r){let t=i+"-"+s;"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(t=t+"-"+u+"-"+p);const l=G.get(t),h=l?.has(a.typeName);h||(f[_]=o,C[_]=r,"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(M[_]=u?new Date(u).getTime():NaN,k[_]=p?new Date(p).getTime():NaN),void 0===l?G.set(t,new Map([[a.typeName,_]])):l.set(a.typeName,_),_++),n.push(a)}else v=!0,this.relationshipLinkChartDiagramLookup.set(i,null)})),v&&l.A.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const P=this._validateLayoutSettings(e,t),S=this._convertLayoutSettingsToCalculationSettings(P);await(0,w.Hh)();let H=!1,U=null;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){let a;({success:H,links:U,graphics:a}=R(u,c,p,g,m,f.subarray(0,_),C.subarray(0,_),M.subarray(0,_),k.subarray(0,_),"CHRONOLOGICAL_MULTIPLE"===e,t?.chronologicalOptions??{})),H&&(this.chronologicalAuxiliaryGraphics=a)}else({success:H,links:U}=A(u,c,p,f.subarray(0,_),C.subarray(0,_),S.computationBudgetTime,S.idealEdgeLengthMultiplier,S.repulsionRadiusMultiplier));if(!H)throw new r.A("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let e=0;e<b.length;e++){if(p[e]>84.9999?p[e]=84.9999:p[e]<-84.9999&&(p[e]=-84.9999),c[e]>179.9999?c[e]=179.9999:c[e]<-179.9999&&(c[e]=-179.9999),b[e].feature.attributes[L.T1]=new E.A(c[e],p[e]),s.has(b[e].typeName)){const t=s.get(b[e].typeName);t?.set(b[e].feature.attributes[L.dr],b[e].feature)}else{const t=new Map;t.set(b[e].feature.attributes[L.dr],b[e].feature),s.set(b[e].typeName,t)}h.set(b[e].feature.attributes[L.dr],b[e].feature);const t=(0,y.Ux)(b[e].feature.attributes[L.T1]);this.entityLinkChartDiagramLookup.set(b[e].feature.attributes[L.dr],b[e].feature.attributes[L.T1]?t:null),b[e].feature.attributes[L.T1].x<I.xmin&&(I.xmin=b[e].feature.attributes[L.T1].x),b[e].feature.attributes[L.T1].x>I.xmax&&(I.xmax=b[e].feature.attributes[L.T1].x),b[e].feature.attributes[L.T1].y<I.ymin&&(I.ymin=b[e].feature.attributes[L.T1].y),b[e].feature.attributes[L.T1].y>I.ymax&&(I.ymax=b[e].feature.attributes[L.T1].y)}if(this.linkChartExtent.xmin=I.xmin,this.linkChartExtent.xmax=I.xmax,this.linkChartExtent.ymin=I.ymin,this.linkChartExtent.ymax=I.ymax,!U)throw new r.A("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const F=new Map,B=new Map,z=new Map,Z=new Set;for(let a=0;a<n.length;a++){const i=[],s=n[a],r=s.feature.attributes[L.Cz],u=s.feature.attributes[L.KQ];let c=r+"-"+u;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){const e=t?.timeInfoByTypeName?.get(s.typeName),a=t?.timeInfoByTypeName?e?.startField:null,i=a?s.feature.attributes[a]:null,n=e?.endField;c+="-"+i+"-"+(n?s.feature.attributes[n]:null)}const p=G.get(c).get(s.typeName),g=0===p?0:U?.vertexEndIndex[p-1];if(!Z.has(p)){if(Z.add(p),U.types[p]===w.J.Recursive){const e=[U.vertices[2*g],U.vertices[2*g+1]],t=[U.vertices[2*(g+1)],U.vertices[2*(g+1)+1]],a=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],n=[a[0]-e[0],a[1]-e[1]],s=[a[0]+n[1],a[1]-n[0]],o=[a[0]-n[1],a[1]+n[0]];i.push(e),i.push(s),i.push(t),i.push(o),i.push(e)}else{if(U.types[p]!==w.J.Regular){l.A.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=g;e<U.vertexEndIndex[p];e++)i.push([U.vertices[2*e],U.vertices[2*e+1]])}if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e){const e=b[d.get(r)]?.feature.attributes[L.T1],t=b[d.get(u)]?.feature.attributes[L.T1];i[0][0]===e.x&&i[0][1]===e.y||(i[0]=[e.x,e.y]),i[i.length-1][0]===t.x&&i[i.length-1][1]===t.y||(i[i.length-1]=[t.x,t.y])}for(let e=1;e<i.length-1;e++)i[e][1]>85.5?i[e][1]=85.5:i[e][1]<-85.5&&(i[e][1]=-85.5),i[e][0]>179.9999?i[e][0]=179.9999:i[e][0]<-179.9999&&(i[e][0]=-179.9999);F.has(c)?F.get(c).push(i):F.set(c,[i])}const m=F.get(c);B.has(c)||(B.set(c,new Map),z.set(c,new Map));const f=B.get(c),C=z.get(c);f.has(s.typeName)||(f.set(s.typeName,m.shift()),C.set(s.typeName,0));const M=f.get(s.typeName);C.set(s.typeName,C.get(s.typeName)+1);const k=new N.A({paths:[M]});if(s.feature.attributes[L.T1]=k,o.has(s.typeName)){const e=o.get(s.typeName);e?.set(s.feature.attributes[L.dr],s.feature)}else{const e=new Map;e.set(s.feature.attributes[L.dr],s.feature),o.set(s.typeName,e)}h.set(s.feature.attributes[L.dr],s.feature);const T=(0,y.Ux)(s.feature.attributes[L.T1]);this.relationshipLinkChartDiagramLookup.set(s.feature.attributes[L.dr],s.feature.attributes[L.T1]?T:null)}for(const e of n)e.feature.attributes[L.M1]=z.get(e.feature.attributes[L.Cz]+"-"+e.feature.attributes[L.KQ])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutOptions:P},{nodes:s,links:o,idMap:h}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new E.A({x:i.x,y:i.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!a.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e){let t=[];for(const e of this.dataManager.relationshipTypeNames){const a=this.sublayerIdsCache.get(e);a&&(t=t.concat(Array.from(a.keys())))}const a=await this.dataManager.getRelationshipsBetweenNodes(e,t);return await this._handleNewRecords(a),{records:a}}async connectFromEntities(e){let t=[];for(const e of this.dataManager.relationshipTypeNames){const a=this.sublayerIdsCache.get(e);a&&(t=t.concat(Array.from(a.keys())))}let a=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(a=a.concat(Array.from(t)))}const i=await this.dataManager.getRelationshipsFromNodes(e,a,t);return await this._handleNewRecords(i),{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="RADIAL_TREE",t){const a=new Map;this.layers.forEach((e=>{a.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),t.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const e of t){const t=this._graphTypeLookup.get(e);if(t){const a=this._createSublayer(t);"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),a.geometryType?this.layers.push(a):this.tables.push(a),this.dataManager.sublayerCaches.set(e,new Map)}}await(0,L.qN)(this,t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=new Map;for(const[e,t]of this.entityLinkChartDiagramLookup.entries())t&&a.lockedNodeLocations.set(e,new E.A(t.coords[0],t.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const s=(0,y.Ux)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,s):this.entityLinkChartDiagramLookup.set(n,s),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[L.Cz]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[L.KQ]);if(t&&a){const i=(0,y.Ux)(new N.A({paths:[[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[L.dr],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[L.dr],null)}))}))):await this._calculateLayoutWithSublayerTimeInfo(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this._calculateLayoutWithSublayerTimeInfo("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),n={};if(!new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC","CHRONOLOGICAL_MULTIPLE","CHRONOLOGICAL_SINGLE"]).has(e)||!t)return n;const{computationBudgetTime:s,repulsionRadiusMultiplier:o,idealEdgeLength:r,idealEdgeLengthType:h}=t;if((e=>a(e)&&e>=1)(s)?n.computationBudgetTime=s:void 0!==s&&l.A.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),(e=>a(e)&&e>=1)(o)?n.repulsionRadiusMultiplier=o:void 0!==o&&l.A.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting"),"GEOGRAPHIC"===e&&(void 0!==r||void 0!==h)&&((e=>Object.values(i).includes(e))(h)?n.idealEdgeLengthType=h:void 0!==h&&l.A.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),(e=>a(e)&&e>=0)(r)?n.idealEdgeLength=r:void 0!==r&&l.A.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),("CHRONOLOGICAL_MULTIPLE"===e||"CHRONOLOGICAL_SINGLE"===e)&&t.chronologicalOptions){const e=t.chronologicalOptions;e.durationLineWidth&&e.durationLineWidth<0&&l.A.getLogger(this).warn("Invalid layout durationLineWidth setting, will revert to default setting")}return n}_convertLayoutSettingsToCalculationSettings(e){let t=e.idealEdgeLength;return e.idealEdgeLengthType===i.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new f.A({objectType:e,parentCompositeLayer:this,graphType:e.type})}};(0,s._)([(0,u.MZ)()],I.prototype,"dataPreloadedInLocalCache",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"defaultLinkChartConfig",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"dataManager",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"knowledgeGraph",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"layers",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"entityLinkChartDiagramLookup",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"linkChartExtent",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"memberEntityTypes",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"memberRelationshipTypes",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"sublayerIdsCache",void 0),(0,s._)([(0,u.MZ)()],I.prototype,"tables",void 0),(0,s._)([(0,u.MZ)({json:{read:!1}})],I.prototype,"type",void 0),(0,s._)([(0,u.MZ)({json:{read:!1}})],I.prototype,"chronologicalAuxiliaryGraphics",void 0),I=(0,s._)([(0,c.$)("esri.layers.LinkChartLayer")],I);const A=I}}]);