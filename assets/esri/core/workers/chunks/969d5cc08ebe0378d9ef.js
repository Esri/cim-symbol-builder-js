"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[7756],{67498:(e,t,i)=>{var r;i.d(t,{P:()=>r}),function(e){e[e.Pass=0]="Pass",e[e.Draw=1]="Draw"}(r||(r={}))},1717:(e,t,i)=>{i(80442);var r=i(92604),s=i(70586),n=i(67676),a=i(1533),o=i(49300),h=i(7575),c=i(35371);const l=()=>r.Z.getLogger("esri.views.webgl.BufferObject");class _{static createIndex(e,t,i){return new _(e,c.w0.ELEMENT_ARRAY_BUFFER,t,i)}static createVertex(e,t,i){return new _(e,c.w0.ARRAY_BUFFER,t,i)}static createUniform(e,t,i){if(e.type!==h.zO.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new _(e,c.w0.UNIFORM_BUFFER,t,i)}static createPixelPack(e,t=c.l1.STREAM_READ,i){if(e.type!==h.zO.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const r=new _(e,c.w0.PIXEL_PACK_BUFFER,t);return i&&r.setSize(i),r}static createPixelUnpack(e,t=c.l1.STREAM_DRAW,i){if(e.type!==h.zO.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new _(e,c.w0.PIXEL_UNPACK_BUFFER,t,i)}static createTransformFeedback(e,t=c.l1.STATIC_DRAW,i){if(e.type!==h.zO.WEBGL2)throw new Error("Transform feedback buffers buffers are supported in WebGL2 only!");const r=new _(e,c.w0.TRANSFORM_FEEDBACK_BUFFER,t);return r.setSize(i),r}constructor(e,t,i,r){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(c._g.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,o.zu)(this._context.gl),r&&this.setData(r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===c.w0.ELEMENT_ARRAY_BUFFER?this._indexType===c.g.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===c.w0.ELEMENT_ARRAY_BUFFER||this.bufferType===c.w0.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(c._g.BufferObject,this),this._context=null):this._glName&&l().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&l().error("Buffer size needs to be positive!"),this.bufferType===c.w0.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case c.g.UNSIGNED_SHORT:e*=2;break;case c.g.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===c.w0.ELEMENT_ARRAY_BUFFER&&((0,a.Uc)(e)&&(t/=2,this._indexType=c.g.UNSIGNED_SHORT),(0,a.ZY)(e)&&(t/=4,this._indexType=c.g.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=t?r.bufferData(this.bufferType,t,this.usage):r.bufferData(this.bufferType,e,this.usage),(0,o.zu)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(e,t,i,r){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.usedMemory)&&l().error("offset is out of range!"),i>=r&&l().error("end must be bigger than start!"),(t+(r-i))*e.BYTES_PER_ELEMENT>this.usedMemory&&l().error("An attempt to write beyond the end of the buffer!");const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===h.zO.WEBGL2)n.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,i,r-i);else{const s=0===i&&r===e.length?e:e.subarray(i,r);n.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,s)}(0,o.zu)(n),this._isVAOAware&&this._context.bindVAO(s)}getSubData(e,t=0,i,r){if(this._context.type!==h.zO.WEBGL2)return void l().error("Get buffer subdata is supported in WebGL2 only!");if(i<0||r<0)return void l().error("Problem getting subdata: offset and length were less than zero!");const s=function(e){return(0,n.zG)(e)}(e)?e.BYTES_PER_ELEMENT:1;if(s*((i??0)+(r??0))>e.byteLength)return void l().error("Problem getting subdata: offset and length exceeded destination size!");t+s*(r??0)>this.usedMemory&&l().warn("Potential problem getting subdata: requested data exceeds buffer size!");const a=this._context.gl;this.bufferType===c.w0.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,c.w0.TRANSFORM_FEEDBACK_BUFFER),a.getBufferSubData(c.w0.TRANSFORM_FEEDBACK_BUFFER,t,e,i,r),this._context.unbindBuffer(c.w0.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,c.w0.COPY_READ_BUFFER),a.getBufferSubData(c.w0.COPY_READ_BUFFER,t,e,i,r),this._context.unbindBuffer(c.w0.COPY_READ_BUFFER))}async getSubDataAsync(e,t=0,i,r){this._context.type===h.zO.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(e,t,i,r)):l().error("Get buffer subdata is supported in WebGL2 only!")}}var u=i(4375),d=i(84343),p=i(57088);class f{constructor(e,t,i=null){this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(c._g.FramebufferObject,this);const r=E(t)?t:new p.x(this._context,t);if(this._colorAttachments.set(c.VY.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(c.VY.COLOR_ATTACHMENT0),null!=i)if(function(e){return E(e)||null!=e&&"pixelFormat"in e}(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=E(i)?i:new p.x(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const e=function(e){return null!=e&&"type"in e&&e.type===u.B.RenderBuffer}(i)?i:new d.r(this._context,i);this._depthStencilBuffer=e,this._validateRenderBufferDescriptor(e.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const e=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((e,t)=>this.detachColorTexture(t)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(c._g.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(c.VY.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const e=this._colorAttachments.get(c.VY.COLOR_ATTACHMENT0);return e?.descriptor?.width??0}get height(){const e=this._colorAttachments.get(c.VY.COLOR_ATTACHMENT0);return e?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((e,[t,i])=>e+i.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&E(t)?t:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(e,t=c.VY.COLOR_ATTACHMENT0){if(!e)return;this._validateColorAttachmentPoint(t);const i=e.descriptor;this._validateTextureDescriptor(i),this.detachColorTexture(t)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=c.VY.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(t){if(this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e),this._context.bindFramebuffer(t)}return this._colorAttachments.delete(e),t}}setColorTextureTarget(e,t=c.VY.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(t);i&&this._framebufferTexture2D(i.glName,t,e)}attachDepthStencil(e){if(e)switch(e.type){case u.B.Texture:return this._attachDepthStencilTexture(e);case u.B.RenderBuffer:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){if(null==e)return;const t=e.descriptor;t.pixelFormat!==c.VI.DEPTH_STENCIL&&t.pixelFormat!==c.VI.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==c.Br.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,c.Lu)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,c.Lu)),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){if(null==e)return;const t=e.descriptor;if(this._validateRenderBufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(t);i.framebufferRenderbuffer(c.qi.FRAMEBUFFER,r,i.RENDERBUFFER,e.glName)}this._depthStencilBuffer=e}detachDepthStencilBuffer(){const e=this._depthStencilBuffer;if(e&&this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,i=this._getGLAttachmentPoint(e.descriptor);t.framebufferRenderbuffer(c.qi.FRAMEBUFFER,i,t.RENDERBUFFER,null)}return this._depthStencilBuffer=null,e}copyToTexture(e,t,i,r,s,n,a){(e<0||t<0||s<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const o=a.descriptor;a.descriptor.target!==c.No.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==o?.width||null==o?.height||e+i>this.width||t+r>this.height||s+i>o.width||n+r>o.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const h=this._context,l=h.bindTexture(a,p.x.TEXTURE_UNIT_FOR_UPDATES);h.setActiveTexture(p.x.TEXTURE_UNIT_FOR_UPDATES),h.bindFramebuffer(this),h.gl.copyTexSubImage2D(c.No.TEXTURE_2D,0,s,n,e,t,i,r),h.bindTexture(l,p.x.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,i,r,s,n,a){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),a||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,i,r,s,n,a)}async readPixelsAsync(e,t,i,r,s,n,a){if(this._context.type!==h.zO.WEBGL2)return(0,o.hZ)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(e,t,i,r,s,n,a);const l=this._context.gl,u=_.createPixelPack(this._context,c.l1.STREAM_READ,a.byteLength);this._context.bindBuffer(u),this._context.bindFramebuffer(this),l.readPixels(e,t,i,r,s,n,0),this._context.unbindBuffer(c.w0.PIXEL_PACK_BUFFER),await u.getSubDataAsync(a),u.dispose()}resize(e,t){if(this.width===e&&this.height===t)return;const i={width:e,height:t};T(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((e=>e.resize(i.width,i.height))),this._depthStencilTexture?.resize(i.width,i.height),this._initialized&&(T(i,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=c.qi.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const i=t.createFramebuffer();if(t.bindFramebuffer(e,i),this._colorAttachments.forEach(((t,i)=>this._framebufferTexture2D(t.glName,i,m(t),e))),this._depthStencilBuffer){const i=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e,i,t.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,m(this._depthStencilTexture),e);(0,o.hZ)()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(e,t=c.VY.COLOR_ATTACHMENT0,i=c.No.TEXTURE_2D,r=c.qi.FRAMEBUFFER,s=0){this._context.gl.framebufferTexture2D(r,t,i,e,s)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(c.qi.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthStencilBuffer=(0,s.M2)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,s.M2)(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==c.No.TEXTURE_2D&&e.target!==c.No.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),T(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderBufferDescriptor(e){T(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case c.Tg.DEPTH_COMPONENT16:case c.Tg.DEPTH_COMPONENT24:case c.Tg.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case c.Tg.DEPTH24_STENCIL8:case c.Tg.DEPTH32F_STENCIL8:case c.Tg.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case c.Tg.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===f._MAX_COLOR_ATTACHMENTS){const e=this._context.capabilities.drawBuffers;if(e){const t=this._context.gl;f._MAX_COLOR_ATTACHMENTS=t.getParameter(e.MAX_COLOR_ATTACHMENTS)}else f._MAX_COLOR_ATTACHMENTS=1}const t=e-c.VY.COLOR_ATTACHMENT0;t+1>f._MAX_COLOR_ATTACHMENTS&&r.Z.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${f._MAX_COLOR_ATTACHMENTS} color attachments`)}}function E(e){return null!=e&&"type"in e&&e.type===u.B.Texture}function T(e,t){const i=Math.max(e.width,e.height);if(i>t){r.Z.getLogger("esri.views.webgl.FramebufferObject").warn(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);const s=t/i;return e.width=Math.round(e.width*s),e.height=Math.round(e.height*s),!1}return!0}function m(e){return e.descriptor.target===c.No.TEXTURE_CUBE_MAP?c.No.TEXTURE_CUBE_MAP_POSITIVE_X:c.No.TEXTURE_2D}f._MAX_COLOR_ATTACHMENTS=-1},4375:(e,t,i)=>{var r;i.d(t,{B:()=>r}),function(e){e[e.Texture=0]="Texture",e[e.RenderBuffer=1]="RenderBuffer"}(r||(r={}))},84343:(e,t,i)=>{i.d(t,{r:()=>o});var r=i(7575),s=i(35371),n=i(4375),a=i(8344);class o{constructor(e,t){this._context=e,this._descriptor=t,this.type=n.B.RenderBuffer,this._context.instanceCounter.increment(s._g.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:a,height:o,internalFormat:h,multisampled:c}=t;if(c){if(this._context.type!==r.zO.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,h,a,o)}else i.renderbufferStorage(i.RENDERBUFFER,h,a,o)}get descriptor(){return this._descriptor}get samples(){const e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}get usedMemory(){return(0,a.G)(this._descriptor)}resize(e,t){const i=this._descriptor;if(i.width===e&&i.height===t)return;i.width=e,i.height=t;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(s._g.Renderbuffer,this),this._context=null)}}},8344:(e,t,i)=>{i.d(t,{G:()=>n,Y:()=>s});var r=i(45762);class s{constructor(e,t,i=t){this.internalFormat=e,this.width=t,this.height=i,this.multisampled=!1,this.samples=1}}function n(e){return e.width<=0||e.height<=0||null==e.internalFormat?0:e.width*e.height*(0,r.RG)(e.internalFormat)}},57088:(e,t,i)=>{i.d(t,{x:()=>_});var r=i(20102),s=(i(80442),i(22021)),n=i(49300),a=i(7575),o=i(35371),h=i(4375),c=i(47859);class l extends c.X{constructor(e,t){switch(super(),this.context=e,Object.assign(this,t),this.internalFormat){case o.lP.R16F:case o.lP.R16I:case o.lP.R16UI:case o.lP.R32F:case o.lP.R32I:case o.lP.R32UI:case o.lP.R8_SNORM:case o.lP.R8:case o.lP.R8I:case o.lP.R8UI:this.pixelFormat=o.VI.RED}}static validate(e,t){return new l(e,t)}}let _=class e{constructor(e,t=null,i=null){if(this.type=h.B.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in e)this._descriptor=e,i=t;else{const i=l.validate(e,t);if(!i)throw new r.Z("Texture descriptor invalid");this._descriptor=i}if(this._descriptor.context.type!==a.zO.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),T(this._descriptor.target)))throw new r.Z("3D and array textures are not supported in WebGL1");this._descriptor.target===o.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get usedMemory(){return(0,c.G)(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(o._g.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(e,t){const i=this._descriptor;if(i.width!==e||i.height!==t){if(this._wasImmutablyAllocated)throw new r.Z("Immutable textures can't be resized!");i.width=e,i.height=t,this._descriptor.target===o.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(e=null){for(let t=o.No.TEXTURE_CUBE_MAP_POSITIVE_X;t<=o.No.TEXTURE_CUBE_MAP_NEGATIVE_Z;t++)this._setData(e,t)}setData(e){this._setData(e)}_setData(t,i){if(!this._descriptor.context?.gl)return;const s=this._descriptor.context.gl;(0,n.zu)(s),this._glName||(this._glName=s.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(o._g.Texture,this)),void 0===t&&(t=null);const a=this._descriptor,h=i??a.target,c=T(h);null===t&&(a.width=a.width||4,a.height=a.height||4,c&&(a.depth=a.depth??1));const l=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),u(this._descriptor.context,a),this._configurePixelStorage(),(0,n.zu)(s);const _=this._deriveInternalFormat();if(E(t)){let e="width"in t?t.width:t.codedWidth,i="height"in t?t.height:t.codedHeight;const r=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,i=t.videoHeight),a.width&&a.height,c&&a.depth,a.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(h,_,a.hasMipmap,e,i,r),this._texImage(h,0,_,e,i,r,t),(0,n.zu)(s),a.hasMipmap&&this.generateMipmap(),a.width||(a.width=e),a.height||(a.height=i),c&&!a.depth&&(a.depth=r)}else{const{width:e,height:i,depth:l}=a;if(null==e||null==i)throw new r.Z("Width and height must be specified!");if(c&&null==l)throw new r.Z("Depth must be specified!");if(a.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(h,_,a.hasMipmap,e,i,l),f(t)){const n=t.levels,c=m(h,e,i,l),u=Math.min(c-1,n.length-1);null!=this._descriptor.context.gl2?s.texParameteri(a.target,this._descriptor.context.gl2.TEXTURE_MAX_LEVEL,u):a.hasMipmap=a.hasMipmap&&c===n.length;const d=_;if(!(d in o.q_))throw new r.Z("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel(((e,t,i,r)=>{const s=n[Math.min(e,n.length-1)];this._compressedTexImage(h,e,d,t,i,r,s)}),u)}else this._texImage(h,0,_,e,i,l,t),(0,n.zu)(s),a.hasMipmap&&this.generateMipmap()}d(s,this._descriptor),p(s,this._descriptor),function(e,t){const i=e.capabilities.textureFilterAnisotropic;i&&e.gl.texParameterf(t.target,i.TEXTURE_MAX_ANISOTROPY,t.maxAnisotropy??1)}(this._descriptor.context,this._descriptor),(0,n.zu)(s),this._descriptor.context.bindTexture(l,e.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,i,s,n,a,o,h=0){o||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const c=this._descriptor.context.gl,l=this._descriptor.context.gl2,_=this._descriptor,u=this._deriveInternalFormat(),{pixelFormat:d,dataType:p,target:T,isImmutable:m}=_;if(m&&!this._wasImmutablyAllocated)throw new r.Z("Cannot update immutable texture before allocation!");const g=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES,!0);if((i<0||s<0||n>_.width||a>_.height||i+n>_.width||s+a>_.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),h){if(!l)return void console.error("Webgl2 must be enabled to use dataRowOffset!");c.pixelStorei(l.UNPACK_SKIP_ROWS,h)}if(E(o)?l?l.texSubImage2D(T,t,i,s,n,a,d,p,o):c.texSubImage2D(T,t,i,s,d,p,o):f(o)?c.compressedTexSubImage2D(T,t,i,s,n,a,u,o.levels[t]):c.texSubImage2D(T,t,i,s,n,a,d,p,o),h){if(!l)return void console.error("Webgl2 must be enabled to use dataRowOffset!");c.pixelStorei(l.UNPACK_SKIP_ROWS,0)}this._descriptor.context.bindTexture(g,e.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,i,s,n,a,o,h,c){c||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const l=this._descriptor.context.gl2;if(null==l)throw new r.Z("3D textures are not supported in WebGL1");const _=this._descriptor,u=this._deriveInternalFormat(),{pixelFormat:d,dataType:p,isImmutable:E,target:m}=_;if(E&&!this._wasImmutablyAllocated)throw new r.Z("Cannot update immutable texture before allocation!");T(m)||console.warn("Attempting to set 3D texture data on a non-3D texture");const g=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);if(this._descriptor.context.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),(i<0||s<0||n<0||a>_.width||o>_.height||h>_.depth||i+a>_.width||s+o>_.height||n+h>_.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),f(c))c=c.levels[t],l.compressedTexSubImage3D(m,t,i,s,n,a,o,h,u,c);else{const e=c;l.texSubImage3D(m,t,i,s,n,a,o,h,d,p,e)}this._descriptor.context.bindTexture(g,e.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new r.Z("Cannot add mipmaps to immutable texture after allocation");t.hasMipmap=!0,this._samplingModeDirty=!0,u(this._descriptor.context,t)}t.samplingMode===o.cw.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=o.cw.LINEAR_MIPMAP_NEAREST):t.samplingMode===o.cw.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=o.cw.NEAREST_MIPMAP_NEAREST);const i=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(t.target),this._descriptor.context.bindTexture(i,e.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,u(this._descriptor.context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._descriptor.context.gl,t=this._descriptor;this._samplingModeDirty&&(d(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(p(e,t),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(this._descriptor.context.type===a.zO.WEBGL1)return this._descriptor.internalFormat=this._descriptor.pixelFormat;if(null!=this._descriptor.internalFormat)return this._descriptor.internalFormat===o.VI.DEPTH_STENCIL&&(this._descriptor.internalFormat=o.VI.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case o.Br.FLOAT:switch(this._descriptor.pixelFormat){case o.VI.RGBA:return this._descriptor.internalFormat=o.lP.RGBA32F;case o.VI.RGB:return this._descriptor.internalFormat=o.lP.RGB32F;default:throw new r.Z("Unable to derive format")}case o.Br.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case o.VI.RGBA:return this._descriptor.internalFormat=o.lP.RGBA8;case o.VI.RGB:return this._descriptor.internalFormat=o.lP.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===o.VI.DEPTH_STENCIL?o.VI.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){const e=this._descriptor.context.gl,{unpackAlignment:t,flipped:i,preMultiplyAlpha:r}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r?1:0)}_texStorage(e,t,i,s,n,a){const h=this._descriptor.context.gl2;if(null==h)throw new r.Z("Immutable textures are not supported in WebGL1");if(!(t in o.lP))throw new r.Z("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const c=i?m(e,s,n,a):1;if(T(e)){if(null==a)throw new r.Z("Missing depth dimension for 3D texture upload");h.texStorage3D(e,c,t,s,n,a)}else h.texStorage2D(e,c,t,s,n);this._wasImmutablyAllocated=!0}_texImage(e,t,i,s,n,o,h){const c=this._descriptor.context.gl,l=T(e),{isImmutable:_,pixelFormat:u,dataType:d}=this._descriptor,p=this._descriptor.context.type===a.zO.WEBGL2,f=p?c:null;if(p||!E(h))if(_){if(null!=h){const i=h;if(l){if(null==o)throw new r.Z("Missing depth dimension for 3D texture upload");f.texSubImage3D(e,t,0,0,0,s,n,o,u,d,i)}else c.texSubImage2D(e,t,0,0,s,n,u,d,i)}}else{const a=h;if(l){if(null==o)throw new r.Z("Missing depth dimension for 3D texture upload");f.texImage3D(e,t,i,s,n,o,0,u,d,a)}else c.texImage2D(e,t,i,s,n,0,u,d,a)}else c.texImage2D(e,0,i,u,d,h)}_compressedTexImage(e,t,i,s,n,o,h){const c=this._descriptor.context.gl;let l=null;const _=T(e),u=this._descriptor.isImmutable;if(_){if(this._descriptor.context.type!==a.zO.WEBGL2)throw new r.Z("3D textures are not supported in WebGL1");l=c}if(u){if(null!=h)if(_){if(null==o)throw new r.Z("Missing depth dimension for 3D texture upload");l.compressedTexSubImage3D(e,t,0,0,0,s,n,o,i,h)}else c.compressedTexSubImage2D(e,t,0,0,s,n,i,h)}else if(_){if(null==o)throw new r.Z("Missing depth dimension for 3D texture upload");l.compressedTexImage3D(e,t,i,s,n,o,0,h)}else c.compressedTexImage2D(e,t,i,s,n,0,h)}_forEachMipmapLevel(e,t=1/0){let{width:i,height:s,depth:n,hasMipmap:a,target:h}=this._descriptor;const c=h===o.No.TEXTURE_3D;if(null==i||null==s||c&&null==n)throw new r.Z("Missing texture dimensions for mipmap calculation");for(let r=0;e(r,i,s,n),a&&(1!==i||1!==s||c&&1!==n)&&!(r>=t);++r)i=Math.max(1,i>>1),s=Math.max(1,s>>1),c&&(n=Math.max(1,n>>1))}};function u(e,t){(null!=t.width&&t.width<0||null!=t.height&&t.height<0||null!=t.depth&&t.depth<0)&&console.error("Negative dimension parameters are not allowed!");const i=e.type===a.zO.WEBGL2;i||!t.isImmutable&&!T(t.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),i||null!=t.width&&(0,s.wt)(t.width)&&null!=t.height&&(0,s.wt)(t.height)||("number"==typeof t.wrapMode?t.wrapMode!==o.e8.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):t.wrapMode.s===o.e8.CLAMP_TO_EDGE&&t.wrapMode.t===o.e8.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}function d(e,t){let i=t.samplingMode,r=t.samplingMode;i===o.cw.LINEAR_MIPMAP_NEAREST||i===o.cw.LINEAR_MIPMAP_LINEAR?(i=o.cw.LINEAR,t.hasMipmap||(r=o.cw.LINEAR)):i!==o.cw.NEAREST_MIPMAP_NEAREST&&i!==o.cw.NEAREST_MIPMAP_LINEAR||(i=o.cw.NEAREST,t.hasMipmap||(r=o.cw.NEAREST)),e.texParameteri(t.target,e.TEXTURE_MAG_FILTER,i),e.texParameteri(t.target,e.TEXTURE_MIN_FILTER,r)}function p(e,t){"number"==typeof t.wrapMode?(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode.t))}function f(e){return null!=e&&"type"in e&&"compressed"===e.type}function E(e){return null!=e&&!f(e)&&!function(e){return null!=e&&"byteLength"in e}(e)}function T(e){return e===o.No.TEXTURE_3D||e===o.No.TEXTURE_2D_ARRAY}function m(e,t,i,r=1){let s=Math.max(t,i);return e===o.No.TEXTURE_3D&&(s=Math.max(s,r)),Math.round(Math.log(s)/Math.LN2)+1}_.TEXTURE_UNIT_FOR_UPDATES=0},47859:(e,t,i)=>{i.d(t,{G:()=>a,X:()=>n});var r=i(35371),s=i(45762);class n{constructor(e=0,t=e){this.width=e,this.height=t,this.target=r.No.TEXTURE_2D,this.pixelFormat=r.VI.RGBA,this.dataType=r.Br.UNSIGNED_BYTE,this.samplingMode=r.cw.LINEAR,this.wrapMode=r.e8.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}}function a(e){return e.width<=0||e.height<=0?0:e.width*e.height*(e.hasMipmap?4/3:1)*(null==e.internalFormat?4:(0,s.RG)(e.internalFormat))}},45762:(e,t,i)=>{i.d(t,{RG:()=>s}),i(80442),i(49300);var r=i(35371);function s(e){switch(e){case r.VI.ALPHA:case r.VI.LUMINANCE:case r.VI.RED:case r.VI.RED_INTEGER:case r.lP.R8:case r.lP.R8I:case r.lP.R8UI:case r.lP.R8_SNORM:case r.Tg.STENCIL_INDEX8:return 1;case r.VI.LUMINANCE_ALPHA:case r.VI.RG:case r.VI.RG_INTEGER:case r.lP.RGBA4:case r.lP.R16F:case r.lP.R16I:case r.lP.R16UI:case r.lP.RG8:case r.lP.RG8I:case r.lP.RG8UI:case r.lP.RG8_SNORM:case r.lP.RGB565:case r.lP.RGB5_A1:case r.Tg.DEPTH_COMPONENT16:return 2;case r.VI.DEPTH_COMPONENT:case r.VI.RGB:case r.VI.RGB_INTEGER:case r.lP.RGB8:case r.lP.RGB8I:case r.lP.RGB8UI:case r.lP.RGB8_SNORM:case r.lP.SRGB8:case r.Tg.DEPTH_COMPONENT24:return 3;case r.VI.DEPTH_STENCIL:case r.VI.DEPTH24_STENCIL8:case r.VI.RGBA:case r.VI.RGBA_INTEGER:case r.lP.RGBA8:case r.lP.R32F:case r.lP.R11F_G11F_B10F:case r.lP.RG16F:case r.lP.R32I:case r.lP.R32UI:case r.lP.RG16I:case r.lP.RG16UI:case r.lP.RGBA8I:case r.lP.RGBA8UI:case r.lP.RGBA8_SNORM:case r.lP.SRGB8_ALPHA8:case r.lP.RGB9_E5:case r.lP.RGB10_A2UI:case r.lP.RGB10_A2:case r.Tg.DEPTH_STENCIL:case r.Tg.DEPTH_COMPONENT32F:case r.Tg.DEPTH24_STENCIL8:return 4;case r.Tg.DEPTH32F_STENCIL8:return 5;case r.lP.RGB16F:case r.lP.RGB16I:case r.lP.RGB16UI:return 6;case r.lP.RG32F:case r.lP.RG32I:case r.lP.RG32UI:case r.lP.RGBA16F:case r.lP.RGBA16I:case r.lP.RGBA16UI:return 8;case r.lP.RGB32F:case r.lP.RGB32I:case r.lP.RGB32UI:return 12;case r.lP.RGBA32F:case r.lP.RGBA32I:case r.lP.RGBA32UI:return 16;case r.q_.COMPRESSED_RGB_S3TC_DXT1_EXT:case r.q_.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case r.q_.COMPRESSED_RGBA_S3TC_DXT3_EXT:case r.q_.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case r.q_.COMPRESSED_R11_EAC:case r.q_.COMPRESSED_SIGNED_R11_EAC:case r.q_.COMPRESSED_RGB8_ETC2:case r.q_.COMPRESSED_SRGB8_ETC2:case r.q_.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case r.q_.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case r.q_.COMPRESSED_RG11_EAC:case r.q_.COMPRESSED_SIGNED_RG11_EAC:case r.q_.COMPRESSED_RGBA8_ETC2_EAC:case r.q_.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}i(11335)},49300:(e,t,i)=>{i.d(t,{CG:()=>c,hZ:()=>h,zu:()=>l});var r=i(20102),s=i(80442),n=i(92604);const a=()=>n.Z.getLogger("esri.views.webgl.checkWebGLError"),o=!!(0,s.Z)("enable-feature:webgl-debug");function h(){return o}function c(){return o}function l(e){if(h()){const t=e.getError();if(t){const i=function(e,t){switch(t){case e.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case e.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case e.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case e.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case e.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case e.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(e,t),s=(new Error).stack;a().error(new r.Z("webgl-error","WebGL error occurred",{message:i,stack:s}))}}}},7575:(e,t,i)=>{i.d(t,{Sh:()=>a,kr:()=>n,zO:()=>r});var r,s=i(80442);function n(e,t,i={}){const s=t===r.WEBGL1?"webgl":"webgl2";return e.getContext(s,i)||null}function a(e){if("3d"===e)return[r.WEBGL2];const t=(0,s.Z)("esri-force-webgl");return t===r.WEBGL1||t===r.WEBGL2?[t]:[r.WEBGL2]}!function(e){e[e.WEBGL1=1]="WEBGL1",e[e.WEBGL2=2]="WEBGL2"}(r||(r={}))},11335:(e,t,i)=>{i(35371)}}]);