"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[5900],{98453:(e,t,n)=>{n.d(t,{m:()=>o});const o=new(n(66552).J)({esriFieldTypeSmallInteger:"small-integer",esriFieldTypeInteger:"integer",esriFieldTypeSingle:"single",esriFieldTypeDouble:"double",esriFieldTypeLong:"long",esriFieldTypeString:"string",esriFieldTypeDate:"date",esriFieldTypeOID:"oid",esriFieldTypeGeometry:"geometry",esriFieldTypeBlob:"blob",esriFieldTypeRaster:"raster",esriFieldTypeGUID:"guid",esriFieldTypeGlobalID:"global-id",esriFieldTypeXML:"xml",esriFieldTypeBigInteger:"big-integer",esriFieldTypeDateOnly:"date-only",esriFieldTypeTimeOnly:"time-only",esriFieldTypeTimestampOffset:"timestamp-offset"})},46851:(e,t,n)=>{n.d(t,{MA:()=>d,m0:()=>w,wH:()=>p});var o=n(49186),r=n(4718),i=n(53966),c=n(37203),s=n(46540);const l=()=>i.A.getLogger("esri.views.3d.layers.i3s.I3SBinaryReader");function a(e,t,n){let r="",i=0;for(;i<n;){const c=e[t+i];if(c<128)r+=String.fromCharCode(c),i++;else if(c>=192&&c<224){if(i+1>=n)throw new o.A("utf8-decode-error","UTF-8 Decode failed. Two byte character was truncated.");const s=(31&c)<<6|63&e[t+i+1];r+=String.fromCharCode(s),i+=2}else if(c>=224&&c<240){if(i+2>=n)throw new o.A("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const s=(15&c)<<12|(63&e[t+i+1])<<6|63&e[t+i+2];r+=String.fromCharCode(s),i+=3}else{if(!(c>=240&&c<248))throw new o.A("utf8-decode-error","UTF-8 Decode failed. Invalid multi byte sequence.");{if(i+3>=n)throw new o.A("utf8-decode-error","UTF-8 Decode failed. Multi byte character was truncated.");const s=(7&c)<<18|(63&e[t+i+1])<<12|(63&e[t+i+2])<<6|63&e[t+i+3];if(s>=65536){const e=55296+(s-65536>>10),t=56320+(1023&s);r+=String.fromCharCode(e,t)}else r+=String.fromCharCode(s);i+=4}}}return r}function u(e,t){const n={byteOffset:0,byteCount:0,fields:Object.create(null)};let o=0;for(let r=0;r<t.length;r++){const i=t[r],c=i.valueType||i.type,s=h[c];n.fields[i.property]=s(e,o),o+=m[c].BYTES_PER_ELEMENT}return n.byteCount=o,n}function f(e,t,n){const r=[];let i,c,s=0;for(c=0;c<e;c+=1){if(i=t[c],i>0){if(r.push(a(n,s,i-1)),0!==n[s+i-1])throw new o.A("string-array-error","Invalid string array: missing null termination.")}else r.push(null);s+=i}return r}function d(e,t){return new(0,m[t.valueType])(e,t.byteOffset,t.count*t.valuesPerElement)}function y(e,t,n){const i=null!=t.header?u(e,t.header):{byteOffset:0,byteCount:0,fields:{count:n}},c={header:i,byteOffset:i.byteCount,byteCount:0,entries:Object.create(null)};let s=i.byteCount;for(let e=0;e<t.ordering.length;e++){const n=t.ordering[e],l=(0,r.o8)(t[n]);if(l.count=i.fields.count??0,"String"===l.valueType){if(l.byteOffset=s,l.byteCount=i.fields[n+"ByteCount"],"UTF-8"!==l.encoding)throw new o.A("unsupported-encoding","Unsupported String encoding.",{encoding:l.encoding});if(l.timeEncoding&&"ECMA_ISO8601"!==l.timeEncoding)throw new o.A("unsupported-time-encoding","Unsupported time encoding.",{timeEncoding:l.timeEncoding})}else{if(!A(l.valueType))throw new o.A("unsupported-value-type","Unsupported binary valueType",{valueType:l.valueType});{const e=C(l.valueType);s+=s%e!=0?e-s%e:0,l.byteOffset=s,l.byteCount=e*l.valuesPerElement*l.count}}s+=l.byteCount??0,c.entries[n]=l}return c.byteCount=s-c.byteOffset,c}function g(e,t,n){if(t!==e&&l().error(`Invalid ${n} buffer size\n expected: ${e}, actual: ${t})`),t<e)throw new o.A("buffer-too-small","Binary buffer is too small",{expectedSize:e,actualSize:t})}function p(e,t){const n=u(e,t&&t.header);let o=n.byteCount;const r={isDraco:!1,header:n,byteOffset:n.byteCount,byteCount:0,vertexAttributes:{}},i=n.fields,c=null!=i.vertexCount?i.vertexCount:i.count;for(const e of t.ordering){if(!t.vertexAttributes[e])continue;const n={...t.vertexAttributes[e],byteOffset:o,count:c},i=b[e]||"_"+e;r.vertexAttributes[i]=n,o+=C(n.valueType)*n.valuesPerElement*c}const s=i.faceCount;if(t.faces&&s){r.faces={};for(const e of t.ordering){if(!t.faces[e])continue;const n={...t.faces[e],byteOffset:o,count:s};r.faces[e]=n,o+=C(n.valueType)*n.valuesPerElement*s}}const l=i.featureCount;if(t.featureAttributes&&t.featureAttributeOrder&&l){r.featureAttributes={};for(const e of t.featureAttributeOrder){if(!t.featureAttributes[e])continue;const n={...t.featureAttributes[e],byteOffset:o,count:l};r.featureAttributes[e]=n,o+=("UInt64"===n.valueType?8:C(n.valueType))*n.valuesPerElement*l}}return g(o,e.byteLength,"geometry"),r.byteCount=o-r.byteOffset,r}const b={position:s.r.POSITION,normal:s.r.NORMAL,color:s.r.COLOR,uv0:s.r.UV0,region:s.r.UVREGION};function w(e,t,n){if("lepcc-rgb"===e.encoding)return(0,c.mb)(t);if("lepcc-intensity"===e.encoding)return(0,c.Ax)(t);if(null!=e.encoding&&""!==e.encoding)throw new o.A("unknown-attribute-storage-info-encoding","Unknown Attribute Storage Info Encoding");e["attributeByteCounts "]&&!e.attributeByteCounts&&(l().warn("Warning: Trailing space in 'attributeByteCounts '."),e.attributeByteCounts=e["attributeByteCounts "]),"ObjectIds"===e.ordering[0]&&e.hasOwnProperty("objectIds")&&(l().warn("Warning: Case error in objectIds"),e.ordering[0]="objectIds");const r=y(t,e,n);g(r.byteOffset+r.byteCount,t.byteLength,"attribute");const i=r.entries.attributeValues||r.entries.objectIds;if(i){if("String"===i.valueType){const e=r.entries.attributeByteCounts,n=d(t,e),o=function(e,t){return new Uint8Array(e,t.byteOffset,t.byteCount)}(t,i);return i.timeEncoding?function(e,t,n){return f(e,t,n).map((e=>{const t=e?Date.parse(e):null;return null==t||Number.isNaN(t)?null:t}))}(e.count,n,o):f(e.count,n,o)}return d(t,i)}throw new o.A("bad-attribute-storage-info","Bad attributeStorageInfo specification.")}const m={Float32:Float32Array,Float64:Float64Array,UInt8:Uint8Array,Int8:Int8Array,UInt16:Uint16Array,Int16:Int16Array,UInt32:Uint32Array,Int32:Int32Array},h={Float32:(e,t)=>new DataView(e,0).getFloat32(t,!0),Float64:(e,t)=>new DataView(e,0).getFloat64(t,!0),UInt8:(e,t)=>new DataView(e,0).getUint8(t),Int8:(e,t)=>new DataView(e,0).getInt8(t),UInt16:(e,t)=>new DataView(e,0).getUint16(t,!0),Int16:(e,t)=>new DataView(e,0).getInt16(t,!0),UInt32:(e,t)=>new DataView(e,0).getUint32(t,!0),Int32:(e,t)=>new DataView(e,0).getInt32(t,!0)};function A(e){return m.hasOwnProperty(e)}function C(e){return A(e)?m[e].BYTES_PER_ELEMENT:0}},79960:(e,t,n)=>{n.d(t,{Q7:()=>T,s1:()=>h}),n(59456);var o=n(78888),r=(n(4576),n(49186),n(44208),n(34275)),i=(n(58083),n(9093)),c=(n(38954),n(51850)),s=(n(57251),n(27993),n(19419)),l=(n(97937),n(61956),n(46851));n(73941),n(48353),n(68197);var a,u=n(91829);!function(e){e[e.TRANSPARENT=0]="TRANSPARENT",e[e.OPAQUE=1]="OPAQUE"}(a||(a={})),n(21818),n(40804),n(42583),n(49255),n(26835);var f,d,y,g,p=n(39589);n(46263),p.n,p.n,n(2597),n(15976),n(46540),(d=f||(f={}))[d.Uniform=0]="Uniform",d[d.Varying=1]="Varying",d[d.COUNT=2]="COUNT",n(96336),n(26425),n(40710),n(33079),n(20304),n(98353),n(35644),n(40095),function(e){e[e.Solid=0]="Solid",e[e.Sketch=1]="Sketch",e[e.Mixed=2]="Mixed",e[e.COUNT=3]="COUNT"}(y||(y={})),function(e){e[e.REGULAR=0]="REGULAR",e[e.SILHOUETTE=1]="SILHOUETTE"}(g||(g={}));(0,u.fA)(0,0,0,.2),a.OPAQUE;(0,u.fA)(0,0,0,.2),a.OPAQUE,n(66104);var b,w,m=n(57005);async function h(e,t,n,r,i,c,s,a){const u=[];for(const o of t)if(o&&i.includes(o.name)){const t=`${e}/nodes/${n}/attributes/${o.key}/0`;u.push({url:t,storageInfo:o})}const f=await Promise.allSettled(u.map((e=>(0,o.A)(e.url,{responseType:"array-buffer",query:{...s,token:c},signal:a?.signal}).then((t=>(0,l.m0)(e.storageInfo,t.data)))))),d=[];for(const e of r){const t={};for(let n=0;n<f.length;n++){const o=f[n];if("fulfilled"===o.status){const r=o.value;t[u[n].storageInfo.name]=U(r,e)}}d.push(t)}return d}n(16930),(0,s.vt)(),(w=b||(b={}))[w.OUTSIDE=0]="OUTSIDE",w[w.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",w[w.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",w[w.INSIDE=3]="INSIDE";const A=-32768,C=-(2**31);function U(e,t){if(!e)return null;const n=e[t];return(0,r.IY)(e)?n===A?null:n:(0,r._G)(e)?n===C?null:n:n!=n?null:n}function T(e){null!=e&&(e[3]=-1)}!function(){y.Solid}({color:[0,0,0,0],opacity:0}),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,c.vt)(),(0,s.vt)(),(0,s.vt)(),new m.ab,(0,c.vt)(),new Array(72),(0,i.vt)()},37203:(e,t,n)=>{n.d(t,{Ax:()=>w,Me:()=>a,mb:()=>g});var o=n(49186);const r=!0,i={identifierOffset:0,identifierLength:10,versionOffset:10,checksumOffset:12,byteCount:16};function c(e,t,n){return{identifier:String.fromCharCode.apply(null,new Uint8Array(e,n+i.identifierOffset,i.identifierLength)),version:t.getUint16(n+i.versionOffset,r),checksum:t.getUint32(n+i.checksumOffset,r)}}const s={sizeLo:0,sizeHi:4,minX:8,minY:16,minZ:24,maxX:32,maxY:40,maxZ:48,errorX:56,errorY:64,errorZ:72,count:80,reserved:84,byteCount:88};function l(e,t){return{sizeLo:e.getUint32(t+s.sizeLo,r),sizeHi:e.getUint32(t+s.sizeHi,r),minX:e.getFloat64(t+s.minX,r),minY:e.getFloat64(t+s.minY,r),minZ:e.getFloat64(t+s.minZ,r),maxX:e.getFloat64(t+s.maxX,r),maxY:e.getFloat64(t+s.maxY,r),maxZ:e.getFloat64(t+s.maxZ,r),errorX:e.getFloat64(t+s.errorX,r),errorY:e.getFloat64(t+s.errorY,r),errorZ:e.getFloat64(t+s.errorZ,r),count:e.getUint32(t+s.count,r),reserved:e.getUint32(t+s.reserved,r)}}function a(e){const t=new DataView(e,0);let n=0;const{identifier:r,version:a}=c(e,t,n);if(n+=i.byteCount,"LEPCC     "!==r)throw new o.A("lepcc-decode-error","Bad identifier");if(a>1)throw new o.A("lepcc-decode-error","Unknown version");const f=l(t,n);if(n+=s.byteCount,f.sizeHi*2**32+f.sizeLo!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");const d=new Float64Array(3*f.count),y=[],g=[],p=[],b=[];if(n=u(e,n,y),n=u(e,n,g),n=u(e,n,p),n=u(e,n,b),n!==e.byteLength)throw new o.A("lepcc-decode-error","Bad length");let w=0,m=0;for(let e=0;e<y.length;e++){m+=y[e];let t=0;for(let n=0;n<g[e];n++){t+=p[w];const e=b[w];d[3*w]=Math.min(f.maxX,f.minX+2*f.errorX*t),d[3*w+1]=Math.min(f.maxY,f.minY+2*f.errorY*m),d[3*w+2]=Math.min(f.maxZ,f.minZ+2*f.errorZ*e),w++}}return{errorX:f.errorX,errorY:f.errorY,errorZ:f.errorZ,result:d}}function u(e,t,n){const o=[];t=f(e,t,o);const r=[];for(let i=0;i<o.length;i++){r.length=0,t=f(e,t,r);for(let e=0;e<r.length;e++)n.push(r[e]+o[i])}return t}function f(e,t,n){const i=new DataView(e,t),c=i.getUint8(0),s=31&c,l=!!(32&c),a=(192&c)>>6;let u=0;if(0===a)u=i.getUint32(1,r),t+=5;else if(1===a)u=i.getUint16(1,r),t+=3;else{if(2!==a)throw new o.A("lepcc-decode-error","Bad count type");u=i.getUint8(1),t+=2}if(l)throw new o.A("lepcc-decode-error","LUT not implemented");const f=Math.ceil(u*s/8),d=new Uint8Array(e,t,f);let y=0,g=0,p=0;const b=-1>>>32-s;for(let e=0;e<u;e++){for(;g<s;)y|=d[p]<<g,g+=8,p+=1;n[e]=y&b,y>>>=s,g-=s,g+s>32&&(y|=d[p-1]>>8-g)}return t+p}const d={sizeLo:0,sizeHi:4,count:8,colorMapCount:12,lookupMethod:14,compressionMethod:15,byteCount:16};function y(e,t){return{sizeLo:e.getUint32(t+d.sizeLo,r),sizeHi:e.getUint32(t+d.sizeHi,r),count:e.getUint32(t+d.count,r),colorMapCount:e.getUint16(t+d.colorMapCount,r),lookupMethod:e.getUint8(t+d.lookupMethod),compressionMethod:e.getUint8(t+d.compressionMethod)}}function g(e){const t=new DataView(e,0);let n=0;const{identifier:r,version:s}=c(e,t,n);if(n+=i.byteCount,"ClusterRGB"!==r)throw new o.A("lepcc-decode-error","Bad identifier");if(s>1)throw new o.A("lepcc-decode-error","Unknown version");const l=y(t,n);if(n+=d.byteCount,l.sizeHi*2**32+l.sizeLo!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");if((2===l.lookupMethod||1===l.lookupMethod)&&0===l.compressionMethod){if(3*l.colorMapCount+l.count+n!==e.byteLength||l.colorMapCount>256)throw new o.A("lepcc-decode-error","Bad count");const t=new Uint8Array(e,n,3*l.colorMapCount),r=new Uint8Array(e,n+3*l.colorMapCount,l.count),i=new Uint8Array(3*l.count);for(let e=0;e<l.count;e++){const n=r[e];i[3*e]=t[3*n],i[3*e+1]=t[3*n+1],i[3*e+2]=t[3*n+2]}return i}if(0===l.lookupMethod&&0===l.compressionMethod){if(3*l.count+n!==e.byteLength||0!==l.colorMapCount)throw new o.A("lepcc-decode-error","Bad count");return new Uint8Array(e,n).slice()}if(l.lookupMethod<=2&&1===l.compressionMethod){if(n+3!==e.byteLength||1!==l.colorMapCount)throw new o.A("lepcc-decode-error","Bad count");const r=t.getUint8(n),i=t.getUint8(n+1),c=t.getUint8(n+2),s=new Uint8Array(3*l.count);for(let e=0;e<l.count;e++)s[3*e]=r,s[3*e+1]=i,s[3*e+2]=c;return s}throw new o.A("lepcc-decode-error","Bad method "+l.lookupMethod+","+l.compressionMethod)}const p={sizeLo:0,sizeHi:4,count:8,scaleFactor:12,bitsPerPoint:14,reserved:15,byteCount:16};function b(e,t){return{sizeLo:e.getUint32(t+p.sizeLo,r),sizeHi:e.getUint32(t+p.sizeHi,r),count:e.getUint32(t+p.count,r),scaleFactor:e.getUint16(t+p.scaleFactor,r),bitsPerPoint:e.getUint8(t+p.bitsPerPoint),reserved:e.getUint8(t+p.reserved)}}function w(e){const t=new DataView(e,0);let n=0;const{identifier:r,version:s}=c(e,t,n);if(n+=i.byteCount,"Intensity "!==r)throw new o.A("lepcc-decode-error","Bad identifier");if(s>1)throw new o.A("lepcc-decode-error","Unknown version");const l=b(t,n);if(n+=p.byteCount,l.sizeHi*2**32+l.sizeLo!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");const a=new Uint16Array(l.count);if(8===l.bitsPerPoint){if(l.count+n!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");const t=new Uint8Array(e,n,l.count);for(let e=0;e<l.count;e++)a[e]=t[e]*l.scaleFactor}else if(16===l.bitsPerPoint){if(2*l.count+n!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");const t=new Uint16Array(e,n,l.count);for(let e=0;e<l.count;e++)a[e]=t[e]*l.scaleFactor}else{const t=[];if(f(e,n,t)!==e.byteLength)throw new o.A("lepcc-decode-error","Bad size");for(let e=0;e<l.count;e++)a[e]=t[e]*l.scaleFactor}return a}},66104:(e,t,n)=>{var o,r;n.d(t,{k5:()=>o}),n(34727),(r=o||(o={}))[r.Multiply=1]="Multiply",r[r.Ignore=2]="Ignore",r[r.Replace=3]="Replace",r[r.Tint=4]="Tint"},42583:(e,t,n)=>{n.d(t,{A:()=>i});var o=n(66104),r=n(2597);function i(e){e.vertex.code.add(r.H`
    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {
      float symbolAlpha = 0.0;

      const float maxTint = 85.0;
      const float maxReplace = 170.0;
      const float scaleAlpha = 3.0;

      if (symbolColor.a > maxReplace) {
        colorMixMode = ${r.H.int(o.k5.Multiply)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);
      } else if (symbolColor.a > maxTint) {
        colorMixMode = ${r.H.int(o.k5.Replace)};
        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);
      } else if (symbolColor.a > 0.0) {
        colorMixMode = ${r.H.int(o.k5.Tint)};
        symbolAlpha = scaleAlpha * symbolColor.a;
      } else {
        colorMixMode = ${r.H.int(o.k5.Multiply)};
        symbolAlpha = 0.0;
      }

      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);
    }
  `)}}}]);