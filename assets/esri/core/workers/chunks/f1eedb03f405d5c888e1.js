"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[1384],{55726:(e,s,t)=>{t.d(s,{$1:()=>c,H2:()=>f,MT:()=>m,VP:()=>g,WF:()=>u,Wt:()=>a,XQ:()=>h,hK:()=>d,nS:()=>p,uh:()=>i,xY:()=>l});var o=t(49186);const r="upload-assets",n=()=>new Error;class a extends o.A{constructor(){super(`${r}:unsupported`,"Layer does not support asset uploads.",n())}}class i extends o.A{constructor(){super(`${r}:no-glb-support`,"Layer does not support glb.",n())}}class l extends o.A{constructor(){super(`${r}:no-supported-source`,"No supported external source found",n())}}class c extends o.A{constructor(){super(`${r}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class u extends o.A{constructor(){super(`${r}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class p extends o.A{constructor(e,s){super(`${r}:bad-response`,`Bad response. Uploaded ${e} items and received ${s} results.`,n())}}class d extends o.A{constructor(e,s){super(`${r}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${s?.code??"-1"}. Error message: ${s?.messages??"unknown"}`,n())}}class f extends o.A{constructor(e){super(`${r}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class m extends o.A{constructor(){super(`${r}:convert3D-failed`,"convert3D failed.")}}class g extends o.A{constructor(){super("invalid-input:no-model","No supported model found")}}class h extends o.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},31384:(e,s,t)=>{t.d(s,{uploadAssets:()=>k}),t(59456);var o=t(78888),r=t(44208),n=t(53966),a=t(74887),i=t(78659),l=t(84952),c=t(13069),u=t(63579),p=t(55726);const d={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var f=t(60694),m=t(36563),g=t(91869);function h(e,s=e=>{},t){return new w(e,s,t)}class w{constructor(e,s=e=>{},t){if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,t]of this._progressMap.entries())e+=t*this._weights[s];if(1===e&&(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[s,t]of this._timingsMap){const o=Math.round(t.end-t.start)/1e3,r=Math.round(o/e*100);console.log(this.taskName??"Task",{stepKey:s,stepTime:o,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const t=performance.now();this._startTime??=t;const o=(0,g.tE)(this._timingsMap,e,(()=>({start:t,end:0})));1===s&&(o.end=t)}this.emitProgress()}simulate(e,s){return y((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function y(e=e=>{},s=j){const t=performance.now();e(0);const o=setInterval((()=>{const o=performance.now()-t,r=1-Math.exp(-o/s);e(r)}),v);return(0,m.hA)((()=>{clearInterval(o),e(1)}))}function A(e,s=P){return(0,i.gr)((0,i.Kp)(e*x/s))}function T(e,s=b){return(0,i.gr)((0,i.Kp)(e*x/s))}const P=10,b=10,x=8e-6,v=(0,i.l5)(50),j=(0,i.l5)(1e3),F=1e6,$=20*F,M=2e9,E=3;async function N({data:e,name:s,description:t},r,n){let i=null;try{const u=(0,l.fj)(r,"uploads"),p=(0,l.fj)(u,"info"),{data:d}=await(0,o.A)(p,{query:{f:"json"},responseType:"json"});(0,a.Te)(n);const m=(0,f.Wo)(r),g=d.maxUploadFileSize*F,w=m?M:g,y=m?Math.min($,g):$;if(e.size>w)throw new Error("Data too large");const T=(0,l.fj)(u,"register"),{data:P}=await(0,o.A)(T,{query:{f:"json",itemName:(c=s,c.replaceAll("/","_").replaceAll("\\","_")),description:t},responseType:"json",method:"post"});if((0,a.Te)(n),!P.success)throw new Error("Registration failed");const{itemID:b}=P.item;i=(0,l.fj)(u,b);const x=(0,l.fj)(i,"uploadPart"),v=Math.ceil(e.size/y),j=new Array;for(let s=0;s<v;++s)j.push(e.slice(s*y,Math.min((s+1)*y,e.size)));const N=j.slice().reverse(),S=new Array,D=h(v,n?.onProgress,"uploadItem"),_=async()=>{for(;0!==N.length;){const e=j.length-N.length,s=N.pop(),t=new FormData,r=D.simulate(e,A(s.size));try{t.append("f","json"),t.append("file",s),t.append("partId",`${e}`);const{data:r}=await(0,o.A)(x,{timeout:0,body:t,responseType:"json",method:"post"});if((0,a.Te)(n),!r.success)throw new Error("Part upload failed")}finally{r.remove()}}};for(let e=0;e<E&&0!==N.length;++e)S.push(_());await Promise.all(S);const k=(0,l.fj)(i,"commit"),{data:R}=await(0,o.A)(k,{query:{f:"json",parts:j.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,a.Te)(n),!R.success)throw new Error("Commit failed");return R.item}catch(e){if(null!=i){const e=(0,l.fj)(i,"delete");await(0,o.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw e}var c}var S=t(20557),D=t(77793),_=t(16930);async function k(e,s,t){const o=e.length;if(!o)return t?.onProgress?.(1),[];const r=h(o,t?.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,{layer:s,ongoingUploads:t},o){const r=t.get(e);if(r)return r;if(!function(e){return!!e.infoFor3D&&!!e.url}(s))throw new p.Wt;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,u.eN)(e,t)))}(e,s))return o?.onProgress?.(1),e;const n=async function(e,s,t){const{metadata:o}=e,{displaySource:r}=o,n=R(r?.source,s),i=!!n,f=o.externalSources.length>0,m=i?async function(e,s,t){return{source:await U(e,s,t),original:!0}}(n,s,t):f?async function(e,s,t){const o=X(s),{externalSources:r}=e.metadata,n=function(e,s){for(const t of e){const e=R(t.source,s);if(e)return e}return null}(r,s);if(!n)throw new p.xY;const a=h(d.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),i=await U(n,s,{onProgress:a.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:i,original:!0}]);const c=n.reduce(((e,{asset:s})=>s instanceof File?e+s.size:e),0),f=a.simulate("serviceAssetsToGlb",T(c));try{const{source:r,transform:n,origin:a}=await async function(e,s,t){const o=e.map((({assetName:e,parts:s})=>({assetName:e,assetHash:s[0].partHash})));let r;try{const e=(0,l.fj)(s.parsedUrl.path,"convert3D"),n=s.capabilities?.operations.supportsAsyncConvert3D;r=(await(n?O:C)(e,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:t,async:n},responseType:"json",timeout:0})).data}catch(e){throw new p.MT}return function(e,{supportedFormats:s}){const t={source:e.assets.map((e=>{const t=(0,S.R_)(e.contentType,s);if(!t)throw new p.H2(t);return new u.Qp(e.assetName,e.contentType,[new u.Bq(e.assetURL,e.assetHash)])}))};if(e.transform&&(t.transform=(0,D.f)(e.transform),e.spatialReference)){const s=_.A.fromJSON(e.spatialReference);t.origin=(0,D.V)(e.transform,s)}return t}(r,s.infoFor3D)}(i,s,o);return n&&(e.transform=n),a&&t?.useAssetOrigin&&(e.vertexSpace.origin=[a.x,a.y,a.z??0],e.spatialReference=a.spatialReference),{source:r}}finally{f.remove()}}(e,s,t):async function(e,s,t){const o=h(d.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),r=async function(e,s,t){const o=X(s),r=await e.load(t),n=await r.toBinaryGLTF({origin:r.origin,signal:t?.signal,ignoreLocalTransform:!0});return(0,a.Te)(t),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${(0,c.yS)()}.glb`,assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await B([r],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),g=await m;return(0,a.Te)(t),e.addExternalSources([g]),e}(e,s,o);t.set(e,n);try{await n}finally{t.delete(e)}return e}(e,s,{...t,onProgress:r.makeOnProgress(o)}))))}function R(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:t,editFormats:o}}=s,r=(0,u.WN)(e),n=new Array;let a=!1;for(let e=0;e<r.length;++e){const s=I(r[e],t);if(!s)return null;o.includes(s.assetType)&&(a=!0),n.push(s)}return a?n:null}function I(e,s){const t=(0,u.fH)(e,s);return t?{asset:e,assetType:t}:null}async function U(e,s,t){return B(e.map((e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const r=await t.toBlob(s);return(0,a.Te)(s),{blob:r,assetName:t.assetName,assetType:o}}(e,t))),s,t)}async function B(e,s,t){const o=h(d.uploadAssetBlobs,t?.onProgress,"uploadAssetBlobs"),r=await function(e,s,t){const o=h(e.length,t?.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,r)=>{const i=async function(e,s,t){const{blob:o,assetType:r,assetName:i}=e;let c=null;try{const e=await N({data:o,name:i},s.url,t);(0,a.Te)(t),c={assetType:r,assetUploadId:e.itemID}}catch(e){(0,a.QP)(e),n.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,l._0)(o);if((0,a.Te)(t),!e.isBase64)throw new p.$1;c={assetType:r,assetData:e.data}}if(!c)throw new p.WF;return{item:c,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(r)});return(0,a.Te)(t),i})))}(e,s,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});(0,a.Te)(t);const i=r.map((({item:e})=>e)),{uploadResults:c}=await Y(i,s,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return(0,a.Te)(t),e.map(((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new p.hK(e.assetName,t)}const{assetHash:r}=s,{assetName:n,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,l=(0,S.Fm)(a,i);if(!l)throw new p.H2(a);return new u.Qp(n,l,[new u.Bq(`${t.parsedUrl.path}/assets/${r}`,r)])}(r[t],c[t],s)))}async function Y(e,s,t){const r=y(t?.onProgress);try{const r=await(0,o.A)((0,l.fj)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.Te)(t),r.data.uploadResults.length!==e.length)throw new p.nS(e.length,r.data.uploadResults.length);return r.data}finally{r.remove()}}function C(e,s){return(0,o.A)(e,s)}async function O(e,s){const t=(await(0,o.A)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.A)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.Pl)(Z)}}function X(e){const{infoFor3D:s}=e,t=(0,S.R_)("model/gltf-binary",s.supportedFormats)??(0,S.E1)("glb",s.supportedFormats);if(!t)throw new p.uh;return t}const Z=(0,i.l5)(1e3)},77793:(e,s,t)=>{t.d(s,{V:()=>n,f:()=>a}),t(59456);var o=t(73836),r=t(86738);function n(e,s,t=i){return new r.A({x:e[t.originX],y:e[t.originY],z:e[t.originZ],spatialReference:s})}function a(e,s=i){return new o.A({translation:[e[s.translationX],-e[s.translationZ],e[s.translationY]],rotationAxis:[e[s.rotationX],-e[s.rotationZ],e[s.rotationY]],rotationAngle:e[s.rotationDeg],scale:[e[s.scaleX],e[s.scaleZ],e[s.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}}}]);