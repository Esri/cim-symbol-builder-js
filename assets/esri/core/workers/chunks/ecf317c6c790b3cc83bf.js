"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2029,2935],{96953:(e,t,r)=>{r.r(t),r.d(t,{default:()=>B});var o=r(90237),i=(r(59456),r(52106)),l=(r(61147),r(5503)),n=r(49186),a=r(4718),s=r(92071),y=r(93637),p=r(67076),u=r(10107),d=(r(44208),r(53966),r(36005)),c=r(40608),f=r(43937),m=r(57251),g=r(19419),h=r(17136),b=r(21325),S=r(13600),w=r(94194),O=r(4146),M=r(33032),_=r(63074),N=r(16131),v=r(8303),L=r(25036),T=r(20437),A=r(94985),C=r(31593),J=r(53930),x=r(68249),Z=r(16930),I=r(5443);function j(e){return"markup"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!E(e)))}function E({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return G.find((t=>r===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type))}function D(){return new I.A({xmin:-180,ymin:-90,xmax:180,ymax:90})}const R=new T.A({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),P=new T.A({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let F=class extends w.A{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?null==t?(0,m.projectOrLoad)(D(),e).geometry:(0,g.w1)(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=(0,g.Ie)();return this.graphics.forEach((r=>{const o=null!=r.geometry?(0,m.projectOrLoad)(r.geometry,e).geometry:null;null!=o&&(0,g.fT)(t,"point"===o.type?o:o.extent,t)})),(0,g.aI)(t,g.qv)?null:t}get sublayers(){return this.graphics}};(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"fullExtent",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"fullBounds",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"sublayers",null),(0,o._)([(0,u.MZ)()],F.prototype,"layer",void 0),(0,o._)([(0,u.MZ)()],F.prototype,"layerId",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"visibilityMode",void 0),F=(0,o._)([(0,c.$)("esri.layers.MapNotesLayer.MapNotesSublayer")],F);const G=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new A.A).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new C.A).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new J.A).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new J.A).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new x.A).toJSON()}];let k=class extends((0,_.dM)((0,L.j)((0,N.q)((0,v.A)((0,s.P)(O.A)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=Z.A.WGS84,this.sublayers=new l.A(G.map((e=>new F({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!j(t)&&"portal-item"!==r?.origin}}}readFeatureCollections(e,t,r){if(!j(t))return null;const o=t.layers.map((e=>{const t=new S.default;return t.read(e,r),t}));return new l.A({items:o})}readLegacyfeatureCollectionJSON(e,t){return j(t)?(0,a.o8)(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=(0,g.Ie)();return null!=this.sublayers?this.sublayers.forEach((({fullBounds:e})=>null!=e?(0,g.fT)(t,e,t):t),t):this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))&&this.featureCollectionJSON.layers.forEach((r=>{const o=(0,m.projectOrLoad)(r.layerDefinition.extent,e).geometry;null!=o&&(0,g.fT)(t,o,t)})),(0,g.aI)(t,g.qv)?(0,m.projectOrLoad)(D(),e).geometry:(0,g.w1)(t,e)}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?Z.A.fromJSON(t.layers[0].layerDefinition.spatialReference):Z.A.WGS84}readSublayers(e,t,r){if(j(t))return null;const o=[];let n=t.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const e of t.layers){const{layerDefinition:t,featureSet:r}=e,l=t.id??n++,a=E(e);if(null!=a){const e=new F({id:a.id,title:t.name,layerId:l,layer:this,graphics:r.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:o})=>i.A.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:o})))});o.push(e)}}return new l.A(o)}writeSublayers(e,t,r,o){const{minScale:i,maxScale:l}=this;if(null==e)return;const a=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(a&&o?.messages?.push(new n.A("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const s=[];let p=this.spatialReference.toJSON();e:for(const t of e)for(const e of t.graphics)if(null!=e.geometry){p=e.geometry.spatialReference.toJSON();break e}for(const t of G){const r=e.find((e=>t.id===e.id));this._writeMapNoteSublayer(s,r,t,i,l,p,o)}(0,y.sM)("featureCollection.layers",s,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=(0,a.o8)(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(null==this.sublayers)return;let e=null;const t=[];for(const r of this.sublayers)for(const o of r.graphics)if(null!=o.geometry){const r=o.geometry;e?(0,b.aI)(r.spatialReference,e)||((0,m.canProjectWithoutEngine)(r.spatialReference,e)||(0,m.isLoaded)()||await(0,m.load)(),o.geometry=(0,m.project)(r,e)):e=r.spatialReference,t.push(o)}const r=await(0,h.el)(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return null==this.sublayers?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,o,i,l,n){const s=[];if(null!=t){for(const e of t.graphics)this._writeMapNote(s,e,r.geometryType,n);this._normalizeObjectIds(s,R),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:(0,a.o8)(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:i,objectIdField:"OBJECTID",fields:[R.toJSON(),P.toJSON()],spatialReference:l},featureSet:{features:s,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if(null==t)return;const{geometry:i,symbol:l,popupTemplate:n}=t;if(null==i)return;if(i.type!==r)return void o?.messages?.push(new p.A("map-notes-layer:invalid-geometry-type",`Geometry "${i.type}" cannot be saved in "${r}" layer`,{graphic:t}));if(null==l)return void o?.messages?.push(new p.A("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const a={attributes:{...t.attributes},geometry:i.toJSON(),symbol:l.toJSON()};null!=n&&(a.popupInfo=n.toJSON()),e.push(a)}_normalizeObjectIds(e,t){const r=t.name;let o=(0,M.H)(r,e)+1;const i=new Set;for(const t of e){t.attributes||(t.attributes={});const{attributes:e}=t;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"capabilities",void 0),(0,o._)([(0,d.w)(["portal-item","web-map"],"capabilities",["layers"])],k.prototype,"readCapabilities",null),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"featureCollections",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"featureCollections",["layers"])],k.prototype,"readFeatureCollections",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],k.prototype,"featureCollectionJSON",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],k.prototype,"readLegacyfeatureCollectionJSON",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],k.prototype,"featureCollectionType",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"fullExtent",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],k.prototype,"legendEnabled",void 0),(0,o._)([(0,u.MZ)({type:["show","hide","hide-children"]})],k.prototype,"listMode",void 0),(0,o._)([(0,u.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"minScale",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"minScale",["layers"])],k.prototype,"readMinScale",null),(0,o._)([(0,u.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"maxScale",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"maxScale",["layers"])],k.prototype,"readMaxScale",null),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"multipointLayer",null),(0,o._)([(0,u.MZ)({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],k.prototype,"operationalLayerType",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"pointLayer",null),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"polygonLayer",null),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"polylineLayer",null),(0,o._)([(0,u.MZ)({type:Z.A})],k.prototype,"spatialReference",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"spatialReference",["layers"])],k.prototype,"readSpatialReference",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],k.prototype,"sublayers",void 0),(0,o._)([(0,d.w)("web-map","sublayers",["layers"])],k.prototype,"readSublayers",null),(0,o._)([(0,f.K)("web-map","sublayers")],k.prototype,"writeSublayers",null),(0,o._)([(0,u.MZ)({readOnly:!0})],k.prototype,"textLayer",null),(0,o._)([(0,u.MZ)()],k.prototype,"title",void 0),(0,o._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],k.prototype,"type",void 0),k=(0,o._)([(0,c.$)("esri.layers.MapNotesLayer")],k);const B=k},33032:(e,t,r)=>{r.d(t,{H:()=>i,L:()=>o});const o=1;function i(e,t){let r=0;for(const o of t){const t=o.attributes?.[e];"number"==typeof t&&isFinite(t)&&(r=Math.max(r,t))}return r}},33143:(e,t,r)=>{r.d(t,{A:()=>c});var o=r(90237),i=r(69540),l=r(25482),n=r(10107),a=(r(44208),r(53966),r(87811),r(36005)),s=r(40608),y=r(43937),p=r(80451),u=r(29005);let d=class extends(i.A.ClonableMixin(l.A)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const r of Object.keys(e))t[r]=(0,p.rS)(e[r]);return t}writeDomains(e,t){const r={};for(const t of Object.keys(e))e[t]&&(r[t]=e[t]?.toJSON());t.domains=r}};(0,o._)([(0,n.MZ)({json:{write:!0}})],d.prototype,"id",void 0),(0,o._)([(0,n.MZ)({json:{write:!0}})],d.prototype,"name",void 0),(0,o._)([(0,n.MZ)({json:{write:!0}})],d.prototype,"domains",void 0),(0,o._)([(0,a.w)("domains")],d.prototype,"readDomains",null),(0,o._)([(0,y.K)("domains")],d.prototype,"writeDomains",null),(0,o._)([(0,n.MZ)({type:[u.A],json:{write:!0}})],d.prototype,"templates",void 0),d=(0,o._)([(0,s.$)("esri.layers.support.FeatureType")],d);const c=d},58501:(e,t,r)=>{r.d(t,{q:()=>i});var o=r(62815);function i(e,t,r){if(!r?.features||!r.hasZ)return;const i=(0,o.N)(r.geometryType,t,e.outSpatialReference);if(null!=i)for(const e of r.features)i(e.geometry)}},92935:(e,t,r)=>{var o;r.d(t,{X:()=>o}),function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(o||(o={}))}}]);