"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4316],{24316:(e,t,r)=>{r.r(t),r.d(t,{createConnection:()=>F});var o=r(43697),s=(r(66577),r(3172)),n=r(20102),i=r(92604),c=r(70586),a=r(95330),l=r(17452),d=(r(75215),r(67676),r(80442),r(52011)),u=r(5600),h=r(69285),f=r(32448);let g=class extends f.Z.EventedAccessor{get connectionError(){return this.errorString?new n.Z("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}};(0,o._)([(0,u.Cb)({readOnly:!0})],g.prototype,"connectionError",null),g=(0,o._)([(0,d.j)("esri.layers.support.StreamConnection")],g);const y=g;var _,p;(p=_||(_={}))[p.CONNECTING=0]="CONNECTING",p[p.OPEN=1]="OPEN",p[p.CLOSING=2]="CLOSING",p[p.CLOSED=3]="CLOSED";let w=class extends y{constructor(e){super(),this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._config=e,this._featureZScaler=(0,h.k)(t,o,r),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){(0,c.pC)(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if((0,c.Wi)(this._websocket))return"disconnected";switch(this._websocket.readyState){case _.CONNECTING:case _.OPEN:return"connected";case _.CLOSING:case _.CLOSED:return"disconnected"}}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const t=(0,l.fl)(e,this._config.customParameters);this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(o){const s=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection",`Failed to connect. Attempting to reconnect in ${s}s`,o)),await(0,a.e4)(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_createWebSocket(e){return new Promise(((t,r)=>{const o=new WebSocket(e);o.onopen=()=>{if(o.onopen=null,this.destroyed)return o.onclose=null,void o.close();o.onclose=e=>this._onClose(e),o.onerror=e=>this._onError(e),o.onmessage=e=>this._onMessage(e),t(o)},o.onclose=e=>{o.onopen=o.onclose=null,r(e)}}))}async _handshake(e=1e4){const t=this._websocket;if((0,c.Wi)(t))return;const r=(0,a.hh)(),o=t.onmessage,{filter:s,outFields:l,spatialReference:d}=this._config;return r.timeout(e),t.onmessage=e=>{let c=null;try{c=JSON.parse(e.data)}catch(e){}c&&"object"==typeof c||(i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),r.reject(),this.destroy()),c.spatialReference?.wkid!==d?.wkid&&(i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${d.wkid}`,e.data)),r.reject(),this.destroy()),"json"!==c.format&&(i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),r.reject(),this.destroy()),s&&c.filter!==s&&i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Tried to set filter, but server doesn't support it")),l&&c.outFields!==l&&i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=o,r.resolve()},t.send(JSON.stringify({filter:s,outFields:l,format:"json",spatialReference:{wkid:d.wkid}})),r.promise}_onMessage(e){try{const t=JSON.parse(e.data);if("featureResult"!==t.type)throw new n.Z("websocket-connection","Protocol violation - Expected to find message of type 'featureResult'",t);for(const e of t.features)(0,c.pC)(this._featureZScaler)&&this._featureZScaler(e.geometry),this.onFeature(e)}catch(e){return i.Z.getLogger(this.declaredClass).error(new n.Z("websocket-connection","Failed to parse message",e)),void this.destroy()}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),i.Z.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&i.Z.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};(0,o._)([(0,u.Cb)()],w.prototype,"connectionStatus",null),(0,o._)([(0,u.Cb)()],w.prototype,"errorString",void 0),w=(0,o._)([(0,d.j)("esri.layers.graphics.sources.connections.WebSocketConnection")],w);var m=r(34599),b=r(57444),C=r(33955),k=r(82971);const S={maxQueryDepth:5,maxRecordCountFactor:3};let v=class extends w{constructor(e){super({...S,...e})}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||i.Z.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){let t;try{t=this._enrich(JSON.parse(e.data)),(0,c.pC)(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(e){return void i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Failed to parse message",e))}this.onFeature(t)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=(0,s.default)(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return(0,l.fl)(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if((0,c.Wi)(r)||(0,c.Wi)(e)&&(0,c.Wi)(t))return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const l=(0,a.hh)();return r.onmessage=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),l.reject(t.error)),r.onmessage=this._onMessage.bind(this),s=!0,l.resolve())},r.send(o),setTimeout((()=>{s||(this.destroyed||this._websocket!==r||i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Server timed out when setting filter")),l.reject())}),1e4),l.promise}_serializeFilter(e,t){const r={};if((0,c.Wi)(e)&&(0,c.Wi)(t))return r;if((0,c.pC)(e)&&e.geometry)try{const t=(0,C.im)(e.geometry);if("extent"!==t.type)throw new n.Z(`Expected extent but found type ${t.type}`);r.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(e){i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Encountered an error when setting connection geometryDefinition",e))}return(0,c.pC)(e)&&e.where&&"1 = 1"!==e.where&&(r.where=e.where),(0,c.pC)(t)&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t];if(!this._relatedFeatures.has(r))return i.Z.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:s}=this._relatedFeatures.get(r);for(const t in o)e.attributes[t]=o[t];return s&&(e.geometry=s),e.geometry||e.centroid||i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const e of s.features)this.onFeature(this._enrich(e))}catch(e){i.Z.getLogger(this.declaredClass).error(new n.Z("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new((await Promise.all([r.e(6968),r.e(9454),r.e(1773),r.e(8244),r.e(1423),r.e(1819),r.e(1491),r.e(8326),r.e(3121),r.e(8422),r.e(461)]).then(r.bind(r,3121))).default)({url:e}),{capabilities:o}=await t.load(),s=o.query.supportsMaxRecordCountFactor,n=o.query.supportsPagination,i=o.query.supportsCentroid,a=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,d=s?l*a:l,u=new b.Z;if(u.outFields=(0,c.Pt)(this._config.outFields,["*"]),u.where=(0,c.Pt)((0,c.U2)(this._config.filter,"where"),"1=1"),u.returnGeometry=!0,u.returnExceededLimitFeatures=!0,u.outSpatialReference=k.Z.fromJSON(this._config.spatialReference),i&&(u.returnCentroid=!0),s&&(u.maxRecordCountFactor=a),n)return u.num=d,t.destroy(),this._queryPages(e,u);const h=await(0,m.executeQuery)(e,u,this._config.sourceSpatialReference);return t.destroy(),h.data}async _queryPages(e,t,r=[],o=0){t.start=(0,c.pC)(t.num)?o*t.num:null;const{data:s}=await(0,m.executeQuery)(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<this._config.maxQueryDepth?(s.features.forEach((e=>r.push(e))),this._queryPages(e,t,r,o+1)):(r.forEach((e=>s.features.push(e))),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const e of r){const r=e.attributes[o];t.set(r,e)}this._relatedFeatures=t}};v=(0,o._)([(0,d.j)("esri.layers.graphics.sources.connections.GeoEventConnection")],v);const Z=v;function F(e,t,r,o,s,n,i,c){const a=0===e.path.indexOf("wss://")||0===e.path.indexOf("ws://"),l={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:s,maxReconnectionAttempts:n,maxReconnectionInterval:i,customParameters:c};return a?new w(l):new Z(l)}}}]);