/*! For license information please see bd11017c2cc0fbeeab49.js.LICENSE.txt */
"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4060],{64060:(e,t,s)=>{s.r(t),s.d(t,{scopeCss:()=>T});var r="-shadowcsshost",c="-shadowcssslotted",o="-shadowcsscontext",n=")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",l=new RegExp("("+r+n,"gim"),p=new RegExp("("+o+n,"gim"),a=new RegExp("("+c+n,"gim"),i=r+"-no-combinator",h=/-shadowcsshost-no-combinator([^\s]*)/,u=[/::shadow/g,/::content/g],g=/-shadowcsshost/gim,d=e=>new RegExp(`((?<!(^@supports(.*)))|(?<={.*))(${e}\\b)`,"gim"),m=d("::slotted"),$=d(":host"),x=d(":host-context"),f=/\/\*\s*[\s\S]*?\*\//g,w=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g,S=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,b=/([{}])/g,_=/(^.*?[^\\])??((:+)(.*)|$)/,R="%BLOCK%",k=(e,t,s)=>e.replace(t,((...e)=>{if(e[2]){const t=e[2].split(","),r=[];for(let c=0;c<t.length;c++){const o=t[c].trim();if(!o)break;r.push(s(i,o,e[3]))}return r.join(",")}return i+e[3]})),E=(e,t,s)=>e+t.replace(r,"")+s,O=(e,t,s)=>t.indexOf(r)>-1?E(e,t,s):e+t+s+", "+t+" "+e+s,C=(e,t)=>e.replace(_,((e,s="",r,c="",o="")=>s+t+c+o)),j=(e,t,s,r)=>(e=>{const c=(e=>{const t=e.split(b),s=[],r=[];let c=0,o=[];for(let e=0;e<t.length;e++){const n=t[e];"}"===n&&c--,c>0?o.push(n):(o.length>0&&(r.push(o.join("")),s.push(R),o=[]),s.push(n)),"{"===n&&c++}return o.length>0&&(r.push(o.join("")),s.push(R)),{escapedString:s.join(""),blocks:r}})(e);let o=0;return c.escapedString.replace(S,((...e)=>{const n=e[2];let l="",p=e[4],a="";p&&p.startsWith("{"+R)&&(l=c.blocks[o++],p=p.substring(8),a="{");const u=(e=>{let c=e.selector,o=e.content;return"@"!==e.selector[0]?c=((e,t,s,r)=>e.split(",").map((e=>r&&e.indexOf("."+r)>-1?e.trim():((e,t)=>!(e=>(e=e.replace(/\[/g,"\\[").replace(/\]/g,"\\]"),new RegExp("^("+e+")([>\\s~+[.,{:][\\s\\S]*)?$","m")))(t).test(e))(e,t)?((e,t,s)=>{const r="."+(t=t.replace(/\[is=([^\]]*)\]/g,((e,...t)=>t[0]))),c=e=>{let c=e.trim();if(!c)return"";if(e.indexOf(i)>-1)c=((e,t,s)=>{if(g.lastIndex=0,g.test(e)){const t=`.${s}`;return e.replace(h,((e,s)=>C(s,t))).replace(g,t+" ")}return t+" "+e})(e,t,s);else{const t=e.replace(g,"");t.length>0&&(c=C(t,r))}return c},o=(e=>{const t=[];let s=0;return{content:(e=e.replace(/(\[[^\]]*\])/g,((e,r)=>{const c=`__ph-${s}__`;return t.push(r),s++,c}))).replace(/(:nth-[-\w]+)(\([^)]+\))/g,((e,r,c)=>{const o=`__ph-${s}__`;return t.push(c),s++,r+o})),placeholders:t}})(e);let n,l="",p=0;const a=/( |>|\+|~(?!=))\s*/g;let u=!((e=o.content).indexOf(i)>-1);for(;null!==(n=a.exec(e));){const t=n[1],s=e.slice(p,n.index).trim();u=u||s.indexOf(i)>-1,l+=`${u?c(s):s} ${t} `,p=a.lastIndex}const d=e.substring(p);return u=u||d.indexOf(i)>-1,l+=u?c(d):d,m=o.placeholders,l.replace(/__ph-(\d+)__/g,((e,t)=>m[+t]));var m})(e,t,s).trim():e.trim())).join(", "))(e.selector,t,s,r):(e.selector.startsWith("@media")||e.selector.startsWith("@supports")||e.selector.startsWith("@page")||e.selector.startsWith("@document"))&&(o=j(e.content,t,s,r)),{selector:c.replace(/\s{2,}/g," ").trim(),content:o}})({selector:n,content:l});return`${e[1]}${u.selector}${e[3]}${a}${u.content}${p}`}))})(e),W=(e,t)=>e.replace(/-shadowcsshost-no-combinator/g,`.${t}`),T=(e,t)=>{const s=t+"-h",n=t+"-s",h=e.match(w)||[];const g=((e,t,s,n)=>{const h=((e,t)=>{const s="."+t+" > ",r=[];return e=e.replace(a,((...e)=>{if(e[2]){const t=e[2].trim(),c=e[3],o=s+t+c;let n="";for(let t=e[4]-1;t>=0;t--){const s=e[5][t];if("}"===s||","===s)break;n=s+n}const l=(n+o).trim(),p=`${n.trimEnd()}${o.trim()}`.trim();if(l!==p){const e=`${p}, ${l}`;r.push({orgSelector:l,updatedSelector:e})}return o}return i+e[3]})),{selectors:r,cssText:e}})(e=(e=>k(e,p,O))(e=(e=>k(e,l,E))(e=(e=>e.replace(x,`$1${o}`).replace($,`$1${r}`).replace(m,`$1${c}`))(e))),n);return e=(e=>u.reduce(((e,t)=>e.replace(t," ")),e))(e=h.cssText),t&&(e=j(e,t,s,n)),{cssText:(e=(e=W(e,s)).replace(/>\s*\*\s+([^{, ]+)/gm," $1 ")).trim(),slottedSelectors:h.selectors.map((e=>({orgSelector:W(e.orgSelector,s),updatedSelector:W(e.updatedSelector,s)})))}})(e=e.replace(f,""),t,s,n);return e=[g.cssText,...h].join("\n"),g.slottedSelectors.forEach((t=>{const s=new RegExp(t.orgSelector.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g");e=e.replace(s,t.updatedSelector)})),e}}}]);