{"version":3,"file":"static/js/9301.733e496b.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/tree/utils.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tree/tree.scss?tag=calcite-tree&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/tree/tree.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tree-item/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tree-item/tree-item.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tree-item/tree-item.scss?tag=calcite-tree-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/observers.ts"],"sourcesContent":["export function isTreeItem(element: Element): element is HTMLCalciteTreeItemElement {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\n\nexport function getTraversableItems(root: HTMLCalciteTreeElement): HTMLCalciteTreeItemElement[] {\n  return Array.from(root.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\")).filter(\n    (item): boolean => {\n      let currentItem: HTMLElement = item;\n\n      while (currentItem !== root && currentItem !== undefined) {\n        const parent = currentItem.parentElement;\n        const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n\n        if (!traversable) {\n          return false;\n        }\n\n        currentItem = currentItem.parentElement;\n      }\n\n      return true;\n    },\n  );\n}\n",":host {\n  @apply block;\n}\n\n:host(:focus) {\n  @apply outline-none;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, nodeListToArray, toAriaBoolean } from \"../../utils/dom\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { TreeItemSelectDetail } from \"../tree-item/interfaces\";\nimport { getTraversableItems, isTreeItem } from \"./utils\";\n\n/**\n * @slot - A slot for `calcite-tree-item` elements.\n */\n@Component({\n  tag: \"calcite-tree\",\n  styleUrl: \"tree.scss\",\n  shadow: true,\n})\nexport class Tree {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays indentation guide lines. */\n  @Prop({ mutable: true, reflect: true }) lines = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) child: boolean;\n\n  /** Specifies the size of the component. */\n  @Prop({ mutable: true, reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"ancestors\"` displays with a checkbox and allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"children\"` allows any number of selections from one parent from corresponding parent and child selections,\n   *\n   * `\"multichildren\"` allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"none\"` allows no selections,\n   *\n   * `\"single\"` allows one selection, and\n   *\n   * `\"single-persist\"` allows and requires one selection.\n   *\n   * @default \"single\"\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode = \"single\";\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTreeItemElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillRender(): void {\n    const parent: HTMLCalciteTreeElement = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-multiselectable={\n          this.child\n            ? undefined\n            : toAriaBoolean(\n                this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\",\n              )\n        }\n        onKeyDown={this.keyDownHandler}\n        role={!this.child ? \"tree\" : undefined}\n        tabIndex={this.getRootTabIndex()}\n      >\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"focus\") onFocus(): void {\n    if (!this.child) {\n      const focusTarget =\n        this.el.querySelector<HTMLCalciteTreeItemElement>(\n          \"calcite-tree-item[selected]:not([disabled])\",\n        ) || this.el.querySelector<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\");\n\n      focusElement(focusTarget);\n    }\n  }\n\n  @Listen(\"focusin\") onFocusIn(event: FocusEvent): void {\n    const focusedFromRootOrOutsideTree =\n      event.relatedTarget === this.el || !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n\n  @Listen(\"focusout\") onFocusOut(event: FocusEvent): void {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n\n  @Listen(\"calciteInternalTreeItemSelect\")\n  onInternalTreeItemSelect(event: CustomEvent<TreeItemSelectDetail>): void {\n    if (this.child) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteTreeItemElement;\n    const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n\n    const shouldSelect =\n      this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n\n    const shouldModifyToCurrentSelection =\n      !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n\n    const shouldClearCurrentSelection =\n      !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\" ||\n        (this.selectionMode === \"single-persist\" && !target.hasChildren));\n\n    const shouldUpdateExpand =\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n      target.hasChildren;\n\n    const targetItems: HTMLCalciteTreeItemElement[] = [];\n\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item[selected]\"),\n      );\n\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n\n    if (\n      shouldUpdateExpand &&\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)\n    ) {\n      target.expanded = !target.expanded;\n    }\n\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    } else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = this.selectionMode !== \"single\" || !treeItem.selected;\n        }\n      });\n    }\n\n    this.selectedItems = isNoneSelectionMode\n      ? []\n      : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n\n    this.calciteTreeSelect.emit();\n\n    event.stopPropagation();\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.child) {\n      return;\n    }\n\n    const root = this.el;\n    const target = event.target as HTMLCalciteTreeItemElement;\n\n    const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n\n    if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n      return;\n    }\n\n    const traversableItems = getTraversableItems(root);\n\n    if (event.key === \"Tab\") {\n      // root tabindex will be restored when blurred/focused\n      traversableItems.forEach((item) => (item.tabIndex = -1));\n      return;\n    }\n\n    if (event.key === \"ArrowDown\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const nextItem = traversableItems[currentItemIndex + 1];\n      nextItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const previousItem = traversableItems[currentItemIndex - 1];\n      previousItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowLeft\") {\n      if (target.hasChildren && target.expanded) {\n        target.expanded = false;\n        event.preventDefault();\n        return;\n      }\n\n      const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n      const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n\n      parentItem?.focus();\n      event.preventDefault();\n\n      return;\n    }\n\n    if (event.key === \"ArrowRight\") {\n      if (!target.disabled && target.hasChildren) {\n        if (!target.expanded) {\n          target.expanded = true;\n          event.preventDefault();\n        } else {\n          const currentItemIndex = traversableItems.indexOf(target);\n          const nextItem = traversableItems[currentItemIndex + 1];\n          nextItem?.focus();\n          event.preventDefault();\n        }\n      }\n\n      return;\n    }\n\n    if (event.key === \"Home\") {\n      const firstNode = traversableItems.shift();\n      if (firstNode) {\n        firstNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n\n    if (event.key === \"End\") {\n      const lastNode = traversableItems.pop();\n      if (lastNode) {\n        lastNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n  };\n\n  private updateAncestorTree(event: CustomEvent<TreeItemSelectDetail>): void {\n    const item = event.target as HTMLCalciteTreeItemElement;\n    const updateItem = event.detail.updateItem;\n\n    if (item.disabled || (item.indeterminate && !updateItem)) {\n      return;\n    }\n\n    const ancestors: HTMLCalciteTreeItemElement[] = [];\n    let parent = item.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    }\n\n    const childItems = Array.from(\n      item.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n    );\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    } else {\n      futureSelected = item.selected;\n    }\n\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n\n    function updateItemState(\n      childItems: HTMLCalciteTreeItemElement[],\n      item: HTMLCalciteTreeItemElement,\n    ): void {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(\n        el.querySelectorAll<HTMLCalciteTreeItemElement>(\n          \":scope > calcite-tree > calcite-tree-item\",\n        ),\n      );\n\n      updateItemState(directChildItems, el);\n    });\n\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      } else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n\n    this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter(\n      (i) => i.selected,\n    );\n\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the user selects/deselects `calcite-tree-items`.\n   */\n  @Event({ cancelable: false }) calciteTreeSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  getRootTabIndex(): number {\n    return !this.child ? 0 : -1;\n  }\n}\n","export const CSS = {\n  actionsEnd: \"actions-end\",\n  bulletPointIcon: \"bullet-point\",\n  checkbox: \"checkbox\",\n  checkboxContainer: \"checkbox-container\",\n  checkboxLabel: \"checkbox-label\",\n  checkmarkIcon: \"checkmark\",\n  chevron: \"chevron\",\n  childrenContainer: \"children-container\",\n  iconStart: \"icon-start\",\n  itemExpanded: \"item--expanded\",\n  nodeAndActionsContainer: \"node-actions-container\",\n  nodeContainer: \"node-container\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  children: \"children\",\n};\n\nexport const ICONS = {\n  blank: \"blank\",\n  bulletPoint: \"bullet-point\",\n  checkmark: \"check\",\n  checkSquareF: \"check-square-f\",\n  chevronRight: \"chevron-right\",\n  minusSquareF: \"minus-square-f\",\n  square: \"square\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  getElementDir,\n  getSlotted,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { TreeItemSelectDetail } from \"./interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot children - A slot for adding nested `calcite-tree` elements.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or fewer actions.\n */\n@Component({\n  tag: \"calcite-tree-item\",\n  styleUrl: \"tree-item.scss\",\n  shadow: true,\n})\nexport class TreeItem implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, the component is expanded. */\n  @Prop({ mutable: true, reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(newValue: boolean): void {\n    this.updateParentIsExpanded(this.el, newValue);\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** When `true`, the component is selected. */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(value: boolean): void {\n    if (this.selectionMode === \"ancestors\" && !this.userChangedValue) {\n      if (value) {\n        this.indeterminate = false;\n      }\n      this.calciteInternalTreeItemSelect.emit({\n        modifyCurrentSelection: true,\n        updateItem: false,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Prop() parentExpanded = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) depth = -1;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hasChildren: boolean = null;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) lines: boolean;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /**\n   * In ancestor selection mode, show as indeterminate when only some children are selected.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- ignoring until https://github.com/stencil-community/stencil-eslint/issues/111 is fixed\n  @Prop({ reflect: true, mutable: true }) indeterminate = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode;\n\n  @Watch(\"selectionMode\")\n  getSelectionMode(): void {\n    this.isSelectionMultiLike =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTreeItem = this.el.parentElement?.closest(\"calcite-tree-item\");\n    if (this.parentTreeItem) {\n      const { expanded } = this.parentTreeItem;\n      this.updateParentIsExpanded(this.parentTreeItem, expanded);\n    }\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentWillRender(): void {\n    this.hasChildren = !!this.el.querySelector(\"calcite-tree\");\n    this.depth = 0;\n    let parentTree = this.el.closest(\"calcite-tree\");\n\n    if (!parentTree) {\n      return;\n    }\n\n    this.selectionMode = parentTree.selectionMode;\n    this.scale = parentTree.scale || \"m\";\n    this.lines = parentTree.lines;\n\n    let nextParentTree;\n    while (parentTree) {\n      nextParentTree = parentTree.parentElement?.closest(\"calcite-tree\");\n      if (nextParentTree === parentTree) {\n        break;\n      } else {\n        parentTree = nextParentTree;\n        this.depth = this.depth + 1;\n      }\n    }\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => (this.updateAfterInitialRender = true));\n  }\n\n  componentDidLoad(): void {\n    this.updateAncestorTree();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeItemElement;\n\n  private isSelectionMultiLike: boolean;\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    const showBulletPoint =\n      this.selectionMode === \"single\" ||\n      this.selectionMode === \"children\" ||\n      this.selectionMode === \"single-persist\";\n    const showCheckmark =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n    const showBlank = this.selectionMode === \"none\" && !this.hasChildren;\n    const checkboxIsIndeterminate = this.hasChildren && this.indeterminate;\n\n    const chevron = this.hasChildren ? (\n      <calcite-icon\n        class={{\n          [CSS.chevron]: true,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        data-test-id=\"icon\"\n        icon={ICONS.chevronRight}\n        onClick={this.iconClickHandler}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n\n    const checkbox =\n      this.selectionMode === \"ancestors\" ? (\n        <div class={CSS.checkboxContainer}>\n          <calcite-icon\n            class={CSS.checkbox}\n            icon={\n              this.selected\n                ? ICONS.checkSquareF\n                : checkboxIsIndeterminate\n                  ? ICONS.minusSquareF\n                  : ICONS.square\n            }\n            scale={getIconScale(this.scale)}\n          />\n          <label class={CSS.checkboxLabel}>{defaultSlotNode}</label>\n        </div>\n      ) : null;\n    const selectedIcon = showBulletPoint\n      ? ICONS.bulletPoint\n      : showCheckmark\n        ? ICONS.checkmark\n        : showBlank\n          ? ICONS.blank\n          : null;\n    const itemIndicator = selectedIcon ? (\n      <calcite-icon\n        class={{\n          [CSS.bulletPointIcon]: selectedIcon === ICONS.bulletPoint,\n          [CSS.checkmarkIcon]: selectedIcon === ICONS.checkmark,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        icon={selectedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n\n    const hidden = !(this.parentExpanded || this.depth === 1);\n    const isExpanded = this.updateAfterInitialRender && this.expanded;\n    const { hasEndActions } = this;\n    const slotNode = (\n      <slot\n        key=\"actionsEndSlot\"\n        name={SLOTS.actionsEnd}\n        onSlotchange={this.actionsEndSlotChangeHandler}\n      />\n    );\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-checked={\n          this.selectionMode === \"multiple\" ||\n          this.selectionMode === \"multichildren\" ||\n          this.selectionMode === \"ancestors\"\n            ? toAriaBoolean(this.selected)\n            : undefined\n        }\n        aria-expanded={this.hasChildren ? toAriaBoolean(isExpanded) : undefined}\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-live=\"polite\"\n        aria-selected={\n          this.selectionMode === \"single\" ||\n          this.selectionMode === \"children\" ||\n          this.selectionMode === \"single-persist\"\n            ? toAriaBoolean(this.selected)\n            : undefined\n        }\n        calcite-hydrated-hidden={hidden}\n        role=\"treeitem\"\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.itemExpanded]: isExpanded }}>\n            <div class={CSS.nodeAndActionsContainer}>\n              <div\n                class={{\n                  [CSS.nodeContainer]: true,\n                  [CSS_UTILITY.rtl]: rtl,\n                }}\n                data-selection-mode={this.selectionMode}\n              >\n                {chevron}\n                {itemIndicator}\n                {this.iconStart ? iconStartEl : null}\n                {checkbox ? checkbox : defaultSlotNode}\n              </div>\n              <div\n                class={CSS.actionsEnd}\n                hidden={!hasEndActions}\n                ref={(el) => (this.actionSlotWrapper = el as HTMLElement)}\n              >\n                {slotNode}\n              </div>\n            </div>\n\n            <div\n              class={{\n                [CSS.childrenContainer]: true,\n                [CSS_UTILITY.rtl]: rtl,\n              }}\n              data-test-id=\"calcite-tree-children\"\n              onClick={this.childrenClickHandler}\n              role={this.hasChildren ? \"group\" : undefined}\n            >\n              <slot name={SLOTS.children} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\")\n  onClick(event: Event): void {\n    if (this.disabled || this.isActionEndEvent(event)) {\n      return;\n    }\n\n    // Solve for if the item is clicked somewhere outside the slotted anchor.\n    // Anchor is triggered anywhere you click\n    const [link] = filterDirectChildren<HTMLAnchorElement>(this.el, \"a\");\n    if (link && (event.composedPath()[0] as any).tagName.toLowerCase() !== \"a\") {\n      const target = link.target === \"\" ? \"_self\" : link.target;\n      window.open(link.href, target);\n    }\n    this.calciteInternalTreeItemSelect.emit({\n      modifyCurrentSelection: this.selectionMode === \"ancestors\" || this.isSelectionMultiLike,\n      updateItem: true,\n    });\n    this.userChangedValue = true;\n  }\n\n  private iconClickHandler = (event: MouseEvent): void => {\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n  };\n\n  private childrenClickHandler = (event: MouseEvent): void => event.stopPropagation();\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (this.isActionEndEvent(event) || event.defaultPrevented) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.userChangedValue = true;\n        this.calciteInternalTreeItemSelect.emit({\n          modifyCurrentSelection: this.isSelectionMultiLike,\n          updateItem: true,\n        });\n        event.preventDefault();\n        break;\n      case \"Enter\": {\n        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\n        const link = Array.from(this.el.children).find((el) =>\n          el.matches(\"a\"),\n        ) as HTMLAnchorElement;\n\n        this.userChangedValue = true;\n\n        if (link) {\n          link.click();\n          this.selected = true;\n        } else {\n          this.calciteInternalTreeItemSelect.emit({\n            modifyCurrentSelection: this.isSelectionMultiLike,\n            updateItem: true,\n          });\n        }\n        event.preventDefault();\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTreeItemSelect: EventEmitter<TreeItemSelectDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @State() hasEndActions = false;\n\n  /**\n   * Used to make sure initially expanded tree-item can properly\n   * transition and emit events from closed state when rendered.\n   *\n   * @private\n   */\n  @State() updateAfterInitialRender = false;\n\n  actionSlotWrapper!: HTMLElement;\n\n  private parentTreeItem?: HTMLCalciteTreeItemElement;\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private isActionEndEvent(event: Event): boolean {\n    const composedPath = event.composedPath();\n    return composedPath.includes(this.actionSlotWrapper);\n  }\n\n  private updateParentIsExpanded = (el: HTMLCalciteTreeItemElement, expanded: boolean): void => {\n    const items = getSlotted<HTMLCalciteTreeItemElement>(el, SLOTS.children, {\n      all: true,\n      selector: \"calcite-tree-item\",\n    });\n    items.forEach((item) => (item.parentExpanded = expanded));\n  };\n\n  /**\n   * This is meant to be called in `componentDidLoad` in order to take advantage of the hierarchical component lifecycle\n   * and help check for item selection as items are initialized\n   *\n   * @private\n   */\n  private updateAncestorTree(): void {\n    const parentItem = this.parentTreeItem;\n    if (this.selectionMode !== \"ancestors\" || !parentItem) {\n      return;\n    }\n\n    if (this.selected) {\n      const parentTree = this.el.parentElement;\n      const siblings = Array.from(parentTree?.children);\n      const selectedSiblings = siblings.filter(\n        (child: HTMLCalciteTreeItemElement) => child.selected,\n      );\n\n      if (siblings.length === selectedSiblings.length) {\n        parentItem.selected = true;\n        parentItem.indeterminate = false;\n      } else if (selectedSiblings.length > 0) {\n        parentItem.indeterminate = true;\n      }\n\n      const childItems = Array.from(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n      );\n\n      childItems.forEach((item: HTMLCalciteTreeItemElement) => {\n        item.selected = true;\n        item.indeterminate = false;\n      });\n    } else if (this.indeterminate) {\n      const parentItem = this.parentTreeItem;\n      parentItem.indeterminate = true;\n    }\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n}\n",":host {\n  @apply text-color-3\n    block\n    max-w-full\n    cursor-pointer;\n}\n\n.node-actions-container {\n  @apply flex;\n}\n\n@include calcite-hydrated-hidden();\n@include disabled();\n\n:host([scale=\"s\"]) {\n  @apply text-n2h;\n\n  .node-actions-container {\n    @apply min-h-[1.5rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.1\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.1\");\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1h;\n\n  .node-actions-container {\n    @apply min-h-[2rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.2\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.2\");\n      }\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0h;\n\n  .node-actions-container {\n    @apply min-h-[2.75rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.3\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding-inline: var(--calcite-size-md);\n        padding-block: var(--calcite-size-sm-plus);\n      }\n    }\n  }\n}\n\n:host([lines]) {\n  .children-container::after {\n    @apply transition-default\n        absolute\n        top-0\n        w-px\n        transition-colors\n        z-default;\n    // ensure lines don't overlap focus outline\n    block-size: 96%;\n    content: \"\";\n    background-color: var(--calcite-color-border-2);\n  }\n}\n\n:host(:not([lines])) .node-container::after {\n  @apply hidden;\n}\n\n::slotted(*) {\n  @apply min-w-0 max-w-full break-words;\n  color: inherit;\n  text-decoration: none !important;\n\n  &:hover {\n    text-decoration: none !important;\n  }\n}\n\n::slotted(a) {\n  @apply w-full no-underline;\n}\n\n// focus styles\n:host {\n  @apply outline-none;\n\n  .node-container {\n    @apply focus-base;\n  }\n  &:focus,\n  &:active {\n    .node-container {\n      @apply focus-inset;\n    }\n  }\n}\n\n:host(:focus:not([disabled])) {\n  .node-container {\n    @apply focus-inset outline-none;\n  }\n\n  .checkbox {\n    @apply outline-none;\n  }\n}\n\n.actions-end {\n  @apply flex self-stretch flex-row items-center;\n}\n\n.checkbox-container {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox {\n  line-height: 0;\n  color: var(--calcite-color-border-input);\n}\n\n.checkbox-label {\n  @apply pointer-events-none flex items-center;\n}\n\n.children-container {\n  @apply relative h-0 overflow-hidden opacity-0 origin-top;\n  margin-inline-start: theme(\"margin.5\");\n  transform: scaleY(0);\n  transition:\n    var(--calcite-animation-timing) $easing-function,\n    opacity var(--calcite-animation-timing) $easing-function,\n    all var(--calcite-animation-timing) ease-in-out; // note that we're transitioning transform, not height!\n\n  .item--expanded > & {\n    @apply overflow-visible opacity-100;\n    transform: none;\n    block-size: auto;\n  }\n}\n\n.node-container {\n  @apply relative flex grow items-center min-w-0;\n\n  .checkmark,\n  .bullet-point {\n    @apply transition-default opacity-0;\n    color: var(--calcite-color-border-1);\n  }\n}\n\n.node-container:hover,\n:host([selected]) .node-container:hover,\n:host(:focus:not([disabled])) .node-container {\n  .checkmark,\n  .bullet-point {\n    @apply opacity-100;\n  }\n}\n\n:host([selected]) .node-container,\n:host([selected]) .node-container:hover {\n  @apply font-medium text-color-1;\n\n  .bullet-point,\n  .checkmark {\n    @apply opacity-100;\n    color: theme(\"colors.brand\");\n  }\n}\n\n:host([selection-mode=\"none\"]:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container {\n    padding-inline-start: theme(\"padding.2\");\n  }\n  &:host([scale=\"m\"]) .node-container {\n    padding-inline-start: theme(\"padding.4\");\n  }\n  &:host([scale=\"l\"]) .node-container {\n    padding-inline-start: theme(\"padding.6\");\n  }\n}\n\n// ancestors selection-mode, dropdown without children\n:host(:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.5\");\n  }\n  &:host([scale=\"m\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.6\");\n  }\n  &:host([scale=\"l\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: 1.75rem;\n  }\n}\n// ancestors selection-mode, dropdown with children\n:host([has-children]) .node-container[data-selection-mode=\"ancestors\"] {\n  .checkbox {\n    margin-inline-start: 0;\n  }\n}\n\n// dropdown with children\n:host([has-children]) .node-container {\n  .bullet-point,\n  .checkmark {\n    @apply hidden;\n  }\n}\n\n.chevron {\n  @apply transition-default\n    text-color-3\n    relative\n    self-center;\n  flex: 0 0 auto;\n  transform: rotate(0deg);\n\n  .calcite--rtl & {\n    transform: rotate(180deg);\n  }\n\n  .item--expanded .node-container > & {\n    transform: rotate(90deg);\n  }\n}\n\n:host([selected]) {\n  .checkmark,\n  .bullet-point {\n    color: var(--calcite-color-brand);\n  }\n  .checkbox {\n    color: var(--calcite-color-brand);\n  }\n}\n\n:host([has-children][indeterminate]) {\n  .checkbox {\n    color: var(--calcite-color-brand);\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["isTreeItem","element","tagName","Tree","keyDownHandler","event","this","child","root","el","target","contains","includes","key","traversableItems","Array","from","querySelectorAll","filter","item","currentItem","undefined","parent","parentElement","hasChildren","expanded","getTraversableItems","currentItemIndex","indexOf","nextItem","focus","preventDefault","previousItem","parentItem","slice","reverse","find","depth","lastNode","pop","firstNode","shift","disabled","forEach","tabIndex","componentWillRender","closest","lines","scale","selectionMode","render","h","Host","toAriaBoolean","onKeyDown","role","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","relatedTarget","removeAttribute","onFocusOut","onInternalTreeItemSelect","childItems","nodeListToArray","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","targetItems","push","treeItem","selected","window","getSelection","removeAllRanges","selectedItems","i","calciteTreeSelect","emit","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","unselected","ancestor","descendants","activeDescendants","CSS","SLOTS","ICONS","TreeItem","iconClickHandler","childrenClickHandler","userChangedValue","updateParentIsExpanded","getSlotted","all","selector","parentExpanded","actionsEndSlotChangeHandler","hasEndActions","slotChangeHasAssignedElement","expandedHandler","newValue","handleSelectedChange","value","calciteInternalTreeItemSelect","getSelectionMode","isSelectionMultiLike","connectedCallback","parentTreeItem","connectConditionalSlotComponent","disconnectedCallback","disconnectConditionalSlotComponent","nextParentTree","parentTree","componentWillLoad","requestAnimationFrame","updateAfterInitialRender","componentDidLoad","componentDidRender","updateHostInteraction","rtl","getElementDir","showBulletPoint","showCheckmark","showBlank","checkboxIsIndeterminate","chevron","class","CSS_UTILITY","icon","onClick","getIconScale","defaultSlotNode","checkbox","selectedIcon","itemIndicator","hidden","isExpanded","slotNode","name","onSlotchange","iconStartEl","flipRtl","iconFlipRtl","iconStart","InteractiveContainer","ref","actionSlotWrapper","isActionEndEvent","link","filterDirectChildren","composedPath","toLowerCase","open","href","defaultPrevented","children","matches","click","siblings","selectedSiblings","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","unobserve","mutations","forceUpdate","interceptedClick","HTMLElement","prototype","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","setAttribute","document","activeElement","blur","addEventListener","blockInteraction","removeEventListener","restoreInteraction","inert","type","callback","options","isBrowser","Observer","ExtendedMutationObserver","MutationObserver","constructor","super","observedEntry","newObservedEntries","observed","takeRecords","disconnect","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}