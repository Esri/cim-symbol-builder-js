"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[3092],{66486:(t,e,n)=>{n.d(e,{A:()=>m});var i,l=n(35143),s=n(50076),r=n(42553),o=n(53084),a=n(76460),h=n(46053),c=n(21403),u=n(85842),f=n(8141),p=n(52297);let d=i=class extends r.oY{static createEmptyBand(t,e){return new(i.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const l=t[i];for(let t=0;t<e;t++)l[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new s.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new f.z)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>function(t,e){let n=1/0,i=-1/0;const l=t.length;let s,r=0;if(null!=e)for(s=0;s<l;s++)e[s]&&(r=t[s],n=r<n?r:n,i=r>i?r:i);else for(s=0;s<l;s++)r=t[s],n=r<n?r:n,i=r>i?r:i;return new f.z(n,i)}(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,p.hP)(t),l=this.pixels,s=this.width*this.height,r=l.length;let o,a,h;const c=[];for(let u=0;u<r;u++){h=i.createEmptyBand(t,s),o=l[u];for(let t=0;t<s;t++)a=o[t],h[t]=a>n?n:a<e?e:a;c.push(h)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const l=e.length,s=t.some((t=>t>=e.length)),r=l===t.length&&!t.some(((t,e)=>t!==e));if(s||r)return this;const o=this.bandMasks?.length===l?t.map((t=>this.bandMasks[t])):void 0;let{mask:a,validPixelCount:h}=this;const{width:c,height:u}=this;return o?.length&&(a=i.combineBandMasks(o),h=a.filter((t=>!!t)).length),new i({pixelType:this.pixelType,width:c,height:u,mask:a,bandMasks:o,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new i({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=i.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,o.o8)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l?.length)return void a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,r,o,h;s=r=o=l[0],l.length>=3?(r=l[1],o=l[2]):2===l.length&&(r=l[1]);const c=new Uint32Array(t),u=this.width*this.height;if(s.length===u)if(null!=e&&e.length===u)if(n)for(h=0;h<u;h++){const t=e[h];if(t){const e=t/255;c[h]=i?t<<24|o[h]*e<<16|r[h]*e<<8|s[h]*e:t<<24|o[h]<<16|r[h]<<8|s[h]}}else for(h=0;h<u;h++)e[h]&&(c[h]=255<<24|o[h]<<16|r[h]<<8|s[h]);else for(h=0;h<u;h++)c[h]=255<<24|o[h]<<16|r[h]<<8|s[h];else a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e?.length)return void a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,r=0,o=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(r=Math.min(r,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;o=Math.max(o,e)}s=255/o}else{let t=255;"s8"===l?(r=-128,t=127):"u16"===l?t=65535:"s16"===l?(r=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(r=-2147483648,t=2147483647):"f32"===l?(r=-34e38,t=34e38):"f64"===l&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-r)}const h=new Uint32Array(t),c=this.width*this.height;let u,f,p,d,m;if(u=f=p=e[0],u.length!==c)return a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(d=0;d<c;d++)n[d]&&(h[d]=255<<24|(p[d]-r)*s<<16|(f[d]-r)*s<<8|(u[d]-r)*s);else for(d=0;d<c;d++)h[d]=255<<24|(p[d]-r)*s<<16|(f[d]-r)*s<<8|(u[d]-r)*s;else if(null!=n&&n.length===c)for(d=0;d<c;d++)m=(u[d]-r)*s,n[d]&&(h[d]=255<<24|m<<16|m<<8|m);else for(d=0;d<c;d++)m=(u[d]-r)*s,h[d]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return a.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,s,r;i=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):2===e.length&&(l=e[1]);const o=this.width*this.height;if(i.length!==o)return a.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(null!=n&&n.length===o)for(r=0;r<o;r++)t[h++]=i[r],t[h++]=l[r],t[h++]=s[r],t[h++]=1&n[r];else for(r=0;r<o;r++)t[h++]=i[r],t[h++]=l[r],t[h++]=s[r],t[h++]=1}};(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"width",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"height",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,l._)([(0,c.w)("pixelType")],d.prototype,"castPixelType",null),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"validPixelCount",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"mask",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"pixels",void 0),(0,l._)([(0,h.MZ)()],d.prototype,"premultiplyAlpha",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"statistics",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"depthCount",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"noDataValues",void 0),(0,l._)([(0,h.MZ)({json:{write:!0}})],d.prototype,"bandMasks",void 0),d=i=(0,l._)([(0,u.$)("esri.layers.support.PixelBlock")],d);const m=d},8141:(t,e,n)=>{n.d(e,{z:()=>i});class i{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}},52297:(t,e,n)=>{n.d(e,{$p:()=>c,Sp:()=>u,X1:()=>o,hP:()=>r,yM:()=>h,zw:()=>a});const i=9999999e31,l=2e-7,s={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function r(t){return s[t]??[-34028234663852886e22,34028234663852886e22]}function o(t,e){return null==t||null==e?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function a(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function h(t,e,n,i){let[l,s]=r(n);const o=a(n);return o&&(l-=1e-5,s+=1e-5),o?n.startsWith("u")?function(t,e,n,i){const[l,s]=i;for(let r=0;r<e.length;r++)if(e[r]){const i=t[r];i<l||i>s?e[r]=0:n[r]=i+.5|0}}(t,e,i,[l,s]):function(t,e,n,i){const[l,s]=i;for(let r=0;r<e.length;r++)if(e[r]){const i=t[r];i<l||i>s?e[r]=0:n[r]=i+(i>0?.5:-.5)|0}}(t,e,i,[l,s]):function(t,e,n,i){const[l,s]=i;for(let r=0;r<e.length;r++)if(e[r]){const i=t[r];i<l||i>s?e[r]=0:n[r]=i}}(t,e,i,[l,s])}function c(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function u(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:s,statistics:o,pixelType:a}=t,h=s[0].length,c=t.bandMasks??[],u=t.mask??new Uint8Array(h).fill(255),f="f32"===a||"f64"===a,p=r(a);let d=!1;for(let r=0;r<s.length;r++){const t="number"==typeof e?e:e[r];if(null==t)continue;const h=o?.[r]?.minValue??p[0],m=o?.[r]?.maxValue??p[1];if(h>t+Number.EPSILON||m<t-Number.EPSILON)continue;const g=c[r]||u.slice(),x=s[r],w=n?.customFloatTolerance;if(f&&0!==w){let e=w;e||(e=Math.abs(t)>=i?l*Math.abs(t):"f32"===a?2**-23:Number.EPSILON);for(let n=0;n<x.length;n++)g[n]&&Math.abs(x[n]-t)<e&&(x[n]=0,g[n]=0,u[n]=0,d=!0)}else for(let e=0;e<x.length;e++)g[e]&&x[e]===t&&(x[e]=0,g[e]=0,u[e]=0,d=!0);c[r]=g}d&&(t.bandMasks=t.bandMasks||t.pixels.length>1?c:null,t.mask=u),d&&"updateStatistics"in t&&t.updateStatistics()}},52494:(t,e,n)=>{n.d(e,{$i:()=>R,AB:()=>h,Ew:()=>g,Hx:()=>m,IB:()=>i,J$:()=>V,LY:()=>b,QF:()=>L,UK:()=>d,Wb:()=>l,Wt:()=>k,Wy:()=>c,XU:()=>M,dK:()=>A,eH:()=>p,et:()=>a,lD:()=>C,qL:()=>f,z$:()=>P,z7:()=>U,zg:()=>u});var i,l,s,r=n(66486),o=n(52297);(s=i||(i={}))[s.matchAny=0]="matchAny",s[s.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(l||(l={}));const a=6;function h(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function c(t){if(!t?.length||t.some((t=>!h(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:i,pixelType:l}=e[0];if(e.some((t=>t.width!==n||t.height!==i)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let o=null;s.length&&(o=new Uint8Array(n*i),o.set(s[0]),s.length>1&&y(s.slice(1),o));const a=[];e.forEach((({pixels:t})=>a.push(...t)));const c=e.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new r.A({pixelType:l,width:n,height:i,mask:o,pixels:a,statistics:u.length?u:null})}function u(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),s=new Uint8Array(4*l),r=[];let o,a=0,h=0;const c=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:c};if(t.fillUnspecified)for(o=n[h],a=o[0]-i;a<l;a++)s[4*a]=o[1],s[4*a+1]=o[2],s[4*a+2]=o[3],s[4*a+3]=c?o[4]:255,a===o[0]-i&&(o=h===n.length-1?o:n[++h]);else for(a=0;a<n.length;a++)o=n[a],h=4*(o[0]-i),s[h]=o[1],s[h+1]=o[2],s[h+2]=o[3],s[h+3]=c?o[4]:255;return{indexedColormap:s,offset:i,alphaSpecified:c}}function f(t,e){if(!h(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const s=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:r,indexed2DColormap:o,offset:a,alphaSpecified:c}=e;let u=0;const f=i[0],p=new Uint8Array(f.length),d=new Uint8Array(f.length),m=new Uint8Array(f.length);let g,x=0;if(r){const t=r.length-1;if(null!=l)for(u=0;u<s;u++)l[u]&&(x=4*(f[u]-a),x<a||x>t?l[u]=0:(p[u]=r[x],d[u]=r[x+1],m[u]=r[x+2],l[u]=r[x+3]));else{for(l=new Uint8Array(s),u=0;u<s;u++)x=4*(f[u]-a),x<a||x>t?l[u]=0:(p[u]=r[x],d[u]=r[x+1],m[u]=r[x+2],l[u]=r[x+3]);n.mask=l}}else if(o)if(null!=l)for(u=0;u<s;u++)l[u]&&(g=o[f[u]],p[u]=g[0],d[u]=g[1],m[u]=g[2],l[u]=g[3]);else{for(l=new Uint8Array(s),u=0;u<s;u++)g=o[f[u]],p[u]=g[0],d[u]=g[1],m[u]=g[2],l[u]=g[3];n.mask=l}return n.pixels=[p,d,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=c,n}function p(t,e){if(!h(t))return null;const{pixels:n,mask:i}=t,l=n.length;let s=e.lut;const{offset:o}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const a=[],c=e.outputPixelType||"u8";for(let r=0;r<l;r++){const t=d(n[r],i,s[r],o||0,c);a.push(t)}const u=new r.A({width:t.width,height:t.height,pixels:a,mask:i,pixelType:c});return u.updateStatistics(),u}function d(t,e,n,i,l){const s=t.length,o=r.A.createEmptyBand(l,s);if(e)for(let r=0;r<s;r++)e[r]&&(o[r]=n[t[r]-i]);else for(let r=0;r<s;r++)o[r]=n[t[r]-i];return o}function m(t,e){if(!h(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,s=e.length,r=Math.floor(s/2),o=e[Math.floor(r)],a=i[0];let c,u,f,p,d,m,g=!1;const x=new Uint8Array(l),w=new Uint8Array(l),y=new Uint8Array(l);let A=n.mask;const M=4===e[0].mappedColor.length;for(A||(A=new Uint8Array(l),A.fill(M?255:1),n.mask=A),d=0;d<l;d++)if(A[d]){for(c=a[d],g=!1,m=r,u=o,f=0,p=s-1;p-f>1;){if(c===u.value){g=!0;break}c>u.value?f=m:p=m,m=Math.floor((f+p)/2),u=e[Math.floor(m)]}g||(c===e[f].value?(u=e[f],g=!0):c===e[p].value?(u=e[p],g=!0):c<e[f].value?(g=!1,u=null):c>e[f].value&&(c<e[p].value?(u=e[f],g=!0):p===s-1?(g=!1,u=null):(u=e[p],g=!0))),g?(x[d]=u.mappedColor[0],w[d]=u.mappedColor[1],y[d]=u.mappedColor[2],A[d]=u.mappedColor[3]):x[d]=w[d]=y[d]=A[d]=0}return n.pixels=[x,w,y],n.mask=A,n.pixelType="u8",n.maskIsAlpha=M,n}function g(t,e){if(!h(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:s,outputPixelType:a,noDataRanges:c,allowUnmatched:u,isLastInputRangeInclusive:f}=e,p=t.pixels[0],d=r.A.createEmptyBand(a,p.length),m=t.mask,g=new Uint8Array(n*i);m?g.set(m):g.fill(255);const x=t.pixelType.startsWith("f")?1e-6:0,w=l.map((t=>t-x));w[0]=l[0],w[w.length-1]=l[l.length-1]+(f?1e-6:0);const y=l.length/2,[A,M]=(0,o.hP)(a);for(let r=0;r<i;r++)for(let t=0;t<n;t++){const e=r*n+t;if(g[e]){const t=p[e];let n=!1;for(let i=y-1;i>=0;i--)if(t===w[2*i]||t>w[2*i]&&t<w[2*i+1]){d[e]=s[i],n=!0;break}n||(u?d[e]=t>M?M:t<A?A:t:g[e]=0)}}const k=c?.length;if(k)for(let r=0;r<i;r++)for(let t=0;t<n;t++){const e=r*n+t;if(!m||m[e]){const t=p[e];for(let n=0;n<k;n+=2)if(t>=c[n]&&t<=c[n+1]){d[e]=0,g[e]=0;break}}}return new r.A({width:n,height:i,pixelType:a,pixels:[d],mask:g})}function x(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,r=!!e?.length;for(let o=0;o<t.length;o++)if(i[o]){const n=t[o];if(r){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[o]=0)}i[o]&&(n===s||l?.has(n))&&(i[o]=0)}}function w(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function y(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function A(t,e){if(!h(t))return null;const{width:n,height:i,pixels:l}=t,s=n*i,o=new Uint8Array(s);t.mask?o.set(t.mask):o.fill(255);const a=l.length,{includedRanges:c,noDataValues:u,outputPixelType:f,matchAll:p,lookups:m}=e;if(m){const t=[];for(let e=0;e<a;e++){const n=m[e],i=d(l[e],o,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?o.set(t[0]):p?w(t,o):y(t,o)}else if(p){const t=[];for(let e=0;e<a;e++){const n=new Uint8Array(s);n.set(o),x(l[e],c?.slice(2*e,2*e+2),u?.[e],n),t.push(n)}1===t.length?o.set(t[0]):w(t,o)}else for(let r=0;r<a;r++)x(l[r],c?.slice(2*r,2*r+2),u?.[r],o);return new r.A({width:n,height:i,pixelType:f,pixels:l,mask:o})}function M(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:s,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const c=e.includes("16")?65536:256,u=e.includes("s")?-c/2:0,f=r.A.createEmptyBand(h,c),p=new Uint8Array(c);l&&p.fill(255);const[d,m]=(0,o.hP)(h);if(n?.length&&i?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],a&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=i[n]>m?m:i[n]<d?d:i[n],l=Math.ceil(e[2*n]-u),s=Math.floor(e[2*n+1]-u);for(let e=l;e<=s;e++)f[e]=t,p[e]=255}}if(s?.length)for(let r=0;r<s.length;r++){const t=Math.ceil(s[2*r]-u),e=Math.floor(s[2*r+1]-u);for(let n=t;n<=e;n++)p[n]=0}return{lut:f,offset:u,mask:p}}function k(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,s=new Uint8Array(i);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-l),n=Math.floor(e[2*r+1]-l);for(let e=t;e<=n;e++)s[e]=255}else s.fill(255);if(n)for(let r=0;r<n.length;r++)s[n[r]-l]=0;return{lut:s,offset:l}}function b(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(i,l),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,r.map((t=>t.extent.xmin))),a=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-o)/i),y:Math.round((c-e.ymax)/l)},f={width:Math.round((h-o)/i),height:Math.round((c-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(f.width/n.pixelBlock.width)*Math.round(f.height/n.pixelBlock.height)!==r.length||u.x<0||u.y<0||f.width<p.width||f.height<p.height?null:{extent:e,pixelBlock:U(r.map((t=>t.pixelBlock)),f,{clipOffset:u,clipSize:p})}}function v(t,e,n,i,l,s){const{width:r,height:o}=n.block,{x:a,y:h}=n.offset,{width:c,height:u}=n.mosaic,f=function(t,e,n,i,l,s,r,o){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:s<=i*e?0:s<i*e+e?s-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:s+o<=i*e?0:s+o<i*e+e?s+o-i*e:e}}(r,o,i,l,a,h,c,u);let p=0,d=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=r*s.resolutionX,n=s.startX+i*e;n<t&&n+e>t?d=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p,s=m*r;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e[s+i]}else for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e}}function U(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:s,blockWidths:o}=n;if(o)return function(t,e,n){const i=t.find((t=>null!=t));if(null==i)return null;const l=t.some((t=>null==t||!!t.mask)),{width:s,height:o}=e,a=l?new Uint8Array(s*o):null,{blockWidths:c}=n,u=[],f=i.getPlaneCount(),p=r.A.getPixelArrayConstructor(i.pixelType);if(l)for(let r=0,w=0;r<t.length;w+=c[r],r++){const e=t[r];if(!h(e))continue;const n=e.mask;for(let t=0;t<o;t++)for(let i=0;i<c[r];i++)a[t*s+i+w]=null==n?255:n[t*e.width+i]}const d=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),m=d?[]:void 0,g=s*o;for(let r=0;r<f;r++){const e=new p(g),n=d?new Uint8Array(g):void 0;for(let i=0,l=0;i<t.length;l+=c[i],i++){const a=t[i];if(!h(a))continue;const u=a.pixels[r];if(null!=u){for(let t=0;t<o;t++)for(let n=0;n<c[i];n++)e[t*s+n+l]=u[t*a.width+n];if(n){const t=a.bandMasks?.[r]??a.mask;for(let e=0;e<o;e++)for(let r=0;r<c[i];r++)n[e*s+r+l]=t?t[e*a.width+r]:255}}}u.push(e),m&&n&&m.push(n)}const x=new r.A({width:s,height:o,mask:a,bandMasks:m,pixels:u,pixelType:i.pixelType});return x.updateStatistics(),x}(t,e,{blockWidths:o});const a=t.find((t=>h(t)));if(null==a)return null;const c=l?l.width:e.width,u=l?l.height:e.height,f=a.width,p=a.height,d=e.width/f,m=e.height/p,g={offset:i||{x:0,y:0},mosaic:l||e,block:{width:f,height:p}},x=a.pixelType,w=r.A.getPixelArrayConstructor(x),y=a.pixels.length,A=[];let M,k;for(let r=0;r<y;r++){k=new w(c*u);for(let e=0;e<m;e++)for(let n=0;n<d;n++){const i=t[e*d+n];h(i)&&(M=i.pixels[r],v(k,M,g,n,e,s))}A.push(k)}const b=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),U=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),P=b?new Uint8Array(c*u):void 0,T=U?[]:void 0;if(P){for(let e=0;e<m;e++)for(let n=0;n<d;n++){const i=t[e*d+n],l=null!=i?i.mask:null;v(P,null!=l?l:i?255:0,g,n,e,s)}if(T)for(let e=0;e<y;e++){const n=new Uint8Array(c*u);for(let i=0;i<m;i++)for(let l=0;l<d;l++){const r=t[i*d+l],o=r?.bandMasks?.[e]??r?.mask;v(n,null!=o?o:r?255:0,g,l,i,s)}T.push(n)}}const I=new r.A({width:c,height:u,pixels:A,pixelType:x,bandMasks:T,mask:P});return I.updateStatistics(),I}function P(t,e,n){if(!h(t))return null;const{width:i,height:l}=t,s=e.x,r=e.y,o=n.width+s,a=n.height+r;if(s<0||r<0||o>i||a>l)return t;if(0===s&&0===r&&o===i&&a===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const c=t.mask;for(let h=0;h<l;h++){const t=h*i;for(let e=0;e<i;e++)c[t+e]=h<r||h>=a||e<s||e>=o?0:1}return t.updateStatistics(),t}function T(t){if(!h(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,s=l[0],r=e.pixels[0],o=t.mask;for(let a=2;a<i-1;a++){const t=new Map;for(let i=a-2;i<a+2;i++)for(let e=0;e<4;e++){const l=i*n+e;_(t,s[l],o?o[l]:1)}r[a*n]=I(t),r[a*n+1]=r[a*n+2]=r[a*n];let e=3;for(;e<n-1;e++){let i=(a-2)*n+e+1;_(t,s[i],o?o[i]:1),i=(a-1)*n+e+1,_(t,s[i],o?o[i]:1),i=a*n+e+1,_(t,s[i],o?o[i]:1),i=(a+1)*n+e+1,_(t,s[i],o?o[i]:1),i=(a-2)*n+e-3,B(t,s[i],o?o[i]:1),i=(a-1)*n+e-3,B(t,s[i],o?o[i]:1),i=a*n+e-3,B(t,s[i],o?o[i]:1),i=(a+1)*n+e-3,B(t,s[i],o?o[i]:1),r[a*n+e]=I(t)}r[a*n+e+1]=r[a*n+e]}for(let a=0;a<n;a++)r[a]=r[n+a]=r[2*n+a],r[(i-1)*n+a]=r[(i-2)*n+a];return e.updateStatistics(),e}function I(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let s=l.next();for(;!s.done;)i=t.get(s.value),i>e&&(n=s.value,e=i),s=l.next();return n}function B(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function _(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function S(t,e,n){let{x:i,y:l}=e;const{width:s,height:o}=n;if(0===i&&0===l&&o===t.height&&s===t.width)return t;const{width:a,height:c}=t,u=Math.max(0,l),f=Math.max(0,i),p=Math.min(i+s,a),d=Math.min(l+o,c);if(p<0||d<0||!h(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:m}=t,g=s*o,x=m.length,w=[];for(let h=0;h<x;h++){const e=m[h],n=r.A.createEmptyBand(t.pixelType,g);for(let t=u;t<d;t++){const r=t*a;let o=(t+l-u)*s+i;for(let t=f;t<p;t++)n[o++]=e[r+t]}w.push(n)}const y=new Uint8Array(g),A=t.mask;for(let r=u;r<d;r++){const t=r*a;let e=(r+l-u)*s+i;for(let n=f;n<p;n++)y[e++]=A?A[t+n]:1}const M=new r.A({width:n.width,height:n.height,pixelType:t.pixelType,pixels:w,mask:y});return M.updateStatistics(),M}function F(t,e=!0){if(!h(t))return null;const{pixels:n,width:i,height:l,mask:s,pixelType:o}=t,a=[],c=Math.round(i/2),u=Math.round(l/2),f=l-1,p=i-1;for(let h=0;h<n.length;h++){const t=n[h],s=r.A.createEmptyBand(o,c*u);let d=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=t[n*i+l];if(e){const e=l===p?r:t[n*i+l+1],o=n===f?r:t[n*i+l+i],a=l===p?o:n===f?e:t[n*i+l+i+1];s[d++]=(r+e+o+a)/4}else s[d++]=r}a.push(s)}let d=null;if(null!=s){d=new Uint8Array(c*u);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=s[n*i+l];if(e){const e=l===p?r:s[n*i+l+1],o=n===f?r:s[n*i+l+i],a=l===p?o:n===f?e:s[n*i+l+i+1];d[t++]=r*e*o*a?1:0}else d[t++]=r}}return new r.A({width:c,height:u,pixelType:o,pixels:a,mask:d})}function C(t,e,n=0,i=!0){if(!h(t))return null;const{width:l,height:s}=e;let{width:r,height:o}=t;const a=new Map,c={x:0,y:0},u=1+n;let f=t;for(let h=0;h<u;h++){const t=Math.ceil(r/l),n=Math.ceil(o/s);for(let i=0;i<n;i++){c.y=i*s;for(let n=0;n<t;n++){c.x=n*l;const t=S(f,c,e);a.set(`${h}/${i}/${n}`,t)}}h<u-1&&(f=F(f,i)),r=Math.round(r/2),o=Math.round(o/2)}return a}function V(t){const{pixelBlock:e,tileSize:n,level:i,row:l,col:s,useBilinear:r}=t;if(!h(e))return null;const{width:o,height:a}=n,c=2**i,u=c*o,f=c*a;let p=S(e,{y:l*f,x:s*u},{width:u,height:f});if(!p)return null;for(let h=i;h>0;h--)p=F(p,r);return p}function D(t,e,n,i,l=0){const{width:s,height:r}=t,{width:o,height:a}=e,h=i.cols,c=i.rows,u=Math.ceil(o/h-.1/h),f=Math.ceil(a/c-.1/c);let p,d,m,g,x,w,y;const A=u*h,M=A*f*c,k=new Float32Array(M),b=new Float32Array(M),v=new Uint32Array(M),U=new Uint32Array(M);let P,T,I=0;for(let B=0;B<f;B++)for(let t=0;t<u;t++){p=12*(B*u+t),d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(B*c+e)*A+t*h,T=(e+.5)/c;for(let t=0;t<e;t++)P=(t+.5)/h,k[I+t]=(d*P+m*T+g)*s+l,b[I+t]=(x*P+w*T+y)*r+l,v[I+t]=Math.floor(k[I+t]),U[I+t]=Math.floor(b[I+t])}p+=6,d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){I=(B*c+e)*A+t*h,T=(e+.5)/c;for(let t=e;t<h;t++)P=(t+.5)/h,k[I+t]=(d*P+m*T+g)*s+l,b[I+t]=(x*P+w*T+y)*r+l,v[I+t]=Math.floor(k[I+t]),U[I+t]=Math.floor(b[I+t])}}return{offsets_x:k,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:A}}function L(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:s,gridWidth:r}=D(t,t,n,{rows:i[0],cols:i[1]}),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let u=0;u<a;u++)for(let t=0;t<o;t++){const e=u*r+t,n=0===u?e:e-r,i=u===a-1?e:e+r,f=l[n]-l[i],p=s[i]-s[n];if(isNaN(f)||isNaN(p))h[u*o+t]=90;else{let e=Math.atan2(p,f)*c;e=(360+e)%360,h[u*o+t]=e}}return h}function R(t,e,n,i,l="nearest"){if(!h(t))return null;"majority"===l&&(t=T(t));const{pixels:s,mask:o,bandMasks:a,pixelType:c}=t,u=t.width,f=t.height,p=r.A.getPixelArrayConstructor(c),d=s.length,{width:m,height:g}=e;let x=!1;for(let r=0;r<n.length;r+=3)-1===n[r]&&-1===n[r+1]&&-1===n[r+2]&&(x=!0);const{offsets_x:w,offsets_y:y,offsets_xi:A,offsets_yi:M,gridWidth:k}=D({width:u,height:f},e,n,i,"majority"===l?.5:0);let b;const v=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<g;s++){b=s*k;for(let r=0;r<m;r++){if(w[b]<0||y[b]<0)t[s*m+r]=0;else if(i)t[s*m+r]=e[A[b]+M[b]*u];else{const i=Math.floor(w[b]),o=Math.floor(y[b]),a=Math.ceil(w[b]),h=Math.ceil(y[b]),c=w[b]-i,f=y[b]-o;if(!n||n[i+o*u]&&n[a+o*u]&&n[i+h*u]&&n[a+h*u]){const n=(1-c)*e[i+o*u]+c*e[a+o*u],p=(1-c)*e[i+h*u]+c*e[a+h*u];t[s*m+r]=(1-f)*n+f*p+l}else t[s*m+r]=e[A[b]+M[b]*u]}b++}}},U=[];let P;const I=a?.length===d,B=[];for(let r=0;r<d;r++){if(I){const t=new Uint8Array(m*g);v(t,a[r],a[r],!0),B.push(t)}P=new p(m*g),v(P,s[r],I?a[r]:o,"nearest"===l||"majority"===l),U.push(P)}const _=new r.A({width:m,height:g,pixelType:c,pixels:U,bandMasks:I?B:void 0});if(null!=o)_.mask=new Uint8Array(m*g),v(_.mask,o,o,!0);else if(x){_.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)_.mask[t]=w[t]<0||y[t]<0?0:1}return _.updateStatistics(),_}},99846:(t,e,n)=>{n.d(e,{$Q:()=>x,FI:()=>m,KL:()=>c,Lu:()=>f,MD:()=>h,Rn:()=>g,Ud:()=>I,Wu:()=>_,Y2:()=>d,gf:()=>B});var i=n(45802),l=n(66486),s=n(52494);const r=new Map;r.set("meter-per-second",1),r.set("kilometer-per-hour",.277778),r.set("knots",.514444),r.set("feet-per-second",.3048),r.set("mile-per-hour",.44704);const o=180/Math.PI,a=5,h=new i.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c(t,e){return r.get(t)/r.get(e)||1}function u(t){return(450-t)%360}function f(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let s=Math.atan2(i,n)*o;return s=(360+s)%360,"geographic"===e&&(s=u(s)),[l,s]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u(n)),n%=360;const i=t[0];return[i*Math.cos(n/o),i*Math.sin(n/o)]}function d(t,e,n,i="geographic"){if(!(0,s.AB)(t)||null==n)return t;const l="vector-magdir"===e?t.clone():m(t,e),r=l.pixels[1];for(let s=0;s<r.length;s++)r[s]="geographic"===i?(r[s]+n[s]+270)%360:(r[s]+360-n[s])%360;return"vector-magdir"===e?l:m(l,"vector-magdir")}function m(t,e,n="geographic",i=1){if(!(0,s.AB)(t))return t;const{pixels:r,width:o,height:a}=t,h=o*a,c=r[0],u=r[1],d=t.pixelType.startsWith("f")?t.pixelType:"f32",m=l.A.createEmptyBand(d,h),g=l.A.createEmptyBand(d,h);let x=0;for(let l=0;l<a;l++)for(let t=0;t<o;t++)"vector-uv"===e?([m[x],g[x]]=f([c[x],u[x]],n),m[x]*=i):([m[x],g[x]]=p([c[x],u[x]],n),m[x]*=i,g[x]*=i),x++;const w=new l.A({pixelType:d,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[m,g]});return w.updateStatistics(),w}function g(t,e,n=1){if(1===n||!(0,s.AB)(t))return t;const i=t.clone(),{pixels:l,width:r,height:o}=i,a=l[0],h=l[1];let c=0;for(let s=0;s<o;s++)for(let t=0;t<r;t++)"vector-uv"===e?(a[c]*=n,h[c]*=n):a[c]*=n,c++;return i.updateStatistics(),i}function x(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const s=l.xmin,r=l.ymax,o=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(o+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/o)*o,t.xmax=s+Math.ceil((t.xmax-s)/o)*o,t.ymin=r+Math.floor((t.ymin-r)/a)*a,t.ymax=r+Math.ceil((t.ymax-r)/a)*a,{extent:t,width:Math.round(t.width/o),height:Math.round(t.height/a),resolution:h}}const w=y(0,0,0);function y(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,s=13*l,r=-7*l,o=-2*l,a=-16*l,h=21.75,[c,u]=M(0,e+s,n,h),[f,p]=M(t-5.5,e+r,n,h),[d,m]=M(t+5.5,e+r,n,h),[g,x]=M(t-1.5,e+o,n,h),[w,y]=M(t+1.5,e+o,n,h),[A,k]=M(t-1.5,e+a,n,h),[b,v]=M(t+1.5,e+a,n,h);return[c,u,f,p,g,x,w,y,d,m,A,k,b,v]}function A(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=n?-1:1,l=5*i,s=20*i,r=25*i,o=45,h=2*i,c=n?1:-1,u=5*c;let[f,p]=[0+u,0-s],[d,m]=[f+2*c,p],[g,x]=[d-0*c,m+h],[w,y]=[0-u,0-r],[A,k]=[w+0*c,y-h],b=Math.ceil(t/a),v=Math.floor(b/10);b-=8*v;const U=[],P=[];for(let a=0;a<b/2;a++,v--){v<=0&&b%2==1&&a===(b-1)/2&&(w=0,A=w+0*c,y=(y+p)/2,k=y-h);const[t,n]=M(w,y,e,o);if(v>0){const[i,l]=M(d,y,e,o),[s,r]=M(f,p,e,o);U.push(i),U.push(l),U.push(t),U.push(n),U.push(s),U.push(r)}else{const[i,l]=M(d,m,e,o),[s,r]=M(g,x,e,o),[a,h]=M(A,k,e,o);P.push(t),P.push(n),P.push(a),P.push(h),P.push(s),P.push(r),P.push(i),P.push(l)}y+=l,p+=l,m+=l,x+=l,k+=l}const[T,I]=M(0+u,0+s,e,o),B=7*c,[_,S]=M(0+B,0+s,e,o),[F,C]=M(0+u,0-r,e,o),[V,D]=M(0+B,0-r,e,o);return{pennants:U,barbs:P,shaft:[T,I,_,S,F,C,V,D]}}function M(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+s-n)%(2*Math.PI)]}const k=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],v=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function U(t,e,n,i){const l=c(i||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*l)break}else if(t<=e[s]*l)break;return Math.min(s-1,e.length-2)}function P(t,e,n,i,l){let s=0;switch(e){case"beaufort_kn":s=U(t,k,"knots",n);break;case"beaufort_km":s=U(t,k,"kilometer-per-hour",n);break;case"beaufort_ft":s=U(t,k,"feet-per-second",n);break;case"beaufort_m":s=U(t,k,"meter-per-second",n);break;case"classified_arrow":s=U(t,l??[],i,n);break;case"ocean_current_m":s=U(t,b,"meter-per-second",n);break;case"ocean_current_kn":s=U(t,v,"knots",n)}return s}const T=[];function I(t,e){let n=0,i=0;const{width:l,height:s,mask:r}=t,o=t.pixels[0],u=[],f=[],p=c(h.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?a:Number.MAX_VALUE;for(let a=0;a<s;a++)for(let t=0;t<l;t++){const e=o[a*l+t]*p;if((!r||r[a*l+t])&&e<d){for(let i=0;i<4;i++)u[n++]=(t+.5)/l,u[n++]=(a+.5)/s,u[n++]=i<2?-.5:.5,u[n++]=i%2==0?-.5:.5,u[n++]=0,u[n++]=e;const r=4*(n/24-1);f[i++]=r,f[i++]=r+1,f[i++]=r+2,f[i++]=r+1,f[i++]=r+2,f[i++]=r+3}}return{vertexData:new Float32Array(u),indexData:new Uint32Array(f)}}function B(t,e){return"simple_scalar"===e.style?I(t,e):"wind_speed"===e.style?function(t,e){if(0===T.length)for(let a=0;a<30;a++)T.push(A(5*a,0,!e.invertDirection));const n=c(h.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:s}=t,r=t.pixels[0],o=t.pixels[1],u=[],f=[];let p=0,d=0;for(let h=0;h<l;h++)for(let t=0;t<i;t++){const e=h*i+t,c=r[e]*n;if((!s||s[h*i+t])&&c>=a){const n=(o[e]+360)%360/180*Math.PI,{pennants:s,barbs:r,shaft:a}=T[Math.min(Math.floor(c/5),29)];if(s.length+r.length===0)continue;let m=u.length/6;const g=(t+.5)/i,x=(h+.5)/l;for(let t=0;t<s.length;t+=2)u[p++]=g,u[p++]=x,u[p++]=s[t],u[p++]=s[t+1]+n,u[p++]=0,u[p++]=c;for(let t=0;t<r.length;t+=2)u[p++]=g,u[p++]=x,u[p++]=r[t],u[p++]=r[t+1]+n,u[p++]=0,u[p++]=c;for(let t=0;t<a.length;t+=2)u[p++]=g,u[p++]=x,u[p++]=a[t],u[p++]=a[t+1]+n,u[p++]=0,u[p++]=c;for(let t=0;t<s.length/6;t++)f[d++]=m,f[d++]=m+1,f[d++]=m+2,m+=3;for(let t=0;t<r.length/8;t++)f[d++]=m,f[d++]=m+1,f[d++]=m+2,f[d++]=m+1,f[d++]=m+2,f[d++]=m+3,m+=4;f[d++]=m+0,f[d++]=m+1,f[d++]=m+2,f[d++]=m+1,f[d++]=m+3,f[d++]=m+2,m+=4}}return{vertexData:new Float32Array(u),indexData:new Uint32Array(f)}}(t,e):function(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:s}=e,r=h.fromJSON(i),o=h.fromJSON(l);let a=0,c=0;const{width:u,height:f,mask:p}=t,d=t.pixels[0],m=t.pixels[1],g=null!=p?p.filter((t=>t>0)).length:u*f,x=new Float32Array(42*g),A=new Uint32Array(15*g),M=e.invertDirection?y(0,0,0,!1):w;for(let h=0;h<f;h++)for(let t=0;t<u;t++){const e=h*u+t;if(!p||p[h*u+t]){const i=(m[e]+360)%360/180*Math.PI,l=P(d[e],n,r,o,s);for(let n=0;n<M.length;n+=2)x[a++]=(t+.5)/u,x[a++]=(h+.5)/f,x[a++]=M[n],x[a++]=M[n+1]+i,x[a++]=l,x[a++]=d[e];const p=7*(a/42-1);A[c++]=p,A[c++]=p+1,A[c++]=p+2,A[c++]=p+0,A[c++]=p+4,A[c++]=p+3,A[c++]=p+0,A[c++]=p+2,A[c++]=p+3,A[c++]=p+2,A[c++]=p+5,A[c++]=p+3,A[c++]=p+5,A[c++]=p+6,A[c++]=p+3}}return{vertexData:x,indexData:A}}(t,e)}function _(t,e,n,i=[0,0],s=.5){const{width:r,height:o,mask:a}=t,[h,c]=t.pixels,[u,d]=i,m=Math.round((r-u)/n),g=Math.round((o-d)/n),x=m*g,w=new Float32Array(x),y=new Float32Array(x),A=new Uint8Array(x),M="vector-uv"===e;for(let l=0;l<g;l++)for(let t=0;t<m;t++){let e=0;const i=l*m+t,g=Math.max(0,l*n+d),x=Math.max(0,t*n+u),k=Math.min(o,g+n),b=Math.min(r,x+n);for(let t=g;t<k;t++)for(let n=x;n<b;n++){const l=t*r+n;if(!a||a[l]){e++;const t=M?[h[l],c[l]]:[h[l],(360+c[l])%360],[n,s]=M?t:p(t);w[i]+=n,y[i]+=s}}if(e>=(k-g)*(b-x)*(1-s)){A[i]=1;const[t,n]=f([w[i]/e,y[i]/e]);w[i]=t,y[i]=n}else A[i]=0,w[i]=0,y[i]=0}const k=new l.A({width:m,height:g,pixels:[w,y],mask:A});return k.updateStatistics(),k}},46533:(t,e,n)=>{n.d(e,{CW:()=>f,pH:()=>x});n(35238);var i=n(81806),l=n(76460),s=n(15941),r=n(50346),o=n(47249),a=n(80963),h=n(76797);const c=()=>l.A.getLogger("esri.views.2d.engine.flow.dataUtils"),u=10;async function f(t,e,n,l){const s=performance.now(),a=p(e,n),h=performance.now(),f=m(e,a,n.width,n.height),d=performance.now(),g=function(t,e){const n=new o.A,i=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*i),s=new Array(t.length);let r=0,a=0;for(const o of t){const t=r;for(const e of o)l[4*r]=e.x,l[4*r+1]=e.y,l[4*r+2]=e.t,l[4*r+3]=e.speed,r++;s[a++]={startVertex:t,numberOfVertices:o.length,totalTime:o[o.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:s}}(f,!0),x=performance.now(),w="Streamlines"===t?function(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let s=0,r=0;for(const p of l)s+=2*p.numberOfVertices,r+=6*(p.numberOfVertices-1);const o=new Float32Array(s*n),a=new Uint32Array(r);let h=0,c=0;function u(){a[c++]=h-2,a[c++]=h,a[c++]=h-1,a[c++]=h,a[c++]=h+1,a[c++]=h-1}function f(t,e,i,l,s,r,a,c){const u=h*n;let f=0;o[u+f++]=t,o[u+f++]=e,o[u+f++]=1,o[u+f++]=i,o[u+f++]=r,o[u+f++]=a,o[u+f++]=l/2,o[u+f++]=s/2,o[u+f++]=c,h++,o[u+f++]=t,o[u+f++]=e,o[u+f++]=-1,o[u+f++]=i,o[u+f++]=r,o[u+f++]=a,o[u+f++]=-l/2,o[u+f++]=-s/2,o[u+f++]=c,h++}for(const p of l){const{totalTime:t,timeSeed:n}=p;let l=null,s=null,r=null,o=null,a=null,h=null;for(let c=0;c<p.numberOfVertices;c++){const d=i[4*(p.startVertex+c)],m=i[4*(p.startVertex+c)+1],g=i[4*(p.startVertex+c)+2],x=i[4*(p.startVertex+c)+3];let w=null,y=null,A=null,M=null;if(c>0){w=d-l,y=m-s;const i=Math.sqrt(w*w+y*y);if(w/=i,y/=i,c>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,A=-n,M=t}else A=-y,M=w;null!==A&&null!==M&&(f(l,s,r,A,M,t,n,x),u())}l=d,s=m,r=g,a=w,h=y,o=x}f(l,s,r,-h,a,t,n,o)}return{vertexData:o,indexData:a}}(g,u):function(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:s}=t;let r=0,o=0;for(const S of s){const t=S.numberOfVertices-1;r+=4*t*2,o+=6*t*2}const a=new Float32Array(r*e),h=new Uint32Array(o);let c,u,f,p,d,m,g,x,w,y,A,M,k,b,v=0,U=0;function P(){h[U++]=v-8,h[U++]=v-7,h[U++]=v-6,h[U++]=v-7,h[U++]=v-5,h[U++]=v-6,h[U++]=v-4,h[U++]=v-3,h[U++]=v-2,h[U++]=v-3,h[U++]=v-1,h[U++]=v-2}function T(t,l,s,r,o,h,c,u,f,p,d,m,g,x){const w=v*e;let y=0;for(const e of[n,i])for(const n of[1,2,3,4])a[w+y++]=t,a[w+y++]=l,a[w+y++]=s,a[w+y++]=r,a[w+y++]=c,a[w+y++]=u,a[w+y++]=f,a[w+y++]=p,a[w+y++]=e,a[w+y++]=n,a[w+y++]=g,a[w+y++]=x,a[w+y++]=o/2,a[w+y++]=h/2,a[w+y++]=d/2,a[w+y++]=m/2,v++}function I(t,e){let n=w+A,i=y+M;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const s=w*n+y*i;n/=s,i/=s;let r=A+k,o=M+b;const a=Math.sqrt(r*r+o*o);r/=a,o/=a;const h=A*r+M*o;r/=h,o/=h,T(c,u,f,p,-i,n,d,m,g,x,-o,r,t,e),P()}function B(t,e,n,i,l,s){if(w=A,y=M,A=k,M=b,null==w&&null==y&&(w=A,y=M),null!=d&&null!=m){k=t-d,b=e-m;const n=Math.sqrt(k*k+b*b);k/=n,b/=n}null!=w&&null!=y&&I(l,s),c=d,u=m,f=g,p=x,d=t,m=e,g=n,x=i}function _(t,e){w=A,y=M,A=k,M=b,null==w&&null==y&&(w=A,y=M),null!=w&&null!=y&&I(t,e)}for(const S of s){c=null,u=null,f=null,p=null,d=null,m=null,g=null,x=null,w=null,y=null,A=null,M=null,k=null,b=null;const{totalTime:t,timeSeed:e}=S;for(let n=0;n<S.numberOfVertices;n++)B(l[4*(S.startVertex+n)],l[4*(S.startVertex+n)+1],l[4*(S.startVertex+n)+2],l[4*(S.startVertex+n)+3],t,e);_(t,e)}return{vertexData:a,indexData:h}}(g),y=performance.now();return(0,i.A)("esri-2d-profiler")&&(c().info("I.1","_createFlowFieldFromData (ms)",Math.round(h-s)),c().info("I.2","_getStreamlines (ms)",Math.round(d-h)),c().info("I.3","createAnimatedLinesData (ms)",Math.round(x-d)),c().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(y-x)),c().info("I.5","createFlowMesh (ms)",Math.round(y-s)),c().info("I.6","Mesh size (bytes)",w.vertexData.buffer.byteLength+w.indexData.buffer.byteLength)),await Promise.resolve(),(0,r.Te)(l),w}function p(t,e){const n=function(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),s=new Array(2*l+1);let r=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));s[h+l]=t,r+=t}for(let h=-l;h<=l;h++)s[h+l]/=r;const o=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,r=0;for(let o=-l;o<=l;o++){if(n+o<0||n+o>=e)continue;const a=s[o+l];i+=a*t[2*(h*e+(n+o))],r+=a*t[2*(h*e+(n+o))+1]}o[2*(h*e+n)]=i,o[2*(h*e+n)+1]=r}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,r=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const c=s[a+l];i+=c*o[2*((t+a)*e+h)],r+=c*o[2*((t+a)*e+h)+1]}a[2*(t*e+h)]=i,a[2*(t*e+h)+1]=r}return a}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),s=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const r=t-l,o=i-s,a=l,h=s,c=l<e.width-1?l+1:l,u=s<e.height-1?s+1:s,f=n[2*(h*e.width+a)],p=n[2*(h*e.width+c)],d=n[2*(u*e.width+a)],m=n[2*(u*e.width+c)],g=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+c)+1];return[(f*(1-o)+d*o)*(1-r)+(p*(1-o)+m*o)*r,(g*(1-o)+n[2*(u*e.width+a)+1]*o)*(1-r)+(x*(1-o)+n[2*(u*e.width+c)+1]*o)*r]}:(t,i)=>{const l=Math.round(t),s=Math.round(i);return l<0||l>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+l)],n[2*(s*e.width+l)+1]]}}function d(t,e,n,i,l,s,r,o,a){const h=[];let c=n,u=i,f=0,[p,d]=e(c,u);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let g,x;h.push({x:c,y:u,t:f,speed:m});for(let w=0;w<t.verticesPerLine;w++){let[n,i]=e(c,u);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(c+=d*t.segmentLength,u+=m*t.segmentLength,f+=t.segmentLength/p,Math.acos(d*g+m*x)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(c*a),e=Math.round(u*a);if(t<0||t>r-1||e<0||e>o-1)return h;const n=s[e*r+t];if(-1!==n&&n!==l)return h;s[e*r+t]=l}h.push({x:c,y:u,t:f,speed:p}),g=d,x=m}return h}function m(t,e,n,i){const l=[],s=new o.A,r=1/Math.max(t.lineCollisionWidth,1),a=Math.round(n*r),h=Math.round(i*r),c=new Int32Array(a*h);for(let o=0;o<c.length;o++)c[o]=-1;const u=[];for(let o=0;o<i;o+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:o,sort:s.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:o,y:f}of u)if(s.getFloat()<t.density){const n=d(t,e,o,f,l.length,c,a,h,r);if(n.length<2)continue;l.push(n)}return l}function g(t,e){const n=e.pixels,{width:i,height:l}=e,r=new Float32Array(i*l*2),o=e.mask||new Uint8Array(i*l*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let s=0;s<i*l;s++)r[2*s]=n[0][s],r[2*s+1]=-n[1][s];else if("vector-magdir"===t)for(let a=0;a<i*l;a++){const t=n[0][a],e=(0,s.kU)(n[1][a]),i=Math.cos(e-Math.PI/2),l=Math.sin(e-Math.PI/2);r[2*a]=i*t,r[2*a+1]=l*t}return{data:r,mask:o,width:i,height:l}}async function x(t,e,n,l,s,r){const o=performance.now(),u=(0,a.Vp)(e.spatialReference);if(!u){const a=await w(t,e,n,l,s,r);return(0,i.A)("esri-2d-profiler")&&c().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),(0,i.A)("esri-2d-profiler")&&c().info("I.9","Number of parts",1),a}const[f,p]=u.valid,d=p-f,m=Math.ceil(e.width/d),g=e.width/m,x=Math.round(n/m);let y=e.xmin;const A=[],M=performance.now();for(let i=0;i<m;i++){const n=new h.A({xmin:y,xmax:y+g,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});A.push(w(t,n,x,l,s,r)),y+=g}const k=await Promise.all(A);(0,i.A)("esri-2d-profiler")&&c().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-M)),(0,i.A)("esri-2d-profiler")&&c().info("I.9","Number of parts",k.length);const b={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let v=0;for(const i of k){for(let t=0;t<i.height;t++)for(let e=0;e<i.width;e++)v+e>=n||(b.data[2*(t*n+v+e)]=i.data[2*(t*i.width+e)],b.data[2*(t*n+v+e)+1]=i.data[2*(t*i.width+e)+1],b.mask[t*n+v+e]=i.mask[t*i.width+e]);v+=i.width}return(0,i.A)("esri-2d-profiler")&&c().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),b}async function w(t,e,n,i,l,s){const r={requestProjectedLocalDirections:!0,signal:s};if(null!=l&&(r.timeExtent=l),"imagery"===t.type){await t.load({signal:s});const l=t.rasterInfo.dataType,o=await t.fetchImage(e,n,i,r);return null==o?.pixelData?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:g(l,o.pixelData.pixelBlock)}await t.load({signal:s});const o=t.serviceRasterInfo.dataType,a=await t.fetchPixels(e,n,i,r);return null==a?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:g(o,a.pixelBlock)}}}]);
//# sourceMappingURL=3092.a9e57c6b.chunk.js.map