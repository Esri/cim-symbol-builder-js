{"version":3,"file":"static/js/5484.16680168.chunk.js","mappings":";gKAOA,MAAMA,EACG,QADHA,EAEK,UAELC,EACK,UAKLC,EAAQ,MACZC,YAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GAWvBE,KAAKC,YAAcN,EAInBK,KAAKE,SAAU,EAOjBC,SACE,MAAM,GAAEC,EAAF,QAAMF,EAAN,YAAeD,GAAgBD,KAC/BK,EAAaD,EAAGE,UAAUC,OAAOC,OAAS,EAC1CC,EAAaP,GAAUQ,EAAAA,EAAAA,GAAE,iBAAkB,CAAEC,QAAQ,EAAMC,MAAOX,IAAiB,KACnFY,EAAcR,GAAcK,EAAAA,EAAAA,GAAE,MAAO,CAAEI,MAAOpB,IAAegB,EAAAA,EAAAA,GAAE,OAAQ,OAAU,KACvF,OAAQA,EAAAA,EAAAA,GAAE,MAAO,CAAEI,MAAOpB,GAAae,EAAYI,GAEjDT,SAAO,OAAOW,EAAAA,EAAAA,GAAWf,QAE/BJ,EAAMoB,MAnCW","sources":["../node_modules/@esri/calcite-components/dist/esm/calcite-scrim.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { r as registerInstance, h, g as getElement } from './index-1f9b54dc.js';\n\nconst CSS = {\n  scrim: \"scrim\",\n  content: \"content\"\n};\nconst TEXT = {\n  loading: \"Loading\"\n};\n\nconst scrimCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host{position:absolute;inset:0px;z-index:700;display:flex;block-size:100%;inline-size:100%;flex-direction:column;align-items:stretch}@keyframes calcite-scrim-fade-in{0%{--tw-bg-opacity:0}100%{--tw-text-opacity:1}}.scrim{position:absolute;inset:0px;display:flex;flex-direction:column;align-content:center;align-items:center;justify-content:center;overflow:hidden;animation:calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;background-color:var(--calcite-scrim-background)}.content{padding:1rem}\";\n\nconst Scrim = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    // --------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Accessible name when the component is loading.\n     *\n     * @default \"Loading\"\n     */\n    this.intlLoading = TEXT.loading;\n    /**\n     * When `true`, a busy indicator is displayed.\n     */\n    this.loading = false;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    const { el, loading, intlLoading } = this;\n    const hasContent = el.innerHTML.trim().length > 0;\n    const loaderNode = loading ? h(\"calcite-loader\", { active: true, label: intlLoading }) : null;\n    const contentNode = hasContent ? (h(\"div\", { class: CSS.content }, h(\"slot\", null))) : null;\n    return (h(\"div\", { class: CSS.scrim }, loaderNode, contentNode));\n  }\n  get el() { return getElement(this); }\n};\nScrim.style = scrimCss;\n\nexport { Scrim as calcite_scrim };\n"],"names":["CSS","TEXT","Scrim","constructor","hostRef","registerInstance","this","intlLoading","loading","render","el","hasContent","innerHTML","trim","length","loaderNode","h","active","label","contentNode","class","getElement","style"],"sourceRoot":""}