{"version":3,"file":"static/js/8324.c25161e6.chunk.js","mappings":";+SAAO,MAAMA,EACS,uBADTA,EAGA,YAHAA,EAII,iBAJJA,EAKC,cALDA,EAMH,SANGA,EAOM,mBAPNA,EAQe,+BARfA,EASF,UATEA,EAWE,cAXFA,EAYI,iBAZJA,EAaI,iBAbJA,EAcO,sBAdPA,EAeS,wBAfTA,EAgBK,kBAhBLA,EAiBG,gBAjBHA,EAkBH,SAlBGA,EAmBI,iBAnBJA,EAoBI,iBApBJA,EAqBE,eArBFA,EAsBA,aAGAC,EACJ,QADIA,EAED,WAGCC,EACJ,IADIA,EAEL,WAFKA,EAKH,eALGA,EAMD,aAGCC,EAAQ,CACnBC,UAAW,aACXC,OAAQ,SACRC,cAAe,iBACfC,WAAY,cACZC,mBAAoB,uBACpBC,iBAAkB,qBAClBC,kBAAmB,sBACnBC,cAAe,iBACfC,IAAK,MACLC,OAAQ,SACRC,UAAW,aACXC,YAAa,eACbC,cAAe,kBCsBJC,GAAKC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,6PAyJhB,KAAAC,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMC,KAAKC,kBAkErD,KAAAA,cAAgB,KACd,MAAM,cAAEC,GAAkBF,KAE1B,IACGE,GACqC,kBAA/BA,EAAcC,cACiB,kBAA/BD,EAAcE,aAErB,OAG0BF,EAAcC,aAAeD,EAAcE,aAIrEF,EAAcG,aAAa,WAAY,KAEvCH,EAAcI,gBAAgB,aAIlC,KAAAC,gBAAmBC,IACjBR,KAAKS,YAAcD,CAAI,EAGzB,KAAAE,oBAAuBC,IACjBX,KAAKY,UAA0B,WAAdD,EAAME,MAAqBF,EAAMG,mBACpDd,KAAKe,kBACLJ,EAAMK,mBAIF,KAAAD,gBAAkB,KACxBf,KAAKiB,QAAS,EACdjB,KAAKkB,kBAAkBC,MAAM,EAG/B,KAAAC,KAAO,KACLpB,KAAKqB,UAAW,CAAK,EAGvB,KAAAC,MAAQC,UACN,MAAMC,EAAcxB,KAAKwB,aAAe,KAAOC,QAAQC,WAEvD,UACQF,IACN,MAAOG,GAKP,YAHAC,uBAAsB,KACpB5B,KAAKiB,QAAS,CAAK,IAKvBjB,KAAKqB,UAAW,CAAI,EAGtB,KAAAQ,SAAW,KACT7B,KAAK8B,WAAa9B,KAAK8B,UACvB9B,KAAK+B,mBAAmBZ,MAAM,EAGhC,KAAAa,mBAAqB,KACnBhC,KAAKiC,mBAAmBd,MAAM,EAGhC,KAAAe,mCAAsCvB,IACpCX,KAAKmC,iBAAkBC,EAAAA,EAAAA,GAA6BzB,EAAM,EAG5D,KAAA0B,iCAAoC1B,IAClCX,KAAKsC,eAAgBF,EAAAA,EAAAA,GAA6BzB,EAAM,EAG1D,KAAA4B,kCAAqC5B,IACnCX,KAAKwC,cAAeJ,EAAAA,EAAAA,GAA6BzB,EAAM,EAGzD,KAAA8B,0BAA6B9B,IAC3B,MAAM+B,GAAaC,EAAAA,EAAAA,GAA8BhC,GAAOiC,QACrDC,GAA0CA,GAAIC,QAAQ,wBAGzDJ,EAAWK,SAASjE,GAAeA,EAAUkE,OAAS,eAEtDhD,KAAKiD,eAAiBP,EAAWQ,MAAM,EAGzC,KAAAC,8BAAiCxC,IAC/BX,KAAKoD,kBAAmBhB,EAAAA,EAAAA,GAA6BzB,EAAM,EAG7D,KAAA0C,oBAAuB1C,IACrBX,KAAKsD,QAASlB,EAAAA,EAAAA,GAA6BzB,EAAM,EAGnD,KAAA4C,8BAAiC5C,IAC/BX,KAAKwD,kBAAmBpB,EAAAA,EAAAA,GAA6BzB,EAAM,EAG7D,KAAA8C,0BAA6B9C,IAC3BX,KAAK0D,qBAAsBtB,EAAAA,EAAAA,GAA6BzB,EAAM,EAGhE,KAAAgD,4BAA+BhD,IAC7BX,KAAK4D,uBAAwBxB,EAAAA,EAAAA,GAA6BzB,EAAM,EAGlE,KAAAkD,uBAA0BlD,IACxBX,KAAK8D,kBAAmB1B,EAAAA,EAAAA,GAA6BzB,EAAM,EAGrD,KAAAoD,+BAAkCpD,IACxCX,KAAKgE,kBAAmB5B,EAAAA,EAAAA,GAA6BzB,EAAM,EAGrD,KAAAsD,4BAA+BtD,IACrCX,KAAKkE,eAAgB9B,EAAAA,EAAAA,GAA6BzB,EAAM,EA2P1D,KAAAwD,iBAAoBtB,IAClB7C,KAAKE,cAAgB2C,EACrB7C,KAAKF,gBAAgBsE,aAEjBvB,IACF7C,KAAKF,gBAAgBuE,QAAQxB,GAC7B7C,KAAKC,kBA0CT,KAAAqE,uBAA0B3D,KACxBgC,EAAAA,EAAAA,GAA8BhC,IAAQ4D,KAAK1B,IACrB,kBAAhBA,EAAG2B,WACJ3B,EAA+B4B,UAAW,KAE7C,uCAnnB6C,iBAUb,iBAGA,kBAKC,yBAOU,yBAKR,yCAUJ,4FAkBC,qBAKuBC,EAAAA,4EA6BO,sBAG1B,mBA+CpB,wBAEO,sBAEF,qBAED,yBAEI,qBAEJ,yBAEI,sBAEH,eAEP,yBAEU,yBAEA,4BAEG,8BAEE,mDAIN,2BAEE,EAzK7BC,YAAAA,CAAaC,GACXA,EAAQ5E,KAAKsB,QAAUtB,KAAKoB,OA4E9ByD,gBAAAA,IAuBAC,iBAAAA,IACEC,EAAAA,EAAAA,GAAiB/E,OACjBgF,EAAAA,EAAAA,GAAgBhF,MAGlB,uBAAMiF,IACJC,EAAAA,EAAAA,GAAuBlF,MACvBA,KAAKqB,SAAWrB,KAAKiB,aACfkE,EAAAA,EAAAA,GAAcnF,MAGtBoF,gBAAAA,IACEC,EAAAA,EAAAA,GAAmBrF,MAGrBsF,kBAAAA,IACEC,EAAAA,EAAAA,GAAsBvF,MAGxBwF,oBAAAA,IACEC,EAAAA,EAAAA,GAAoBzF,OACpB0F,EAAAA,EAAAA,GAAmB1F,MACnBA,KAAKF,gBAAgBsE,aAkDvBuB,qBAAAA,IACEC,EAAAA,EAAAA,GAAe5F,KAAMA,KAAK6F,iBAgK5B,cAAMC,SACEC,EAAAA,EAAAA,GAAmB/F,OACzBgG,EAAAA,EAAAA,GAAmBhG,KAAKS,aAgB1B,qBAAMwF,CAAgBC,GACpBlG,KAAKE,eAAeiG,SAASD,GAS/BE,mBAAAA,GACE,MAAM,QAAEC,EAAO,aAAEC,EAAY,YAAEC,EAAW,iBAAEnD,GAAqBpD,KAC3DwG,EAAcH,GAClBI,EAAAA,EAAAA,GAACC,EAAAA,EAAO,CAACC,MAAOjI,EAAakI,MAAON,GACjCD,GAED,KAEEQ,EAAkBN,GAAcE,EAAAA,EAAAA,GAAA,QAAME,MAAOjI,GAAkB6H,GAAsB,KAE3F,OAAQnD,IAAqBoD,IAAeK,EAKxC,MAJFJ,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAmBmC,IAAI,kBAChC2F,EACAK,GAKPC,eAAAA,GACE,OACEL,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAwBqI,QAAS/G,KAAKiD,eAChDwD,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMC,UAAWmI,aAAcjH,KAAKyC,6BAKtDyE,0BAAAA,GACE,OACET,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAmBqI,QAAS/G,KAAKoD,iBAAkBvC,IAAI,2BACjE4F,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMQ,cAAe4H,aAAcjH,KAAKmD,iCAK1DgE,wBAAAA,GACE,MAAM,gBAAEhF,GAAoBnC,KAE5B,OACEyG,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACjI,IAAyB,EAAM,CAACA,IAAoB,GAC9DqI,QAAS5E,EACTtB,IAAI,yBAEJ4F,EAAAA,EAAAA,GAAA,QACEO,KAAMnI,EAAMK,mBACZ+H,aAAcjH,KAAKkC,sCAM3BkF,sBAAAA,GACE,MAAM,cACJ9E,EAAa,SACb+E,EAAQ,SACRzG,EAAQ,UACRkB,EAAS,kBACTwF,EAAiB,YACjBC,EAAW,aACX/E,GACExC,MACE,SAAE6B,EAAQ,OAAE2F,EAAM,MAAElG,GAAU+F,EAE9BI,EAAQ,CAAC7I,EAAcA,GAEH,OAAtB0I,GACFG,EAAMC,UAGR,MAAMC,EAAeJ,GACnBd,EAAAA,EAAAA,GAAA,mCACiBmB,EAAAA,EAAAA,IAAe9F,GAAU,aAC5BD,EACZgG,KAAM/F,EAAY2F,EAAM,GAAKA,EAAM,GACnCK,GAAInJ,EACJoJ,QAAS/H,KAAK6B,SACdmG,MAAOhI,KAAKgI,MACZC,KAAMpG,EACNqG,MAAOpG,EAAY0F,EAAS3F,IAE5B,KAEEsG,EAAYvH,GAChB6F,EAAAA,EAAAA,GAAA,+BACcnF,EACZuG,KAAMjJ,EACNkJ,GAAInJ,EACJoJ,QAAS/H,KAAKe,gBACdiH,MAAOhI,KAAKgI,MACZC,KAAM3G,EACN4G,MAAO5G,IAEP,KAEE8G,GACJ3B,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMM,iBAAkB8H,aAAcjH,KAAKqC,mCAGnDgG,EAAgB/F,GAAiBqF,GAAgBQ,GAAa3F,EAEpE,OACEiE,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACjI,IAAuB,EAAM,CAACA,IAAoB,GAC5DqI,QAASsB,EACTxH,IAAI,sBAEHuH,EACApI,KAAKsI,aACLX,EACAQ,GAKPG,UAAAA,GACE,MAAM,aAAE9F,EAAY,SAAE6E,EAAQ,SAAEkB,EAAQ,mBAAEC,EAAkB,cAAEC,GAAkBzI,KAEhF,OACEyG,EAAAA,EAAAA,GAAA,uBACEiC,eAAgBF,GAAsB,CAAC,MAAO,UAC9CzB,QAASvE,EACT3B,IAAI,OACJ8H,MAAOtB,EAASnB,QAChB9E,KAAMmH,EACNK,mBAAoB5I,KAAK4I,mBACzBC,UAAWJ,IAEXhC,EAAAA,EAAAA,GAAA,kBACEoB,KAAMjJ,EACNoJ,MAAOhI,KAAKgI,MACZc,KAAMC,EAAAA,EAAkBC,QACxBf,KAAMZ,EAASnB,WAEjBO,EAAAA,EAAAA,GAAA,QACEO,KAAMnI,EAAMO,kBACZ6H,aAAcjH,KAAKuC,qCAM3B0G,gBAAAA,GACE,MAAM,iBACJ7F,EAAgB,gBAChBjB,EAAe,cACfG,EAAa,SACb1B,EAAQ,YACR2G,EAAW,aACX/E,EAAY,aACZS,GACEjD,KAEEkJ,EAAoBlJ,KAAKoG,sBAEzB+C,EACJ/F,KACE8F,GACF/G,GACAG,GACAiF,GACA3G,GACA4B,EAIF,OAFAxC,KAAKmJ,kBAAoBA,GAGvB1C,EAAAA,EAAAA,GAAA,UAAQE,MAAOjI,EAAYqI,SAAUoC,GAAqBlG,KACxDwD,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACjI,IAAsB,EAAM,CAACA,GAA+BuE,GACtE8D,QAASoC,GAERnJ,KAAKmH,2BACLnH,KAAKkH,6BACLgC,EACAlJ,KAAKoH,0BAEPpH,KAAK8G,kBACL9G,KAAKoJ,oBAKZC,gBAAAA,GACE,MAAM,oBAAE3F,EAAmB,sBAAEE,EAAqB,iBAAEE,EAAgB,iBAAEN,GAAqBxD,KAErFsJ,EACJ1F,GAAyBF,GAAuBI,GAAoBN,EAEtE,OACEiD,EAAAA,EAAAA,GAAA,UAAQE,MAAOjI,EAAYqI,QAASuC,IAClC7C,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAmBqI,QAASjD,IACtC2C,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMU,OAAQ0H,aAAcjH,KAAK6D,2BAE/C4C,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAiBqI,OAAQjD,IAAqBF,IACxD6C,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMY,YAAawH,aAAcjH,KAAK2D,gCAEpD8C,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAeqI,OAAQjD,IAAqBJ,IACtD+C,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMW,UAAWyH,aAAcjH,KAAKyD,8BAElDgD,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAmBqI,OAAQjD,IAAqBN,IAC1DiD,EAAAA,EAAAA,GAAA,QACE5F,IAAI,sBACJmG,KAAMnI,EAAMa,cACZuH,aAAcjH,KAAKuD,kCAiB7BgG,aAAAA,GACE,OACE9C,EAAAA,EAAAA,GAAA,OACEE,MAAOjI,EACPqI,OAAQ/G,KAAKuH,aAAevH,KAAK8B,UACjC0H,SAAUxJ,KAAKgC,mBACfyH,IAAKzJ,KAAKmE,mBAEVsC,EAAAA,EAAAA,GAAA,aACCzG,KAAK0J,aAKZC,mBAAAA,GACE,OACElD,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAmBqI,QAAS/G,KAAKgE,mBAC3CyC,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMG,cAAeiI,aAAcjH,KAAK+D,kCAK1DqF,gBAAAA,GACE,OACE3C,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAgBqI,QAAS/G,KAAKkE,gBACxCuC,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMI,WAAYgI,aAAcjH,KAAKiE,+BAKvDyF,SAAAA,GACE,OACEjD,EAAAA,EAAAA,GAAA,OAAKE,MAAOjI,EAAkBqI,QAAS/G,KAAKsD,SAC1CmD,EAAAA,EAAAA,GAAA,QAAMO,KAAMnI,EAAMS,IAAK2H,aAAcjH,KAAKqD,uBAahDuG,MAAAA,GACE,MAAM,SAAEC,EAAQ,QAAEC,EAAO,SAAEzI,GAAarB,KAElC+J,GACJtD,EAAAA,EAAAA,GAAA,WAAA5F,IAAA,wDACa+G,EAAAA,EAAAA,GAAckC,GACzBnD,MAAOjI,EACPqI,OAAQ1F,EACRoI,IAAKzJ,KAAKO,iBAETP,KAAKiJ,mBACLjJ,KAAKuJ,gBACLvJ,KAAK2J,sBACL3J,KAAKqJ,oBACN5C,EAAAA,EAAAA,GAAA,QAAM5F,IAAI,SAASmG,KAAMnI,EAAME,OAAQkI,aAAcjH,KAAKsE,0BAI9D,OACEmC,EAAAA,EAAAA,GAACuD,EAAAA,GAAI,CAAAnJ,IAAA,2CAACoJ,UAAWjK,KAAKU,sBACpB+F,EAAAA,EAAAA,GAACyD,EAAAA,EAAoB,CAAArJ,IAAA,2CAACgJ,SAAUA,GAC7BC,GAAUrD,EAAAA,EAAAA,GAAA,iBAAeqD,QAASA,IAAc,KAChDC,iOCnuBM,q+OCAV,MAAMrL,EACJ,QADIA,EAEF,UAGEyL,EACR,GADQA,EAGR,ICgBQC,GAAKxK,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAuChB,KAAAC,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMC,KAAKqK,iBAsE7C,KAAAC,wBAA2B3J,IACjCX,KAAKuK,YAAaC,EAAAA,EAAAA,GAAqB7J,EAAM,EAGvC,KAAA8J,cAAiB5H,IACvB7C,KAAK0K,SAAW7H,EAChB7C,KAAKqK,cAAc,gBAzGc,6HAqCR,oBAOL,EA3BtBxF,gBAAAA,IAuBAc,qBAAAA,IACEC,EAAAA,EAAAA,GAAe5F,KAAMA,KAAK6F,iBAW5Bf,iBAAAA,IACEC,EAAAA,EAAAA,GAAiB/E,OACjBgF,EAAAA,EAAAA,GAAgBhF,MAChBA,KAAKF,gBAAgBuE,QAAQrE,KAAK6C,IAGpC,uBAAMoC,SACEE,EAAAA,EAAAA,GAAcnF,MAGtBwF,oBAAAA,IACEC,EAAAA,EAAAA,GAAoBzF,OACpB0F,EAAAA,EAAAA,GAAmB1F,MACnBA,KAAKF,gBAAgBsE,aASvBwF,MAAAA,GACE,MAAM,WAAEW,EAAU,QAAET,EAAO,SAAEzC,GAAarH,KAE1C,OACEyG,EAAAA,EAAAA,GAAA,OAAA5F,IAAA,2CAAK8F,MAAOjI,GACToL,GACCrD,EAAAA,EAAAA,GAAA,kBACEkC,MAAOtB,EAASyC,QAChBL,IAAKzJ,KAAKyK,cACVzC,MAAOhI,KAAK2K,cAEZ,MACJlE,EAAAA,EAAAA,GAAA,OAAA5F,IAAA,2CAAK8F,MAAOjI,EAAaqI,QAASwD,IAChC9D,EAAAA,EAAAA,GAAA,QAAA5F,IAAA,2CAAMoG,aAAcjH,KAAKsK,4BAqBzBM,QAAAA,CAASC,GACf,OAAIA,EAAOV,EACF,IACEU,GAAQV,EACV,IAEA,IAIHE,YAAAA,GACN,MAAM,SAAEK,EAAQ,GAAE7H,GAAO7C,KAEpB0K,IAIL1K,KAAK2K,YAAc3K,KAAK4K,SAASE,KAAKC,IAAIlI,EAAGmI,aAAcnI,EAAGoI,cAAgB,yMC/JjE","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n  footerContent: \"footer-content\",\n  footerActions: \"footer-actions\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const IDS = {\n  close: \"close\",\n  collapse: \"collapse\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n} as const;\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerEnd: \"footer-end\",\n  footerStart: \"footer-start\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  defaultEndMenuPlacement,\n  FlipPlacement,\n  LogicalPlacement,\n  OverlayPositioning,\n} from \"../../utils/floating-ui\";\nimport { CollapseDirection } from \"../interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot alerts - A slot for adding `calcite-alert`s to the component.\n * @slot content-bottom - A slot for adding content below the unnamed (default) slot and above the footer slot (if populated)\n * @slot content-top - A slot for adding content above the unnamed (default) slot and below the action-bar slot (if populated).\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer - A slot for adding custom content to the component's footer. Should not be used with the `\"footer-start\"` or `\"footer-end\"` slots.\n * @slot footer-actions - [Deprecated] Use the `footer-start` and `footer-end` slots instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer-end - A slot for adding a trailing footer custom content. Should not be used with the `\"footer\"` slot.\n * @slot footer-start - A slot for adding a leading footer custom content. Should not be used with the `\"footer\"` slot.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: () => Promise<void>;\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  @Watch(\"closed\")\n  toggleDialog(value: boolean): void {\n    value ? this.close() : this.open();\n  }\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: CollapseDirection = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * Specifies the component's fallback menu `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() menuFlipPlacements: FlipPlacement[];\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Determines where the action menu will be positioned.\n   */\n  @Prop({ reflect: true }) menuPlacement: LogicalPlacement = defaultEndMenuPlacement;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.isClosed = this.closed;\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() isClosed = false;\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasContentBottom = false;\n\n  @State() hasContentTop = false;\n\n  @State() hasFab = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterEndContent = false;\n\n  @State() hasFooterStartContent = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    const hasScrollingContent = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight;\n\n    // intentionally using setAttribute to avoid reflecting -1 so default browser behavior will occur\n    if (hasScrollingContent) {\n      panelScrollEl.setAttribute(\"tabindex\", \"0\");\n    } else {\n      panelScrollEl.removeAttribute(\"tabindex\");\n    }\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.handleUserClose();\n      event.preventDefault();\n    }\n  };\n\n  private handleUserClose = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  open = (): void => {\n    this.isClosed = false;\n  };\n\n  close = async (): Promise<void> => {\n    const beforeClose = this.beforeClose ?? (() => Promise.resolve());\n\n    try {\n      await beforeClose();\n    } catch (_error) {\n      // close prevented\n      requestAnimationFrame(() => {\n        this.closed = false;\n      });\n      return;\n    }\n\n    this.isClosed = true;\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteActionBarElement => el?.matches(\"calcite-action-bar\"),\n    );\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterEndSlotChange = (event: Event): void => {\n    this.hasFooterEndContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterStartSlotChange = (event: Event): void => {\n    this.hasFooterStartContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        icon={collapsed ? icons[0] : icons[1]}\n        id={IDS.collapse}\n        onClick={this.collapse}\n        scale={this.scale}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        icon={ICONS.close}\n        id={IDS.close}\n        onClick={this.handleUserClose}\n        scale={this.scale}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen, menuFlipPlacements, menuPlacement } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={menuFlipPlacements ?? [\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement={menuPlacement}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={this.scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n        {this.renderContentTop()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterEndContent, hasFooterStartContent, hasFooterContent, hasFooterActions } = this;\n\n    const showFooter =\n      hasFooterStartContent || hasFooterEndContent || hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <div class={CSS.footerContent} hidden={!hasFooterContent}>\n          <slot name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        </div>\n        <div class={CSS.footerStart} hidden={hasFooterContent || !hasFooterStartContent}>\n          <slot name={SLOTS.footerStart} onSlotchange={this.handleFooterStartSlotChange} />\n        </div>\n        <div class={CSS.footerEnd} hidden={hasFooterContent || !hasFooterEndContent}>\n          <slot name={SLOTS.footerEnd} onSlotchange={this.handleFooterEndSlotChange} />\n        </div>\n        <div class={CSS.footerActions} hidden={hasFooterContent || !hasFooterActions}>\n          <slot\n            key=\"footer-actions-slot\"\n            name={SLOTS.footerActions}\n            onSlotchange={this.handleFooterActionsSlotChange}\n          />\n        </div>\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  handleAlertsSlotChange = (event: Event): void => {\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-ALERT\") {\n        (el as HTMLCalciteAlertElement).embedded = true;\n      }\n    });\n  };\n\n  render(): VNode {\n    const { disabled, loading, isClosed } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={isClosed}\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderContentBottom()}\n        {this.renderFooterNode()}\n        <slot key=\"alerts\" name={SLOTS.alerts} onSlotchange={this.handleAlertsSlotChange} />\n      </article>\n    );\n\n    return (\n      <Host onKeyDown={this.panelKeyDownHandler}>\n        <InteractiveContainer disabled={disabled}>\n          {loading ? <calcite-scrim loading={loading} /> : null}\n          {panelNode}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-content-space: Specifies the padding of the component's content.\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n * @prop --calcite-panel-background-color: Specifies the background color of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n:host([scale=\"s\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-sm);\n  --calcite-internal-panel-header-vertical-padding: 10px; // this should use a spacing token once made available\n\n  .header-content {\n    .heading {\n      @apply text-n1h;\n    }\n\n    .description {\n      @apply text-n2h;\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-md);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-lg);\n\n  .header-content {\n    .heading {\n      @apply text-0h;\n    }\n\n    .description {\n      @apply text-n1h;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-xl);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-xxl);\n\n  .header-content {\n    .heading {\n      @apply text-1h;\n    }\n\n    .description {\n      @apply text-0h;\n    }\n  }\n}\n\n.content-top,\n.content-bottom {\n  @apply flex items-start self-stretch;\n\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.container {\n  @apply relative bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n\n  margin-inline-end: auto;\n\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n\n  .heading {\n    @apply mx-0 mt-0 mb-1 font-medium text-color-1;\n\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n\n  .description {\n    @apply text-color-2;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  overflow-auto\n  h-full\n  focus-base;\n  padding: var(--calcite-panel-content-space, 0);\n  background: var(--calcite-panel-background-color, var(--calcite-color-background));\n}\n\n.content-wrapper:focus-visible {\n  @apply focus-inset;\n}\n\n.content-top,\n.content-bottom {\n  padding: var(--calcite-internal-panel-default-padding);\n}\n\n.header-content {\n  flex: 1 1 auto;\n  padding-block: var(--calcite-internal-panel-header-vertical-padding);\n  padding-inline: var(--calcite-internal-panel-default-padding);\n}\n\n.footer {\n  @apply flex mt-auto flex-row content-between justify-center items-center bg-foreground-1 text-n2-wrap;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-panel-footer-padding, var(--calcite-internal-panel-default-padding));\n}\n\n.footer-content {\n  @apply flex flex-row items-center justify-center flex-1;\n}\n\n.footer-actions {\n  @apply flex flex-row items-center justify-evenly flex-1;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-start {\n  @apply flex flex-row items-center justify-start flex-1;\n  margin-inline-end: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-end {\n  @apply flex flex-row items-center justify-end flex-1;\n  margin-inline-start: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["CSS","IDS","ICONS","SLOTS","actionBar","alerts","contentBottom","contentTop","headerActionsStart","headerActionsEnd","headerMenuActions","headerContent","fab","footer","footerEnd","footerStart","footerActions","Panel","proxyCustomElement","HTMLElement","resizeObserver","createObserver","this","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","setAttribute","removeAttribute","setContainerRef","node","containerEl","panelKeyDownHandler","event","closable","key","defaultPrevented","handleUserClose","preventDefault","closed","calcitePanelClose","emit","open","isClosed","close","async","beforeClose","Promise","resolve","_error","requestAnimationFrame","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","filter","el","matches","forEach","layout","hasActionBar","length","handleHeaderContentSlotChange","hasHeaderContent","handleFabSlotChange","hasFab","handleFooterActionsSlotChange","hasFooterActions","handleFooterEndSlotChange","hasFooterEndContent","handleFooterStartSlotChange","hasFooterStartContent","handleFooterSlotChange","hasFooterContent","contentBottomSlotChangeHandler","hasContentBottom","contentTopSlotChangeHandler","hasContentTop","setPanelScrollEl","disconnect","observe","handleAlertsSlotChange","map","nodeName","embedded","defaultEndMenuPlacement","toggleDialog","value","onMessagesChange","connectedCallback","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focusFirstTabbable","scrollContentTo","options","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","h","Heading","class","level","descriptionNode","renderActionBar","hidden","name","onSlotchange","renderHeaderSlottedContent","renderHeaderStartActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","reverse","collapseNode","toAriaBoolean","icon","id","onClick","scale","text","title","closeNode","slotNode","showContainer","renderMenu","menuOpen","menuFlipPlacements","menuPlacement","flipPlacements","label","overlayPositioning","placement","slot","SLOTS$1","trigger","renderHeaderNode","headerContentNode","showHeaderContent","renderContentTop","renderFooterNode","showFooter","renderContent","onScroll","ref","renderFab","renderContentBottom","render","disabled","loading","panelNode","Host","onKeyDown","InteractiveContainer","BREAKPOINTS","Scrim","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","loaderScale","getScale","size","Math","min","clientHeight","clientWidth"],"sourceRoot":""}