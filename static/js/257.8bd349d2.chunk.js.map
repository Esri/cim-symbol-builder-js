{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["O","convertVectorFieldData","e","t","o","fromJSON","pixelBlock","s","u","type","Promise","resolve","r","toJSON","data","options","symbolize","extent","y","this","symbolizer","h","symbolizerJSON","histograms","rendererJSON","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","i","split","a","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","n","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","c","coefs","l","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","m","d","isUV","localNorthDirections","Float32Array","flowData","buffer","width","height","vertexData","indexData","x","rendererSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","f","rasterTransform","S","p","datumTransformation"],"mappings":"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","file":"static/js/257.8bd349d2.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import o from\"./PixelBlock.js\";import{decode as s}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as i,split as a,mosaic as n,approximateTransform as l,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{convertVectorFieldData as u,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as S}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createStreamlinesMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import y from\"../../geometry/Extent.js\";class O{convertVectorFieldData(e){const t=o.fromJSON(e.pixelBlock),s=u(t,e.type);return Promise.resolve(r(s)&&s.toJSON())}async decode(r){const e=await s(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=o.fromJSON(e.pixelBlock),e.extent=e.extent?y.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)&&t.toJSON())}async updateSymbolizer(r){var e;this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(e=this.symbolizer)?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const t=this.symbolizer.simpleStretch(o.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=i(o.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=a(o.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,null==r?void 0:r.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){var t;const s=r.srcPixelBlocks.map((r=>r?new o(r):null)),i=n(s,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,c=i;return r.coefs&&(c=l(i,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=m(r.destDimension,r.gcsGrid),c=e(d(c,r.isUV?\"vector-uv\":\"vector-magdir\",a))),{pixelBlock:null==(t=c)?void 0:t.toJSON(),localNorthDirections:a}}async createStreamlinesMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),width:r.flowData.width,height:r.flowData.height},{vertexData:o,indexData:s}=await x(r.rendererSettings,t,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:s.buffer},transferList:[o.buffer,s.buffer]}}async getProjectionOffsetGrid(r){const e=y.fromJSON(r.projectedExtent),o=y.fromJSON(r.srcBufferExtent);let s=null;r.datumTransformationSteps&&(s=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,o.spatialReference,s))&&await f();const i=r.rasterTransform?S(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:o,datumTransformation:s,rasterTransform:i})}}export{O as default};\n"],"sourceRoot":""}