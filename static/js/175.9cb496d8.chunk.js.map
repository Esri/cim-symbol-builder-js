{"version":3,"file":"static/js/175.9cb496d8.chunk.js","mappings":";4JASA,MAAMA,EAA6B,CAE/BC,IAAK,kBACLC,QAAS,kBACTC,IAAK,gBACLC,IAAK,iBACLC,QAAS,mBACTC,IAAK,mBACLC,IAAK,kBACLC,IAAK,kBACLC,QAAS,iBACTC,QAAS,sBACTC,IAAK,iBAMHC,EAAY,MACd,MAAMC,EAA4BC,OAAOC,KAAKf,GAC9C,OAAOc,OAAOC,MAAKC,EAAAA,EAAAA,MAAmBC,QAAQC,IAAQL,EAA0BM,SAASD,IAC5F,EAHiB,GAOlB,SAASE,EAAUF,GACf,MAAMG,EAA0BrB,EAA2BkB,GAC3D,GAAIG,EACA,OAAOA,EAEX,MAAMC,GAASC,EAAAA,EAAAA,GAAYL,GAC3B,OAAOI,GAAQE,SAAWN,CAC9B","sources":["../node_modules/@esri/calcite-components/dist/esm/node_modules/timezone-groups/dist/utils/time-zones.mjs"],"sourcesContent":["import { b as getAllTimezones, a as getTimezone } from '../chunks/index-p4VH55K1.mjs';\n\n/**\n * Handling these deprecated timezones locally until `countries-and-timezones` is updated with the latest IANA time zone db\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://github.com/eggert/tz/commit/782d082623aaa130178d944bdbfbb563d2e1adfa\n * @see https://github.com/eggert/tz/commit/a0b09c0230089252acf2eb0f1ba922e99f7f4a03\n */\nconst deprecatedTimeZonesToAlias = {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    CET: 'Europe/Brussels',\n    CST6CDT: 'America/Chicago',\n    EET: 'Europe/Athens',\n    EST: 'America/Panama',\n    EST5EDT: 'America/New_York',\n    HST: 'Pacific/Honolulu',\n    MET: 'Europe/Brussels',\n    MST: 'America/Phoenix',\n    MST7MDT: 'America/Denver',\n    PST8PDT: 'America/Los_Angeles',\n    WET: 'Europe/Lisbon',\n    /* eslint-enable @typescript-eslint/naming-convention */\n};\n/**\n * List of all supported, canonical, timezones.\n */\nconst timeZones = (() => {\n    const futureDeprecatedTimeZones = Object.keys(deprecatedTimeZonesToAlias);\n    return Object.keys(getAllTimezones()).filter((tz) => !futureDeprecatedTimeZones.includes(tz));\n})();\n/**\n * Normalize an IANA timezone name to its canonical equivalent.\n */\nfunction normalize(tz) {\n    const localDeprecatedTimeZone = deprecatedTimeZonesToAlias[tz];\n    if (localDeprecatedTimeZone) {\n        return localDeprecatedTimeZone;\n    }\n    const tzData = getTimezone(tz);\n    return tzData?.aliasOf ?? tz;\n}\n\nexport { normalize, timeZones };\n"],"names":["deprecatedTimeZonesToAlias","CET","CST6CDT","EET","EST","EST5EDT","HST","MET","MST","MST7MDT","PST8PDT","WET","timeZones","futureDeprecatedTimeZones","Object","keys","getAllTimezones","filter","tz","includes","normalize","localDeprecatedTimeZone","tzData","getTimezone","aliasOf"],"sourceRoot":""}