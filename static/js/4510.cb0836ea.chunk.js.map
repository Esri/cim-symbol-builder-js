{"version":3,"file":"static/js/4510.cb0836ea.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/chunks/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js","../node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","../node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js","../node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js","../node_modules/@arcgis/core/views/2d/engine/webgl/color.js","../node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js","../node_modules/@arcgis/core/views/2d/engine/webgl/enums.js","../node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js","../node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function s(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function i(){return r(0,0,0,1)}const f=a(),l=o(),_=u(),y=s(),w=c(),N=i(),O=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:y,UNIT_Z:w,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:o,unitW:i,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:\"Module\"}));export{l as O,_ as U,f as Z,n as a,e as b,t as c,s as d,c as e,r as f,i as g,y as h,w as i,N as j,o,u,O as v,a as z};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as a,PrimitiveType as i,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";const l=()=>r(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=e(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(a.ALWAYS,0,255)}draw(e,r){const{context:t,state:o,requestRender:a,allowDelayedRender:p}=e,c=l(),d=r.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=m(t,s)),!p||null==a||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(i.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):a())}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TEXTURE_BINDING_BITMAP as e}from\"../definitions.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import r from\"./WGLBrush.js\";import{BlendFactor as s,CompareFunction as n,PrimitiveType as o,DataType as a}from\"../../../../webgl/enums.js\";const i=()=>t(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:a.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:a.UNSIGNED_SHORT}]});class u extends r{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(t,r){const{context:s,painter:n,requestRender:a,allowDelayedRender:u}=t;if(!r.isReady)return;const{computedOpacity:c,dvsMat3:l,isWrapAround:d,perspectiveTransform:m,texture:p}=r;t.timeline.begin(this.name);const f=n.materialManager.getProgram(this._desc);if(u&&null!=a&&!f.compiled)return void a();const _=i(),v=r.getVAO(s,_.bufferLayouts,_.attributes);if(!v)return;s.bindVAO(v),s.useProgram(f),s.bindTexture(p,e),f.setUniformMatrix3fv(\"u_dvsMat3\",l),f.setUniform1i(\"u_texture\",e),f.setUniform1f(\"u_opacity\",c),f.setUniform2fv(\"u_perspective\",m);const y=d?10:4;s.drawArrays(o.TRIANGLE_STRIP,0,y),s.bindVAO(),t.timeline.end(this.name)}}export{u as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{MAX_REPRESENTABLE_INT as e,TILE_SIZE as t}from\"../definitions.js\";import{WGLGeometryType as o,WGLSymbologyType as r}from\"../enums.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{FillMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{PrimitiveType as l,DataType as m}from\"../../../../webgl/enums.js\";function u(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:m.SHORT},{location:1,name:\"a_id\",count:3,type:m.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:m.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:m.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:m.SHORT},{location:6,name:\"a_aux3\",count:4,type:m.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:m.UNSIGNED_SHORT}]};switch(e.symbologyType){case r.SIMPLE:case r.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:\"materials/fill\",vertexLayout:t}}class c extends i{dispose(){}getGeometryType(){return o.FILL}supportsSymbology(e){return e!==r.DOT_DENSITY}drawGeometry(o,r,i,m){const{context:c,painter:f,rendererInfo:p,requiredLevel:y,passOptions:_,requestRender:d,allowDelayedRender:E}=o,g=n.load(i.materialKey),N=s(g.data),S=null!=_&&\"hittest\"===_.type,T=f.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=N.programSpec??u(g);let h=l.TRIANGLES,L=a(g.data,U);S&&(L=this._getTriangleDesc(i.materialKey,L,x),h=l.POINTS);const{attributes:O,bufferLayouts:G}=L,D=T.getMaterialProgram(o,g,I,O,m);if(E&&null!=d&&!D.compiled)return void d();c.useProgram(D),this._setSharedUniforms(D,o,r);const{row:b,col:R}=r.key,M=R*t,w=b*t;if(D.setUniform2f(\"u_tileOffset\",M%e,w%e),D.setUniform2f(\"u_maxIntNumOfCrossing\",Math.floor(M/e),Math.floor(w/e)),g.textureBinding){f.textureManager.bindTextures(c,D,g);const e=1/2**(y-r.key.level);D.setUniform1f(\"u_zoomFactor\",e)}const j=1/o.pixelRatio;D.setUniform1f(\"u_blur\",j),D.setUniform1f(\"u_antialiasing\",j),this._setSizeVVUniforms(g,D,p,r),this._setColorAndOpacityVVUniforms(g,D,p);const B=i.target.getVAO(c,G,O,S);let A=i.indexCount,F=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(A/=3,F/=3),c.bindVAO(B),this._drawFills(o,r,D,h,A,F)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,m.UNSIGNED_INT,i)}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLSymbologyType as o}from\"../enums.js\";import r from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as e}from\"../techniques/utils.js\";import{DataType as t}from\"../../../../webgl/enums.js\";class s extends r{supportsSymbology(r){return r===o.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;e(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,t.UNSIGNED_INT,f)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{c as e}from\"../../../../../chunks/mat3f32.js\";import{f as r}from\"../../../../../chunks/vec4f32.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as o,VTL_HIGH_RES_CUTOFF as i}from\"../definitions.js\";import{WGLDrawPhase as s}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import n from\"./WGLBrush.js\";import{BufferObject as c}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as l,CompareFunction as m,PrimitiveType as f,Usage as u}from\"../../../../webgl/enums.js\";import{VertexArrayObject as p}from\"../../../../webgl/VertexArrayObject.js\";class _ extends n{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:n,painter:c,styleLayerUID:u,requestRender:p,allowDelayedRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=c.vectorTilesMaterialManager,y=h.getPaintValue(\"background-color\",d),b=h.getPaintValue(\"background-opacity\",d),x=h.getPaintValue(\"background-pattern\",d),M=void 0!==x,j=y[3]*b,U=1|window.devicePixelRatio,w=e.spriteMosaic;let L,A;const P=U>i?2:1,I=e.drawPhase===s.HITTEST,R=this._programOptions;R.id=I,R.pattern=M;const k=v.getMaterialProgram(n,g,R);if(!_||null==p||k.compiled){if(n.bindVAO(this._vao),n.useProgram(k),M){const t=w.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;L=r[0]-e[0],A=r[1]-e[1];const s=w.getPageSize(i);null!=s&&(w.bind(n,l.LINEAR,i,o),k.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),k.setUniform2fv(\"u_mosaicSize\",s),k.setUniform1i(\"u_texture\",o))}k.setUniform1f(\"u_opacity\",b)}else this._color[0]=j*y[0],this._color[1]=j*y[1],this._color[2]=j*y[2],this._color[3]=j,k.setUniform4fv(\"u_color\",this._color);if(k.setUniform1f(\"u_depth\",h.z||0),I){const t=a(u+1);k.setUniform4fv(\"u_id\",t)}for(const e of r){if(k.setUniform1f(\"u_coord_range\",e.rangeX),k.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),M){const r=Math.max(2**(Math.round(d)-e.key.level),1),o=P*e.width*r,i=o/t(L),s=o/t(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}n.setStencilFunction(m.EQUAL,0,255),n.drawArrays(f.TRIANGLE_STRIP,0,4)}}else p()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=c.createVertex(e,u.STATIC_DRAW,i),a=new p(e,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a}}export{_ as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{WGLDrawPhase as t}from\"../enums.js\";import{u32to4Xu8 as r}from\"../number.js\";import i from\"./WGLBrush.js\";import{CompareFunction as n,PrimitiveType as a,DataType as s}from\"../../../../webgl/enums.js\";class o extends i{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,o){const{context:l,displayLevel:c,requiredLevel:u,state:d,drawPhase:f,painter:m,spriteMosaic:p,styleLayerUID:y,requestRender:v,allowDelayedRender:g}=i;if(!o.some((e=>e.layerData.get(y)?.circleIndexCount??!1)))return;const E=i.styleLayer,M=E.circleMaterial,T=m.vectorTilesMaterialManager,I=1.2,U=E.getPaintValue(\"circle-translate\",c),_=E.getPaintValue(\"circle-translate-anchor\",c),x=f===t.HITTEST,R=this._programOptions;R.id=x;const h=T.getMaterialProgram(l,M,R);if(g&&null!=v&&!h.compiled)return void v();l.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",_===e.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv(\"u_circleTranslation\",U),h.setUniform1f(\"u_depth\",E.z),h.setUniform1f(\"u_antialiasingWidth\",I);let D=-1;if(x){const e=r(y+1);h.setUniform4fv(\"u_id\",e)}for(const e of o){if(!e.layerData.has(y))continue;e.key.level!==D&&(D=e.key.level,M.setDataUniforms(h,c,E,D,p));const t=e.layerData.get(y);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const r=t.vao;null!=r&&(l.bindVAO(r),h.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u!==e.key.level?l.setStencilFunction(n.EQUAL,e.stencilRef,255):l.setStencilFunction(n.GREATER,255,255),l.drawElements(a.TRIANGLES,t.circleIndexCount,s.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{o as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e,VTL_HIGH_RES_CUTOFF as i}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import r from\"./WGLBrush.js\";import{TextureSamplingMode as l,CompareFunction as o,PrimitiveType as s,DataType as f}from\"../../../../webgl/enums.js\";const u=1/65536;class d extends r{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:l,spriteMosaic:o,styleLayerUID:s}=t;let f=!1;for(const n of e)if(n.layerData.has(s)){const t=n.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty(\"fill-pattern\"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=o.getMosaicItemPosition(t,!0)}const y=!c&&u.getPaintValue(\"fill-antialias\",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue(\"fill-color\",i);_=u.getPaintValue(\"fill-opacity\",i)*t[3],_>=1&&(g=!1)}}if(g&&\"opaque\"===l)return;let E;r===n.HITTEST&&(E=a(s+1));const v=u.getPaintValue(\"fill-translate\",i),M=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==l)&&this._drawFill(t,s,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&\"opaque\"!==l&&!P&&this._drawOutline(t,s,u,e,v,M,E)}_drawFill(a,r,d,c,m,p,y,g,_,E){if(y&&!_&&null==g)return;const{context:v,displayLevel:M,state:P,drawPhase:I,painter:T,pixelRatio:U,spriteMosaic:x,requestRender:D,allowDelayedRender:h}=a,S=d.fillMaterial,R=T.vectorTilesMaterialManager,w=U>i?2:1,N=I===n.HITTEST,L=this._fillProgramOptions;L.id=N,L.pattern=y;const A=R.getMaterialProgram(v,S,L);if(h&&null!=D&&!A.compiled)return void D();if(v.useProgram(A),null!=g){const{page:t}=g,i=x.getPageSize(t);null!=i&&(x.bind(v,l.LINEAR,t,e),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",e))}A.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?P.displayMat3:P.displayViewMat3),A.setUniform2fv(\"u_fillTranslation\",m),A.setUniform1f(\"u_depth\",d.z+u),N&&A.setUniform4fv(\"u_id\",E);let V=-1;for(const t of c){if(!t.layerData.has(r))continue;t.key.level!==V&&(V=t.key.level,S.setDataUniforms(A,M,d,V,x));const i=t.layerData.get(r);if(!i.fillIndexCount)continue;i.prepareForRendering(v);const n=i.fillVAO;if(null!=n){if(v.bindVAO(n),A.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),v.setStencilFunction(o.EQUAL,t.stencilRef,255),y){const e=Math.max(2**(Math.round(M)-t.key.level),1),i=t.rangeX/(w*t.width*e);A.setUniform1f(\"u_patternFactor\",i)}if(_){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=x.getPageSize(i);null!=t&&(x.bind(v,l.LINEAR,i,e),A.setUniform2fv(\"u_mosaicSize\",t),A.setUniform1i(\"u_texture\",e),v.drawElements(s.TRIANGLES,n[1],f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else v.drawElements(s.TRIANGLES,i.fillIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,d,c){const{context:m,displayLevel:p,state:y,drawPhase:g,painter:_,pixelRatio:E,spriteMosaic:v,requestRender:M,allowDelayedRender:P}=e,I=a.outlineMaterial,T=_.vectorTilesMaterialManager,U=.75/E,x=g===n.HITTEST,D=this._outlineProgramOptions;D.id=x;const h=T.getMaterialProgram(m,I,D);if(P&&null!=M&&!h.compiled)return void M();m.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",d===t.VIEWPORT?y.displayMat3:y.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",l),h.setUniform1f(\"u_depth\",a.z+u),h.setUniform1f(\"u_outline_width\",U),x&&h.setUniform4fv(\"u_id\",c);let S=-1;for(const t of r){if(!t.layerData.has(i))continue;t.key.level!==S&&(S=t.key.level,I.setDataUniforms(h,p,a,S,v));const e=t.layerData.get(i);if(e.prepareForRendering(m),!e.outlineIndexCount)continue;const n=e.outlineVAO;null!=n&&(m.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),m.setStencilFunction(o.EQUAL,t.stencilRef,255),m.drawElements(s.TRIANGLES,e.outlineIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{d as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as t}from\"../definitions.js\";import{WGLDrawPhase as i}from\"../enums.js\";import{u32to4Xu8 as n}from\"../number.js\";import a from\"./WGLBrush.js\";import{TextureSamplingMode as r,CompareFunction as o,PrimitiveType as s,DataType as l}from\"../../../../webgl/enums.js\";class f extends a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(a,f){const{context:u,displayLevel:m,state:d,drawPhase:c,painter:p,pixelRatio:g,spriteMosaic:y,styleLayerUID:E,requestRender:v,allowDelayedRender:M}=a;if(!f.some((e=>e.layerData.get(E)?.lineIndexCount??!1)))return;const _=a.styleLayer,U=_.lineMaterial,I=p.vectorTilesMaterialManager,P=_.getPaintValue(\"line-translate\",m),T=_.getPaintValue(\"line-translate-anchor\",m),x=_.getPaintProperty(\"line-pattern\"),D=void 0!==x,S=D&&x.isDataDriven;let L,N;if(D&&!S){const e=x.getValue(m);L=y.getMosaicItemPosition(e)}let R=!1;if(!D){const e=_.getPaintProperty(\"line-dasharray\");if(N=void 0!==e,R=N&&e.isDataDriven,N&&!R){const t=e.getValue(m),i=_.getDashKey(t,_.getLayoutValue(\"line-cap\",m));L=y.getMosaicItemPosition(i)}}const V=1/g,h=c===i.HITTEST,w=this._programOptions;w.id=h,w.pattern=D,w.sdf=N;const A=I.getMaterialProgram(u,U,w);if(M&&null!=v&&!A.compiled)return void v();if(u.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),A.setUniformMatrix3fv(\"u_displayMat3\",T===e.VIEWPORT?d.displayMat3:d.displayViewMat3),A.setUniform2fv(\"u_lineTranslation\",P),A.setUniform1f(\"u_depth\",_.z),A.setUniform1f(\"u_antialiasing\",V),h){const e=n(E+1);A.setUniform4fv(\"u_id\",e)}if(L&&null!=L){const{page:e}=L,i=y.getPageSize(e);null!=i&&(y.bind(u,r.LINEAR,e,t),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",t))}let j=-1;for(const e of f){if(!e.layerData.has(E))continue;e.key.level!==j&&(j=e.key.level,U.setDataUniforms(A,m,_,j,y));const i=2**(m-j)/g;A.setUniform1f(\"u_zoomFactor\",i);const n=e.layerData.get(E);if(!n.lineIndexCount)continue;n.prepareForRendering(u);const a=n.vao;if(null!=a){if(u.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u.setStencilFunction(o.EQUAL,e.stencilRef,255),S||R){const e=n.patternMap;if(!e)continue;for(const[i,n]of e){const e=y.getPageSize(i);null!=e&&(y.bind(u,r.LINEAR,i,t),A.setUniform2fv(\"u_mosaicSize\",e),A.setUniform1i(\"u_texture\",t),u.drawElements(s.TRIANGLES,n[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else u.drawElements(s.TRIANGLES,n.lineIndexCount,l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.lineIndexStart);e.triangleCount+=n.lineIndexCount/3}}}}export{f as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{c as e,f as t}from\"../../../../../chunks/vec2f32.js\";import{FADE_DURATION as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as s,VTL_TEXTURE_BINDING_UNIT_GLYPHS as o}from\"../definitions.js\";import{WGLDrawPhase as l}from\"../enums.js\";import{degToByte as f}from\"../GeometryUtils.js\";import{u32to4Xu8 as u}from\"../number.js\";import p from\"./WGLBrush.js\";import{TextureSamplingMode as c,CompareFunction as m,PrimitiveType as d,DataType as g}from\"../../../../webgl/enums.js\";const y=1/65536;class _ extends p{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let n;i===l.HITTEST&&(n=u(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}_drawIcons(e,t,o,u){const{context:p,displayLevel:c,drawPhase:m,painter:d,spriteMosaic:g,state:y,styleLayerUID:_,requestRender:h,allowDelayedRender:M}=e,P=t.iconMaterial,T=d.vectorTilesMaterialManager;let U,E=!1;for(const i of o)if(i.layerData.has(_)&&(U=i.layerData.get(_),U.iconPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const v=t.getPaintValue(\"icon-translate\",c),x=t.getPaintValue(\"icon-translate-anchor\",c);let D=t.getLayoutValue(\"icon-rotation-alignment\",c);D===a.AUTO&&(D=t.getLayoutValue(\"symbol-placement\",c)===r.POINT?a.VIEWPORT:a.MAP);const I=D===a.MAP,R=t.getLayoutValue(\"icon-keep-upright\",c)&&I,S=U.isIconSDF,V=m===l.HITTEST,w=this._iconProgramOptions;w.id=V,w.sdf=S;const A=T.getMaterialProgram(p,P,w);if(M&&null!=h&&!A.compiled)return void h();p.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",D===a.MAP?y.displayViewMat3:y.displayMat3),A.setUniformMatrix3fv(\"u_displayMat3\",x===n.VIEWPORT?y.displayMat3:y.displayViewMat3),A.setUniform2fv(\"u_iconTranslation\",v),A.setUniform1f(\"u_depth\",t.z),A.setUniform1f(\"u_mapRotation\",f(y.rotation)),A.setUniform1f(\"u_keepUpright\",R?1:0),A.setUniform1f(\"u_level\",10*c),A.setUniform1i(\"u_texture\",s),A.setUniform1f(\"u_fadeDuration\",i/1e3),V&&A.setUniform4fv(\"u_id\",u);let L=-1;for(const i of o){if(!i.layerData.has(_))continue;if(i.key.level!==L&&(L=i.key.level,P.setDataUniforms(A,c,t,L,g)),U=i.layerData.get(_),0===U.iconPerPageElementsMap.size)continue;U.prepareForRendering(p),U.updateOpacityInfo();const a=U.iconVAO;if(null!=a){p.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),A.setUniform1f(\"u_time\",(performance.now()-U.lastOpacityUpdate)/1e3);for(const[t,a]of U.iconPerPageElementsMap)this._renderIconRange(e,A,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,c.LINEAR,a,s),n.setStencilTestEnabled(!0),n.setStencilFunction(m.GREATER,255,255),n.setStencilWriteMask(0),n.drawElements(d.TRIANGLES,i[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,u,p){const{context:c,displayLevel:d,drawPhase:g,glyphMosaic:_,painter:h,pixelRatio:M,spriteMosaic:P,state:T,styleLayerUID:U,requestRender:E,allowDelayedRender:v}=e,x=s.textMaterial,D=h.vectorTilesMaterialManager;let I,R=!1;for(const t of u)if(t.layerData.has(U)&&(I=t.layerData.get(U),I.glyphPerPageElementsMap.size>0)){R=!0;break}if(!R)return;const S=s.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&0===S.getValue(d))return;const V=s.getPaintProperty(\"text-color\"),w=!V||V.isDataDriven||V.getValue(d)[3]>0,A=s.getPaintProperty(\"text-halo-width\"),L=s.getPaintProperty(\"text-halo-color\"),O=(!A||A.isDataDriven||A.getValue(d)>0)&&(!L||L.isDataDriven||L.getValue(d)[3]>0);if(!w&&!O)return;const N=24/8;let z=s.getLayoutValue(\"text-rotation-alignment\",d);z===a.AUTO&&(z=s.getLayoutValue(\"symbol-placement\",d)===r.POINT?a.VIEWPORT:a.MAP);const k=z===a.MAP,b=s.getLayoutValue(\"text-keep-upright\",d)&&k,G=g===l.HITTEST,j=.8*N/M;this._glyphTextureSize||(this._glyphTextureSize=t(_.width/4,_.height/4));const W=s.getPaintValue(\"text-translate\",d),F=s.getPaintValue(\"text-translate-anchor\",d),B=this._sdfProgramOptions;B.id=G;const H=D.getMaterialProgram(c,x,B);if(v&&null!=E&&!H.compiled)return void E();c.useProgram(H),H.setUniformMatrix3fv(\"u_displayViewMat3\",z===a.MAP?T.displayViewMat3:T.displayMat3),H.setUniformMatrix3fv(\"u_displayMat3\",F===n.VIEWPORT?T.displayMat3:T.displayViewMat3),H.setUniform2fv(\"u_textTranslation\",W),H.setUniform1f(\"u_depth\",s.z+y),H.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),H.setUniform1f(\"u_mapRotation\",f(T.rotation)),H.setUniform1f(\"u_keepUpright\",b?1:0),H.setUniform1f(\"u_level\",10*d),H.setUniform1i(\"u_texture\",o),H.setUniform1f(\"u_antialiasingWidth\",j),H.setUniform1f(\"u_fadeDuration\",i/1e3),G&&H.setUniform4fv(\"u_id\",p);let C=-1;for(const t of u){if(!t.layerData.has(U))continue;if(t.key.level!==C&&(C=t.key.level,x.setDataUniforms(H,d,s,C,P)),I=t.layerData.get(U),0===I.glyphPerPageElementsMap.size)continue;I.prepareForRendering(c),I.updateOpacityInfo();const e=I.textVAO;if(null==e)continue;c.bindVAO(e),H.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),c.setStencilTestEnabled(!0),c.setStencilFunction(m.GREATER,255,255),c.setStencilWriteMask(0);const i=(performance.now()-I.lastOpacityUpdate)/1e3;H.setUniform1f(\"u_time\",i),I.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,_,H,O,w,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,c.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(d.TRIANGLES,t[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(d.TRIANGLES,t[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}export{_ as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LabelMaterialKey as o}from\"../materialKey/MaterialKey.js\";import{CompareFunction as n,PrimitiveType as r,DataType as s}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:s.SHORT},{location:1,name:\"a_id\",count:4,type:s.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:s.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:s.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:s.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:s.SHORT},{location:8,name:\"a_texCoords\",count:2,type:s.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return e.LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,a,l){const{context:m,painter:u,state:d,rendererInfo:f,requestRender:c,allowDelayedRender:_}=e,p=o.load(a.materialKey),E=p.mapAligned?1:0;if(!E&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:y,attributes:N}=i(p),U=u.materialManager.getMaterialProgram(e,p,\"materials/label\",N,l);if(_&&null!=c&&!U.compiled)return void c();e.context.setStencilFunction(n.EQUAL,0,255),m.useProgram(U),this._setSharedUniforms(U,e,t),u.textureManager.bindTextures(m,U,p);const S=1===E?d.displayViewMat3:d.displayMat3;this._setSizeVVUniforms(p,U,f,t),U.setUniform1f(\"u_mapRotation\",Math.floor(d.rotation/360*254)),U.setUniform1f(\"u_mapAligned\",E),U.setUniformMatrix3fv(\"u_displayMat3\",S),U.setUniform1f(\"u_opacity\",1),U.setUniform2fv(\"u_screenSize\",e.state.size);const T=a.target.getVAO(m,y,N),g=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),m.setStencilTestEnabled(!0),m.setBlendingEnabled(!0)}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{LineMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:r.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:r.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:r.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:r.BYTE},{location:7,name:\"a_aux\",count:2,type:r.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT}]});class s extends o{dispose(){}getGeometryType(){return e.LINE}supportsSymbology(e){return!0}drawGeometry(e,t,o,s){const{context:l,painter:m,rendererInfo:c,displayLevel:u,passOptions:d,requestRender:p,allowDelayedRender:y}=e,_=a.load(o.materialKey),f=null!=d&&\"hittest\"===d.type;let E=i(_),N=n.TRIANGLES;f&&(E=this._getTriangleDesc(o.materialKey,E),N=n.POINTS);const{attributes:g,bufferLayouts:S}=E,T=m.materialManager.getMaterialProgram(e,_,\"materials/line\",g,s);if(y&&null!=p&&!T.compiled)return void p();const U=1/e.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,e,t),_.textureBinding&&m.textureManager.bindTextures(l,T,_);const I=2**(u-t.key.level);T.setUniform1f(\"u_zoomFactor\",I),T.setUniform1f(\"u_blur\",G+U),T.setUniform1f(\"u_antialiasing\",U),this._setSizeVVUniforms(_,T,c,t),this._setColorAndOpacityVVUniforms(_,T,c),l.setFaceCullingEnabled(!1);const D=o.target.getVAO(l,S,g,f);let R=o.indexCount,x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(R/=3,x/=3),l.bindVAO(D),l.drawElements(N,R,r.UNSIGNED_INT,x)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{TextMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const s=t=>e(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:r.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:r.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:8,name:\"a_texCoords\",count:2,type:r.UNSIGNED_SHORT}]});class i extends o{dispose(){}getGeometryType(){return t.TEXT}supportsSymbology(t){return!0}drawGeometry(t,e,o,i){const{context:m,painter:l,rendererInfo:u,state:d,passOptions:f,requestRender:_,allowDelayedRender:p}=t,c=a.load(o.materialKey),y=null!=f&&\"hittest\"===f.type,{bufferLayouts:E,attributes:N}=s(c),U=l.materialManager.getMaterialProgram(t,c,\"materials/text\",N,i);if(p&&null!=_&&!U.compiled)return void _();m.useProgram(U);let S=n.TRIANGLES;y&&(S=n.POINTS),this._setSharedUniforms(U,t,e),l.textureManager.bindTextures(m,U,c),U.setUniformMatrix3fv(\"u_displayMat3\",d.displayMat3),U.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),this._setSizeVVUniforms(c,U,u,e),this._setColorAndOpacityVVUniforms(c,U,u),this._setRotationVVUniforms(c,U,u);const T=o.target.getVAO(m,E,N),x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(n.TRIANGLES,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x)}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/BrushOverlay.js\";import o from\"./webgl/brushes/WGLBrushDotDensity.js\";import m from\"./webgl/brushes/WGLBrushHeatmap.js\";import l from\"./webgl/brushes/WGLBrushInfo.js\";import t from\"./webgl/brushes/WGLBrushPieChart.js\";import b from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as h}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as i}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as u}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as p}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as L}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import f from\"./webgl/brushes/WGLGeometryBrushFill.js\";import B from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import g from\"./webgl/brushes/WGLGeometryBrushLine.js\";import G from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import j from\"./webgl/brushes/WGLGeometryBrushText.js\";const w={marker:G,line:g,fill:f,text:j,label:B,clip:s,stencil:b,bitmap:r,overlay:e,tileInfo:l,vtlBackground:h,vtlFill:u,vtlLine:p,vtlCircle:i,vtlSymbol:L,dotDensity:o,heatmap:m,pieChart:t};export{w as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e}from\"../../../../../core/maybe.js\";import t from\"../../../../../core/RandomLCG.js\";import{TEXTURE_BINDING_RENDERER_0 as o,TEXTURE_BINDING_RENDERER_1 as r,TILE_SIZE as s}from\"../definitions.js\";import{WGLGeometryType as i,WGLSymbologyType as n}from\"../enums.js\";import d from\"./WGLGeometryBrushFill.js\";import{assertRendererSchema as a}from\"../techniques/utils.js\";import{BufferObject as l}from\"../../../../webgl/BufferObject.js\";import{DataType as u,PrimitiveType as _,TextureSamplingMode as m,TextureWrapMode as c,RenderbufferFormat as f,Usage as h,PixelType as p}from\"../../../../webgl/enums.js\";import{FramebufferObject as T}from\"../../../../webgl/FramebufferObject.js\";import{Renderbuffer as x}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as w}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as D}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as y}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as b}from\"../../../../webgl/VertexArrayObject.js\";class g extends d{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([o,r]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e(this._dotFBO),this._dotVAO=e(this._dotVAO)}getGeometryType(){return i.FILL}supportsSymbology(e){return e===n.DOT_DENSITY}_drawFills(e,t,o,r,s,i){const{passOptions:n}=e;if(null!=n&&\"hittest\"===n.type)super._drawFills(e,t,o,r,s,i);else{const r=this._drawDotLocations(e,t,o,s,i);this._drawDotDensity(e,t,r)}}_drawDotDensity(e,t,o){const{context:r,painter:s,rendererInfo:i,requestRender:n,allowDelayedRender:d}=e,l=s.materialManager.getProgram(this._dotDesc);if(d&&null!=n&&!l.compiled)return void n();const{rendererSchema:m}=i;a(m,\"dot-density\");const c=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:u.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(l),l.setUniform1f(\"u_tileZoomFactor\",1),l.setUniform1i(\"u_texture\",this._dotSamplers[0]),l.setUniform1f(\"u_dotSize\",Math.max(m.dotSize,1)),l.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(l,e,t),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(c),r.drawArrays(_.POINTS,0,262144)}_drawDotLocations(e,t,o,r,i){const{context:n,rendererInfo:d,requiredLevel:l}=e,m=n.getViewport(),{rendererSchema:c}=d;a(c,\"dot-density\");const{dotScale:f,colors:h,activeDots:p,backgroundColor:T,dotValue:x}=c;n.setViewport(0,0,512,512);const w=n.getBoundFramebufferObject(),D=this._createFBO(n);n.bindFramebuffer(D),n.setClearColor(0,0,0,0),n.clear(n.gl.COLOR_BUFFER_BIT|n.gl.STENCIL_BUFFER_BIT),n.setStencilTestEnabled(!1);const y=1/2**(l-t.key.level),b=s,g=b*window.devicePixelRatio*b*window.devicePixelRatio,O=1/y*(1/y),S=f?e.state.scale/f:1;return o.setUniform1f(\"u_tileZoomFactor\",y),o.setUniform1f(\"u_tileDotsOverArea\",g/(s*window.devicePixelRatio*s*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",h),o.setUniform4fv(\"u_isActive\",p),o.setUniform4fv(\"u_dotBackgroundColor\",T),o.setUniform1f(\"u_dotValue\",Math.max(1,x*S*O)),this._bindDotDensityTextures(n,o,d,b),n.drawElements(_.TRIANGLES,r,u.UNSIGNED_INT,i),n.setViewport(m.x,m.y,m.width,m.height),n.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(null==this._dotFBO){const t=512,o=512,r=new y(t,o);r.samplingMode=m.NEAREST,r.wrapMode=c.CLAMP_TO_EDGE;const s=new x(e,new w(f.DEPTH_STENCIL,t,o));this._dotFBO=new T(e,r,s)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;a(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,o){if(null==this._dotVAO){const r=2,s=new Int16Array(262144*r);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[r*(t+512*e)]=t,s[r*(t+512*e)+1]=e;const i=l.createVertex(e,h.STATIC_DRAW,s);this._dotVAO=new b(e,t,o,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,o,r){if(this._dotTextureSize===o&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=o,this._seed=r),null===this._dotTextures){const s=new t(r);this._dotTextures=[this._allocDotDensityTexture(e,o,s),this._allocDotDensityTexture(e,o,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();const s=new y;return s.dataType=p.FLOAT,s.samplingMode=m.NEAREST,s.width=t,s.height=t,new D(e,s,r)}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r={geometry:[new o(\"a_pos\",2,e.BYTE,0,2)]},t={geometry:[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]},m={geometry:[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]};export{r as Pos2b,m as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst n=128/Math.PI,t=256/360,r=1/Math.LN2;function u(n,t){return(n%=t)>=0?n:n+t}function o(t){return u(t*n,256)}function c(n){return u(n*t,256)}function e(n){return Math.log(n)*r}function f(n,t,r){return n*(1-r)+t*r}function i(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{i as between,c as degToByte,f as interpolate,e as log2,u as positiveMod,o as radToByte};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{CapType as n,JoinType as r}from\"../../../../symbols/cim/enums.js\";import{WGLGeometryType as s,WGLSymbologyType as a,VVType as i}from\"./enums.js\";import{Usage as c,DataType as o,PixelType as u}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as l}from\"../../../webgl/VertexElementDescriptor.js\";const m=t.getLogger(\"esri.views.2d.engine.webgl.Utils\"),f=\"geometry\",d=[{name:f,strideInBytes:12}],p=[{name:f,strideInBytes:36}],y=[{name:f,strideInBytes:24}],I=[{name:f,strideInBytes:12}],g=[{name:f,strideInBytes:40}],S=[{name:f,strideInBytes:36}],T=[{name:f,strideInBytes:36}];function w(e){const t={};for(const n of e)t[n.name]=n.strideInBytes;return t}const E=w([{name:f,strideInBytes:36}]),h=w(d),L=w(p),N=w(y),D=w(I),A=w(g),M=w(S),U=w(T);function R(e,t){switch(e){case s.MARKER:return t===a.HEATMAP?h:E;case s.FILL:switch(t){case a.DOT_DENSITY:return D;case a.SIMPLE:case a.OUTLINE_FILL_SIMPLE:return N;default:return L}case s.LINE:return A;case s.TEXT:return M;case s.LABEL:return U}}const _=[f],v=[f],B=[f],O=[f],C=[f];function b(e){switch(e){case s.MARKER:return _;case s.FILL:return v;case s.LINE:return B;case s.TEXT:return O;case s.LABEL:return C}}function F(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function x(e,t){switch(t%4){case 0:case 2:return new Uint32Array(Math.floor(e*t/4));case 1:case 3:return new Uint8Array(e*t)}}function P(e,t){switch(t%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function z(e){return null!=e}function $(e){return\"number\"==typeof e}function k(t){switch(t){case\"butt\":return n.BUTT;case\"round\":return n.ROUND;case\"square\":return n.SQUARE;default:return m.error(new e(\"mapview-invalid-type\",`Cap type ${t} is not a valid option. Defaulting to round`)),n.ROUND}}function G(t){switch(t){case\"miter\":return r.MITER;case\"bevel\":return r.BEVEL;case\"round\":return r.ROUND;default:return m.error(new e(\"mapview-invalid-type\",`Join type ${t} is not a valid option. Defaulting to round`)),r.ROUND}}function V(e){switch(e){case\"opacity\":return i.OPACITY;case\"color\":return i.COLOR;case\"rotation\":return i.ROTATION;case\"size\":return i.SIZE;default:return m.error(`Cannot interpret unknown vv: ${e}`),null}}function j(e,t,n,r,s,a,i){for(const c in a){const t=a[c].stride,r=F(t),i=a[c].data,o=n[c].data;if(null==i||null==o)continue;const u=t*s.vertexCount/r,l=t*e/r,m=t*s.vertexFrom/r;for(let e=0;e<u;++e)o[e+l]=i[e+m]}if(null!=i&&null!=r){const n=s.indexCount;for(let a=0;a<n;++a)r[a+t]=i[a+s.indexFrom]-s.vertexFrom+e}}const Y={[f]:c.STATIC_DRAW};function H(e,t){const n=[];for(let r=0;r<5;++r){const s=b(r),a={};for(const e of s)a[e]={data:t(r,e)};n.push({data:e(r),buffers:a})}return n}function q(e){switch(e){case o.BYTE:case o.UNSIGNED_BYTE:return 1;case o.SHORT:case o.UNSIGNED_SHORT:return 2;case o.FLOAT:case o.INT:case o.UNSIGNED_INT:return 4}}function K(t){switch(t){case u.UNSIGNED_BYTE:return 1;case u.UNSIGNED_SHORT_4_4_4_4:return 2;case u.FLOAT:return 4;default:return void m.error(new e(\"webgl-utils\",`Unable to handle type ${t}`))}}function W(t){switch(t){case u.UNSIGNED_BYTE:return Uint8Array;case u.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.FLOAT:return Float32Array;default:return void m.error(new e(\"webgl-utils\",`Unable to handle type ${t}`))}}function X(e){const t={};for(const n in e){const r=e[n];let s=0;t[n]=r.map((e=>{const t=new l(e.name,e.count,e.type,s,0,e.normalized||!1);return s+=e.count*q(e.type),t})),t[n]?.forEach((e=>e.stride=s))}return t}const J=e=>{const t=new Map;for(const n in e)for(const r of e[n])t.set(r.name,r.location);return t},Q=e=>{const t={};for(const n in e){const r=e[n];t[n]=r?.length?r[0].stride:0}return t},Z=new Map,ee=(e,t)=>{if(!Z.has(e)){const n=X(t),r={strides:Q(n),bufferLayouts:n,attributes:J(t)};Z.set(e,r)}return Z.get(e)};function te(e){e(s.FILL),e(s.LINE),e(s.MARKER),e(s.TEXT),e(s.LABEL)}const ne=e=>\"path\"in e&&ye(e.path),re=e=>\"url\"in e&&e.url||\"imageData\"in e&&e.imageData,se=e=>\"imageData\"in e&&e.imageData&&\"contentType\"in e&&e.contentType?`data:${e.contentType};base64,${e.imageData}`:\"url\"in e?e.url:null,ae=e=>null!=e&&e.startsWith(\"data:image/gif\"),ie=e=>\"url\"in e&&e.url&&(e.url.includes(\".gif\")||ae(e.url))||\"contentType\"in e&&\"image/gif\"===e.contentType||\"imageData\"in e&&ae(e.imageData),ce=e=>null!=e&&e.startsWith(\"data:image/png\"),oe=e=>\"url\"in e&&e.url&&(e.url.includes(\".png\")||ce(e.url))||\"contentType\"in e&&\"image/png\"===e.contentType||\"imageData\"in e&&ce(e.imageData),ue=e=>e.type&&e.type.toLowerCase().includes(\"3d\");function le(e){switch(e.type){case\"line\":{const t=e;return\"CIMSolidStroke\"===t.cim.type&&!t.dashTemplate}case\"fill\":return\"CIMSolidFill\"===e.cim.type;case\"esriSFS\":return\"esriSFSSolid\"===e.style||\"esriSFSNull\"===e.style;case\"esriSLS\":return\"esriSLSSolid\"===e.style||\"esriSLSNull\"===e.style;default:return!1}}const me=e=>e.includes(\"data:image/svg+xml\");function fe(e){switch(\"cim\"in e?e.cim.type:e.type){case\"esriSMS\":case\"esriPMS\":case\"CIMPointSymbol\":return!1;case\"CIMVectorMarker\":case\"CIMCharacterMarker\":case\"CIMPictureMarker\":return Ie(e);default:return!0}}function de(e){const t=\"maxVVSize\"in e&&e.maxVVSize,n=\"width\"in e&&e.width||\"size\"in e&&e.size||0;return t||n}function pe(e){const t=[];for(let n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}const ye=e=>!!e&&(e=e.trim(),!!(/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(e)&&/[\\dz]$/i.test(e)&&e.length>4)),Ie=e=>\"fill\"===e.type&&\"CIMMarkerPlacementInsidePolygon\"===e?.cim?.markerPlacement?.type;export{Y as C_VBO_INFO,x as allocateTypedArrayBuffer,P as allocateTypedArrayBufferwithData,pe as charCodes,j as copyMeshData,H as createGeometryData,ee as createProgramDescriptor,te as forEachGeometryType,q as getBytes,k as getCapType,G as getJoinType,b as getNamedBuffers,de as getPMSResourceSize,W as getPixelArrayCtor,K as getPixelBytes,R as getStrides,se as getUrl,V as getVVType,ue as is3D,z as isDefined,ie as isGIF,ae as isGIFDataUri,re as isImageResource,Ie as isMarkerPlacementInsidePolygon,$ as isNumber,oe as isPNG,ce as isPNGDataUri,me as isSVGImage,ne as isSVGResource,le as isSimple,ye as isValidSVG,fe as shouldRepeat,F as strideToPackingFactor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{BufferObject as t}from\"../../../webgl/BufferObject.js\";import{Usage as e,DataType as r,PrimitiveType as s}from\"../../../webgl/enums.js\";import{VertexArrayObject as i}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";class n{constructor(s,n){this._rctx=s,this._vertexBuffer=t.createVertex(s,e.STATIC_DRAW,new Uint16Array(n)),this._vao=new i(s,new Map([[\"a_position\",0]]),{geometry:[new o(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(s.TRIANGLE_STRIP,0,this._count)}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{e as r}from\"../../../../chunks/earcut.js\";import{s as n}from\"../../../../chunks/vec2.js\";import{a as s}from\"../../../../chunks/vec2f64.js\";import{convertFromNestedArray as o,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as h,Usage as m,DataType as u}from\"../../../webgl/enums.js\";const y=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return u.UNSIGNED_BYTE;case 2:return u.UNSIGNED_SHORT;case 4:return u.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},l=(e,t,r,n)=>{let s=0;for(let o=1;o<r;o++){const r=e[2*(t+o-1)],n=e[2*(t+o-1)+1];s+=(e[2*(t+o)]-r)*(e[2*(t+o)+1]+n)}return n?s>0:s<0},x=({coords:e,lengths:t},n)=>{const s=[];for(let o=0,i=0;o<t.length;i+=t[o],o+=1){const c=i,a=[];for(;o<t.length-1&&l(e,i+t[o],t[o+1],n);o+=1,i+=t[o])a.push(i+t[o]-c);const f=e.slice(2*c,2*(i+t[o])),h=r(f,a,2);for(const e of h)s.push(e+c)}return s};class g{constructor(e,t,r,n=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=n}static fromRect({x:e,y:t,width:r,height:n}){const s=e,o=t,i=s+r,c=o+n;return g.fromScreenExtent({xmin:s,ymin:o,xmax:i,ymax:c})}static fromPath(e){const t=o(new c,e.path,!1,!1),r=t.coords,n=new Uint32Array(x(t,!0)),s=new Uint32Array(r.length/2);for(let o=0;o<s.length;o++)s[o]=a(Math.floor(r[2*o]),Math.floor(r[2*o+1]));return new g({geometry:s},n,h.TRIANGLES)}static fromGeometry(r,n){const s=n.geometry?.type;switch(s){case\"polygon\":return g.fromPolygon(r,n.geometry);case\"extent\":return g.fromMapExtent(r,n.geometry);default:return t.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${s}`,n)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=i(new c,t,!1,!1),o=r.coords,f=new Uint32Array(x(r,!1)),m=new Uint32Array(o.length/2),u=s(),y=s();for(let s=0;s<m.length;s++)n(u,o[2*s],o[2*s+1]),e.toScreen(y,u),m[s]=a(Math.floor(y[0]),Math.floor(y[1]));return new g({geometry:m},f,h.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:n}){const s={geometry:new Uint32Array([a(e,r),a(t,r),a(e,n),a(e,n),a(t,r),a(t,n)])},o=new Uint32Array([0,1,2,3,4,5]);return new g(s,o,h.TRIANGLES)}static fromMapExtent(e,t){const[r,n]=e.toScreen([0,0],[t.xmin,t.ymin]),[s,o]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([a(r,n),a(s,n),a(r,o),a(r,o),a(s,n),a(s,o)])},c=new Uint32Array([0,1,2,3,4,5]);return new g(i,c,h.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}get elementType(){return y(this.indices)}getIndexBuffer(e,t=m.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=f.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=m.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,n)=>({...r,[n]:f.createVertex(e,t,this.vertices[n])})),{})),this._cache.vertexBuffers}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import e from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{c as s}from\"../../../../chunks/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import o from\"./Mesh2D.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";const a=t=>parseFloat(t)/100;class c extends i{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=r((()=>e.version),(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new c(t,e)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,e,r,s){const[i,o]=e.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===o||(this._lastWidth=i,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(e,this._clip),o=i.getIndexBuffer(t),a=i.getVertexBuffers(t);this._cache.mesh=i,this._cache.vao=new h(t,r,s,a,o)}return this._cache.vao}_createTransforms(){return{dvs:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i=\"string\"==typeof e.left?a(e.left)*r:e.left,o=\"string\"==typeof e.right?a(e.right)*r:e.right,h=\"string\"==typeof e.top?a(e.top)*s:e.top,c=\"string\"==typeof e.bottom?a(e.bottom)*s:e.bottom,n=i,l=h;return{x:n,y:l,width:Math.max(r-o-n,0),height:Math.max(s-c-l,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return o.fromRect(this._createScreenRect(r,s));case\"path\":return o.fromPath(s);case\"geometry\":return o.fromGeometry(r,s);default:return e.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new t(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),o.fromRect({x:0,y:0,width:1,height:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{c as e}from\"../../../../chunks/mat3f32.js\";import{brushes as r}from\"../brushes.js\";import{Container as s}from\"../Container.js\";import t from\"./ClippingInfo.js\";import{WGLDrawPhase as n}from\"./enums.js\";class i extends s{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo()}beforeRender(e){super.beforeRender(e),this.updateTransforms(e.state)}_createTransforms(){return{dvs:e()}}doRender(e){const r=this.createRenderParams(e),{painter:s,globalOpacity:t,profiler:i,drawPhase:a}=r,o=a===n.LABEL||a===n.HIGHLIGHT?1:t*this.computedOpacity;i.recordContainerStart(this.name),s.beforeRenderLayer(r,this._clippingInfos?255:0,o),this.renderChildren(r),s.compositeLayer(r,o),i.recordContainerEnd()}renderChildren(e){null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const s of this._renderPasses)try{s.render(e)}catch(r){}}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[r.clip],target:()=>this._clippingInfos,drawPhase:n.MAP|n.LABEL|n.LABEL_ALPHA|n.DEBUG|n.HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){null!=this._clippingInfos&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null);const e=this.stage;if(!e)return;const r=this._clips;null!=r&&r.length&&(this._clippingInfos=r.items.map((r=>t.fromClipArea(e,r)))),this.requestRender()}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TEXTURE_BINDING_BITMAP as e}from\"../definitions.js\";import t from\"../VertexStream.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as s,BlendFactor as n,CompareFunction as r}from\"../../../../webgl/enums.js\";const a={nearest:{defines:[],samplingMode:s.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:s.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:s.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:s.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?a.bilinear:a.nearest}return a[i.samplingMode]};class d extends i{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(i,s){const{context:a,renderingOptions:d,painter:l,requestRender:m,allowDelayedRender:c}=i;if(!s.source||!s.isReady)return;const p=o(i,s,d),u=l.materialManager.getProgram(this._desc,p.defines);if(c&&null!=m&&!u.compiled)return void m();i.timeline.begin(this.name),\"additive\"===s.blendFunction?a.setBlendFunctionSeparate(n.ONE,n.ONE,n.ONE,n.ONE):a.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),a.setStencilFunction(r.EQUAL,s.stencilRef,255),this._quad||(this._quad=new t(a,[0,0,1,0,0,1,1,1]));const{coordScale:f,computedOpacity:_,transforms:E}=s;s.setSamplingProfile(p),s.bind(i.context,e),a.useProgram(u),u.setUniformMatrix3fv(\"u_dvsMat3\",E.dvs),u.setUniform1i(\"u_texture\",e),u.setUniform2fv(\"u_coordScale\",f),u.setUniform1f(\"u_opacity\",_),this._quad.draw(),i.timeline.end(this.name)}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{disposeMaybe as t}from\"../../../../../core/maybe.js\";import{WGLSymbologyType as r}from\"../enums.js\";import i from\"../VertexStream.js\";import s from\"./WGLGeometryBrushMarker.js\";import{Effect as a}from\"../effects/Effect.js\";import{assertRendererSchema as u}from\"../techniques/utils.js\";import{ContextType as n}from\"../../../../webgl/contextUtils.js\";import{CompareFunction as o,DataType as l,BlendFactor as f,ClearBufferBit as c,TextureWrapMode as h,RenderbufferFormat as m,TextureSamplingMode as p,PixelType as d}from\"../../../../webgl/enums.js\";import{FramebufferObject as _}from\"../../../../webgl/FramebufferObject.js\";import{loadHeatmapTextureConfiguration as b}from\"../../../../webgl/heatmapTextureUtils.js\";import{Renderbuffer as w}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as F}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as g}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as S}from\"../../../../webgl/TextureDescriptor.js\";const T=e.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\");function v(e){return\"heatmap\"===e.type}function B(e,t){const{referenceScale:r,radius:i}=e;return i*(0!==r?r/t.scale:1)}class E extends s{constructor(){super(...arguments),this.brushEffect=new G}supportsSymbology(e){return e===r.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:s}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...s]:s)}_drawMarkers(e,t,r,i,s,a,n){const{context:f,rendererInfo:c,state:h}=e,{rendererSchema:m}=c;u(m,\"heatmap\");const{isFieldActive:p}=m;r.setUniform1f(\"u_radius\",B(m,h)),n||(r.setUniform1f(\"u_isFieldActive\",p),f.setStencilFunction(o.GEQUAL,t.stencilRef,255)),f.drawElements(i,s,l.UNSIGNED_INT,a)}}const O={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])},x=.25,y=1/(2*x);function P(e){return e<y?1:x}class G extends a{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=t(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=t(this._accumulateFramebuffer),this._resolveGradientTexture=t(this._resolveGradientTexture),this._tileQuad=t(this._tileQuad)}bind(e){const{context:t,rendererInfo:r,passOptions:i,state:s}=e,{rendererSchema:a}=r;!(null!=i&&\"hittest\"===i.type)&&v(a)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),u(a,\"heatmap\"),this._loadResources(e),this._updateResources(t,a,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(f.ONE,f.ONE),t.setClearColor(0,0,0,0),t.clear(c.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:r,rendererInfo:i,passOptions:s}=e,{rendererSchema:a}=i;if(null!=s&&\"hittest\"===s.type||!v(a))return;const{defines:u}=this.loadQualityProfile(t),n=r.materialManager.getProgram(O,u);t.useProgram(n),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:o,minDensity:l,densityRange:c}=a;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),n.setUniform1i(\"u_texture\",8),n.setUniform1i(\"u_gradient\",9),n.setUniform2f(\"u_densityMinAndInvRange\",l,1/c),n.setUniform1f(\"u_densityNormalization\",3/(o*o*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:s,pixelFormat:a,internalFormat:u,requiresSharedStencilBuffer:n}=this.loadQualityProfile(e),{width:o,height:l}=this._prevViewport,f=o*x,c=l*x;let p=new S(f,c);p.pixelFormat=a,p.internalFormat=u,p.dataType=r,p.samplingMode=s,p.wrapMode=h.CLAMP_TO_EDGE,n||(this._accumulateOutputStencilBuffer??=new w(e,new F(m.DEPTH_STENCIL,f,c))),this._accumulateFramebuffer??=new _(e,p,n?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer),p=new S,p.wrapMode=h.CLAMP_TO_EDGE,this._resolveGradientTexture??=new g(e,p),this._tileQuad??=new i(e,[0,0,1,0,0,1,1,1])}_updateResources(e,t,r){const{gradientHash:i,gradient:s}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(s.length/4,1),this._resolveGradientTexture.setData(s),this._prevGradientHash=i);const{requiresSharedStencilBuffer:a}=this.loadQualityProfile(e),u=a?1:P(B(t,r)),{width:n,height:o}=this._prevViewport,l=n*u,f=o*u,{width:h,height:m}=this._accumulateFramebuffer;if(h!==l||m!==f){const e=this._accumulateFramebuffer.depthStencilAttachment;if(a&&null!=e){const{width:t,height:r}=e.descriptor;t===l&&r===f||(T.errorOnce(\"Attempted to resize shared stencil buffer! Detaching instead.\"),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(l,f)}a||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,c.STENCIL_BUFFER_BIT,p.NEAREST)}loadQualityProfile(e){if(null==this._qualityProfile){const t=b(e,T),r=e.type===n.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,defines:t.dataType!==d.FLOAT?[\"heatmapPrecisionHalfFloat\"]:[]}}return this._qualityProfile}}export{E as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{unwrapOrThrow as t}from\"../../core/maybe.js\";import{PixelType as r,TextureSamplingMode as a,PixelFormat as o,SizedPixelFormat as l}from\"./enums.js\";function n(n,i){const{textureFloat:f,colorBufferFloat:s}=n.capabilities,u=f?.textureFloat,m=f?.textureFloatLinear,_=f?.textureHalfFloat,p=f?.textureHalfFloatLinear,d=f?.HALF_FLOAT,x=s?.textureFloat,b=s?.textureHalfFloat,c=s?.floatBlend,h=t(n.driverTest).floatBufferBlend.result;if(!u&&!_)throw new e(\"heatmap:missing-texture-float\",\"HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.\");if(!x&&!b)throw new e(\"heatmap:missing-color-buffer-float\",\"HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.\");if(!(c&&h||b))throw new e(\"heatmap:missing-float-blend\",\"HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float.\"+(h?\"\":\" This device claims support for EXT_float_blend, but does not actually support it.\"));const E=u&&x&&c&&h,F=_&&b,R=m,L=p,T=!!s?.R32F,w=!!s?.R16F;if(E&&(R||!L))return R||i.warnOnce(\"Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced.\"),{dataType:r.FLOAT,samplingMode:R?a.LINEAR:a.NEAREST,pixelFormat:T?o.RED:o.RGBA,internalFormat:T?l.R32F:o.RGBA};if(F)return L||i.warnOnce(\"Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced.\"),{dataType:d,samplingMode:L?a.LINEAR:a.NEAREST,pixelFormat:w?o.RED:o.RGBA,internalFormat:w?l.R16F:o.RGBA};throw new e(\"heatmap:missing-hardware-support\",\"HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.\")}export{n as loadHeatmapTextureConfiguration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as t}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as e}from\"../DefaultVertexAttributeLayouts.js\";import r from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as o}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as n,PrimitiveType as a,Usage as l,TextureWrapMode as u,TextureSamplingMode as m}from\"../../../../webgl/enums.js\";import{createProgram as f}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as _}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as c}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";import d from\"../../../../webgl/capabilities/isWebGL2Context.js\";const h=300,b=32;class p extends r{constructor(){super(...arguments),this._color=t(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r,requestRender:i,allowDelayedRender:s}=t;if(!e.isReady)return;if(this._loadWGLResources(r),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),r.drawArrays(a.LINE_STRIP,0,4);const o=this._getTexture(r,e);o?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",o.descriptor.width,o.descriptor.height),r.drawArrays(a.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=f(t,i),n=f(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),u=o.createVertex(t,l.STATIC_DRAW,a),m=new g(t,i.attributes,e,{geometry:u}),_=new Int8Array([0,0,1,0,0,1,1,1]),c=o.createVertex(t,l.STATIC_DRAW,_),d=new g(t,s.attributes,e,{geometry:c});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=d}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"tileCanvas2d\"),this._canvas.setAttribute(\"width\",`${h}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext(\"2d\");o.font=\"24px sans-serif\",o.textAlign=\"left\",o.textBaseline=\"top\",o.clearRect(0,0,h,b),r>1e5?(o.fillStyle=\"red\",o.fillRect(0,0,h,b),o.fillStyle=\"black\"):(o.clearRect(0,0,h,b),o.fillStyle=\"blue\"),o.fillText(i,0,0);const n=new c;return n.wrapMode=u.CLAMP_TO_EDGE,n.samplingMode=m.NEAREST,n.isImmutable=d(t.gl),e.texture=new _(t,n,s),e.texture}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as i}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as _}from\"../../../../webgl/VertexArrayObject.js\";class c extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:s,allowDelayedRender:i}=e;this._initialized||this._initialize(t),!i||null==s||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):s()}_initialize(e){if(this._initialized)return!0;const t=m(e,s);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=i.createVertex(e,d.STATIC_DRAW,o),l=new _(e,s.attributes,r,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{MIN_MAX_ZOOM_PRECISION_FACTOR as t,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as e,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as i,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as s,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as o,TEXTURE_BINDING_ATTRIBUTE_DATA_4 as a,TEXTURE_BINDING_ATTRIBUTE_DATA_5 as r}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{MaterialKeyBase as u}from\"../materialKey/MaterialKey.js\";import{BlendFactor as m,CompareFunction as l}from\"../../../../webgl/enums.js\";class v extends n{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e){e&&e.includes(\"hittest\")?t.setBlendFunctionSeparate(m.ONE,m.ONE,m.ONE,m.ONE):t.setBlendFunctionSeparate(m.ONE,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}draw(t,e,i){const s=this.getGeometryType();e.commit(t);const o=e.getGeometry(s);null!=o&&(t.timeline.begin(this.name),t.attributeView.bindTextures(t.context),t.context.setStencilFunction(l.EQUAL,e.stencilRef,255),o.forEachCommand((s=>{const o=u.load(s.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(t,e,s,i)})))}_setSharedUniforms(n,u,m){const{displayLevel:l,pixelRatio:v,state:f,passOptions:p}=u;null!=p&&\"hittest\"===p.type&&(n.setUniform2fv(\"u_hittestPos\",p.position),n.setUniform1f(\"u_hittestDist\",p.distance)),n.setUniform1f(\"u_pixelRatio\",v),n.setUniformMatrix3fv(\"u_tileMat3\",m.transforms.tileMat3),n.setUniformMatrix3fv(\"u_viewMat3\",f.viewMat3),n.setUniformMatrix3fv(\"u_dvsMat3\",m.transforms.dvs),n.setUniformMatrix3fv(\"u_displayViewMat3\",f.displayViewMat3),n.setUniform1f(\"u_currentZoom\",Math.round(l*t)),n.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),n.setUniform1i(\"u_attributeData0\",e),n.setUniform1i(\"u_attributeData1\",i),n.setUniform1i(\"u_attributeData2\",s),n.setUniform1i(\"u_attributeData3\",o),n.setUniform1i(\"u_attributeData4\",a),n.setUniform1i(\"u_attributeData5\",r)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);null!=t&&(e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes))}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),u=s.map((t=>({...t}))),m=Math.max(...e.attributes.values()),l={geometry:u};let v=0;for(const e of o){const t=s[e];l.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),l.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",m+ ++v),n.set(t.name+\"2\",m+ ++v)}r={bufferLayouts:l,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}export{v as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t,WGLSymbologyType as e}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{MarkerMaterialKey as r}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as n}from\"../techniques/utils.js\";import{DataType as i,PrimitiveType as s}from\"../../../../webgl/enums.js\";const l={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:i.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:i.SHORT},{location:2,name:\"a_texCoords\",count:2,type:i.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:i.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:i.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:i.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:i.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class m extends a{dispose(){}getGeometryType(){return t.MARKER}supportsSymbology(t){return t!==e.HEATMAP&&t!==e.PIE_CHART}drawGeometry(t,e,a,i){const{context:m,painter:u,rendererInfo:d,state:c,passOptions:p,requestRender:y,allowDelayedRender:_}=t,E=r.load(a.materialKey),f=n(E.data),S=null!=p&&\"hittest\"===p.type,{shader:N,vertexLayout:T,hittestAttributes:g}=f.programSpec??l;let x=s.TRIANGLES,R=o(E.data,T);S&&(R=this._getTriangleDesc(a.materialKey,R,g),x=s.POINTS);const{attributes:h,bufferLayouts:U}=R,A=u.materialManager.getMaterialProgram(t,E,N,h,i);if(_&&null!=y&&!A.compiled)return void y();m.useProgram(A),E.textureBinding&&u.textureManager.bindTextures(m,A,E,!0),this._setSharedUniforms(A,t,e);const O=E.vvRotation?c.displayViewMat3:c.displayMat3;A.setUniformMatrix3fv(\"u_displayMat3\",O),this._setSizeVVUniforms(E,A,d,e),this._setColorAndOpacityVVUniforms(E,A,d),this._setRotationVVUniforms(E,A,d);const G=a.target.getVAO(m,U,h,S);let I=a.indexCount,M=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(I/=3,M/=3),m.bindVAO(G),this._drawMarkers(t,e,A,x,I,M,S),m.bindVAO(null)}_drawMarkers(t,e,o,a,r,n,s){t.context.drawElements(a,r,i.UNSIGNED_INT,n)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{i8888to32 as n}from\"./number.js\";function r(n,r=0,t=!1){const o=n[r+3];return n[r]*=o,n[r+1]*=o,n[r+2]*=o,t||(n[r+3]*=255),n}function t(r){if(!r)return 0;const{r:t,g:o,b:u,a:i}=r;return n(t*i,o*i,u*i,255*i)}function o(r){if(!r)return 0;const[t,o,u,i]=r;return n(t*(i/255),o*(i/255),u*(i/255),i)}function u(n,r,t=0){if(null==r)return n[t]=0,n[t+1]=0,n[t+2]=0,void(n[t+3]=0);const{r:o,g:u,b:i,a:c}=r;n[t]=o*c/255,n[t+1]=u*c/255,n[t+2]=i*c/255,n[t+3]=c}export{r as premultiplyAlpha,t as premultiplyAlphaRGBA,o as premultiplyAlphaRGBAArray,u as writeColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name}createOptions(t,r){return null}}export{t as Effect};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar E,T,I,L,A,_,S;!function(E){E[E.FILL=0]=\"FILL\",E[E.LINE=1]=\"LINE\",E[E.MARKER=2]=\"MARKER\",E[E.TEXT=3]=\"TEXT\",E[E.LABEL=4]=\"LABEL\"}(E||(E={})),function(E){E[E.NONE=0]=\"NONE\",E[E.MAP=1]=\"MAP\",E[E.LABEL=2]=\"LABEL\",E[E.LABEL_ALPHA=4]=\"LABEL_ALPHA\",E[E.HITTEST=8]=\"HITTEST\",E[E.HIGHLIGHT=16]=\"HIGHLIGHT\",E[E.CLIP=32]=\"CLIP\",E[E.DEBUG=64]=\"DEBUG\",E[E.NUM_DRAW_PHASES=9]=\"NUM_DRAW_PHASES\"}(T||(T={})),function(E){E[E.SIZE=0]=\"SIZE\",E[E.COLOR=1]=\"COLOR\",E[E.OPACITY=2]=\"OPACITY\",E[E.ROTATION=3]=\"ROTATION\"}(I||(I={})),function(E){E[E.NONE=0]=\"NONE\",E[E.OPACITY=1]=\"OPACITY\",E[E.COLOR=2]=\"COLOR\",E[E.ROTATION=4]=\"ROTATION\",E[E.SIZE_MINMAX_VALUE=8]=\"SIZE_MINMAX_VALUE\",E[E.SIZE_SCALE_STOPS=16]=\"SIZE_SCALE_STOPS\",E[E.SIZE_FIELD_STOPS=32]=\"SIZE_FIELD_STOPS\",E[E.SIZE_UNIT_VALUE=64]=\"SIZE_UNIT_VALUE\"}(L||(L={})),function(E){E[E.MINMAX_TARGETS_OUTLINE=128]=\"MINMAX_TARGETS_OUTLINE\",E[E.SCALE_TARGETS_OUTLINE=256]=\"SCALE_TARGETS_OUTLINE\",E[E.FIELD_TARGETS_OUTLINE=512]=\"FIELD_TARGETS_OUTLINE\",E[E.UNIT_TARGETS_OUTLINE=1024]=\"UNIT_TARGETS_OUTLINE\"}(A||(A={})),function(E){E[E.SPRITE=0]=\"SPRITE\",E[E.GLYPH=1]=\"GLYPH\"}(_||(_={})),function(E){E[E.DEFAULT=0]=\"DEFAULT\",E[E.SIMPLE=1]=\"SIMPLE\",E[E.DOT_DENSITY=2]=\"DOT_DENSITY\",E[E.OUTLINE_FILL=3]=\"OUTLINE_FILL\",E[E.OUTLINE_FILL_SIMPLE=4]=\"OUTLINE_FILL_SIMPLE\",E[E.HEATMAP=5]=\"HEATMAP\",E[E.PIE_CHART=6]=\"PIE_CHART\"}(S||(S={}));export{_ as MosaicType,I as VVType,T as WGLDrawPhase,E as WGLGeometryType,S as WGLSymbologyType,L as WGLVVFlag,A as WGLVVTarget};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport t from\"../../../../../core/Error.js\";import{isMapAligned as e}from\"../alignmentUtils.js\";import{WGLSymbologyType as s,WGLGeometryType as i,WGLVVFlag as a,WGLVVTarget as r}from\"../enums.js\";function n(t,e,s){const n=a.SIZE_FIELD_STOPS|a.SIZE_MINMAX_VALUE|a.SIZE_SCALE_STOPS|a.SIZE_UNIT_VALUE,o=(e&(r.FIELD_TARGETS_OUTLINE|r.MINMAX_TARGETS_OUTLINE|r.SCALE_TARGETS_OUTLINE|r.UNIT_TARGETS_OUTLINE))>>>4;return t===i.LINE&&s.isOutline||t===i.FILL&&_(s.symbologyType)?n&o:n&~o}const o=0,v=8,l=7,h=8,S=11,u=11,p=12,c=13,y=14,V=15,d=16,g=17,T=18,m=19,z=20,E=21,L=26,M=Object.keys(s).filter((t=>\"number\"==typeof s[t])).reduce(((t,e)=>({...t,[e]:s[e]})),{});function I(t){return t===s.SIMPLE||t===s.OUTLINE_FILL_SIMPLE}function _(t){return t===s.OUTLINE_FILL||t===s.OUTLINE_FILL_SIMPLE}function b(t){return I(t.symbologyType)}function O(t){return _(t.symbologyType)}function f(t,e){switch(t){case i.FILL:return w.from(e);case i.LINE:return C.from(e);case i.MARKER:return N.from(e);case i.TEXT:return P.from(e);case i.LABEL:return Z.from(e);default:throw new Error(`Unable to createMaterialKey for unknown geometryType ${t}`)}}function A(t){switch(U.load(t).geometryType){case i.MARKER:return new N(t);case i.FILL:return new w(t);case i.LINE:return new C(t);case i.TEXT:return new P(t);case i.LABEL:return new Z(t)}}class U{static load(t){const e=this.shared;return e.data=t,e}constructor(t){this._data=0,this._data=t}set data(t){this._data=t??0}get data(){return this._data}get geometryType(){return this.bits(h,S)}set geometryType(t){this.setBits(t,h,S)}get mapAligned(){return!!this.bit(z)}set mapAligned(t){this.setBit(z,t)}get sdf(){return!!this.bit(u)}set sdf(t){this.setBit(u,t??!1)}get pattern(){return!!this.bit(p)}set pattern(t){this.setBit(p,t)}get textureBinding(){return this.bits(o,v)}set textureBinding(t){this.setBits(t,o,v)}get symbologyType(){return this.bits(E,L)}set symbologyType(t){this.setBits(t,E,L)}get geometryTypeString(){switch(this.geometryType){case i.FILL:return\"fill\";case i.MARKER:return\"marker\";case i.LINE:return\"line\";case i.TEXT:return\"text\";case i.LABEL:return\"label\";default:throw new t(`Unable to handle unknown geometryType: ${this.geometryType}`)}}setBit(t,e){const s=1<<t;e?this._data|=s:this._data&=~s}bit(t){return(this._data&1<<t)>>t}setBits(t,e,s){for(let i=e,a=0;i<s;i++,a++)this.setBit(i,0!=(t&1<<a))}bits(t,e){let s=0;for(let i=t,a=0;i<e;i++,a++)s|=this.bit(i)<<a;return s}hasVV(){return!1}setVV(t,e){}getVariation(){return{mapAligned:this.mapAligned,pattern:this.pattern,sdf:this.sdf,symbologyType:{value:s[this.symbologyType],options:M,namespace:\"SYMBOLOGY_TYPE\"}}}getVariationHash(){return this._data&~(l&this.textureBinding)}}U.shared=new U(0);const F=t=>class extends t{get vvSizeMinMaxValue(){return 0!==this.bit(d)}set vvSizeMinMaxValue(t){this.setBit(d,t)}get vvSizeScaleStops(){return 0!==this.bit(g)}set vvSizeScaleStops(t){this.setBit(g,t)}get vvSizeFieldStops(){return 0!==this.bit(T)}set vvSizeFieldStops(t){this.setBit(T,t)}get vvSizeUnitValue(){return 0!==this.bit(m)}set vvSizeUnitValue(t){this.setBit(m,t)}hasSizeVV(){return this.vvSizeMinMaxValue||this.vvSizeScaleStops||this.vvSizeFieldStops||this.vvSizeUnitValue}hasVV(){return super.hasVV()||this.hasSizeVV()}setVV(t,e){super.setVV(t,e);const s=n(this.geometryType,t,e)&t;this.vvSizeMinMaxValue=!!(s&a.SIZE_MINMAX_VALUE),this.vvSizeFieldStops=!!(s&a.SIZE_FIELD_STOPS),this.vvSizeUnitValue=!!(s&a.SIZE_UNIT_VALUE),this.vvSizeScaleStops=!!(s&a.SIZE_SCALE_STOPS)}},x=t=>class extends t{get vvRotation(){return 0!==this.bit(V)}set vvRotation(t){this.setBit(V,t)}hasVV(){return super.hasVV()||this.vvRotation}setVV(t,e){super.setVV(t,e),this.vvRotation=!e.isOutline&&!!(t&a.ROTATION)}},B=t=>class extends t{get vvColor(){return 0!==this.bit(c)}set vvColor(t){this.setBit(c,t)}hasVV(){return super.hasVV()||this.vvColor}setVV(t,e){super.setVV(t,e),this.vvColor=!e.isOutline&&!!(t&a.COLOR)}},R=t=>class extends t{get vvOpacity(){return 0!==this.bit(y)}set vvOpacity(t){this.setBit(y,t)}hasVV(){return super.hasVV()||this.vvOpacity}setVV(t,e){super.setVV(t,e),this.vvOpacity=!e.isOutline&&!!(t&a.OPACITY)}};class w extends(B(R(F(U)))){static load(t){const e=this.shared;return e.data=t,e}static from(t){const{symbologyType:e,vvFlags:a}=t,r=this.load(0);return r.geometryType=i.FILL,r.symbologyType=e,e!==s.DOT_DENSITY&&r.setVV(a,t),r.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}w.shared=new w(0);class N extends(B(R(x(F(U))))){static load(t){const e=this.shared;return e.data=t,e}static from(t){const{symbologyType:e,vvFlags:a}=t,r=this.load(0);return r.geometryType=i.MARKER,r.symbologyType=e,e!==s.HEATMAP&&r.setVV(a,t),r.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvRotation:this.vvRotation,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}N.shared=new N(0);class C extends(B(R(F(U)))){static load(t){const e=this.shared;return e.data=t,e}static from(t){const e=this.load(0);return e.geometryType=i.LINE,e.symbologyType=t.symbologyType,e.setVV(t.vvFlags,t),e.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}C.shared=new C(0);class P extends(B(R(x(F(U))))){static load(t){const e=this.shared;return e.data=t,e}static from(t){const e=this.load(0);return e.geometryType=i.TEXT,e.symbologyType=t.symbologyType,e.setVV(t.vvFlags,t),e.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvRotation:this.vvRotation,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}P.shared=new P(0);class Z extends(F(U)){static load(t){const e=this.shared;return e.data=t,e}static from(t){const s=this.load(0);return s.geometryType=i.LABEL,s.symbologyType=t.symbologyType,s.setVV(t.vvFlags,t),s.mapAligned=e(t.placement),s.data}getVariation(){return{...super.getVariation(),vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}Z.shared=new Z(0);export{w as FillMaterialKey,Z as LabelMaterialKey,C as LineMaterialKey,N as MarkerMaterialKey,U as MaterialKeyBase,P as TextMaterialKey,f as createMaterialKey,O as hasOutlineFillSymbology,b as hasSimpleSymbology,A as hydrateMaterialKey,_ as isOutlineFillSymbology,I as isSimpleSymbology};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"getSurfaceValues.glsl\":\"#include <raster/common/mirror.glsl>\\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\\nvec2 onePixel = 1.0 / srcImageSize;\\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nvalues[0] = va.r;\\nvalues[1] = vb.r;\\nvalues[2] = vc.r;\\nvalues[3] = vd.r;\\nvalues[4] = ve.r;\\nvalues[5] = vf.r;\\nvalues[6] = vg.r;\\nvalues[7] = vh.r;\\nvalues[8] = vi.r;\\nvalues[9] = alpha;\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\n#include <raster/common/getSurfaceValues.glsl>\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nfloat pv[10];\\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\\nalpha *= sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MAVI)\\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI2)\\nfloat green = pv2.b;\\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.s;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 p0 = texture2D(u_image, v_texcoord);\\nvec4 p1 = texture2D(u_image1, v_texcoord);\\nvec4 p2 = texture2D(u_image2, v_texcoord);\\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},curvature:{\"curvature.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform float u_zlFactor;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\\nfloat curvature = 0.0;\\n#ifdef STANDARD\\ncurvature = -u_zlFactor * (d + e);\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n#else\\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\\nfloat g = (-pv[3] + pv[5]) / 2.0;\\nfloat h = (pv[1] - pv[7]) / 2.0;\\nfloat g2 = g * g;\\nfloat h2 = h * h;\\n#ifdef PROFILE\\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\\n#else\\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\\n#endif\\n#endif\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},local:{\"local.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(POLYFILLACOSH)\\nresult = log(a + sqrt(a * a - 1.0));\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(POLYFILLASINH)\\nresult = log(a + sqrt(a * a + 1.0));\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(POLYFILLATANH)\\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(POLYFILLCOSH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp + 1.0 / halfexp;\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(POLYFILLSINH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp - 1.0 / halfexp;\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(POLYFILLTANH)\\nfloat expx = exp(a);\\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\\n#elif defined(BITWISEAND)\\nresult = a & b;\\n#elif defined(BITWISEOR)\\nresult = a | b;\\n#elif defined(BITWISELEFTSHIFT)\\nresult = a << b;\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = a >> b;\\n#elif defined(BITWISENOT)\\nresult = ~a;\\n#elif defined(BITWISEXOR)\\nresult = a ^ b;\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat percentRise = rise2run * 100.0;\\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\\n#else\\nfloat degree = atan(rise2run) * 57.2957795;\\ngl_FragColor = vec4(degree, degree, degree, alpha);\\n#endif\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new e(o);function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{static getStorageSpec(t){return null}static createOrUpdateRendererSchema(t,e){return null!=t&&\"default\"===t.type?t:{type:\"default\"}}static getVariation(t){return{}}static getVariationHash(t){return 0}}t.type=\"default\",t.programSpec=null;export{t as Technique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{writeColor as e}from\"../../color.js\";import{DOT_DENSITY_MAX_FIELDS as t}from\"../../definitions.js\";import{Technique as o}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class a extends o{static getStorageSpec({attributes:e}){return{visualVariables:!1,attributes:e??null}}static _createRendererSchema(){return{type:\"dot-density\",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}static createOrUpdateRendererSchema(o,r){const{attributes:a,dotValue:n,referenceScale:i,dotSize:l,dotBlendingEnabled:d,seed:s,backgroundColor:c}=r,u=null!=o&&\"dot-density\"===o.type?o:this._createRendererSchema();u.dotValue=n,u.dotSize=l,u.dotScale=i,u.dotBlending=d,u.seed=s;const{colors:m,activeDots:g,backgroundColor:p}=u;for(let y=0;y<t;y++){const t=y>=a.length?null:a[y].color;e(m,t,4*y)}for(let e=0;e<8;e++)g[e]=e<r.attributes.length?1:0;return e(p,c),u}static getVariation(e){return{ddDotBlending:e.dotBlending}}static getVariationHash(e){return e.dotBlending?1:0}}a.type=\"dot-density\",a.programSpec={shader:\"materials/fill\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:3,type:r.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:r.UNSIGNED_BYTE},{location:3,name:\"a_inverseArea\",count:1,type:r.FLOAT}]}};export{a as DotDensityTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{pt2px as e}from\"../../../../../../core/screenUtils.js\";import{generateGradient as t}from\"../../../../../../renderers/support/heatmapUtils.js\";import{Technique as a}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({field:e,valueExpression:t}){return{visualVariables:!1,attributes:e||t?[{field:e,valueExpression:t}]:null}}static _createRendererSchema(){return{type:\"heatmap\",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:\"invalid\"}}static createOrUpdateRendererSchema(a,r){const{radius:i,minDensity:n,maxDensity:s,referenceScale:o,field:c,valueExpression:l,colorStops:m}=r,p=s-n,d=c||l?1:0,u=m.map((({color:e,ratio:t})=>`${t}:${e.toString()}`)).join();let h,y=!0;return null!=a&&\"heatmap\"===a.type?(h=a,y=u!==a.gradientHash):h=this._createRendererSchema(),h.radius=e(i),h.minDensity=n,h.densityRange=p,h.referenceScale=o,h.isFieldActive=d,y&&(h.gradient=t(m),h.gradientHash=u),h}}i.type=\"heatmap\",i.programSpec={shader:\"materials/icon/heatmapAccumulate\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:4,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE}]}};export{i as HeatmapTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../../Color.js\";import{pt2px as t}from\"../../../../../../core/screenUtils.js\";import{writeColor as o}from\"../../color.js\";import{CHART_MAX_FIELDS as r}from\"../../definitions.js\";import{Technique as a}from\"../Technique.js\";import{DataType as n}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({attributes:e}){return{visualVariables:!0,attributes:e??null}}static _createRendererSchema(){return{type:\"pie-chart\",colors:new Float32Array(4*r),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}static createOrUpdateRendererSchema(a,n){const{attributes:i,defaultColor:l,holePercentage:s,othersCategory:c,outline:u}=n,m=null!=a&&\"pie-chart\"===a.type?a:this._createRendererSchema();for(let t=0;t<r;t++){const r=t>=i.length?new e([0,0,0,0]):i[t].color;o(m.colors,r,4*t)}return o(m.defaultColor,l),o(m.othersColor,c?.color),o(m.outlineColor,u?.color),m.outlineWidth=t(u?.width||0),m.holePercentage=s,m.sectorThreshold=c?.threshold||0,m.numberOfFields=i.length,m}static getVariation(e){return{numberOfFields:e.numberOfFields}}static getVariationHash(e){return e.numberOfFields}}i.type=\"pie-chart\",i.programSpec={shader:\"materials/pie\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:n.SHORT},{location:2,name:\"a_texCoords\",count:2,type:n.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:n.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:n.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:n.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:n.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};export{i as PieChartTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import{WGLGeometryType as r,WGLSymbologyType as t}from\"../enums.js\";import{MaterialKeyBase as o}from\"../materialKey/MaterialKey.js\";import{Technique as i}from\"./Technique.js\";import{DotDensityTechnique as n}from\"./dotDensity/TechniqueDotDensity.js\";import{HeatmapTechnique as a}from\"./heatmap/TechniqueHeatmap.js\";import{PieChartTechnique as m}from\"./pieChart/TechniquePieChart.js\";function s(r,t){if(r.type!==t)throw new e(\"material-view-model:unexpected-renderer-schema\",`expected to find renderer schema of type \"${t}\" but found type \"${r.type}\"`)}function c(e){switch(e?.type){case\"dot-density\":return n;case\"heatmap\":return a;case\"pie-chart\":return m;default:return i}}function p(e){const{geometryType:s,symbologyType:c}=o.load(e);switch(s){case r.FILL:if(c===t.DOT_DENSITY)return n;break;case r.MARKER:switch(c){case t.HEATMAP:return a;case t.PIE_CHART:return m}}return i}export{s as assertRendererSchema,p as getTechniqueFromMaterialKey,c as getTechniqueFromRenderer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n(n){return window.WebGL2RenderingContext&&n instanceof window.WebGL2RenderingContext}export{n as default};\n"],"names":["n","Float32Array","r","t","e","a","o","u","s","c","i","f","l","_","y","w","N","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","p","constructor","super","arguments","this","_color","dispose","_program","prepareState","context","setStencilTestEnabled","setBlendingEnabled","setFaceCullingEnabled","setColorMask","setStencilOp","setStencilWriteMask","setStencilFunction","draw","state","requestRender","allowDelayedRender","geometry","location","name","count","type","d","getVAO","attributes","bufferLayouts","indexBuffer","m","compiled","useProgram","setUniform2fv","setUniform4fv","setUniformMatrix3fv","displayMat3","bindVAO","drawElements","size","_desc","vsPath","fsPath","Map","setBlendFunctionSeparate","painter","isReady","computedOpacity","dvsMat3","isWrapAround","perspectiveTransform","texture","timeline","begin","materialManager","getProgram","tex","v","bindTexture","setUniform1i","setUniform1f","drawArrays","end","getGeometryType","supportsSymbology","drawGeometry","rendererInfo","requiredLevel","passOptions","E","g","materialKey","data","S","T","shader","I","vertexLayout","U","hittestAttributes","x","programSpec","normalized","symbologyType","splice","h","L","_getTriangleDesc","O","G","D","getMaterialProgram","_setSharedUniforms","row","b","col","R","key","M","setUniform2f","Math","floor","textureBinding","textureManager","bindTextures","level","j","pixelRatio","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","B","target","A","indexCount","F","indexFrom","Uint32Array","BYTES_PER_ELEMENT","_drawFills","_drawMarkers","rendererSchema","colors","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","_patternMatrix","_programOptions","id","pattern","_vao","drawMany","styleLayerUID","_loadWGLResources","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","window","devicePixelRatio","spriteMosaic","P","drawPhase","k","getMosaicItemPosition","tl","br","page","getPageSize","bind","setUniform4f","z","rangeX","transforms","dvs","max","round","width","Int8Array","getAttributeLocations","getLayoutInfo","some","layerData","get","circleIndexCount","circleMaterial","displayViewMat3","has","setDataUniforms","prepareForRendering","vao","stencilRef","circleIndexStart","triangleCount","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","V","fillVAO","patternMap","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","isIconSDF","rotation","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","glyphMosaic","textMaterial","glyphPerPageElementsMap","_glyphTextureSize","height","W","H","C","textVAO","forEach","_renderGlyphRange","mapAligned","abs","_setRotationVVUniforms","marker","line","fill","text","label","clip","stencil","bitmap","overlay","tileInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","dotDensity","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","_dotVAO","_dotDesc","_disposeTextures","_dotFBO","_drawDotLocations","_drawDotDensity","_createDotDensityMesh","divisor","offset","stride","dotSize","getViewport","dotScale","activeDots","backgroundColor","dotValue","setViewport","getBoundFramebufferObject","_createFBO","bindFramebuffer","setClearColor","clear","gl","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","scale","setUniformMatrix4fv","_bindDotDensityTextures","colorTexture","samplingMode","wrapMode","length","_createDotDensityTextures","seed","setUniform1iv","Int16Array","_seed","_allocDotDensityTexture","getFloat","dataType","heatmap","pieChart","PI","LN2","log","strideInBytes","Uint8Array","$","error","vertexCount","vertexFrom","Y","push","buffers","q","K","Uint16Array","J","set","Q","Z","ee","map","X","strides","te","ne","ye","path","re","url","imageData","se","contentType","ae","startsWith","ie","includes","ce","oe","ue","toLowerCase","le","cim","dashTemplate","style","me","fe","Ie","de","maxVVSize","pe","charCodeAt","trim","test","markerPlacement","_rctx","_vertexBuffer","_count","unbind","coords","lengths","slice","_cache","vertices","indices","primitiveType","isMapSpace","fromScreenExtent","xmin","ymin","xmax","ymax","fromPolygon","fromMapExtent","fromRect","toScreen","destroy","vertexBuffers","elementType","getIndexBuffer","getVertexBuffers","keys","reduce","parseFloat","_clip","stage","_handle","version","_invalidate","ready","_destroyGL","mesh","remove","_lastWidth","_lastHeight","_createMesh","_createTransforms","_createScreenRect","left","right","top","bottom","clips","_clips","children","_updateClippingInfo","beforeRender","updateTransforms","doRender","createRenderParams","globalOpacity","profiler","recordContainerStart","beforeRenderLayer","_clippingInfos","renderChildren","compositeLayer","recordContainerEnd","_renderPasses","prepareRenderPasses","render","requireFBO","requiresDedicatedFBO","registerRenderPass","brushes","setTransform","onAttach","onDetach","items","nearest","defines","mips","bilinear","bicubic","trilinear","resolution","isSourceScaled","_quad","renderingOptions","source","blendFunction","coordScale","setSamplingProfile","brushEffect","visible","referenceScale","radius","loadQualityProfile","isFieldActive","createOptions","_prevFBO","_accumulateFramebuffer","detachDepthStencilBuffer","_accumulateOutputStencilBuffer","_resolveGradientTexture","_tileQuad","_prevViewport","_loadResources","_updateResources","setBlendFunction","minDensity","densityRange","pixelFormat","internalFormat","requiresSharedStencilBuffer","getSharedStencilBuffer","gradientHash","gradient","_prevGradientHash","resize","setData","depthStencilAttachment","descriptor","errorOnce","blitFramebuffer","_qualityProfile","textureFloat","colorBufferFloat","capabilities","textureFloatLinear","textureHalfFloat","textureHalfFloatLinear","HALF_FLOAT","floatBlend","driverTest","floatBufferBlend","result","R32F","R16F","warnOnce","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","rangeY","_getTexture","triangleCountReportedInDebug","document","createElement","setAttribute","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","isImmutable","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","_computeDesc","commit","getGeometry","attributeView","forEachCommand","position","distance","tileMat3","viewMat3","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","setUniform1fv","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","vvRotation","vvMaterialParameters","vvRotationType","findIndex","join","FILL","LINE","MARKER","TEXT","LABEL","NONE","MAP","LABEL_ALPHA","HITTEST","HIGHLIGHT","CLIP","DEBUG","NUM_DRAW_PHASES","SIZE","COLOR","OPACITY","ROTATION","SIZE_MINMAX_VALUE","SIZE_SCALE_STOPS","SIZE_FIELD_STOPS","SIZE_UNIT_VALUE","MINMAX_TARGETS_OUTLINE","SCALE_TARGETS_OUTLINE","FIELD_TARGETS_OUTLINE","UNIT_TARGETS_OUTLINE","SPRITE","GLYPH","DEFAULT","SIMPLE","DOT_DENSITY","OUTLINE_FILL","OUTLINE_FILL_SIMPLE","HEATMAP","PIE_CHART","filter","from","Error","load","geometryType","shared","_data","bits","setBits","bit","setBit","geometryTypeString","hasVV","setVV","getVariation","options","namespace","getVariationHash","hasSizeVV","isOutline","vvFlags","placement","shaders","vertexShader","fragmentShader","background","bitBlit","blend","debug","dot","filtering","fx","integrate","heatmapResolve","highlight","magnifier","materials","hittest","icon","heatmapAccumulate","pie","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","compositeband","convolution","curvature","extractband","local","mask","ndvi","remap","slope","stretch","vs","scalar","util","split","resolveIncludes","visualVariables","dotBlending","dotBlendingEnabled","_createRendererSchema","color","ddDotBlending","field","valueExpression","kernel","maxDensity","colorStops","ratio","toString","numberOfFields","othersCategory","outline","threshold","WebGL2RenderingContext"],"sourceRoot":""}