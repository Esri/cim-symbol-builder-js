{"version":3,"file":"static/js/798.6cb1160b.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/functional/FloatingArrow.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/array.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/focus-trap/dist/focus-trap.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/focusTrapComponent.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/popover/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/popover/PopoverManager.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FloatingLayout } from \"../../utils/floating-ui\";\n\ninterface FloatingArrowProps extends JSXAttributes<SVGSVGElement> {\n  floatingLayout: FloatingLayout;\n}\n\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1,\n};\n\n/**\n * Renders a SVG element to be used as a floating-ui arrow.\n *\n * This functional component should be rendered inside a `FloatingUIComponent` when it needs an arrow element.\n *\n * @param floatingLayout.floatingLayout\n * @param floatingLayout – The effective floating layout to render the arrow vertically or horizontally. Possible values: `vertical` or `horizontal`.\n *\n * See [floating-ui](https://github.com/Esri/calcite-design-system/blob/dev/src/utils/floating-ui.ts)\n * @param floatingLayout.key\n * @param floatingLayout.ref\n */\nexport const FloatingArrow: FunctionalComponent<FloatingArrowProps> = ({\n  floatingLayout,\n  key,\n  ref,\n}): VNode => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n\n  const dValue =\n    \"M0,0\" +\n    ` H${width}` +\n    ` L${width - svgX},${height}` +\n    ` Q${svgX},${height} ${svgX},${height}` +\n    \" Z\";\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      class={CSS.arrow}\n      height={width}\n      key={key}\n      ref={ref}\n      viewBox={`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`}\n      width={width + (isVertical ? strokeWidth : 0)}\n    >\n      {strokeWidth > 0 && (\n        <path\n          class={CSS.arrowStroke}\n          d={dValue}\n          fill=\"none\"\n          // Account for the stroke on the fill path rendered below.\n          stroke-width={strokeWidth + 1}\n        />\n      )}\n      {/* In Firefox, for left/right placements there's a ~0.5px gap where the\n  border can show through. Adding a stroke on the fill removes it. */}\n      <path d={dValue} stroke=\"none\" />\n    </svg>\n  );\n};\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n","export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const activeAttr = \"data-active\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { FlipPlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Specifies the component's fallback slotted content `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteActionElement => el?.matches(\"calcite-action\"));\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          ref={this.setDefaultMenuButtonEl}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"));\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce<HTMLCalciteActionElement[]>((previousValue, currentValue) => {\n        if (currentValue?.matches(\"calcite-action\")) {\n          previousValue.push(currentValue as HTMLCalciteActionElement);\n          return previousValue;\n        }\n\n        if (currentValue?.matches(\"calcite-action-group\")) {\n          return previousValue.concat(Array.from(currentValue.querySelectorAll(\"calcite-action\")));\n        }\n\n        return previousValue;\n      }, []);\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-menu-items-space: Specifies the space between actions in the menu.\n *\n */\n\n:host {\n  @apply text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group:not(:last-of-type)) {\n  border-block-end-width: var(--calcite-border-width-sm);\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex\n  flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n  gap: var(--calcite-action-menu-items-space, 0);\n}\n\n@include base-component();\n","/*!\n* focus-trap 7.6.0\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n    return true; // next\n  });\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { createFocusTrap, FocusTrap as _FocusTrap, Options as FocusTrapOptions } from \"focus-trap\";\nimport { FocusableElement, focusElement, tabbableOptions } from \"./dom\";\nimport { focusTrapStack } from \"./config\";\n\n/**\n * Defines interface for components with a focus trap. Focusable content is required for components implementing focus trapping with this interface.\n */\nexport interface FocusTrapComponent {\n  /**\n   * The focus trap element.\n   */\n  el: HTMLElement;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  focusTrapDisabled?: boolean;\n\n  /**\n   * The focus trap instance.\n   */\n  focusTrap: FocusTrap;\n\n  /**\n   * Method to update the element(s) that are used within the FocusTrap component.\n   *\n   * This should be implemented for components that allow user content and/or have conditionally-rendered focusable elements within the trap.\n   */\n  updateFocusTrapElements?: () => Promise<void>;\n}\n\nexport type FocusTrap = _FocusTrap;\n\ninterface ConnectFocusTrapOptions {\n  /**\n   * This option allows the focus trap to be created on a different element that's not the host (e.g., a supporting popup component).\n   */\n  focusTrapEl?: HTMLElement;\n\n  /**\n   * This allows specifying overrides to ConnectFocusTrap options.\n   */\n  focusTrapOptions?: Omit<FocusTrapOptions, \"document\" | \"tabbableOptions\" | \"trapStack\">;\n}\n\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param options\n */\nexport function connectFocusTrap(component: FocusTrapComponent, options?: ConnectFocusTrapOptions): void {\n  const { el } = component;\n  const focusTrapNode = options?.focusTrapEl || el;\n\n  if (!focusTrapNode) {\n    return;\n  }\n\n  const focusTrapOptions: FocusTrapOptions = {\n    clickOutsideDeactivates: true,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapNode,\n    setReturnFocus: (el) => {\n      focusElement(el as FocusableElement);\n      return false;\n    },\n    ...options?.focusTrapOptions,\n\n    // the following options are not overridable\n    document: el.ownerDocument,\n    tabbableOptions,\n    trapStack: focusTrapStack,\n  };\n\n  component.focusTrap = createFocusTrap(focusTrapNode, focusTrapOptions);\n}\n\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap activate options.\n */\nexport function activateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"activate\"]>[0],\n): void {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate(options);\n  }\n}\n\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @param [options] The FocusTrap deactivate options.\n */\nexport function deactivateFocusTrap(\n  component: FocusTrapComponent,\n  options?: Parameters<_FocusTrap[\"deactivate\"]>[0],\n): void {\n  component.focusTrap?.deactivate(options);\n}\n\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\nexport function updateFocusTrapElements(component: FocusTrapComponent): void {\n  component.focusTrap?.updateContainerElements(component.el);\n}\n","export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"headerContainer\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Specifies the component's fallback `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGSVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n\n    // we set up the ref element in the next frame to ensure PopoverManager\n    // event handlers are invoked after connect (mainly for `components` output target)\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGSVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n          scale={this.scale}\n          text={messages.close}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow floatingLayout={floatingLayout} key=\"floating-arrow\" ref={this.storeArrowEl} />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.headerContainer]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-background-color: Specifies the component's background color.\n * @prop --calcite-popover-border-color: Specifies the component's border color.\n * @prop --calcite-popover-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-popover-text-color: Specifies the component's text color.\n * @prop --calcite-popover-z-index: Specifies the component's z-index value.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floating-ui-host();\n@include floating-ui-arrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply border\n    border-solid;\n\n  background-color: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n  border-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n  border-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n}\n\n.calcite-floating-ui-arrow {\n  fill: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n}\n\n.calcite-floating-ui-arrow__stroke {\n  stroke: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.header {\n  @apply flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n\n  border-block-end-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.heading {\n  @apply word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n}\n\n.headerContainer {\n  @apply relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  border-end-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  --calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n  --calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n"],"names":["CSS","DEFAULTS","width","height","strokeWidth","FloatingArrow","floatingLayout","key","ref","svgX","isVertical","dValue","h","class","viewBox","d","fill","stroke","Heading","props","children","HeadingTag","level","getRoundRobinIndex","index","total","SLOTS","tooltip","trigger","ICONS","SUPPORTED_MENU_NAV_KEYS","ActionMenu","proxyCustomElement","HTMLElement","actionElements","guid","menuId","this","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","activeMenuItemIndex","tabIndex","toggleAttribute","updateActions","forEach","handleDefaultSlotChange","reduce","previousValue","currentValue","push","concat","Array","from","querySelectorAll","disabled","hidden","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","Math","max","toggleOpenEnd","value","handlePopoverOpen","handlePopoverClose","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","expandedHandler","openHandler","calciteActionMenuOpen","emit","activeMenuItemIndexHandler","componentFocusable","focusElement","renderMenuButton","appearance","scale","name","onSlotchange","icon","textEnabled","renderMenuItems","placement","overlayPositioning","flipPlacements","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","onCalcitePopoverOpen","pointerDisabled","onClick","role","render","Fragment","supportedKeys","find","k","_defineProperty","e","r","t","i","Symbol","toPrimitive","call","TypeError","String","Number","_toPrimitive","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","activeFocusTraps","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","unpause","isTabEvent","keyCode","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","params","_key","getActualTarget","shadowRoot","composedPath","internalTrapStack","createFocusTrap","elements","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","paused","delayInitialFocusTimer","undefined","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","element","_ref","container","tabbableNodes","contains","includes","node","getNodeForOption","optionValue","_len2","_key2","Error","querySelector","getInitialFocusNode","isFocusable","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","isTabbable","lastDomTabbableNode","slice","reverse","posTabIndexesFound","getTabIndex","nextTabbableNode","forward","nodeIdx","group","g","_getActiveElement","_tryFocus","focus","preventScroll","tagName","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref2","_ref2$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref3","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref4","_destinationGroupIndex","_destinationGroup","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","some","n","checkTabKey","checkKeyNav","checkEscapeKey","checkClick","addListeners","capture","passive","removeListeners","mutationObserver","window","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","options","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","connectFocusTrap","component","focusTrapNode","focusTrapEl","focusTrapOptions","fallbackFocus","setReturnFocus","ownerDocument","focusTrapStack","focusTrap","activateFocusTrap","deactivateFocusTrap","updateFocusTrapElements","ARIA_CONTROLS","ARIA_EXPANDED","manager","constructor","registeredElements","Map","registeredElementCount","queryPopover","registeredElement","pathEl","has","get","togglePopovers","togglePopover","triggerDisabled","values","popover","keyDownHandler","defaultPrevented","closeAllPopovers","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","set","unregisterElement","delete","Popover","createObserver","openTransitionProp","hasLoaded","setTransitionEl","transitionEl","setFilteredPlacements","filteredFlipPlacements","filterValidFlipPlacements","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","console","addReferences","getId","setExpandedAttr","removeAttribute","hide","storeArrowEl","arrowEl","reposition","defaultOffsetDistance","handleFocusTrapDisabled","flipPlacementsHandler","onMessagesChange","offsetDistanceOffsetHandler","offsetSkiddingHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","effectiveLocaleChange","updateMessages","effectiveLocale","connectLocalized","connectMessages","requestAnimationFrame","setUpMessages","disconnectLocalized","disconnectMessages","disconnectFloatingUI","delayed","flipDisabled","offsetSkidding","floatingEl","type","forceUpdate","focusFirstTabbable","queryElementRoots","onBeforeOpen","calcitePopoverBeforeOpen","onOpen","calcitePopoverOpen","onBeforeClose","calcitePopoverBeforeClose","onClose","calcitePopoverClose","renderCloseButton","messages","closable","closeButtonEl","close","getIconScale","renderHeader","heading","headingLevel","headingNode","displayed","arrowNode","Host","FloatingCSS","animation","animationActive"],"sourceRoot":""}