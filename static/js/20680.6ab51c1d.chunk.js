"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[20680],{6741:(e,r,t)=>{t.d(r,{O:()=>g});var i=t(27366),s=t(76200),a=t(77427),l=t(66978),o=t(35995),n=t(49901),y=t(49861),p=(t(25243),t(63780),t(93169),t(38511)),u=t(69912),d=t(25265),c=t(53866),h=t(78952),b=t(25899),f=t(45948),m=t(73117);const g=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,s="tile"!==i&&!!r.supportsDynamicLayers,a=t.includes("query"),l=t.includes("map"),o=!!r.exportTilesAllowed,y=t.includes("tilemap"),p=t.includes("data"),u="tile"!==i&&(!r.tileInfo||s),d="tile"!==i&&(!r.tileInfo||s),c="tile"!==i,h=r.cimVersion&&n.G.parse(r.cimVersion),b=h?.since(1,4)??!1,f=h?.since(2,0)??!1;return{operations:{supportsExportMap:l,supportsExportTiles:o,supportsIdentify:a,supportsQuery:p,supportsTileMap:y},exportMap:l?{supportsArcadeExpressionForLabeling:b,supportsSublayersChanges:c,supportsDynamicLayers:s,supportsSublayerVisibility:u,supportsSublayerDefinitionExpression:d,supportsCIMSymbols:f}:null,exportTiles:o?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchRelatedService(e){const r=this.portalItem;if(!r||!(0,m.Fj)(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const t=await this._relatedFeatureServicePromise;return(0,l.k_)(e),t?{itemId:t.id,url:t.url}:null}async fetchSublayerInfo(e,r){const{source:t}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===t?.type&&(0,m.Fj)(this.portalItem)&&e.originIdOf("url")<d.s3.SERVICE){const i=await this.fetchRelatedService(r);i&&(e.url=(0,o.v_)(i.url,t.mapLayerId.toString()),e.layerItemId=i.itemId)}const{url:i}=e;let a;if("data-layer"===t.type)a=(await(0,s.Z)(i,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(i&&e.originIdOf("url")>d.s3.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(i),r=(0,b.Qc)(i)?.sublayer??t.mapLayerId;a=e.get(r)}catch{}else{let i=e.id;"map-layer"===t?.type&&(i=t.mapLayerId);try{a=(await this.fetchAllLayersAndTables(r)).get(i)}catch{}}return a}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,r){await this.load(r),this._allLayersAndTablesMap||=new Map;const t=(0,b.Qc)(e),i=(0,a.s1)(this._allLayersAndTablesMap,t?.url.path,(()=>(0,s.Z)((0,o.v_)(t?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const r=new Map;for(const t of e.data.layers)r.set(t.id,t);return{result:r}}),(e=>({error:e}))))),n=await i;if((0,l.k_)(r),"result"in n)return n.result;throw n.error}};return(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"capabilities",void 0),(0,i._)([(0,p.r)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),(0,i._)([(0,y.Cb)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,i._)([(0,y.Cb)({type:c.Z})],r.prototype,"fullExtent",void 0),(0,i._)([(0,y.Cb)(f.id)],r.prototype,"id",void 0),(0,i._)([(0,y.Cb)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),(0,i._)([(0,y.Cb)(f.C_)],r.prototype,"popupEnabled",void 0),(0,i._)([(0,y.Cb)({type:h.Z})],r.prototype,"spatialReference",void 0),(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"version",void 0),(0,i._)([(0,p.r)("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=(0,i._)([(0,u.j)("esri.layers.mixins.ArcGISMapService")],r),r}},18870:(e,r,t)=>{t.d(r,{x:()=>g});var i=t(27366),s=t(40281),a=t(77178),l=t(10064),o=t(32718),n=t(94172),y=t(49861),p=(t(25243),t(63780),t(93169),t(23879)),u=t(69912),d=t(25265),c=t(77990),h=t(58132);const b=o.Z.getLogger("esri.layers.TileLayer");const f=s.Z.ofType(c.Z);function m(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,r)}))}const g=e=>{let r=class extends e{constructor(){super(...arguments),this.allSublayers=new a.Z({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[d.s3.SERVICE]:{},[d.s3.PORTAL_ITEM]:{},[d.s3.WEB_SCENE]:{},[d.s3.WEB_MAP]:{}},this.addHandles((0,n.YP)((()=>this.sublayers),((e,r)=>this._handleSublayersChange(e,r)),n.Z_))}destroy(){this.allSublayers.destroy()}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,i=(0,d.M9)(r.origin);if(i<d.s3.SERVICE)return;if(t[i]={context:r,visibleLayers:e.visibleLayers||t[i].visibleLayers,layers:e.layers||t[i].layers},i>d.s3.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:a}=this.createSublayersForOrigin("web-document"),l=(0,p.vw)(this);l.setDefaultOrigin(a),this._set("sublayers",new f(s)),l.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=(0,d.M9)("web-document"===e?"web-map":e);let t=d.s3.SERVICE,i=this.sublayersSourceJSON[d.s3.SERVICE].layers,s=this.sublayersSourceJSON[d.s3.SERVICE].context,a=null;const l=[d.s3.PORTAL_ITEM,d.s3.WEB_SCENE,d.s3.WEB_MAP].filter((e=>e<=r));for(const d of l){const e=this.sublayersSourceJSON[d];(0,h.ac)(e.layers)&&(t=d,i=e.layers,s=e.context,e.visibleLayers&&(a={visibleLayers:e.visibleLayers,context:e.context}))}const o=[d.s3.PORTAL_ITEM,d.s3.WEB_SCENE,d.s3.WEB_MAP].filter((e=>e>t&&e<=r));let n=null;for(const d of o){const{layers:e,visibleLayers:r,context:t}=this.sublayersSourceJSON[d];e&&(n={layers:e,context:t}),r&&(a={visibleLayers:r,context:t})}const y=function(e,r){const t=[],i={};return e?(e.forEach((e=>{const s=new c.Z;if(s.read(e,r),i[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=i[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(s)}else t.unshift(s)})),t):t}(i,s),p=new Map,u=new Set;if(n)for(const d of n.layers)p.set(d.id,d);if(a?.visibleLayers)for(const d of a.visibleLayers)u.add(d);return m(y,(e=>{n&&e.read(p.get(e.id),n.context),a&&e.read({defaultVisibility:u.has(e.id)},a.context)})),{origin:(0,d.x3)(t),sublayers:new f({items:y})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(e=>{let{item:r}=e;r.parent=this,r.layer=this})),e.on("after-remove",(e=>{let{item:r}=e;r.parent=null,r.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{b.error(new l.Z("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"allSublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0,type:s.Z.ofType(c.Z)})],r.prototype,"serviceSublayers",void 0),(0,i._)([(0,y.Cb)({value:null,type:f,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=(0,i._)([(0,u.j)("esri.layers.mixins.SublayersOwner")],r),r}},77990:(e,r,t)=>{t.d(r,{Z:()=>z});var i,s=t(27366),a=(t(59486),t(44055)),l=(t(94931),t(78451),t(98689),t(57823),t(32066),t(49018),t(34999),t(28189),t(9014),t(40464)),o=t(76200),n=t(51508),y=t(40281),p=t(10064),u=t(93169),d=t(79056),c=t(84652),h=t(54472),b=t(32718),f=t(97642),m=t(76672),g=t(35995),S=t(49861),I=t(89125),v=t(38511),w=t(69912),_=t(31201),E=t(25243),L=t(25265),C=t(23879),x=t(89623),O=t(87165),T=t(83040),D=t(52410),F=t(77748),P=t(85116),A=t(71065),V=t(49630),M=t(64020),j=t(23505),Z=t(99837),N=t(86638),R=t(81085),k=t(53866),q=t(27823);function U(e){return null!=e&&"esriSMS"===e.type}function B(e,r,t){const i=this.originIdOf(r)>=(0,L.M9)(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&"map-image"===t.layer?.type&&(t.writeSublayerStructure||i)}}function J(e,r,t){return{enabled:!!t&&"tile"===t.layer?.type&&(t.origin&&this.originIdOf(r)>=(0,L.M9)(t.origin)||this._isOverridden(r))}}function Q(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function $(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=(0,L.M9)(t.origin))}}let G=0;const W=new Set;W.add("layer"),W.add("parent"),W.add("loaded"),W.add("loadStatus"),W.add("loadError"),W.add("loadWarnings");let H=i=class extends((0,f.R)((0,d.IG)(h.Z))){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,url:t}=this;if(!r&&!t)throw new p.Z("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=r?await r.fetchSublayerInfo(this,e):(await(0,o.Z)(t,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:s},data:{supportsAttachment:a}}=(0,V.h)(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:a},query:{supportsFormatPBF:s}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readMaxScaleRange(e,r){return{minScale:(r=r.layerDefinition||r).minScale??0,maxScale:r.maxScale??0}}get fieldsIndex(){return new D.Z(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeGlobalID"===t.type)return t.name}get id(){return this._get("id")??G++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeOID"===t.type)return t.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const t=r.layerDefinition;return 1-.01*((null!=t?.transparency?t.transparency:t?.drawingInfo?.transparency)??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=(0,E.vU)(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,s=(0,u.Z)("featurelayer-pbf")&&t?.query.supportsFormatPBF,a=t?.operations?.supportsQueryAttachments??!1;return new x.Z({url:this.url,pbfSupported:s,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:a})}set renderer(e){if(e)for(const r of e.getSymbols())if((0,n.dU)(r)){b.Z.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new j.R({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return(0,E.se)(y.Z.ofType(i),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTitle(e,r){return r.layerDefinition?.name??r.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===r?.type)return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${(0,g.B7)(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=(0,C.vw)(this),r=new i;return(0,C.vw)(r).store=e.clone(W),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return(0,R.eZ)(this,e)}createQuery(){return new N.Z({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=(await Promise.resolve().then(t.bind(t,64326))).default,{layer:r,url:i}=this;let s;if(i&&this.originIdOf("url")>L.s3.SERVICE)s=new e({url:i});else{if(!r?.parsedUrl)throw new p.Z("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const t=r.parsedUrl;s=new e({url:t.path}),t&&this.source&&("map-layer"===this.source.type?s.layerId=this.source.mapLayerId:s.dynamicDataSource=this.source)}}return null!=r?.refreshInterval&&(s.refreshInterval=r.refreshInterval),this.definitionExpression&&(s.definitionExpression=this.definitionExpression),this.floorInfo&&(s.floorInfo=(0,c.d9)(this.floorInfo)),this.originIdOf("labelingInfo")>L.s3.SERVICE&&(s.labelingInfo=(0,c.d9)(this.labelingInfo)),this.originIdOf("labelsVisible")>L.s3.DEFAULTS&&(s.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>L.s3.DEFAULTS&&(s.legendEnabled=this.legendEnabled),this.originIdOf("visible")>L.s3.DEFAULTS&&(s.visible=this.visible),this.originIdOf("minScale")>L.s3.DEFAULTS&&(s.minScale=this.minScale),this.originIdOf("maxScale")>L.s3.DEFAULTS&&(s.maxScale=this.maxScale),this.originIdOf("opacity")>L.s3.DEFAULTS&&(s.opacity=this.opacity),this.originIdOf("popupTemplate")>L.s3.DEFAULTS&&(s.popupTemplate=(0,c.d9)(this.popupTemplate)),this.originIdOf("renderer")>L.s3.SERVICE&&(s.renderer=(0,c.d9)(this.renderer)),"data-layer"===this.source?.type&&(s.dynamicDataSource=this.source.clone()),this.originIdOf("title")>L.s3.DEFAULTS&&(s.title=this.title),"map-image"===r?.type&&r.originIdOf("customParameters")>L.s3.DEFAULTS&&(s.customParameters=r.customParameters),"tile"===r?.type&&r.originIdOf("customParameters")>L.s3.DEFAULTS&&(s.customParameters=r.customParameters),s}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let s=null;return t?.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(s=e),!!s)})),s}getFieldDomain(e,r){const t=r?.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryAttachments(e,r){await this.load(),e=Z.Z.from(e);const t=this.capabilities;if(!t?.data?.supportsAttachment)throw new p.Z("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:a,num:l,size:o,start:n,where:y}=e;if(!t?.operations?.supportsQueryAttachments&&(i?.length>0||a?.length>0||o?.length>0||l||n||y))throw new p.Z("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s?.length||a?.length||y))throw new p.Z("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.createQuery(),r=arguments.length>1?arguments[1]:void 0;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p.Z("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new p.Z("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(t?.features)for(const i of t.features)i.sourceLayer=this;return t}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=(0,m._)(e,this.definitionExpression);null!=t&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{}),s=Object.keys(i).some((e=>i[e]>L.s3.SERVICE));if(s){const e=r.drawingInfo={};if(i.renderer>L.s3.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>L.s3.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>L.s3.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some((e=>!e.labelPlacement))&&b.Z.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let r=this.labelingInfo;null!=this.geometryType&&(r=(0,P.a)(this.labelingInfo,q.M.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=r.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer})))}else e.showLabels=!1;i.opacity>L.s3.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of t)U(e.symbol)&&r(e.symbol);"symbol"in e&&U(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&U(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let s,a;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",a="supportsModification"}const l=(0,C.vw)(this).getDefaultOrigin();if("service"!==l){if(s&&!1===this.layer?.capabilities?.exportMap?.[s])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(a&&!1===this.capabilities?.exportMap[a])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==l&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.removeAllHandles()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.addHandles([e.on("after-add",(e=>{let{item:r}=e;r.parent=this,r.layer=this.layer})),e.on("after-remove",(e=>{let{item:r}=e;r.parent=null,r.layer=null})),e.on("before-changes",(e=>{const r=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==r||r||(b.Z.getLogger(this).error(new p.Z("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;b.Z.getLogger(i).error(new p.Z("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};H.test={isMapImageLayerOverridePolicy:e=>e===Q||e===B,isTileImageLayerOverridePolicy:e=>e===J},(0,s._)([(0,S.Cb)({readOnly:!0})],H.prototype,"capabilities",void 0),(0,s._)([(0,v.r)("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],H.prototype,"readCapabilities",null),(0,s._)([(0,S.Cb)()],H.prototype,"defaultPopupTemplate",null),(0,s._)([(0,S.Cb)({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:B}}})],H.prototype,"definitionExpression",null),(0,s._)([(0,S.Cb)({readOnly:!0})],H.prototype,"effectiveScaleRange",null),(0,s._)([(0,v.r)("service","maxScaleRange",["minScale","maxScale"])],H.prototype,"readMaxScaleRange",null),(0,s._)([(0,S.Cb)({type:[T.Z],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],H.prototype,"fields",void 0),(0,s._)([(0,S.Cb)({readOnly:!0})],H.prototype,"fieldsIndex",null),(0,s._)([(0,S.Cb)({type:A.Z,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:B},origins:{"web-scene":{read:!1,write:!1}}}})],H.prototype,"floorInfo",null),(0,s._)([(0,S.Cb)({type:k.Z,json:{read:{source:"layerDefinition.extent"}}})],H.prototype,"fullExtent",void 0),(0,s._)([(0,S.Cb)({type:q.M.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:q.M.read}}}}})],H.prototype,"geometryType",void 0),(0,s._)([(0,S.Cb)({type:String})],H.prototype,"globalIdField",void 0),(0,s._)([(0,v.r)("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],H.prototype,"readGlobalIdFieldFromService",null),(0,s._)([(0,S.Cb)({type:E.z8,json:{write:{ignoreOrigin:!0}}})],H.prototype,"id",null),(0,s._)([(0,S.Cb)({value:null,type:[F.Z],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:Q}}})],H.prototype,"labelingInfo",null),(0,s._)([(0,_.c)("labelingInfo")],H.prototype,"writeLabelingInfo",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:Q}}})],H.prototype,"labelsVisible",null),(0,s._)([(0,S.Cb)({value:null})],H.prototype,"layer",null),(0,s._)([(0,S.Cb)({type:String,json:{write:{overridePolicy:J}}})],H.prototype,"layerItemId",void 0),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:$}}})],H.prototype,"legendEnabled",void 0),(0,s._)([(0,S.Cb)({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],H.prototype,"listMode",null),(0,s._)([(0,S.Cb)({type:Number,value:0,json:{write:{overridePolicy:Q}}})],H.prototype,"minScale",null),(0,s._)([(0,v.r)("minScale",["minScale","layerDefinition.minScale"])],H.prototype,"readMinScale",null),(0,s._)([(0,S.Cb)({type:Number,value:0,json:{write:{overridePolicy:Q}}})],H.prototype,"maxScale",null),(0,s._)([(0,v.r)("maxScale",["maxScale","layerDefinition.maxScale"])],H.prototype,"readMaxScale",null),(0,s._)([(0,S.Cb)({type:String})],H.prototype,"objectIdField",void 0),(0,s._)([(0,v.r)("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],H.prototype,"readObjectIdFieldFromService",null),(0,s._)([(0,S.Cb)({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:Q}}})],H.prototype,"opacity",null),(0,s._)([(0,v.r)("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],H.prototype,"readOpacity",null),(0,s._)([(0,_.c)("opacity")],H.prototype,"writeOpacity",null),(0,s._)([(0,S.Cb)({json:{type:E.z8,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:Q}}})],H.prototype,"parent",void 0),(0,s._)([(0,_.c)("parent")],H.prototype,"writeParent",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:$,writer(e,r,t){r[t]=!e}}}})],H.prototype,"popupEnabled",void 0),(0,s._)([(0,S.Cb)({type:a.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:$}}})],H.prototype,"popupTemplate",void 0),(0,s._)([(0,S.Cb)({readOnly:!0})],H.prototype,"queryTask",null),(0,s._)([(0,S.Cb)({types:l.A,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Q},origins:{"web-scene":{types:l.o,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Q}}}}})],H.prototype,"renderer",null),(0,s._)([(0,S.Cb)({types:{key:"type",base:null,typeMap:{"data-layer":M.n,"map-layer":j.R}},cast(e){if(e){if("mapLayerId"in e)return(0,E.TJ)(j.R,e);if("dataSource"in e)return(0,E.TJ)(M.n,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:Q}}})],H.prototype,"source",null),(0,s._)([(0,S.Cb)()],H.prototype,"sourceJSON",void 0),(0,s._)([(0,S.Cb)({value:null,json:{type:[E.z8],write:{target:"subLayerIds",allowNull:!0,overridePolicy:Q}}})],H.prototype,"sublayers",null),(0,s._)([(0,I.p)("sublayers")],H.prototype,"castSublayers",null),(0,s._)([(0,_.c)("sublayers")],H.prototype,"writeSublayers",null),(0,s._)([(0,S.Cb)({type:String,json:{name:"name",write:{overridePolicy:$}}})],H.prototype,"title",void 0),(0,s._)([(0,v.r)("service","title",["name","layerDefinition.name"])],H.prototype,"readTitle",null),(0,s._)([(0,S.Cb)({type:String})],H.prototype,"typeIdField",void 0),(0,s._)([(0,S.Cb)({json:{read:!1},readOnly:!0,value:"sublayer"})],H.prototype,"type",void 0),(0,s._)([(0,v.r)("typeIdField",["layerDefinition.typeIdField"])],H.prototype,"readTypeIdField",null),(0,s._)([(0,S.Cb)({type:[O.Z],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],H.prototype,"types",void 0),(0,s._)([(0,S.Cb)({type:String,json:{name:"layerUrl",write:{overridePolicy:J}}})],H.prototype,"url",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:Q}}})],H.prototype,"visible",null),(0,s._)([(0,_.c)("visible")],H.prototype,"writeVisible",null),H=i=(0,s._)([(0,w.j)("esri.layers.support.Sublayer")],H);const z=H},83690:(e,r,t)=>{t.d(r,{V:()=>l,g:()=>a});var i=t(10064),s=t(66978);async function a(e,r,t){let a;try{a=await createImageBitmap(e)}catch(l){throw new i.Z("request:server",`Unable to load ${r}`,{url:r,error:l})}return(0,s.k_)(t),a}async function l(e,r,t,a,l){let o;try{o=await createImageBitmap(e)}catch(n){throw new i.Z("request:server",`Unable to load tile ${r}/${t}/${a}`,{error:n,level:r,row:t,col:a})}return(0,s.k_)(l),o}},58132:(e,r,t)=>{t.d(r,{FN:()=>a,QV:()=>s,ac:()=>o});var i=t(25265);function s(e,r,t){const i=r.flatten((e=>{let{sublayers:r}=e;return r})).length;return i!==e.length||(!!e.some((e=>e.originIdOf("minScale")>t||e.originIdOf("maxScale")>t||e.originIdOf("renderer")>t||e.originIdOf("labelingInfo")>t||e.originIdOf("opacity")>t||e.originIdOf("labelsVisible")>t||e.originIdOf("source")>t))||!l(e,r))}function a(e,r,t){return!!e.some((e=>{const r=e.source;return!(!r||"map-layer"===r.type&&r.mapLayerId===e.id&&(null==r.gdbVersion||r.gdbVersion===t))||e.originIdOf("renderer")>i.s3.SERVICE||e.originIdOf("labelingInfo")>i.s3.SERVICE||e.originIdOf("opacity")>i.s3.SERVICE||e.originIdOf("labelsVisible")>i.s3.SERVICE}))||!l(e,r)}function l(e,r){if(!e?.length||null==r)return!0;const t=r.slice().reverse().flatten((e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()})).map((e=>e.id)).toArray();if(e.length>t.length)return!1;let i=0;const s=t.length;for(const{id:a}of e){for(;i<s&&t[i]!==a;)i++;if(i>=s)return!1}return!0}function o(e){return!!e&&e.some((e=>null!=e.minScale||null!=e.layerDefinition?.minScale))}}}]);
//# sourceMappingURL=20680.6ab51c1d.chunk.js.map