{"version":3,"file":"static/js/6894.f54d39b4.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/inline-editable/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/inline-editable/inline-editable.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/inline-editable/inline-editable.scss?tag=calcite-inline-editable&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/label.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  wrapper: \"wrapper\",\n  confirmChangesButton: \"confirm-changes-button\",\n  cancelEditingButton: \"cancel-editing-button\",\n  inputWrapper: \"input-wrapper\",\n  cancelEditingButtonWrapper: \"cancel-editing-button-wrapper\",\n  enableEditingButton: \"enable-editing-button\",\n  controlsWrapper: \"controls-wrapper\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getSlotted } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { InlineEditableMessages } from \"./assets/inline-editable/t9n\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-input`.\n */\n@Component({\n  tag: \"calcite-inline-editable\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  styleUrl: \"inline-editable.scss\",\n  assetsDirs: [\"assets\"],\n})\nexport class InlineEditable\n  implements\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Props\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(disabled: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled;\n    }\n  }\n\n  /**\n   * When `true`, inline editing is enabled on the component.\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  @Watch(\"editingEnabled\")\n  editingEnabledWatcher(newValue: boolean, oldValue: boolean): void {\n    if (this.inputElement) {\n      this.inputElement.editingEnabled = newValue;\n    }\n    if (!newValue && !!oldValue) {\n      this.shouldEmitCancel = true;\n    }\n  }\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ mutable: true, reflect: true }) loading = false;\n\n  /** When `true` and `editingEnabled` is `true`, displays save and cancel controls on the component. */\n  @Prop({ reflect: true }) controls = false;\n\n  /** Specifies the size of the component. Defaults to the scale of the wrapped `calcite-input` or the scale of the closest wrapping component with a set scale. */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /** Specifies a callback to be executed prior to disabling editing via the controls. When provided, the component's loading state will be handled automatically. */\n  @Prop() afterConfirm: () => Promise<void>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InlineEditableMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InlineEditableMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback() {\n    connectLabel(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.mutationObserverCallback();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback() {\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div\n          class={CSS.wrapper}\n          onClick={this.enableEditingHandler}\n          onKeyDown={this.escapeKeyHandler}\n        >\n          <div class={CSS.inputWrapper}>\n            <slot />\n          </div>\n          <div class={CSS.controlsWrapper}>\n            <calcite-button\n              appearance=\"transparent\"\n              class={CSS.enableEditingButton}\n              disabled={this.disabled}\n              iconStart=\"pencil\"\n              kind=\"neutral\"\n              label={this.messages.enableEditing}\n              onClick={this.enableEditingHandler}\n              ref={(el) => (this.enableEditingButton = el)}\n              scale={this.scale}\n              style={{\n                opacity: this.editingEnabled ? \"0\" : \"1\",\n                width: this.editingEnabled ? \"0\" : \"inherit\",\n              }}\n              type=\"button\"\n            />\n            {this.shouldShowControls && [\n              <div class={CSS.cancelEditingButtonWrapper}>\n                <calcite-button\n                  appearance=\"transparent\"\n                  class={CSS.cancelEditingButton}\n                  disabled={this.disabled}\n                  iconStart=\"x\"\n                  kind=\"neutral\"\n                  label={this.messages.cancelEditing}\n                  onClick={this.cancelEditingHandler}\n                  ref={(el) => (this.cancelEditingButton = el)}\n                  scale={this.scale}\n                  type=\"button\"\n                />\n              </div>,\n              <calcite-button\n                appearance=\"solid\"\n                class={CSS.confirmChangesButton}\n                disabled={this.disabled}\n                iconStart=\"check\"\n                kind=\"brand\"\n                label={this.messages.confirmChanges}\n                loading={this.loading}\n                onClick={this.confirmChangesHandler}\n                ref={(el) => (this.confirmEditingButton = el)}\n                scale={this.scale}\n                type=\"button\"\n              />,\n            ]}\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the component's \"cancel editing\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditCancel: EventEmitter<void>;\n\n  /**\n   * Emits when the component's \"confirm edits\" button is pressed.\n   */\n  @Event({ cancelable: false }) calciteInlineEditableEditConfirm: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalInlineEditableEnableEditingChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalInputBlur\")\n  blurHandler(): void {\n    if (!this.controls) {\n      this.disableEditing();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInlineEditableElement;\n\n  private inputElement: HTMLCalciteInputElement;\n\n  private valuePriorToEditing: string;\n\n  private shouldEmitCancel: boolean;\n\n  private enableEditingButton: HTMLCalciteButtonElement;\n\n  private cancelEditingButton: HTMLCalciteButtonElement;\n\n  private confirmEditingButton: HTMLCalciteButtonElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.mutationObserverCallback());\n\n  @State() defaultMessages: InlineEditableMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  mutationObserverCallback(): void {\n    this.updateSlottedInput();\n    this.scale = this.scale || this.inputElement?.scale;\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  updateSlottedInput(): void {\n    const inputElement: HTMLCalciteInputElement = getSlotted(this.el, {\n      matches: \"calcite-input\",\n    });\n\n    this.inputElement = inputElement;\n\n    if (!inputElement) {\n      return;\n    }\n\n    this.inputElement.disabled = this.disabled;\n    this.inputElement.label = this.inputElement.label || getLabelText(this);\n  }\n\n  private get shouldShowControls(): boolean {\n    return this.editingEnabled && this.controls;\n  }\n\n  private enableEditing = () => {\n    this.valuePriorToEditing = this.inputElement?.value;\n    this.editingEnabled = true;\n    this.inputElement?.setFocus();\n    this.calciteInternalInlineEditableEnableEditingChange.emit();\n  };\n\n  private disableEditing = () => {\n    this.editingEnabled = false;\n  };\n\n  private cancelEditing = () => {\n    if (this.inputElement) {\n      this.inputElement.value = this.valuePriorToEditing;\n    }\n    this.disableEditing();\n    this.enableEditingButton.setFocus();\n    if (!this.editingEnabled && !!this.shouldEmitCancel) {\n      this.calciteInlineEditableEditCancel.emit();\n    }\n  };\n\n  private escapeKeyHandler = async (event: KeyboardEvent) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n      this.cancelEditing();\n    }\n\n    if (event.key === \"Tab\" && this.shouldShowControls) {\n      if (!event.shiftKey && event.target === this.inputElement) {\n        event.preventDefault();\n        this.cancelEditingButton.setFocus();\n      }\n      if (!!event.shiftKey && event.target === this.cancelEditingButton) {\n        event.preventDefault();\n        this.inputElement?.setFocus();\n      }\n    }\n  };\n\n  private cancelEditingHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.cancelEditing();\n  };\n\n  private enableEditingHandler = async (event: MouseEvent) => {\n    if (\n      this.disabled ||\n      event.target === this.cancelEditingButton ||\n      event.target === this.confirmEditingButton\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    if (!this.editingEnabled) {\n      this.enableEditing();\n    }\n  };\n\n  private confirmChangesHandler = async (event: MouseEvent) => {\n    event.preventDefault();\n    this.calciteInlineEditableEditConfirm.emit();\n    try {\n      if (this.afterConfirm) {\n        this.loading = true;\n        await this.afterConfirm();\n        this.disableEditing();\n        this.enableEditingButton.setFocus();\n      }\n    } catch (error) {\n      // we handle error in finally block\n    } finally {\n      this.loading = false;\n    }\n  };\n}\n",":host {\n  @apply block;\n}\n\n:host([scale=\"s\"]) {\n  .controls-wrapper {\n    @apply h-6;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .controls-wrapper {\n    @apply h-8;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .controls-wrapper {\n    @apply h-11;\n  }\n}\n\n:host(:not([editing-enabled]):not([disabled])) {\n  .wrapper {\n    &:hover {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    transition-default\n    box-border\n    flex\n    justify-between;\n\n  .input-wrapper {\n    @apply flex-1;\n  }\n}\n\n.controls-wrapper {\n  @apply flex;\n}\n\n@include disabled() {\n  .cancel-editing-button-wrapper {\n    @apply border-color-2;\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && queryElementRoots<HTMLCalciteLabelElement>(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` });\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","InlineEditable","mutationObserver","createObserver","this","mutationObserverCallback","enableEditing","valuePriorToEditing","inputElement","value","editingEnabled","setFocus","calciteInternalInlineEditableEnableEditingChange","emit","disableEditing","cancelEditing","enableEditingButton","shouldEmitCancel","calciteInlineEditableEditCancel","escapeKeyHandler","async","event","defaultPrevented","key","preventDefault","shouldShowControls","shiftKey","target","cancelEditingButton","cancelEditingHandler","enableEditingHandler","disabled","confirmEditingButton","confirmChangesHandler","calciteInlineEditableEditConfirm","afterConfirm","loading","error","disabledWatcher","editingEnabledWatcher","newValue","oldValue","onMessagesChange","connectedCallback","connectLabel","connectLocalized","connectMessages","observe","el","childList","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLabel","disconnectLocalized","disconnectMessages","disconnect","componentDidRender","updateHostInteraction","render","h","InteractiveContainer","class","onClick","onKeyDown","appearance","iconStart","kind","label","messages","ref","scale","style","opacity","width","type","confirmChanges","blurHandler","controls","effectiveLocaleChange","updateMessages","effectiveLocale","componentFocusable","focus","updateSlottedInput","onLabelClick","getSlotted","matches","getLabelText","getIconScale","componentScale","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","interceptedClick","HTMLElement","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","WeakMap","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","Set","findLabelForComponent","componentEl","id","forLabel","queryElementRoots","selector","parentLabel","closestElementCrossShadowBoundary","traversedElements","customElementAncestorCheckEventType","listener","composedPath","slice","indexOf","once","dispatchEvent","CustomEvent","composed","bubbles","ancestorCustomElements","filter","tagName","includes","length","hasAncestorCustomElements","labelEl","has","boundOnLabelDisconnected","onLabelDisconnected","bind","labelables","get","push","set","sort","sortByDOMOrder","delete","labelable","a","b","isBefore","textContent","trim","labelClickTarget","detail","sourceEvent","clickedLabelable","find","firstLabelable","onLabelConnected","add","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","forComponentEl","ownerDocument","getElementById","for","resolveMap","promiseMap","componentLoaded","isBrowser","forceUpdate","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}