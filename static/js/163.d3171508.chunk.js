(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[163],{746:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return n}));var a=i(372);const n={type:a.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,n){if(!e)return null;const{minScale:r,maxScale:s,minLOD:l,maxLOD:o}=t;if(null!=l&&null!=o)return n&&n.ignoreMinMaxLOD?a.a.fromJSON(e):a.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=l&&e<=o)});if(0!==r&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,n=s?t(s):-1/0;return a.a.fromJSON({...e,lods:e.lods.filter(e=>{const a=t(e.scale);return a<=i&&a>=n})})}return a.a.fromJSON(e)}},757:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var a,n=i(0),r=i(47),s=i(20),l=i(349),o=i(8),c=i(85),u=i(11),h=i(383),f=i(158),d=i(12),m=i(31),p=i(81),b=i(16),y=i(1),g=i(9),x=(i(5),i(33)),v=i(3),O=i(6);class w{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,n=i>>3,r=this._tileAvailabilityBitSet;return n<0||n>r.length?"unknown":r[n]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,n=!0;const r=Math.ceil(t*i/8),s=new Uint8Array(r);let l=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(n=!1,s[l]|=1<<t):a=!1,7===t&&++l}n?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||r.default,{row:a,col:n,width:s,height:l}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:n,width:s,height:l},valid:!0,data:Object(g.b)(s*l,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==a||e.location.left!==n||e.location.width!==s||e.location.height!==l))throw new o.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:n,width:s,height:l}});return w.fromJSON(e)})}static fromJSON(e){w._validateJSON(e);const t=new w;return t.location=Object.freeze(Object(O.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new o.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function I(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const j=u.a.getLogger("esri.layers.support.TilemapCache");let S=a=class extends(Object(c.b)(s.a)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*l.a.MEGABYTES,this.request=r.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h.a(this.cacheByteSize),this.handles.add([this.watch(["layer.parsedUrl","layer.tileServers?","layer.apiKey?","layer.customParameters?"],()=>this._initializeTilemapDefinition()),Object(m.e)(()=>{var e,t;return null==(e=this.layer)||null==(t=e.tileInfo)?void 0:t.lods},e=>this._initializeAvailableLevels(e),m.d)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(j.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,n);if(r)return Promise.resolve(r);const s=a&&a.signal;return a={...a,signal:null},new Promise((e,t)=>{Object(d.o)(s,()=>t(Object(d.d)()));const i=I(n);let r=this._pendingTilemapRequests[i];if(!r){r=w.fromDefinition(n,a).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch(e=>e).then(a=>{if(a instanceof w){const n=a.getAvailability(t,i);return"unavailable"===n?Promise.reject(new o.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):n}if(Object(d.l)(a))throw a;return"unknown"}):Promise.reject(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,n){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const s=this.fetchAvailability(e,t,i,n).catch(e=>{if(Object(d.l)(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,n,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,r,s){if(!this._prefetchingEnabled)return;const l="prefetch-"+e;if(this.handles.has(l))return;const o=new AbortController;s.then(()=>o.abort(),()=>o.abort());let c=!1;const u={remove(){c||(c=!0,o.abort())}};if(this.handles.add(u,l),await Object(p.c)(10,o.signal).catch(()=>{}),c||(c=!0,this.handles.remove(l)),Object(d.m)(o))return;const h={id:e,level:t,row:i,col:n},f={...r,signal:o.signal},m=this.layer.tileInfo;for(let d=0;a._prefetches.length<a._maxPrefetch&&m.upsampleTile(h);++d){const e=this.fetchAvailability(h.level,h.row,h.col,f);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:Object(b.G)({...t.query,...a,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const n=I(a);return this._tilemapCache.get(n)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new f.a({initialSize:a._maxPrefetch}),Object(n.a)([Object(y.b)({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(n.a)([Object(x.a)("levels")],S.prototype,"castLevels",null),Object(n.a)([Object(y.b)({readOnly:!0,type:Number})],S.prototype,"size",null),Object(n.a)([Object(y.b)({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(n.a)([Object(y.b)({constructOnly:!0})],S.prototype,"layer",void 0),Object(n.a)([Object(y.b)({constructOnly:!0})],S.prototype,"request",void 0),S=a=Object(n.a)([Object(v.a)("esri.layers.support.TilemapCache")],S)},856:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return Je}));var a=i(0),n=i(192),r=i(831),s=i(8),l=i(2),o=i(371),c=i(12),u=i(1),h=(i(9),i(5),i(4)),f=i(22),d=i(19),m=i(3),p=i(227),b=i(378),y=i(392),g=(i(64),i(47)),x=i(11),v=i(29),O=i(27),w=i(112),I=i(102),j=i(914),S=i(958),T=i(372),_=i(722),R=i(959),k=i(929),C=i(764),M=i(35),P=i(30);const D=x.a.getLogger("esri.layers.mixins.ImageryTileMixin"),F=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",Object(w.g)(e,D))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(Object(l.i)(e))return null;const i=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:a},t):Object(_.b)(e,a)}async createStreamlinesMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createStreamlinesMesh(e,t):Object(C.a)(e.rendererSettings,e.flowData,Object(l.j)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if(Object(l.i)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!Object(l.i)(i)&&i.length||(i=this._getDefaultSlice());const a=e.timeExtent||this.timeExtent;if(Object(l.j)(i)&&Object(l.j)(a)&&(Object(l.j)(a.start)||Object(l.j)(a.end))){var n,r;i=i.map(e=>e.clone());const s=null==(n=t.variables.find(({name:e})=>e===i[0].variableName))||null==(r=n.dimensions)?void 0:r.find(({name:e})=>"StdTime"===e),o=i.find(({dimensionName:e})=>"StdTime"===e);if(!s||!o)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=a,h=Object(l.i)(c)?null:c.getTime(),f=Object(l.i)(u)?null:u.getTime(),d=null!=h?h:f,m=null!=f?f:h;if(Object(l.j)(s.values)){const e=s.values.filter(e=>{if(Array.isArray(e)){if(d===m)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<m&&e[1]>=m,i=e[0]>=d&&e[1]<=m||e[0]<d&&e[1]>m;return t||i}return d===m?e===d:e>=d&&e<=m});if(e.length){const t=e.sort((e,t)=>{var i,a,n,r;return d===m?(null!=(n=e[0])?n:e)-(null!=(r=t[0])?r:t):Math.abs((null!=(i=e[1])?i:e)-m)-Math.abs((null!=(a=t[1])?a:t)-m)})[0];o.values=[t]}else i=null}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;d>t||m<e?i=null:o.values=d===m?[d]:[Math.max(e,d),Math.min(t,m)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Object(R.e)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(Object(l.j)(i)&&i.pixels&&i.pixels.length>0))return null;let a;await this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:r}=this;return a=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),a}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||Object(l.i)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const a=Object(O.e)(e);return T.a.create({size:256,spatialReference:e,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,a={}){if(a.requestAsImageElement){const n=this.getTileUrl(e,t,i);return Object(g.default)(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(e=>e.data)}if(Object(l.j)(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),Object(l.i)(a.multidimensionalDefinition))){const n=a.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,n),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,a)}async fetchPixels(e,t,i,a={}){return Object(l.j)(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),Object(l.i)(a.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,a))}async identify(e,t={}){return Object(l.j)(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),Object(l.i)(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!Object(l.j)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some(e=>e.name===i&&e.dimensions.some(e=>"StdTime"===e.name))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new S.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(R.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!Object(l.j)(e))return null;const t=e.variables[0];return t.dimensions.map(e=>{var i,a;return new j.a({variableName:t.name,dimensionName:e.name,values:[null!=(i=null==(a=e.values)?void 0:a[0])?i:e.extent[0]],isSlice:!0})})}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Object(R.b)(e)),this.renderer||(this.renderer=Object(R.a)(e,{bandIds:this.bandIds,variableName:Object(l.j)(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=Object(R.e)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new k.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const i=this.symbolizer.bind();i.success||D.warn("imagery-tile-mixin",i.error||"The given renderer is not supported by the layer.")}};return Object(a.a)([Object(u.b)()],t.prototype,"_cachedRendererJson",void 0),Object(a.a)([Object(u.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(a.a)([Object(u.b)()],t.prototype,"_rasterJobHandler",void 0),Object(a.a)([Object(u.b)()],t.prototype,"bandIds",void 0),Object(a.a)([Object(u.b)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(u.b)({type:M.a,json:{read:!1}}),Object(v.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(a.a)([Object(u.b)()],t.prototype,"interpolation",void 0),Object(a.a)([Object(u.b)()],t.prototype,"ioConfig",void 0),Object(a.a)([Object(u.b)({type:[j.a]})],t.prototype,"multidimensionalDefinition",void 0),Object(a.a)([Object(u.b)()],t.prototype,"raster",void 0),Object(a.a)([Object(u.b)({readOnly:!0}),Object(v.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(a.a)([Object(u.b)()],t.prototype,"sourceJSON",void 0),Object(a.a)([Object(u.b)({type:P.a,json:{read:!1}}),Object(v.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(a.a)([Object(u.b)({type:T.a,json:{read:!1}}),Object(v.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(a.a)([Object(u.b)(I.n)],t.prototype,"url",null),Object(a.a)([Object(u.b)({types:r.a})],t.prototype,"renderer",null),Object(a.a)([Object(u.b)()],t.prototype,"symbolizer",void 0),t=Object(a.a)([Object(m.a)("esri.layers.ImageryTileMixin")],t),t};var B=i(375),z=i(373),A=i(382),E=i(374),L=i(393),N=i(193),H=i(836),J=i(752),q=i(774),W=i(10),$=i(156),U=i(933),G=i(863),V=i(659),Y=i(735),X=i(28);let K=class extends(Object($.b)(W.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(Y.g)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:T.a.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=Object(Y.e)(e.spatialReference);return Object(l.j)(t)&&e.extent.width>=t/2}set url(e){this._set("url",Object(w.g)(e,x.a.getLogger(this.declaredClass)))}async open(e){throw new s.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,a={}){const n=a.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(e,t,i,n);return this.fetchPixels(r,n.size[0],n.size[1],a)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:a}=this.rasterInfo,{datumTransformation:n}=t;let r=Object(Y.i)(e,i,n);if(!a.intersects(r))return{location:r,value:null};if(Object(l.j)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(r);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};r=e}let s=0;if(t.srcResolution)s=Object(Y.m)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(s=await this.computeBestPyramidLevelForLocation(e,t),null==s)return{location:r,value:null};const o=this.identifyPixelLocation(r,s,null);if(null===o)return{location:r,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=o,d=Object(U.d)(this.url,t.sliceId),m=`${s}/${c}/${u}`;let p=Object(U.c)(d,null,m);Object(l.i)(p)&&(p=this.fetchRawTile(s,c,u,t),Object(U.e)(d,null,m,p));const b=await p;if(Object(l.i)(b)||!b.pixels||0===b.pixels.length)return{location:r,value:null};const y=h*this.rasterInfo.storageInfo.blockHeight+f,g=!b.mask||b.mask[y]?b.pixels.map(e=>e[y]):null,x=this.rasterInfo.dataType;return("vector-magdir"===x||"vector-uv"===x)&&(null==g?void 0:g.length)>1?{location:r,value:g,magdirValue:"vector-magdir"===x?[g[0],g[1]]:Object(_.j)([g[0],g[1]]),pyramidLevel:s}:{location:r,value:g,pyramidLevel:s}}async fetchPixels(e,t,i,a={}){if(e=Object(Y.l)(e),(a=this._getRequestOptionsWithSliceId(a)).requestRawData)return this._fetchPixels(e,t,i,a);const n=Object(Y.e)(e.spatialReference),r=Object(Y.f)(e);if(Object(l.i)(n)||0===r||1===r&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,a);if(r>=3)return{extent:e,pixelBlock:null};const s=[],{xmin:o,xmax:c}=e,u=Math.round(n/(c-o)*t),h=u-Math.round((n/2-o)/(c-o)*t);let f=0;const d=[];for(let l=0;l<=r;l++){const m=new M.a({xmin:0===l?o:-n/2,xmax:l===r?c-n*l:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===l?u-h:l===r?t-f:u;f+=p,d.push(p);const b=a.disableWrapAround&&l>0?null:this._fetchPixels(m,p,i,a);s.push(b)}const m=(await Promise.all(s)).map(e=>null==e?void 0:e.pixelBlock);let p=null;const b={width:t,height:i};return p=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},a)).pixelBlock:Object(V.l)(m,b,{blockWidths:d}),{extent:e,srcExtent:Object(Y.h)(e,this.rasterInfo.spatialReference,a.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,i,a={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,i,a),{nativeExtent:r,nativePixelSize:s,storageInfo:o}=this.rasterInfo,c=2**e,u=s.x*c,h=s.y*c,f=new M.a({xmin:r.xmin+u*t.x,xmax:r.xmin+u*(t.x+i.width-1),ymin:r.ymax-h*(t.y+i.height-1),ymax:r.ymax-h*t.y,spatialReference:r.spatialReference});if(!n)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:m}=n;if(1===d.length&&Object(l.j)(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:n.pixelBlocks[0]};const p=e>0?o.pyramidBlockWidth:o.blockWidth,b=e>0?o.pyramidBlockHeight:o.blockHeight,y={x:t.x%p,y:t.y%b};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:m,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:a.interpolation,alignmentInfo:null,blockWidths:null},a)).pixelBlock:Object(V.l)(d,m,{clipOffset:y,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:g}}fetchRawTile(e,t,i,a){throw new s.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(Y.h)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(G.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var a,n;const{customFetchParameters:r}=this.ioConfig,{range:s,query:l,headers:o}=t;i=null!=(a=null!=(n=i)?n:t.retryCount)?a:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(g.default)(e,{...t,query:{...l,...r},headers:{...o,...c}})}catch(u){if(i>0)return i--,this.request(e,t,i);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(l.j)(t))return null;if(!Object(l.j)(e)||0===e.length)return null;let i=0;const a=e[0].variableName;for(let n=0;n<t.variables.length;n++){const r=t.variables[n],s=r.dimensions;if(r.name!==a){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const l=s.map(e=>this._getDimensionValuesCount(e)),o=s.length;for(let t=0;t<o;t++){const a=e.find(e=>e.dimensionName===s[t].name);if(null==a)return null;const n=Array.isArray(a.values[0])?a.values[0][0]:a.values[0],r=this._getIndexFromDimensions(n,s[t]);if(-1===r)return null;l.shift(),i+=t===o-1?r:r*l.reduce((e,t)=>e+t)}}return i}getTileExtentFromTileInfo(e,t,i,a){const n=a.lodAt(e);return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,a.origin,a.spatialReference,a.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:a}=this.rasterInfo;if(!e.tileInfo){const n=[],r=e.maximumPyramidLevel||0;let s=Math.max(a.x,a.y),l=1/.0254*96*s;for(let e=0;e<=r;e++)n.push({level:r-e,resolution:s,scale:l}),s*=2,l*=2;const o=new X.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new T.a({origin:o,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,a){const{width:n,height:r,nativeExtent:s,pixelSize:l,spatialReference:o}=e,c=new X.a({x:s.xmin,y:s.ymax,spatialReference:o});null==a&&(a=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],a);e.storageInfo=new q.a({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:a,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,a,n,r=0,s=2){if(1===n.length&&r>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<r;i++)e*=s,t*=s,n.push({x:e,y:t})}const l=[],{x:o,y:c}=a;for(let u=0;u<n.length;u++){const{x:a,y:r}=n[u];l.push({minCol:Math.floor((e.xmin-o+.1*a)/t/a),maxCol:Math.floor((e.xmax-o-.1*a)/t/a),minRow:Math.floor((c-e.ymax+.1*r)/i/r),maxRow:Math.floor((c-e.ymin-.1*r)/i/r)})}return l}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:a}=this.rasterInfo.storageInfo;if(0===e)return t;if(Object(l.j)(i)&&i.length)return i[e-1];const n=a**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i){const{spatialReference:a,nativeExtent:n}=this.rasterInfo,{blockWidth:r,blockHeight:s,maximumPyramidLevel:l,origin:o}=this.rasterInfo.storageInfo,c=Object(Y.i)(e,a,i);if(!n.intersects(c))return null;if(t<0||t>l)return null;const u=this.getPyramidPixelSize(t),{x:h,y:f}=u,d=(o.y-c.y)/f/s,m=(c.x-o.x)/h/r,p=Math.min(s-1,Math.floor((d-Math.floor(d))*s)),b=Math.min(r-1,Math.floor((m-Math.floor(m))*r));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(m),rowOffset:p,colOffset:b,srcLocation:c}}getTileExtent(e,t,i,a,n,r){const[s,l]=r,o=a.x+i*s*e.x,c=o+s*e.x,u=a.y-t*l*e.y,h=u-l*e.y;return new M.a({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const a=this.rasterInfo.storageInfo.blockBoundary[e];return!a||a.maxRow<t||a.maxCol<i||a.minRow>t||a.minCol>i}async _fetchPixels(e,t,i,a={}){let n=Object(Y.f)(e);if(n>=2)return{extent:e,pixelBlock:null};const r=this._getSourceDataInfo(e,t,i,a),{pyramidLevel:s,pyramidResolution:o,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:f}=r;if(0===h||0===f)return{extent:e,srcExtent:u,pixelBlock:null};const d=Object(l.q)(this.rasterInfo.transform),m="gcs-shift"===(null==d?void 0:d.type),p=Object(l.j)(Object(Y.e)(e.spatialReference));!m&&p||(n=Object(Y.f)(r.srcExtent,m));const b=this.rasterInfo.storageInfo,y={x:Math.floor((u.xmin-b.origin.x)/o.x+.1),y:Math.floor((b.origin.y-u.ymax)/o.y+.1)},g=await this._fetchRawTiles(s,y,{width:h,height:f,wrapCount:n},a);if(!g)return{extent:e,srcExtent:u,pixelBlock:null};const x=s>0?b.pyramidBlockWidth:b.blockWidth,v=s>0?b.pyramidBlockHeight:b.blockHeight,O=x===h&&v===f&&y.x%x==0&&y.y%v==0,w=new X.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),I=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:j}=a;if(!I&&O&&1===g.pixelBlocks.length&&x===t&&v===i&&c.x===w.x&&c.y===w.y)return{extent:e,srcExtent:u,pixelBlock:g.pixelBlocks[0]};const S=p&&Object(l.j)(Object(Y.e)(u.spatialReference)),T=a.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");T&&!this.rasterJobHandler&&await Object(Y.g)();const R=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w.toJSON(),datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:T},a):Object(Y.c)({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w,datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1,includeGCSGrid:T});let k;const C=!a.requestRawData,M={rows:R.spacing[0],cols:R.spacing[1]},P=Object(l.q)(this._getRasterTileAlignmentInfo(s,g.extent.xmin)),{pixelBlocks:D,mosaicSize:F,isPartiallyFilled:B}=g;let z=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:F,destDimension:C?{width:t,height:i}:null,coefs:C?R.coefficients:null,sampleSpacing:C?M:null,projectDirections:T,gcsGrid:T?R.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:a.interpolation,alignmentInfo:P,blockWidths:null},a);({pixelBlock:k,localNorthDirections:z}=e)}else{const e=Object(V.l)(D,F,{alignmentInfo:P});k=C?Object(V.a)(e,{width:t,height:i},R.coefficients,M,a.interpolation):e,T&&R.gcsGrid&&(z=Object(V.i)({width:t,height:i},R.gcsGrid),k=Object(_.a)(k,this.rasterInfo.dataType,z))}return a.requestRawData||T?{srcExtent:u,pixelBlock:k,transformGrid:R,localNorthDirections:z,extent:e,isPartiallyFilled:B}:{srcExtent:u,extent:e,pixelBlock:k}}async _fetchRawTiles(e,t,i,a){const{origin:n,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:o}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const m=this._getRasterTileAlignmentInfo(e,0);a.buffer&&(c-=a.buffer.cols,u-=a.buffer.rows,h+=2*a.buffer.cols,f+=2*a.buffer.rows);let p=0,b=0,y=0;d&&Object(l.j)(m)&&(({worldColumnCountFromOrigin:b,originColumnOffset:y,rightPadding:p}=m),b*m.blockWidth-p>=c+h&&(p=0));const g=Math.floor(c/s),x=Math.floor(u/o),v=Math.floor((c+h+p-1)/s),O=Math.floor((u+f+p-1)/o),w=r[e];if(!w)return null;const{minRow:I,minCol:j,maxCol:S,maxRow:T}=w;if(0===d&&(O<I||v<j||x>T||g>S))return null;const _=new Array;let R=!1;const k=null==this.ioConfig.allowPartialFill?a.allowPartialFill:this.ioConfig.allowPartialFill;for(let M=x;M<=O;M++)for(let t=g;t<=v;t++){let i=t;if(!a.disableWrapAround&&d&&Object(l.j)(m)&&b<=t&&(i=t-b-y),M>=I&&i>=j&&T>=M&&S>=i){const t=this._fetchRawTile(e,M,i,a);k?_.push(new Promise(e=>{t.then(t=>e(t)).catch(()=>{R=!0,e(null)})})):_.push(t)}else _.push(null)}if(0===_.length)return null;const C=await Promise.all(_),P={height:(O-x+1)*o,width:(v-g+1)*s},{spatialReference:D}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:B,y:z}=F;return{extent:new M.a({xmin:n.x+g*s*B,xmax:n.x+(v+1)*s*B,ymin:n.y-(O+1)*o*z,ymax:n.y-x*o*z,spatialReference:D}),pixelBlocks:C,mosaicSize:P,isPartiallyFilled:R}}_fetchRawTile(e,t,i,a){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:r,minCol:s,maxCol:o,maxRow:u}=n;if(t<r||i<s||t>u||i>o)return Promise.resolve(null);const h=Object(U.d)(this.url,a.sliceId),f=`${e}/${t}/${i}`;let d=Object(U.c)(h,a.registryId,f);if(Object(l.i)(d)){const n=new AbortController;d=this.fetchRawTile(e,t,i,{...a,signal:n.signal}),Object(U.e)(h,a.registryId,f,d,n),d.catch(()=>Object(U.b)(h,a.registryId,f))}return a.signal&&Object(c.o)(a,()=>{Object(U.a)(h,a.registryId,f)}),d}_getIndexFromDimensions(e,t){const{extent:i,interval:a,unit:n,values:r}=t;if(null!=r&&r.length)return Array.isArray(r[0])?r.findIndex(t=>t[0]<=e&&t[1]>=e):r.indexOf(e);if(e>i[1])return-1;const s=i[0];let l=-1;if("ISO8601"===n){var o;switch((null==(o=t.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":l=Math.round((e-s)/1e3/a);break;case"minutes":l=Math.round((e-s)/6e4/a);break;case"hours":l=Math.round((e-s)/36e5/a);break;case"days":l=Math.round((e-s)/864e5/a);break;case"years":l=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/a);break;case"decades":l=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/a)}return l}return Math.round((e-s)/a)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:a,values:n}=e;let r=(null==n?void 0:n.length)||0;if(r)return r;const s=t[0];if(0===r&&"ISO8601"===a){var l;switch((null==(l=e.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":r=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":r=Math.round((t[1]-t[0])/6e4/i);break;case"hours":r=Math.round((t[1]-t[0])/36e5/i);break;case"days":r=Math.round((t[1]-t[0])/864e5/i);break;case"years":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return r}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=Object(Y.d)(this.rasterInfo)),Object(l.j)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getSourceDataInfo(e,t,i,a={}){const n={datumTransformation:a.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};a.srcResolution&&(n.srcResolution=a.srcResolution,this._updateSourceDataInfo(e,n));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:o}=n,c=s/t,u=l/i,h=o<r&&c*u>=16;if(h||o===r&&(c>8||u>8)||0===s||0===l){const s=new X.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let l=Object(Y.j)(s,this.rasterInfo.spatialReference,e,n.datumTransformation);const f=!l||a.srcResolution&&l.x+l.y<a.srcResolution.x+a.srcResolution.y;if(h&&a.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(r-o+3>=e){const t=2**e;l={x:a.srcResolution.x*t,y:a.srcResolution.y*t}}}l&&(n.srcResolution=l,this._updateSourceDataInfo(e,n))}return(n.srcWidth/t>8||n.srcHeight/i>8)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:a,datumTransformation:n}=t,{pyramidLevel:r,pyramidResolution:s,excessiveReading:o}=Object(Y.m)(a,this.rasterInfo,this.ioConfig.sampling);if(o)return;let c=t.srcExtent||Object(Y.h)(e,i,n);if(null==c)return;const u=Object(l.q)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/s.x-.1),f=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=r,t.pyramidResolution=s,t.srcWidth=h,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return Object(l.j)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}};Object(a.a)([Object(u.b)()],K.prototype,"_rasterTileAlighmentInfo",void 0),Object(a.a)([Object(u.b)({readOnly:!0})],K.prototype,"_isGlobalWrappableSource",null),Object(a.a)([Object(u.b)(I.n)],K.prototype,"url",null),Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],K.prototype,"datasetName",void 0),Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),Object(a.a)([Object(u.b)()],K.prototype,"rasterInfo",void 0),Object(a.a)([Object(u.b)()],K.prototype,"ioConfig",void 0),Object(a.a)([Object(u.b)()],K.prototype,"sourceJSON",void 0),K=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.BaseRaster")],K);const Q=K;var Z=i(942);function ee(e){const t=e.fields,i=e.records,a=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",n=[{name:a,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),r=n.map(e=>e.name),s=[];let l=0,o=0;return i.forEach(e=>{const t={};for(t[a]=l++,o=1;o<r.length;o++)t[r[o]]=e[o-1];s.push({attributes:t})}),{displayFieldName:"",fields:n,features:s}}var te=i(975),ie=i(110);const ae=new Map;ae.set("int16","esriFieldTypeSmallInteger"),ae.set("int32","esriFieldTypeInteger"),ae.set("int64","esriFieldTypeInteger"),ae.set("float32","esriFieldTypeSingle"),ae.set("float64","esriFieldTypeDouble"),ae.set("text","esriFieldTypeString");let ne=class extends Q{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:a}=this._parseHeader(t);if("thematic"===a.dataType){const e=await this._fetchAuxiliaryInformation();a.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",a),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,a={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const r=this._buildCacheFilePath(n,t,i,a.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),l=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:a.signal});if(!l)return null;const o=new Uint8Array(l.data),c=this._getTileEndAndContentType(o,s);if(0===c.recordSize)return null;const u=await this.request(r,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:a.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(t=>!e[t])}_parseHeader(e){var t,i;const a=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:r,colormap:s,blockWidth:l,blockHeight:o,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new P.a(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let p=new M.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const b=new X.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),y=Math.round((p.xmax-p.xmin)/b.x),g=Math.round((p.ymax-p.ymin)/b.y),x=this._parseTransform(e.geodataXform),v=x?p:null;x&&(p=x.forwardTransform(p),b.x=(p.xmax-p.xmin)/y,b.y=(p.ymax-p.ymin)/g);const O=null!=(i=e.properties)?i:{},w=e.format.toLowerCase().replace("cache/",""),I=new X.a(e.origin.x,e.origin.y,m);let j,S,_,R;if(s&&s.colors)for(j=[],S=0;S<s.colors.length;S++)_=s.colors[S],R=s.values?s.values[S]:S,j.push([R,255&_,_<<16>>>24,_<<8>>>24,_>>>24]);const k=e.LODInfos,C=[];for(S=0;S<k.levels.length;S++)C.push({level:k.levels[S],resolution:k.resolutions[S],scale:96/.0254*k.resolutions[S]});const D=new T.a({dpi:96,lods:C,format:w,origin:I,size:[l,o],spatialReference:m}),F={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(y/l)-1,maxRow:Math.ceil(g/o)-1,minCol:0,minRow:0}];let z=2;if(u>0)for(S=0;S<u;S++)B.push({maxCol:Math.ceil(y/z/l)-1,maxRow:Math.ceil(g/z/o)-1,minCol:0,minRow:0}),z*=2;const A=e.mdInfo;return{storageInfo:F,rasterInfo:new J.a({width:y,height:g,pixelType:a,bandCount:n,extent:p,nativeExtent:v,transform:x,spatialReference:m,pixelSize:b,keyProperties:O,statistics:h,histograms:r,multidimensionalInfo:A,colormap:j,storageInfo:new q.a({blockWidth:l,blockHeight:o,pyramidBlockWidth:l,pyramidBlockHeight:o,origin:I,tileInfo:D,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:B})})}}_parseTransform(e){var t,i;if(!Object(te.a)(e))throw new s.a("cloudraster:open","the data contains unsupported geodata transform types");const a=Object(te.b)(e);if("identity"===a.type)return null;if("polynomial"!==a.type||null==(t=a.forwardCoefficients)||!t.length||null==(i=a.inverseCoefficients)||!i.length)throw new s.a("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return a}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),a=await Promise.all([t,i]);let n;if(a[0]){let e=a[0].fields;const t=a[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":ae.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(n={fields:e,features:i})}}return!n&&a[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const a=t.getUint32(4,!0),n=t.getUint16(8,!0),r=t.getUint16(10,!0),s={version:i,recordCount:a,headerByteCount:n,recordByteCount:r};let l=32;const o=[],c=[];let u;if(3===i){for(;13!==t.getUint8(l);)u=String.fromCharCode(t.getUint8(l+11)).trim(),o.push({name:Object(Z.a)(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(l+16)}),l+=32;if(l+=1,o.length>0)for(;c.length<a&&e.byteLength-l>r;){const i=[];32===t.getUint8(l)?(l+=1,o.forEach(t=>{if("C"===t.type)i.push(Object(Z.a)(new Uint8Array(e,l,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim()));else if("D"===t.type){const a=String.fromCharCode.apply(null,new Uint8Array(e,l,t.length)).trim();i.push(new Date(parseInt(a.substring(0,4),10),parseInt(a.substring(4,6),10)-1,parseInt(a.substring(6,8),10)))}l+=t.length}),c.push(i)):l+=r}}return{header:s,fields:o,records:c,recordSet:ee({fields:o,records:c})}}}.parse(a[1]).recordSet),ie.default.fromJSON(n)}_buildCacheFilePath(e,t,i,a){const n=this.storageInfo.packetSize,r=Math.floor(t/n)*n,s=Math.floor(i/n)*n,o="R"+this._toHexString4(r)+"C"+this._toHexString4(s);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==a?void 0:a[0];if(!Object(l.j)(u)||!h)return`${this.url}/_alllayers/${c}/${o}.bundle`;let f=u.variables.find(e=>e.name===h.variableName).dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let l=0;l<d;l++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${o}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,a=i*(e%i)+t%i;if(a<0)throw"Invalid level / row / col";return 20+a*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let a,n=0;for(a=0;a<5;a++)n|=(255&i[a])<<8*a;const r=0xffffffffff&n;for(n=0,a=5;a<8;a++)n|=(255&i[a])<<8*(a-5);return{position:r,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(a.a)([Object(u.b)({readOnly:!0})],ne.prototype,"storageInfo",void 0),Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.CloudRaster")],ne);const re=ne;let se=class extends Q{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:a,histograms:n,name:r,keyProperties:s,nativeExtent:l,transform:o}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new M.a({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new P.a({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:f.width/c,y:f.height/u},p=new J.a({width:c,height:u,pixelType:h,extent:f,nativeExtent:l,transform:o,pixelSize:m,spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:a,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,a={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a},i):Promise.resolve(Object(V.p)(e,t,a)),r=Object(l.j)(this.rasterInfo.statistics),o=Object(l.j)(this.rasterInfo.histograms),u=r&&o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(V.g)(e)),h=await Object(c.i)([n,u]);if(!h[0].value&&h[1].value)throw new s.a("inmemory-raster:open","failed to build in memory raster");var f,d;this._pixelBlockTiles=h[0].value,r||(this.rasterInfo.statistics=null==(f=h[1].value)?void 0:f.statistics),o&&(this.rasterInfo.histograms=null==(d=h[1].value)?void 0:d.histograms)}};Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),Object(a.a)([Object(u.b)()],se.prototype,"data",void 0),se=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.InMemoryRaster")],se);const le=se;function oe(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=[];if(t){const n=oe(e,i);for(let e=0;e<n.length;e++)oe(n[e],t).forEach(e=>a.push(e));return a}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let r=0;r<n.length;r++)a.push(n[r]||n.item[r]);return a}function ce(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=oe(e,i);return a.length>0?t?ce(a[0],t):a[0]:null}function ue(e,t=null){const i=t?ce(e,t):e;let a;return i?(a=i.textContent||i.nodeValue,a?a.trim():null):null}function he(e,t){return function(e,t){const i=oe(e,t),a=[];let n;for(let r=0;r<i.length;r++)n=i[r].textContent||i[r].nodeValue,n&&(n=n.trim(),""!==n&&a.push(n));return a}(e,t).map(e=>Number(e))}function fe(e,t){const i=ue(e,t);return Number(i)}function de(e,t){var i;const a=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return a.slice(a.lastIndexOf(":")+1)===n}var me=i(821);function pe(e,t){if(!e||!t)return null;const i=[];for(let a=0;a<e.length;a++)i.push(e[a]),i.push(t[a]);return i}function be(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new P.a({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),a=e.indexOf("PROJCS"),n=a>-1?a:e.indexOf("GEOGCS");if(-1===n)return null;const r=e.slice(n,e.lastIndexOf("]",i)+1).trim(),s=e.slice(i,e.lastIndexOf("]")).trim();t=ye(r);const l=new P.a(t?{wkid:t}:{wkt:r}),o=ye(s);return o&&(l.vcsWkid=o),l}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ye(e),new P.a(0!==t?{wkid:t}:{wkt:e})):null}function ye(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),a=i[i.length-1].split(","),n=null==(t=a[0])?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(a[1]);if(!isNaN(e)&&0!==e)return e}return 0}function ge(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(de(e,"SRS")){if(!i.spatialReference){const t=ue(e);i.spatialReference=be(t)}}else if(de(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:a}=function(e){var t;const i=ce(e,"GeodataXform"),a=be(fe(i,"SpatialReference/WKID")||ue(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:a,transform:null};const n=null!=(t=fe(i,"PolynomialOrder"))?t:1,r=he(i,"CoeffX/Double"),s=he(i,"CoeffY/Double"),l=he(i,"InverseCoeffX/Double"),o=he(i,"InverseCoeffY/Double"),c=pe(r,s),u=pe(l,o);return{spatialReference:a,transform:new me.a({spatialReference:a,polynomialOrder:n,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=a,i.spatialReference||(i.spatialReference=t)}else oe(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=ue(e));else if(de(e,"PAMRasterBand")){const t=function(e){var t;const i=fe(e,"NoDataValue"),a=ce(e,"Histograms/HistItem"),n=fe(a,"HistMin"),r=fe(a,"HistMax"),s=fe(a,"BucketCount"),l=null==(t=ue(a,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let o,c,u,h;oe(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}});const f=fe(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=l&&l.length&&null!=o&&null!=c?{min:n,max:r,size:s||l.length,counts:l}:null,sourceBandIndex:f,statistics:null!=o&&null!=c?{min:o,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const a=i.rasterBands;if(a){const e=!!a[0].statistics;i.statistics=e?a.map(e=>e.statistics):null;const t=!!a[0].histogram;i.histograms=t?a.map(e=>e.histogram):null}return i}let xe=class extends Q{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:a,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new P.a({wkid:3857})),null!=n&&n.length&&null==a&&(a=Object(V.f)(n));const{width:l,height:o}=t;let c=new M.a({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new le({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:t,statistics:a,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,a={}){return this._inMemoryRaster.fetchRawTile(e,t,i,a)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(G.b)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new s.a("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const a=Object(l.q)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],r=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:a}),s=this.datasetFormat,o="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,u=n.indexOf(o)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:a}),h=await Object(c.i)([r,u]);if(null!=a&&a.aborted)throw Object(c.d)();const f=ge(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;f.transform=6===(null==e?void 0:e.length)?new me.a({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),xe=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.ImageAuxRaster")],xe);const ve=xe;var Oe=i(16),we=i(746),Ie=i(757),je=i(944);let Se=class extends Q{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const a=i.data;if(this.sourceJSON=a,!a)throw new s.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new s.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=a.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(a.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name.slice(a.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!Object(l.j)(n))throw new s.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(we.a)(a.tileInfo,a):T.a.fromJSON(a.tileInfo),{extent:t,pixelSize:i}=n,r=.5/n.width*i.x;let s,l;const o=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==a.maxScale&&("Raster"===this.tileType?(s=e.lods.find(e=>e.resolution===i.x),s||(s=e.lods[e.lods.length-1])):(s=e.lods.find(e=>Math.abs(e.scale-a.maxScale)<r),s||(s=e.lods.filter(e=>e.scale>a.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=o);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==a.minScale&&"Elevation"===this.tileType&&(l=e.lods.find(e=>Math.abs(e.scale-a.minScale)<r),this._levelOffset=l.level-c.level),l||(l=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>r||!e.lods.some(e=>Math.abs(e.resolution-u)<r))&&(i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=s.level-l.level,[f,d]=e.size,m=[];e.lods.forEach(e=>{e.level>=l.level&&e.level<=s.level&&m.push({x:e.resolution,y:e.resolution})}),m.sort((e,t)=>e.x-t.x);const p=this.computeBlockBoundary(t,f,d,e.origin,m,h),b=m.length>1?m.slice(1):null;n.storageInfo=new q.a({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:b,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:p}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(a.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:Object(Oe.M)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Ie.a({layer:e})}}async fetchRawTile(e,t,i,a={}){if(this._slices&&null==a.sliceId)return null;const{storageInfo:n,extent:r}=this.rasterInfo,s=n.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${s}/${t}/${i}`,o=this._slices?{sliceId:a.sliceId||0}:null,{data:c}=await this.request(l,{query:o,responseType:"array-buffer",signal:a.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=n.blockBoundary[e];if("jpg"!==n.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return u;const{origin:f,blockWidth:d,blockHeight:m}=n,{x:p,y:b}=this.getPyramidPixelSize(e),y=Math.round((r.xmin-f.x)/p)%d,g=Math.round((r.xmax-f.x)/p)%d||d,x=Math.round((f.y-r.ymax)/b)%m,v=Math.round((f.y-r.ymin)/b)%m||m,O=i===h.minCol?y:0,w=t===h.minRow?x:0,I=i===h.maxCol?g:d,j=t===h.maxRow?v:m;return Object(V.o)(u,{x:O,y:w},{width:I-O,height:j-w}),u}getSliceIndex(e){if(!this._slices||Object(l.i)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),a=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),n=await Promise.all([i,a]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(l.q)(t.datumTransformation));if(null===i)return null;let a=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-a+this._levelOffset;const s=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,a++,i=this.identifyPixelLocation(s,a,Object(l.q)(t.datumTransformation)),null===i)return null}return-1===r||null==i?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=P.a.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new J.a({width:i,height:a,bandCount:3,extent:M.a.fromJSON(t.extent),spatialReference:n,pixelSize:new X.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:s}=e,l=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:s}).then(e=>ie.default.fromJSON(e.data)).catch(()=>null),o=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Promise.all([l,o,c,u,h,f]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new J.a({width:i,height:a,bandCount:t.bandCount,extent:M.a.fromJSON(t.extent),spatialReference:n,pixelSize:new X.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new je.a,e.extent=e.transform.forwardTransform(t))}};Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Object(a.a)([Object(u.b)()],Se.prototype,"tileType",void 0),Se=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],Se);const Te=Se;var _e=i(721),Re=i(896);const ke=new Map;ke.set("Int8","s8"),ke.set("UInt8","u8"),ke.set("Int16","s16"),ke.set("UInt16","u16"),ke.set("Int32","s32"),ke.set("UInt32","u32"),ke.set("Float32","f32"),ke.set("Float64","f32"),ke.set("Double64","f32");const Ce=new Map;Ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Me=class extends Q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(l.q)(e.signal):null,a=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:r}=this._parseHeader(a.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var s;null!=t&&(n.statistics=null!=(s=t.statistics)?s:n.statistics,n.histograms=t.histograms,t.histograms&&!Object(l.j)(n.statistics)&&(n.statistics=Object(V.f)(t.histograms)))}this._set("rasterInfo",n),this._files=r;const o=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:d}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let b=0,y=-1;for(;b<this._storageIndex.length;){y++;const e=Math.ceil(f/c/h**y)-1,t=Math.ceil(d/u/h**y)-1;b+=(e+1)*(t+1)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){const{blockWidth:n,blockHeight:r,blockBoundary:s}=this.rasterInfo.storageInfo,o=s[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*r);return new _e.a({width:n,height:r,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),b=[];let y=0;for(y=0;y<p;y++)(!m||m.indexOf[y]>-1)&&b.push(this.request(this._files.data,{range:{from:h[y].from,to:h[y].to},responseType:"array-buffer",signal:a.signal}));const g=await Promise.all(b),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(x);let O=0;for(y=0;y<p;y++)v.set(new Uint8Array(g[y].data),O),O+=g[y].data.byteLength;const w=Ce.get(this.rasterInfo.storageInfo.compression).decoderFormat,I=await this.decodePixelBlock(v.buffer,{width:n,height:r,format:w,planes:(null==m?void 0:m.length)||c,pixelType:u});if(Object(l.j)(this.rasterInfo.noDataValue)&&"lerc"!==w&&!I.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=I.width*I.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(y=0;y<t;y++)Math.abs((I.pixels[0][y]-e)/e)>1e-6&&(i[y]=1);else for(y=0;y<t;y++)I.pixels[0][y]!==e&&(i[y]=1);I.mask=i}}let j=0,S=0;if(f!==n||d!==r){let e=I.mask;if(e)for(y=0;y<r;y++)if(S=y*n,y<d)for(j=f;j<n;j++)e[S+j]=0;else for(j=0;j<n;j++)e[S+j]=0;else for(e=new Uint8Array(n*r),I.mask=e,y=0;y<d;y++)for(S=y*n,j=0;j<f;j++)e[S+j]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,a,n,r,s;if(Re.a){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),a=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(s=0;s<4;s++)a[4*r+s]=i[4*r+3-s];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:a,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:s,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<e;h++)d=r**h,c=Math.ceil(s/a/d),u=Math.ceil(l/n/d),f+=c*u;d=r**e,c=Math.ceil(s/a/d),u=Math.ceil(l/n/d),f+=t*c+i,f*=4*o;const m=this._storageIndex.subarray(f,f+4*o);let p=0,b=0;const y=[];for(let g=0;g<o;g++)p=m[4*g+0]*2**32+m[4*g+1],b=p+m[4*g+2]*2**32+m[4*g+3],y.push({from:p,to:b});return{ranges:y,actualTileWidth:i<c-1?a:Math.ceil(s/d)-a*(c-1),actualTileHeight:t<u-1?n:Math.ceil(l/d)-n*(u-1)}}_parseHeader(e){const t=ce(e,"MRF_META/Raster");if(!t)throw new s.a("mrf:open","not a valid MRF format");const i=ce(t,"Size"),a=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),l=(ue(t,"Compression")||"none").toLowerCase();if(!Ce.has(l))throw new s.a("mrf:open","currently does not support compression "+l);const o=ue(t,"DataType")||"UInt8",c=ke.get(o);if(null==c)throw new s.a("mrf:open","currently does not support pixel type "+o);const u=ce(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=ce(t,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map(e=>parseFloat(e)))),ce(e,"MRF_META/CachedSource"))throw new s.a("mrf:open","currently does not support MRF referencing other data files");const b=ce(e,"MRF_META/GeoTags"),y=ce(b,"BoundingBox");let g,x=!1;if(null!=y){const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),i=parseFloat(y.getAttribute("maxx")),a=parseFloat(y.getAttribute("maxy")),n=ue(b,"Projection")||"";let r;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(r=new P.a({wkid:e}))}else r=be(n);else x=!0,r=new P.a({wkid:3857});g=new M.a(e,t,i,a),g.spatialReference=r}else x=!0,g=new M.a({xmin:-.5,ymin:.5-n,xmax:a-.5,ymax:.5,spatialReference:new P.a({wkid:3857})});const v=ce(e,"MRF_META/Rsets"),O=parseInt(v&&v.getAttribute("scale")||"2",10),w=g.spatialReference,I=new q.a({origin:new X.a({x:g.xmin,y:g.ymax,spatialReference:w}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,pyramidScalingFactor:O}),j=new X.a({x:g.width/a,y:g.height/n,spatialReference:w}),S=new J.a({width:a,height:n,extent:g,isPseudoSpatialReference:x,spatialReference:w,bandCount:r,pixelType:c,pixelSize:j,noDataValue:m,storageInfo:I}),T=ue(e,"datafile"),_=ue(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",Ce.get(l).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return ge(t)}catch{return null}}};Object(a.a)([Object(u.b)()],Me.prototype,"_files",void 0),Object(a.a)([Object(u.b)()],Me.prototype,"_storageIndex",void 0),Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],Me.prototype,"datasetFormat",void 0),Me=Object(a.a)([Object(m.a)("esri.layers.support.rasterIO.MRFRaster")],Me);const Pe=Me;var De=i(941),Fe=i(943);const Be=function(e,t){const i=e.get(t);return i&&i.values},ze=function(e,t){const i=e.get(t);return i&&i.values[0]};let Ae=class extends Q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,a;await this.init();const n=e?Object(l.q)(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new s.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:o,firstIFD:c,isBigTiff:u}=Object(De.g)(r),h=[];await this._readIFDs(h,r,o,c,0,u?8:4,n);const f=Object(De.c)(h),{width:d,height:m,tileWidth:p,tileHeight:b,planes:y,pixelType:g,compression:x,firstPyramidLevel:v,maximumPyramidLevel:O,pyramidBlockWidth:w,pyramidBlockHeight:I,tileBoundary:j,affine:S,metadata:T}=f;let _=be((null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(i=f.extent.spatialReference)?void 0:i.wkid)),R=!1;null==_&&(R=!0,_=new P.a({wkid:3857}));const k=new M.a({...f.extent,spatialReference:_}),C=new X.a(k?{x:k.xmin,y:k.ymax,spatialReference:_}:{x:0,y:0}),D=new q.a({blockWidth:p,blockHeight:b,pyramidBlockWidth:w,pyramidBlockHeight:I,compression:x,origin:C,firstPyramidLevel:v,maximumPyramidLevel:O,blockBoundary:j}),F=new X.a({x:(k.xmax-k.xmin)/d,y:(k.ymax-k.ymin)/m,spatialReference:_}),B=T?{BandProperties:T.bandProperties,DataType:T.dataType}:{},z=new J.a({width:d,height:m,bandCount:y,pixelType:g,compression:x,pixelSize:F,storageInfo:D,spatialReference:_,isPseudoSpatialReference:R,keyProperties:B,extent:k,statistics:T?T.statistics:null});if(null!=S&&S.length&&(z.nativeExtent=new M.a({xmin:-.5,ymin:.5-m,xmax:d-.5,ymax:.5,spatialReference:_}),z.transform=new me.a({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new X.a({x:(k.xmax-k.xmin)/d,y:(k.ymax-k.ymin)/m,spatialReference:_}),D.origin.x=-.5,D.origin.y=.5),null==(a=this.ioConfig.skipExtensions)||!a.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var A;if(z.statistics=null!=(A=t.statistics)?A:z.statistics,z.histograms=t.histograms,t.histograms&&!Object(l.j)(z.statistics)&&(z.statistics=Object(V.f)(t.histograms)),t.transform&&!S){z.transform=t.transform,z.nativeExtent=z.extent;const e=z.transform.forwardTransform(z.nativeExtent);z.pixelSize=new X.a({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/m,spatialReference:_}),z.extent=e}z.spatialReference||(z.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",z),this._headerInfo={littleEndian:o,isBigTiff:u,ifds:h,...f},!this._headerInfo.isSupported)throw new s.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const r=this._getTileLocation(e,t,i);if(!r)return null;const{ranges:s,actualTileWidth:l,actualTileHeight:o,ifd:c}=r,u=s.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:a.signal})),h=await Promise.all(u),f=h.map(e=>e.data.byteLength).reduce((e,t)=>e+t),d=1===h.length?h[0].data:new ArrayBuffer(f),m=[0],p=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const a=h[t].data;e.set(new Uint8Array(a),i),m[t]=i,i+=a.byteLength,p[t]=a.byteLength}}const{blockWidth:b,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:b,height:y,planes:null,pixelType:null});let x,v,O;if(l!==b||o!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(O=x*b,x<o)for(v=l;v<b;v++)e[O+v]=0;else for(v=0;v<b;v++)e[O+v]=0;else for(e=new Uint8Array(b*y),g.mask=e,x=0;x<o;x++)for(O=x*b,v=0;v<l;v++)e[O+v]=1}return g}async _readIFDs(e,t,i,a,n,r=4,s){if(!a)return null;(a>=t.byteLength||a<0)&&(t=(await this.request(this.url,{range:{from:a+n,to:a+n+this._bufferSize},responseType:"array-buffer",signal:s})).data,n=a+n,a=0);const l=await this._readIFD(t,i,a,n,Fe.a.TIFF_TAGS,r,s);if(e.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(e,t,i,l.nextIFD-n,n,r,s)}async _readIFD(e,t,i,a,n=Fe.a.TIFF_TAGS,r=4,s){if(!e)return null;const l=Object(De.f)(e,t,i,a,n,r);if(l.success){const i=[];if(l.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const n=i.map(e=>e.offlineOffsetSize),r=Math.min.apply(null,n.map(e=>e[0]));if(Math.min.apply(null,n.map(e=>e[0]+e[1]))-r<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:s});e=n,a=r,i.forEach(i=>Object(De.e)(e,t,i,a))}}if(l.ifd.has("GEOKEYDIRECTORY")){const i=l.ifd.get("GEOKEYDIRECTORY"),n=i.values;if(n&&n.length>4){const r=n[0]+"."+n[1]+"."+n[2],l=await this._readIFD(e,t,i.valueOffset+6-a,a,Fe.a.GEO_KEYS,2,s);i.data=l.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:a,to:a+l.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<l.requiredBufferSize?null:this._readIFD(e,t,0,a,Fe.a.TIFF_TAGS,4,s)}}_getTileLocation(e,t,i){const{firstPyramidLevel:a,blockBoundary:n}=this.rasterInfo.storageInfo,r=0===e?0:e-(a-1),s=this._headerInfo.ifds[r];if(!s)return null;const l=Object(De.d)(s,this._headerInfo),o=Be(s,"TILEOFFSETS");if(void 0===o)return null;const c=Be(s,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=n[r];if(t>f||i>d||t<u||i<h)return null;const m=ze(s,"IMAGEWIDTH"),p=ze(s,"IMAGELENGTH"),b=ze(s,"TILEWIDTH"),y=ze(s,"TILELENGTH"),g=l?this.rasterInfo.bandCount:1,x=g*t*(d+1)+i,v=[{from:o[x],to:o[x+g-1]+c[x+g-1]-1}];if(l){let e=!0;for(let t=0;t<g;t++)if(o[x+t]+c[x+t]!==o[x+t+1]){e=!1;break}if(!e)for(let t=0;t<g;t++)v[t]={from:o[x+t],to:o[x+t]+c[x+t]-1}}const O=o[x],w=c[x];return null==O||null==w?null:{ranges:v,ifd:s,actualTileWidth:i===d?m%b:b,actualTileHeight:t===f?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return ge(t)}catch{return null}}};Object(a.a)([Object(u.b)()],Ae.prototype,"_files",void 0),Object(a.a)([Object(u.b)()],Ae.prototype,"_headerInfo",void 0),Object(a.a)([Object(u.b)()],Ae.prototype,"_bufferSize",void 0),Object(a.a)([Object(u.b)({type:String,json:{write:!0}})],Ae.prototype,"datasetFormat",void 0),Ae=Object(a.a)([Object(m.a)("esri.layers.support.rasterDatasets.TIFFRaster")],Ae);const Ee=Ae,Le=new Map;Le.set("CRF",{desc:"Cloud Raster Format",constructor:re}),Le.set("MRF",{desc:"Meta Raster Format",constructor:Pe}),Le.set("TIFF",{desc:"GeoTIFF",constructor:Ee}),Le.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Te}),Le.set("JPG",{desc:"JPG Raster Format",constructor:ve}),Le.set("PNG",{desc:"PNG Raster Format",constructor:ve}),Le.set("GIF",{desc:"GIF Raster Format",constructor:ve}),Le.set("BMP",{desc:"BMP Raster Format",constructor:ve});var Ne=i(388);let He=class extends(Object(b.a)(Object(E.a)(Object(B.a)(Object(z.a)(Object(y.a)(F(Object(L.a)(Object(A.a)(Object(o.a)(p.a)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(l.j)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.s).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new N.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const a=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(a){const e=a.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name="Raster."+e.name,t});i=i.concat(e)}const n=this.rasterInfo.dataType;if(("vector-magdir"===n||"vector-uv"===n)&&Object(l.j)(this.rasterInfo.multidimensionalInfo)){var r;const e=null==(r=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:r.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new N.a({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new N.a({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const a=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=Object(r.b)(a,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return Object(Ne.a)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Le.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:a}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const r={url:t,sourceJSON:a,datasetFormat:n,ioConfig:i||{bandIds:null,sampling:null}};let l,o;if(this.supportedFormats.has(n))return l=Le.get(n).constructor,o=new l(r),await o.open({signal:e.signal}),o;if(n)throw new s.a("rasterfactory:open","not a supported format "+n);const c=Array.from(Le.keys());let u=0;const h=function(){return n=c[u++],n?(l=Le.get(n).constructor,o=new l(r),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null};return h()}static register(e,t,i){Le.has(e.toUpperCase())||Le.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new s.a("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",e=>this.raster.ioConfig.customFetchParameters=e)}};Object(a.a)([Object(u.b)({type:[h.a],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],He.prototype,"bandIds",void 0),Object(a.a)([Object(u.b)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),Object(f.a)(H.a)],He.prototype,"interpolation",void 0),Object(a.a)([Object(u.b)({json:{write:!0}})],He.prototype,"multidimensionalDefinition",void 0),Object(a.a)([Object(u.b)(I.e)],He.prototype,"legendEnabled",void 0),Object(a.a)([Object(u.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],He.prototype,"isReference",void 0),Object(a.a)([Object(u.b)({type:["show","hide"]})],He.prototype,"listMode",void 0),Object(a.a)([Object(u.b)()],He.prototype,"sourceJSON",void 0),Object(a.a)([Object(u.b)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],He.prototype,"version",void 0),Object(a.a)([Object(u.b)()],He.prototype,"title",void 0),Object(a.a)([Object(u.b)({readOnly:!0,json:{read:!1}})],He.prototype,"type",void 0),Object(a.a)([Object(u.b)({type:["ArcGISTiledImageServiceLayer"]})],He.prototype,"operationalLayerType",void 0),Object(a.a)([Object(u.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],He.prototype,"popupEnabled",void 0),Object(a.a)([Object(u.b)({type:n.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],He.prototype,"popupTemplate",void 0),Object(a.a)([Object(u.b)({readOnly:!0})],He.prototype,"defaultPopupTemplate",null),Object(a.a)([Object(u.b)({readOnly:!0,type:[N.a]})],He.prototype,"fields",void 0),Object(a.a)([Object(u.b)({readOnly:!0,type:[N.a]})],He.prototype,"rasterFields",null),Object(a.a)([Object(u.b)({types:r.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:r.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],He.prototype,"renderer",null),Object(a.a)([Object(d.a)("renderer")],He.prototype,"readRenderer",null),He=Object(a.a)([Object(m.a)("esri.layers.ImageryTileLayer")],He);const Je=He},933:function(e,t,i){"use strict";i.d(t,"a",(function(){return h})),i.d(t,"b",(function(){return m})),i.d(t,"c",(function(){return f})),i.d(t,"d",(function(){return o})),i.d(t,"e",(function(){return d})),i.d(t,"f",(function(){return c})),i.d(t,"g",(function(){return u})),i.d(t,"h",(function(){return p}));i(64);var a=i(2);var n=i(735),r=i(28);const s=new Map,l=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,a=this._cachedBlocks;if(a.has(i)){const e=a.get(i);return e.refCount--,e.refCount<=0&&(a.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,a=this._cachedBlocks;if(a.has(i)){const e=a.get(i);return e.ts=Date.now(),e.refCount++,a.delete(i),a.set(i,e),e.block}return null}putBlock(e,t,i,a=null){const n=this._cachedBlocks,r=e+"/"+t;if(n.has(r)){const e=n.get(r);e.ts=Date.now(),e.refCount++}else n.set(r,{block:i,ts:Date.now(),refCount:1,controller:a});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,a=e+"/"+t;i.has(a)&&i.delete(a)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),i=Date.now();for(let a=0;a<t.length&&t[a][1].ts<=i-this._duration;a++)e.delete(t[a][0]);0===e.size&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function o(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(s.has(e)){const t=s.get(e);return t.push(i),t.length-1}return s.set(e,[i]),0}function u(e,t){if(s.has(e)){const i=s.get(e);i[t]=null,i.some(e=>null!=e)||s.delete(e)}}function h(e,t,i){if(!s.has(e))return null==t?l.decreaseRefCount(e,i):0;const a=s.get(e);if(null==a[t])return l.decreaseRefCount(e,i);const n=a[t].cache;if(n.has(i)){const e=n.get(i);if(e.refCount--,0===e.refCount){n.delete(i);for(let e=0;e<a.length;e++)a[e]&&a[e].cache.has(i)&&a[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function f(e,t,i){if(!s.has(e))return null==t?l.getBlock(e,i):null;const a=s.get(e);if(null==a[t]){for(let e=0;e<a.length;e++)if(a[e]&&a[e].cache.has(i)){const t=a[e].cache.get(i);return t.refCount++,t.block}return l.getBlock(e,i)}const n=a[t].cache;if(n.has(i)){const e=n.get(i);return e.refCount++,e.block}for(let r=0;r<a.length;r++)if(r!==t&&a[r]&&a[r]&&a[r].cache.has(i)){const e=a[r].cache.get(i);return e.refCount++,n.set(i,e),e.block}return null}function d(e,t,i,a,n=null){if(!s.has(e))return void(null==t&&l.putBlock(e,i,a,n));const r=s.get(e);if(null==r[t])return void l.putBlock(e,i,a,n);const o={refCount:1,block:a,isResolved:!1,isRejected:!1,controller:n};a.then(()=>o.isResolved=!0).catch(()=>o.isRejected=!0),r[t].cache.set(i,o)}function m(e,t,i){if(!s.has(e))return void(null==t&&l.deleteBlock(e,i));const a=s.get(e);null!=a[t]?a[t].cache.delete(i):l.deleteBlock(e,i)}function p(e,t,i,l,o,c,u=null){const h=function(e,t){if(!s.has(e))return null;const i=s.get(e);return null==i[t]?null:i[t]}(e,t),f=h.extent,{cache:d,rasterInfo:m}=h;if(f&&f.xmin===i.xmin&&f.xmax===i.xmax&&f.ymin===i.ymin&&f.ymax===i.ymax)return;const p=i.clone().normalize(),{spatialReference:b,transform:y}=m,g=new Set;for(let s=0;s<p.length;s++){const e=p[s];if(e.xmax-e.xmin<=l||e.ymax-e.ymin<=l)continue;let t=Object(n.h)(e,b,u);Object(a.j)(y)&&(t=y.inverseTransform(t));const i=new r.a({x:l,y:l,spatialReference:e.spatialReference});if(null==o&&!(o=Object(n.j)(i,b,e,u)))return;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=Object(n.m)(o,m,c||"closest");if(d)return;const{storageInfo:x}=m,{origin:v}=x,O={x:Math.max(0,Math.floor((t.xmin-v.x)/f.x)),y:Math.max(0,Math.floor((v.y-t.ymax)/f.y))},w=Math.ceil((t.xmax-t.xmin)/f.x-.1),I=Math.ceil((t.ymax-t.ymin)/f.y-.1),j=h>0?x.pyramidBlockWidth:x.blockWidth,S=h>0?x.pyramidBlockHeight:x.blockHeight,T=1,_=Math.max(0,Math.floor(O.x/j)-T),R=Math.max(0,Math.floor(O.y/S)-T),k=Math.floor((O.x+w-1)/j)+T,C=Math.floor((O.y+I-1)/S)+T;for(let a=R;a<=C;a++)for(let e=_;e<=k;e++)g.add(`${h}/${a}/${e}`)}d.forEach((e,t)=>{if(!g.has(t)){const e=d.get(t);(null==e||e.isResolved||e.isRejected)&&d.delete(t)}}),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}}}]);
//# sourceMappingURL=163.d3171508.chunk.js.map