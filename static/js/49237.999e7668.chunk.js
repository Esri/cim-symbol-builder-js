"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[49237],{55877:(e,t,i)=>{var s;i.d(t,{u:()=>s}),function(e){e[e.KILOBYTES=1024]="KILOBYTES",e[e.MEGABYTES=1048576]="MEGABYTES",e[e.GIGABYTES=1073741824]="GIGABYTES"}(s||(s={}))},49237:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ue});var s=i(35143),a=i(16868),r=i(69098),n=i(50076),o=i(76460),l=i(77717),c=i(50346),u=i(68134),h=i(46053),f=i(40565),p=i(81806),d=(i(47249),i(85842)),m=i(25515),y=i(19502),g=i(65624),w=i(31362),x=i(24709),v=i(11270),b=i(94729),I=i(8350),S=i(21617),_=i(5682),A=i(78817),T=i(95363),R=i(44135),M=i(51939),C=i(44038),O=i(16175),F=i(10410),P=i(69539),k=i(76797),D=i(13312),N=i(38042),E=i(66486),L=i(52297);function B(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function z(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function J(e){const{axes:t}=e.domain,i=Object.keys(t),s=[],a=[];let r=-1,n=-1,o=[];for(let w=0;w<i.length;w++){const e=i[w];B(e)?r=w:z(e)&&(n=w);const l=t[e],c=[];if("values"in l){l.values.forEach((e=>c.push("string"==typeof e?new Date(e).getTime():e)));const e=c[1]-c[0];s.push([c[0]-.5*e,c[c.length-1]+.5*e]),a.push(e)}else{const{start:e,stop:t,num:i}=l,r=(t-e)/(i-1);s.push([e-.5*r,t+.5*r]),a.push(r);for(let s=0;s<i;s++)c.push(e+r*s)}o.push({name:e,values:c,extent:[c[0],c[c.length-1]]})}r>-1&&-1===n?n=0===r?1:0:n>-1&&-1===r?r=0===n?1:0:-1===n&&-1===r&&(r=0,n=1),o=o.filter(((e,t)=>!(t===r||t===n)));const{referencing:l}=e.domain,c=l.find((e=>e.coordinates.includes(i[r]))).system.id,u=c?.slice(c.lastIndexOf("/")+1),h=null==u||"CRS84"===u?4326:Number(u),f=new D.A({wkid:h}),[p,d]=s[r],[m,y]=s[n],g=new k.A({xmin:p,xmax:d,ymin:m,ymax:y,spatialReference:f});return{width:Math.round(g.width/a[r]),height:Math.round(g.height/a[n]),extent:g,dimensions:o}}function V(e){const t=(0,N.Z0)();return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function $(){return Math.round(255*Math.random())}function U(e){const t={},{parameters:i}=e;if(!i)return t;for(const[s,a]of Object.entries(i)){const{type:e,description:i,unit:r,categoryEncoding:n,observedProperty:o}=a;if("Parameter"===e&&(t[s]={},i&&(t[s].description=V(i)),r&&(t[s].unit=r.label?V(r.label):null,t[s].symbol=r.symbol?.value),n)){const e=Object.entries(n).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let i=!1;o?.categories?.length&&(o.categories.forEach((t=>{if(!t.id)return;const s=t.id.slice(t.id.lastIndexOf("/")+1),a=e.find((e=>e.ClassName===s));if(!a)return;const r=t.label?V(t.label):null;if(a.Label=r,t.preferredColor){const e=P.A.fromHex(t.preferredColor);e&&(i=!0,a.Red=e.r,a.Green=e.g,a.Blue=e.b)}})),i&&e.forEach((e=>{null==e.Red&&(e.Red=$(),e.Green=$(),e.Blue=$())})));const a={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map((e=>({attributes:e})))};i&&a.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[s].attributeTable=a}}return t}function j(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let s=0;s<e.length;s++){const a=e[s];null!=a&&(a<t&&(t=a),a>i&&(i=a))}return(0,L.X1)(t,i)}function G(e,t,i){const s=e.map(((e,i)=>({name:e,count:t[i]}))).sort(((e,t)=>e.name>t.name?-1:1)),a=(r=1,e=>r*=e.count);var r;const n=[...s.slice(1),{name:"",count:1}].reverse().map(a).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=n[s.findIndex((({name:t})=>t===e[l]))]*(i%t[l]),i=Math.floor(i/t[l]);return o}var H=i(15359),Z=i(23032),q=i(68347),W=i(52494),X=i(86866);let Y=class extends F.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i,s={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[r,n]=a.storageInfo.tileInfo.size,{sliceId:o}=s,{pixelBlocks:l}=this.source,c={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==a.dataType,tileSize:{width:r,height:n},level:e,row:t,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,s):(0,W.J$)(c);return Promise.resolve(u)}const a=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(a)}async _open(e){const t=this.source,{pixelBlocks:i,attributeTable:s,statistics:a,histograms:r,name:n,nativeExtent:o,transform:l}=t,c=i[0],{width:u,height:h,pixelType:f}=c,p=t.extent??new k.A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new D.A({wkid:3857})}),d=t.isPseudoSpatialReference??!t.extent,m={x:p.width/u,y:p.height/h},y={...t.keyProperties};s&&(y.DataType="Thematic");const g=new Z.A({width:u,height:h,pixelType:f,extent:p,nativeExtent:o,attributeTable:s,transform:l,pixelSize:m,spatialReference:p.spatialReference,bandCount:c.pixels.length,keyProperties:y,multidimensionalInfo:t.multidimensionalInfo,statistics:a,isPseudoSpatialReference:d,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(g),this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),g.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,g.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},e),g.multidimensionalInfo||(this.source=null),this.datasetName=n}async _buildInMemoryRaster(e,t,i){const{rasterInfo:s}=this,a=s.storageInfo.maximumPyramidLevel??0,r="thematic"!==s.dataType,o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a,useBilinear:r},i):Promise.resolve((0,W.lD)(e,t,a,r)),l=null!=s.statistics,u=null!=s.histograms,h=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,X.f4)(e)),f=await(0,c.Lx)([o,h]);if(!f[0].value&&f[1].value)throw new n.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=f[0].value,l||(s.statistics=f[1].value?.statistics),u||(s.histograms=f[1].value?.histograms)}async _buildMDimStats(e,t,i){for(let s=0;s<t.variables.length;s++){const a=t.variables[s];if(a.statistics)continue;const r=a.dimensions.map((e=>new H.A({variableName:a.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0}))),n=(0,q.NG)(r,t),o=null==n?null:e[n];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,X.eH)(o);a.statistics=l.statistics,a.histograms||(a.histograms=l.histograms)}}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Y.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],Y.prototype,"source",void 0),(0,s._)([(0,h.MZ)()],Y.prototype,"url",null),Y=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],Y);const K=Y;var Q=i(77725);let ee=class extends F.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:s,attributeTable:a,bandNames:r}=await this._fetchData(e),{statistics:n,histograms:o}=(0,X.eH)(i[0]),l=r?.map((e=>({BandName:e}))),c={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:l},u=new K({source:{extent:t,pixelBlocks:i,attributeTable:a?Q.A.fromJSON(a):null,multidimensionalInfo:s,statistics:n,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;const h=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",h.slice(0,h.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}async _fetchData(e){const t=this.source??(await this.request(this.url,{signal:e?.signal})).data,i="imagery-tile-layer:open-coverage-json";if("coverage"!==t.type?.toLowerCase()||"grid"!==t.domain?.domainType?.toLowerCase())throw new n.A(i,"Only coverage with Grid domain type is supported");if(!t.ranges)throw new n.A(i,"Missing ranges in the grid coverage data");if(!t.domain.referencing?.length)throw new n.A(i,"Missing domain referencing in the grid coverage data");const s=Object.values(t.ranges);for(let a=0;a<s.length;a++){const{axisNames:e,shape:t,type:r,values:o}=s[a];if(!("ndarray"===r.toLowerCase()&&o?.length&&e?.length&&t?.length))throw new n.A(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!B(e[e.length-1])||!z(e[e.length-2]))throw new n.A(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){const{width:t,height:i,extent:s,dimensions:a}=J(e),{ranges:r}=e,n=Object.keys(r).sort(((e,t)=>e<t?-1:1)),o=[];for(let f=0;f<n.length;f++){const e=n[f];a?.length&&o.push({name:e,dimensions:a})}const l=U(e);o.forEach((e=>l[e.name]&&Object.assign(e,l[e.name])));const c=o.length?{variables:o}:void 0,u=[];for(let f=0;f<n.length;f++){const e=n[f],{values:s,dataType:o,axisNames:l,shape:c}=r[e],h=c.length>2?f*c.slice(0,-2).reduce(((e,t)=>e*t)):0,p=l.slice(0,-2),d=c.slice(0,-2),m="float"===o?"f32":j(s),y=t*i,g=s.length/y;for(let r=0;r<g;r++){const e=E.A.createEmptyBand(m,y),n=new Uint8Array(y).fill(255);let o=!1;const l=r*y;for(let t=0;t<y;t++){const i=s[l+t];null==i?(n[t]=0,o=!0):e[t]=i}if(0===f||a?.length){const s=new E.A({width:t,height:i,mask:o?n:null,pixels:[e],pixelType:m});s.updateStatistics(),a?.length?u[G(p,d,r)+h]=s:u.push(s)}else{const t=u[r];t.pixels.push(e),o?t.mask&&(t.mask=E.A.combineBandMasks([t.mask,n])):t.mask=o?n:null}}}const h=Object.values(l).find((e=>e.attributeTable))?.attributeTable;return{extent:s,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:n}}(t)}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)({constructOnly:!0})],ee.prototype,"source",void 0),ee=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],ee);const te=ee;var ie=i(18690),se=i(80963),ae=i(86769),re=i(29754);function ne(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function oe(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new D.A({wkid:t});if(e=String(e).trim(),(0,se.jp)(e))return new D.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),a=i.indexOf("PROJCS"),r=a>-1?a:i.indexOf("GEOGCS");if(-1===r)return null;const n=e.slice(r,e.lastIndexOf("]",s)+1).trim(),o=e.slice(s,e.lastIndexOf("]")).trim();t=le(n);const l=new D.A(t?{wkid:t}:{wkt:n}),c=le(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=le(e),new D.A(0!==t?{wkid:t}:{wkt:e})):null}function le(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(","),s=i[0]?.toLowerCase();if(("epsg"===s||"esri"===s)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function ce(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if((0,ae.g7)(e,"SRS")){if(!t.spatialReference){const i=(0,ae.mX)(e);t.spatialReference=oe(i)}}else if((0,ae.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:i,transform:s}=function(e){const t=(0,ae.V6)(e,"GeodataXform"),i=oe((0,ae.v7)(t,"SpatialReference/WKID")||(0,ae.mX)(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const s=(0,ae.v7)(t,"PolynomialOrder")??1,a=(0,ae.Ui)(t,"CoeffX/Double"),r=(0,ae.Ui)(t,"CoeffY/Double"),n=(0,ae.Ui)(t,"InverseCoeffX/Double"),o=(0,ae.Ui)(t,"InverseCoeffY/Double"),l=ne(a,r),c=ne(n,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new re.A({spatialReference:i,polynomialOrder:s,forwardCoefficients:l,inverseCoefficients:c}):null}}(e);t.transform=s,t.spatialReference||(t.spatialReference=i)}else(0,ae.IC)(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=(0,ae.mX)(e)));else if((0,ae.g7)(e,"PAMRasterBand")){const i=function(e){const t=(0,ae.v7)(e,"NoDataValue"),i=(0,ae.V6)(e,"Histograms/HistItem"),s=(0,ae.v7)(i,"HistMin"),a=(0,ae.v7)(i,"HistMax"),r=(0,ae.v7)(i,"BucketCount"),n=(0,ae.mX)(i,"HistCounts")?.split("|").map((e=>Number(e)));let o,l,c,u;(0,ae.IC)(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":u=t}}));const h=(0,ae.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:n?.length&&null!=s&&null!=a?{min:s,max:a,size:r||n.length,counts:n}:null,sourceBandIndex:h,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:u}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}));const i=t.rasterBands;if(i.length){const e=!!i[0].statistics;t.statistics=e?i.map((e=>e.statistics)).filter(ie.Ru):null;const s=!!i[0].histogram;t.histograms=s?i.map((e=>e.histogram)).filter(ie.Ru):null}return t}var ue=i(37267);let he=class extends F.A{fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:a,transform:r}=await this._fetchAuxiliaryData(e);const n=!i;n&&(i=new D.A({wkid:3857})),a?.length&&null==s&&(s=(0,X.Pg)(a));const{width:o,height:l}=t;let c=new k.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new K({source:{extent:u,nativeExtent:c,transform:r,pixelBlocks:[t],statistics:s,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,ue.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new n.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),a="gif"===s||"bmp"===s||!(0,p.A)("ios"),r=await this.decodePixelBlock(t,{format:s,useCanvas:a,hasNoZlibMask:!0});if(null==r)throw new n.A("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(e){const t=e?.signal,{skipExtensions:i=[],skipMapInfo:s}=this.ioConfig,a=s||i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),r=this.datasetFormat,n="JPG"===r?"jgw":"PNG"===r?"pgw":"BMP"===r?"bpw":null,o=n&&i.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:t}),l=await(0,c.Lx)([a,o]);if(t?.aborted)throw(0,c.NK)();const u=ce(l[0].value?.data);if(!u.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;u.transform=6===e?.length?new re.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return u}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],he);const fe=he;var pe=i(30726),de=i(90534),me=i(19247),ye=i(49653),ge=i(88235),we=i(82356),xe=i(26855),ve=i(25213);let be=class extends F.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:r}=this.rasterInfo,{transposeInfo:n}=a,o=null!=n&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const l=o?0:a.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${l}/${t}/${i}`,u=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=o?n.tileSize:a.tileInfo.size,p=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==p)return null;const d=a.blockBoundary[e];if("jpg"!==a.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return p;const{origin:m,blockWidth:y,blockHeight:g}=a,{x:w,y:x}=this.getPyramidPixelSize(e),v=Math.round((r.xmin-m.x)/w)%y,b=Math.round((r.xmax-m.x)/w)%y||y,I=Math.round((m.y-r.ymax)/x)%g,S=Math.round((m.y-r.ymin)/x)%g||g,_=i===d.minCol?v:0,A=t===d.minRow?I:0,T=i===d.maxCol?b:y,R=t===d.maxRow?S:g;return(0,W.z$)(p,{x:_,y:A},{width:T-_,height:R-A}),p}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),a[1]?.[0]?.counts?.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let r=a-s+this._levelOffset;const n=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,s++,i=this.identifyPixelLocation(n,s,t.datumTransformation),null===i)return null}return-1===r||null==i?null:s}async _open(e){const t=e?.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new n.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new n.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=s.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===s.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name?.slice(s.name.indexOf("/")+1)??"";const a=await this._fetchRasterInfo({signal:t});if(null==a)throw new n.A("image-server-raster:open","cannot initialize image service");(0,ve.E9)(a,s);const r="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:a,maxLOD:r}=t;if(null!=a&&null!=r)return ge.A.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=a&&e<=r))});if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,a=i?t(i):1/0,r=s?t(s):-1/0;return ge.A.fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=a&&i>=r}))})}return ge.A.fromJSON(e)}(s.tileInfo,s):ge.A.fromJSON(s.tileInfo);(0,pe.Lw)(r);const[o,l]=this._computeMinMaxLOD(a,r),{extent:c,pixelSize:u}=a,h=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:p}=r;("Map"!==this.tileType&&0!==s.maxScale||Math.abs(u.x-u.y)>h||!p.some((e=>Math.abs(e.resolution-f)<h)))&&(u.x=u.y=o.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const d=o.level-l.level,[m,y]=r.size,g=[],w=[];p.forEach(((e,t)=>{e.level>=l.level&&e.level<=o.level&&g.push({x:e.resolution,y:e.resolution}),t<p.length-1&&w.push(Math.round(10*e.resolution/p[t+1].resolution)/10)})),g.sort(((e,t)=>e.x-t.x));const x=this.computeBlockBoundary(c,m,y,r.origin,g,d),v=g.length>1?g.slice(1):null;let b;s.transposeInfo&&(b={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:a.keyProperties?._yxs.PacketSize??0});const I=w.length<=1||w.length>=3&&w.slice(0,-1).every((e=>e===w[0]))?w[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/d))/10;if(a.storageInfo=new ye.A({blockWidth:r.size[0],blockHeight:r.size[1],pyramidBlockWidth:r.size[0],pyramidBlockHeight:r.size[1],pyramidResolutions:v,pyramidScalingFactor:I,compression:r.format,origin:r.origin,firstPyramidLevel:1,maximumPyramidLevel:d,tileInfo:r,transposeInfo:b,blockBoundary:x}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new xe.A,e.extent=e.transform.forwardTransform(t))}(a),this._set("rasterInfo",a),s.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:a.storageInfo.tileInfo,parsedUrl:(0,de.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new we.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),a=D.A.fromJSON(t.spatialReference||e.spatialReference),r=new me.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a});return new Z.A({width:i,height:s,bandCount:3,extent:k.A.fromJSON(e),spatialReference:a,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,ve.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),a=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data?.slices)).catch((()=>null)):null,r=await Promise.all([s,a]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:a}=t,r=t.lodAt(Math.max.apply(null,a.map((e=>e.level)))),n=t.lodAt(Math.min.apply(null,a.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=a[0].level,[r,n];if("Raster"===o)return[a.find((e=>e.resolution===i.x))??r,n];const{minScale:l,maxScale:c}=this.sourceJSON;let u=r;c>0&&(u=a.find((e=>Math.abs(e.scale-c)<s)),u||(u=a.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??r));let h=n;return l>0&&(h=a.find((e=>Math.abs(e.scale-l)<s))??n,this._levelOffset=h.level-n.level),[u,h]}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],be.prototype,"tileType",void 0),be=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],be);const Ie=be;var Se=i(10798);const _e=new Map;_e.set("Int8","s8"),_e.set("UInt8","u8"),_e.set("Int16","s16"),_e.set("UInt16","u16"),_e.set("Int32","s32"),_e.set("UInt32","u32"),_e.set("Float32","f32"),_e.set("Float64","f32"),_e.set("Double64","f32");const Ae=new Map;Ae.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ae.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ae.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ae.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Te=class extends F.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i,s={}){const{blockWidth:a,blockHeight:r,blockBoundary:n}=this.rasterInfo.storageInfo,o=n[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(a*r);return new E.A({width:a,height:r,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,d=this._getBandSegmentCount(),m=[];let y=0;for(y=0;y<d;y++)p&&!p.includes(y)||m.push(this.request(this._files.data,{range:{from:u[y].from,to:u[y].to},responseType:"array-buffer",signal:s.signal}));const g=await Promise.all(m),w=g.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),x=new Uint8Array(w),v=[];let b=0;for(y=0;y<d;y++)v.push(b),x.set(new Uint8Array(g[y].data),b),b+=g[y].data.byteLength;const I=Ae.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(x.buffer,{width:a,height:r,format:I,planes:p?.length||l,offsets:v,pixelType:c});if(null==S)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==I&&!S.mask&&(_=_[0],null!=_)){const e=S.width*S.height,t=new Uint8Array(e);if(Math.abs(_)>1e24)for(y=0;y<e;y++)Math.abs((S.pixels[0][y]-_)/_)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)S.pixels[0][y]!==_&&(t[y]=1);S.mask=t}let A=0,T=0;if(h!==a||f!==r){let e=S.mask;if(e)for(y=0;y<r;y++)if(T=y*a,y<f)for(A=h;A<a;A++)e[T+A]=0;else for(A=0;A<a;A++)e[T+A]=0;else for(e=new Uint8Array(a*r),S.mask=e,y=0;y<f;y++)for(T=y*a,A=0;A<h;A++)e[T+A]=1}return S}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:a}=this._parseHeader(i.data),{skipMapInfo:r,skipExtensions:n=[]}=this.ioConfig;if(!n.includes("aux.xml")&&!r){const t=await this._fetchAuxiliaryData(e);null!=t&&(s.statistics=t.statistics??s.statistics,s.histograms=t.histograms,t.histograms&&null==s.statistics&&(s.statistics=(0,X.Pg)(t.histograms)))}r&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=a;const o=await this.request(a.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,s,a,r,n;if(Se.Z){for(i=new Uint8Array(e),a=new ArrayBuffer(e.byteLength),s=new Uint8Array(a),r=0;r<e.byteLength/4;r++)for(n=0;n<4;n++)s[4*r+n]=i[4*r+3-n];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,p=[],d=this._getBandSegmentCount();let m=0,y=-1;for(;m<this._storageIndex.length;){y++;const e=Math.ceil(h/l/u**y)-1,t=Math.ceil(f/c/u**y)-1;m+=(e+1)*(t+1)*d*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return Ae.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:a,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:n,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,p=0;for(h=0;h<e;h++)p=r**h,c=Math.ceil(n/s/p),u=Math.ceil(o/a/p),f+=c*u;p=r**e,c=Math.ceil(n/s/p),u=Math.ceil(o/a/p),f+=t*c+i,f*=4*l;const d=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const g=[];for(let w=0;w<l;w++)m=d[4*w]*2**32+d[4*w+1],y=m+d[4*w+2]*2**32+d[4*w+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?s:Math.ceil(n/p)-s*(c-1),actualTileHeight:t<u-1?a:Math.ceil(o/p)-a*(u-1)}}_parseHeader(e){const t=(0,ae.V6)(e,"MRF_META/Raster");if(!t)throw new n.A("mrf:open","not a valid MRF format");const i=(0,ae.V6)(t,"Size"),s=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),o=((0,ae.mX)(t,"Compression")||"none").toLowerCase();if(!Ae.has(o))throw new n.A("mrf:open","currently does not support compression "+o);const l=(0,ae.mX)(t,"DataType")||"UInt8",c=_e.get(l);if(null==c)throw new n.A("mrf:open","currently does not support pixel type "+l);const u=(0,ae.V6)(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),p=(0,ae.V6)(t,"DataValues");let d,m;if(p&&(m=p.getAttribute("NoData"),null!=m&&(d=m.trim().split(" ").map((e=>parseFloat(e))))),(0,ae.V6)(e,"MRF_META/CachedSource"))throw new n.A("mrf:open","currently does not support MRF referencing other data files");const y=(0,ae.V6)(e,"MRF_META/GeoTags"),g=(0,ae.V6)(y,"BoundingBox");let w,x=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),s=parseFloat(g.getAttribute("maxy")),a=(0,ae.mX)(y,"Projection")||"";let r=D.A.WGS84;if("LOCAL_CS[]"!==a)if(a.toLowerCase().startsWith("epsg:")){const e=Number(a.slice(5));isNaN(e)||0===e||(r=new D.A({wkid:e}))}else r=oe(a)??D.A.WGS84;else x=!0,r=new D.A({wkid:3857});w=new k.A(e,t,i,s),w.spatialReference=r}else x=!0,w=new k.A({xmin:-.5,ymin:.5-a,xmax:s-.5,ymax:.5,spatialReference:new D.A({wkid:3857})});const v=(0,ae.V6)(e,"MRF_META/Rsets"),b=parseInt(v?.getAttribute("scale")||"2",10),I=w.spatialReference,S=new ye.A({origin:new me.A({x:w.xmin,y:w.ymax,spatialReference:I}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:b}),_=new me.A({x:w.width/s,y:w.height/a,spatialReference:I}),A=new Z.A({width:s,height:a,extent:w,isPseudoSpatialReference:x,spatialReference:I,bandCount:r,pixelType:c,pixelSize:_,noDataValue:d,storageInfo:S}),T=(0,ae.mX)(e,"datafile"),R=(0,ae.mX)(e,"IndexFile");return{rasterInfo:A,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",Ae.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return ce(t)}catch{return null}}};(0,s._)([(0,h.MZ)()],Te.prototype,"_files",void 0),(0,s._)([(0,h.MZ)()],Te.prototype,"_storageIndex",void 0),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.MRFRaster")],Te);const Re=Te;var Me=i(50611);function Ce(e){const t=e.fields,i=e.records,s=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",a=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),r=a.map((e=>e.name)),n=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[s]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];n.push({attributes:t})})),{displayFieldName:"",fields:a,features:n}}class Oe{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),a=t.getUint16(8,!0),r=t.getUint16(10,!0),n={version:i,recordCount:s,headerByteCount:a,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Me.w)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<s&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,Me.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.slice(0,4),10),parseInt(s.slice(4,6),10)-1,parseInt(s.slice(6,8),10)))}o+=t.length})),c.push(i)):o+=r}}return{header:n,fields:l,records:c,recordSet:Ce({fields:l,records:c})}}}var Fe=i(87018),Pe=i(48613);const ke=(e,t)=>e.get(t)?.values,De=(e,t)=>e.get(t)?.values?.[0];let Ne=class extends F.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i,s={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;const a=await this._fetchRawTiffTile(e,t,i,!1,s);if(null!=a&&this._headerInfo.hasMaskBand){const r=await this._fetchRawTiffTile(e,t,i,!0,s);null!=r&&r.pixels[0]instanceof Uint8Array&&(a.mask=r.pixels[0])}return a}async _open(e){const t=e?e.signal:null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new n.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:s,firstIFDPos:a,isBigTiff:r}=(0,Fe.uT)(i),l=[];await this._readIFDs(l,i,s,a,0,r?8:4,t);const{imageInfo:c,rasterInfo:u}=function(e){const t=(0,Fe.uc)(e),{width:i,height:s,tileWidth:a,tileHeight:r,planes:n,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:p,tileBoundary:d,affine:m,metadata:y}=t,g=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let w=oe(g),x=!!t.isPseudoGeographic;null==w&&(x=!0,w=new D.A({wkid:3857}));const v=new k.A({...t.extent,spatialReference:w}),b=new me.A(v?{x:v.xmin,y:v.ymax,spatialReference:w}:{x:0,y:0}),I=new ye.A({blockWidth:a,blockHeight:r,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:p,blockBoundary:d}),S=new me.A({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/s,spatialReference:w}),_=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let A=null;const T=De(e[0],"PHOTOMETRICINTERPRETATION"),R=ke(e[0],"COLORMAP");if(T<=3&&R?.length>3&&R.length%3==0){A=[];const e=R.length/3;for(let t=0;t<e;t++)A.push([t,R[t]>>>8,R[t+e]>>>8,R[t+2*e]>>>8])}const M=new Z.A({width:i,height:s,bandCount:n,pixelType:o,pixelSize:S,storageInfo:I,spatialReference:w,isPseudoSpatialReference:x,keyProperties:_,extent:v,colormap:A,statistics:y?y.statistics:null});if(m?.length&&(M.nativeExtent=new k.A({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:w}),M.transform=new re.A({polynomialOrder:1,forwardCoefficients:[m[2]+m[0]/2,m[5]-m[3]/2,m[0],m[3],-m[1],-m[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new me.A({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/s,spatialReference:w}),I.origin.x=-.5,I.origin.y=.5),p){const{x:e,y:t}=M.pixelSize;p.forEach((i=>{i.x*=e,i.y*=t}))}return{imageInfo:t,rasterInfo:M}}(l),h=(0,Fe.zS)(l),f=(0,Fe.r9)(l);if(this._headerInfo={littleEndian:s,isBigTiff:r,ifds:l,pyramidIFDs:h,maskIFDs:f,...c},this._set("rasterInfo",u),!c.isSupported)throw new n.A("tiffraster:open","this tiff is not supported: "+c.message);if(!c.tileWidth)throw new n.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");u.isPseudoSpatialReference&&o.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const p=l[0].get("PREDICTOR")?.values?.[0],d=l[0].get("SAMPLEFORMAT")?.values?.[0];if(3===d&&2===p)throw new n.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:m,skipExtensions:y=[]}=this.ioConfig;if(!y.includes("aux.xml")&&!m){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,X.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new me.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,u)}y.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||m||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType="thematic")),m&&this.updateImageSpaceRasterInfo(u),this.updateTileInfo()}async _readIFDs(e,t,i,s,a,r=4,n){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+a,to:s+a+this._bufferSize},responseType:"array-buffer",signal:n})).data,a=s+a,s=0);const o=await this._readIFD(t,i,s,a,Pe.A.tiffTags,r,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-a,a,r,n)}async _readIFD(e,t,i,s,a=Pe.A.tiffTags,r=4,n){if(!e)return null;const o=(0,Fe.JM)(e,t,i,s,a,r);if(o.success){const i=[];if(o.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)).filter(ie.Ru),r=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-r<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:n});e=a,s=r,i.forEach((i=>(0,Fe.Cr)(e,t,i,s)))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i?.values;if(a&&a.length>4){const r=a[0]+"."+a[1]+"."+a[2],o=await this._readIFD(e,t,i.valueOffset+6-s,s,Pe.A.geoKeys,2,n);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:s,to:s+o.requiredBufferSize+4},responseType:"array-buffer",signal:n});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,s,Pe.A.tiffTags,4,n)}}async _fetchRawTiffTile(e,t,i,s,a={}){const r=this._getTileLocation(e,t,i,s);if(!r)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:a.signal}))),h=await Promise.all(u),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),p=1===h.length?h[0].data:new ArrayBuffer(f),d=[0],m=[0];if(h.length>1){const e=new Uint8Array(p);for(let t=0,i=0;t<h.length;t++){const s=h[t].data;e.set(new Uint8Array(s),i),d[t]=i,i+=s.byteLength,m[t]=s.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),w=await this.decodePixelBlock(p,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:d,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==w)return null;let x,v,b;if(o!==y||l!==g){let e=w.mask;if(e)for(x=0;x<g;x++)if(b=x*y,x<l)for(v=o;v<y;v++)e[b+v]=0;else for(v=0;v<y;v++)e[b+v]=0;else for(e=new Uint8Array(y*g),w.mask=e,x=0;x<l;x++)for(b=x*y,v=0;v<o;v++)e[b+v]=1}return w}_getTileLocation(e,t,i,s=!1){const{firstPyramidLevel:a,blockBoundary:r}=this.rasterInfo.storageInfo,n=0===e?0:e-(a-1),{_headerInfo:o}=this;if(!o)return null;const l=s?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!l)return null;const c=(0,Fe.XO)(l,o),u=ke(l,"TILEOFFSETS");if(void 0===u)return null;const h=ke(l,"TILEBYTECOUNTS"),{minRow:f,minCol:p,maxRow:d,maxCol:m}=r[n];if(t>d||i>m||t<f||i<p)return null;const y=De(l,"IMAGEWIDTH"),g=De(l,"IMAGELENGTH"),w=De(l,"TILEWIDTH"),x=De(l,"TILELENGTH"),v=[];if(c){const{bandCount:e}=this.rasterInfo;for(let s=0;s<e;s++){const e=s*(d+1)*(m+1)+t*(m+1)+i;v[s]={from:u[e],to:u[e]+h[e]-1}}}else{const e=t*(m+1)+i;v.push({from:u[e],to:u[e]+h[e]-1})}for(let b=0;b<v.length;b++)if(null==v[b].from||!v[b].to||v[b].to<0)return null;return{ranges:v,ifd:l,actualTileWidth:i===m&&y%w||w,actualTileHeight:t===d&&g%x||x}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return ce(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),i=Oe.parse(t);return i?.recordSet?Q.A.fromJSON(i.recordSet):null}catch{return null}}};(0,s._)([(0,h.MZ)()],Ne.prototype,"_files",void 0),(0,s._)([(0,h.MZ)()],Ne.prototype,"_headerInfo",void 0),(0,s._)([(0,h.MZ)()],Ne.prototype,"_bufferSize",void 0),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Ne=(0,s._)([(0,d.$)("esri.layers.support.rasterDatasets.TIFFRaster")],Ne);const Ee=Ne,Le=new Map;Le.set("MRF",{desc:"Meta Raster Format",constructor:Re}),Le.set("TIFF",{desc:"GeoTIFF",constructor:Ee}),Le.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ie}),Le.set("JPG",{desc:"JPG Raster Format",constructor:fe}),Le.set("PNG",{desc:"PNG Raster Format",constructor:fe}),Le.set("GIF",{desc:"GIF Raster Format",constructor:fe}),Le.set("BMP",{desc:"BMP Raster Format",constructor:fe}),Le.set("CovJSON",{desc:"COVJSON Raster Format",constructor:te}),Le.set("MEMORY",{desc:"In Memory Raster Format",constructor:K});class Be{static get supportedFormats(){const e=new Set;return Le.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,source:s,sourceJSON:a}=e;let r=e.datasetFormat??i?.datasetFormat;null==r&&(t.includes(".")?r=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===s?.type?.toLowerCase()?r="CovJSON":s?.extent&&s.pixelblocks&&(r="MEMORY")),"OVR"===r||"TIF"===r?r="TIFF":"JPG"===r||"JPEG"===r||"JFIF"===r?r="JPG":"COVJSON"===r&&(r="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const o={url:t,source:s,sourceJSON:a,datasetFormat:r,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(o).forEach((e=>{null==o[e]&&delete o[e]})),r){if(!this.supportedFormats.has(r))throw new n.A("rasterfactory:open","not a supported format "+r);if("CRF"===r)throw new n.A("rasterfactory:open",`cannot open raster: ${t}`);const i=new(0,Le.get(r).constructor)(o);return await i.open({signal:e.signal}),i}const l=Array.from(Le.keys()).filter((e=>"CovJSON"!==e&&"Memory"!==e));let c=0;const u=()=>{if(r=l[c++],!r)return null;if("CRF"===r)return null;const t=new(0,Le.get(r).constructor)(o);return t.open({signal:e.signal}).then((()=>t)).catch((()=>u()))};return u()}static register(e,t,i){Le.has(e.toUpperCase())||Le.set(e.toUpperCase(),{desc:t,constructor:i})}}var ze=i(81633),Je=i(30973),Ve=i(61701);let $e=class extends((0,g.dM)((0,_.j)((0,v.q)((0,b.A)((0,I.H)((0,w.d)((0,x.o)((0,A.e)((0,y.b)((0,S.J)((0,l.P)(r.A.ClonableMixin(m.A))))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,c.sg)((async(e,t,s)=>{const{save:a,saveAs:r}=await i.e(20964).then(i.bind(i,20964));switch(e){case Ve.X.SAVE:return a(this,t);case Ve.X.SAVE_AS:return r(this,s,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.QP).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[(0,M.rZ)("Pixel Value"),(0,M.dy)("Raw Pixel Value")],t=this.raster?.rasterInfo??this.serviceRasterInfo,i=t?.attributeTable;if(i){const t=(0,M.jC)(i);e.push(...t)}const s=t?.dataType,a=t?.multidimensionalInfo;if(("vector-magdir"===s||"vector-uv"===s)&&null!=a){const t=a.variables[0].unit?.trim(),i=(0,M.DV)(t),s=(0,M.y6)();e.push(i,s)}if(a){const t=(0,M.AL)(a);e.push(...t)}return e}createPopupTemplate(e){const{rasterFields:t}=this,i=e?.visibleFieldNames??new Set(t.map((({name:e})=>e)).filter((e=>e!==M.F_.rawServicePixelValue))),s=(0,Je.tn)({fields:t,title:this.title},{...e,visibleFieldNames:i}),{rasterInfo:a}=this.raster;return s?.fieldInfos&&a&&(0,M.h4)(s.fieldInfos,a),s}async generateRasterInfo(e,t){if(e=(0,f.PZ)(C.A,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(i){if(i instanceof n.A)throw i;throw new n.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(Ve.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Ve.X.SAVE_AS,t,e)}write(e,t){const i=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new n.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t="Function"===this.raster.datasetFormat,!t&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:s}=this;if(!t&&!s)throw new n.A("imagery-tile-layer:open","missing url or source parameter");s?await this._openFromSource(s,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const i=this.raster.rasterInfo;if(!i)throw new n.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,u.wB)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const s=[e];t&&(0,ze.UD)(t.toJSON(),s);const a=await Promise.all(s.map((e=>Be.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i})))),r=a.findIndex((e=>null==e));if(r>-1)throw new n.A("imagery-tile-layer:open",`cannot open raster: ${s[r]}`);return this._primaryRasters=a,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await Be.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==i)throw new n.A("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){const i="the tiled imagery data source is not supported",s="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!s)throw new n.A("imagery-tile-layer:open",i);"MEMORY"===s&&(e={...e,pixelBlock:void 0,pixelBlocks:[e.pixelBlock]});const a=await Be.open({url:"",source:e,datasetFormat:s,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==a)throw new n.A("imagery-tile-layer:open",i);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(e,t){const i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>i[e.url]=e));const s=(0,ze.vt)(e.functionDefinition?.toJSON()??e.toJSON(),i),a=new O.A({rasterFunction:s});return await a.open(t),a}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(i){i instanceof n.A&&o.A.getLogger(this).error("imagery-tile-layer:open",i.message),o.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,s._)([(0,h.MZ)({clonable:!1})],$e.prototype,"_primaryRasters",void 0),(0,s._)([(0,h.MZ)(T.fV)],$e.prototype,"legendEnabled",void 0),(0,s._)([(0,h.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$e.prototype,"isReference",void 0),(0,s._)([(0,h.MZ)({type:["show","hide"]})],$e.prototype,"listMode",void 0),(0,s._)([(0,h.MZ)({json:{read:!0,write:!0}})],$e.prototype,"blendMode",void 0),(0,s._)([(0,h.MZ)({type:C.A,json:{name:"renderingRule",write:!0}})],$e.prototype,"rasterFunction",void 0),(0,s._)([(0,h.MZ)()],$e.prototype,"sourceJSON",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],$e.prototype,"version",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,json:{read:!1}})],$e.prototype,"type",void 0),(0,s._)([(0,h.MZ)({type:["ArcGISTiledImageServiceLayer"]})],$e.prototype,"operationalLayerType",void 0),(0,s._)([(0,h.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],$e.prototype,"popupEnabled",void 0),(0,s._)([(0,h.MZ)({type:a.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],$e.prototype,"popupTemplate",void 0),(0,s._)([(0,h.MZ)({readOnly:!0})],$e.prototype,"defaultPopupTemplate",null),(0,s._)([(0,h.MZ)({readOnly:!0,type:[R.A]})],$e.prototype,"fields",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,type:[R.A]})],$e.prototype,"rasterFields",null),(0,s._)([(0,h.MZ)({constructOnly:!0})],$e.prototype,"source",void 0),$e=(0,s._)([(0,d.$)("esri.layers.ImageryTileLayer")],$e);const Ue=$e},8350:(e,t,i)=>{i.d(t,{H:()=>p});var s=i(35143),a=i(46053),r=(i(81806),i(76460),i(47249),i(85842)),n=i(69098),o=i(42553),l=i(40565),c=i(6409),u=i(88205);let h=class extends(n.A.ClonableMixin(o.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,s._)([(0,a.MZ)({type:String,json:{write:{isRequired:!0}}})],h.prototype,"name",void 0),(0,s._)([(0,a.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,c.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],h.prototype,"method",void 0),(0,s._)([(0,a.MZ)({type:String,json:{write:{isRequired:!0}}})],h.prototype,"value",void 0),(0,s._)([(0,a.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],h.prototype,"bandIds",void 0),(0,s._)([(0,a.MZ)({types:u.uy,json:{write:!0,origins:{"web-scene":{types:u.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],h.prototype,"renderer",void 0),h=(0,s._)([(0,r.$)("esri.renderers.support.RasterPresetRenderer")],h);const f=h,p=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,s._)([(0,a.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,s._)([(0,a.MZ)({type:[f],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,s._)([(0,r.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},82356:(e,t,i)=>{i.d(t,{d:()=>A});var s,a=i(35143),r=i(3825),n=i(91967),o=i(55877),l=i(50076),c=i(54901),u=(i(81806),i(53521)),h=i(30015),f=i(50346),p=i(68134),d=i(52394),m=i(90534),y=i(46053),g=(i(76460),i(47249),i(85842)),w=i(11164),x=i(53084),v=i(97255),b=i(78393);class I{constructor(e){!function(e){if(!e?.location)throw new l.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:i}=e;this.location=Object.freeze((0,x.o8)(t));const s=this.location.width,a=this.location.height;let r=!0,n=!0;const o=function(e,t=!1){return e<=b.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(s*a/32));let c=0;for(let l=0;l<i.length;l++){const e=l%32;i[l]?(n=!1,o[c]|=1<<e):r=!1,31===e&&++c}n?(this._availability="unavailable",this.byteSize=40):r?(this._availability="available",this.byteSize=40):(this._availability=o,this.byteSize=40+(0,v.Qf)(o))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),s=i%32,a=i>>5,r=this._availability;return a<0||a>r.length?"unknown":r[a]&1<<s?"available":"unavailable"}static fromDefinition(e,t){const i=e.service.request||r.A,{row:s,col:a,width:n,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if(e.service.tileServers?.length){const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(422===e?.details?.httpStatus)return{location:{top:s,left:a,width:n,height:o},valid:!0,data:new Array(n*o).fill(0)};throw e})).then((e=>{if(e.location&&(e.location.top!==s||e.location.left!==a||e.location.width!==n||e.location.height!==o))throw new l.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:s,left:a,width:n,height:o}});return I.fromJSON(e)}))}static fromJSON(e){return Object.freeze(new I(e))}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function _(e,t,i){return new l.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}let A=s=class extends n.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=r.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.q(2*o.u.MEGABYTES),this.addHandles((0,p.wB)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),p.Vh))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const s=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return s?s.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,s){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(_(e,t,i)):this._fetchTilemap(e,t,i,s).catch((e=>e)).then((s=>{if(s instanceof I){const a=s.getAvailability(t,i);if("unavailable"===a)throw _(e,t,i);return a}if((0,f.zf)(s))throw s;return"unknown"}))}fetchAvailabilityUpsample(e,t,i,s,a){s.level=e,s.row=t,s.col=i;const r=this.layer.tileInfo;r.updateTileInfo(s);const n=this.fetchAvailability(e,t,i,a).catch((e=>{if((0,f.zf)(e))throw e;if(r.upsampleTile(s))return this.fetchAvailabilityUpsample(s.level,s.row,s.col,s,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(s.id,e,t,i,a,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,r,n){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.hasHandles(o))return;const l=new AbortController;n.then((()=>l.abort()),(()=>l.abort()));let u=!1;const h=(0,c.hA)((()=>{u||(u=!0,l.abort())}));if(this.addHandles(h,o),await(0,d.md)(10,l.signal).catch((()=>{})),u||(u=!0,this.removeHandles(o)),(0,f.G4)(l))return;const p=new w.U(e,t,i,a),m={...r,signal:l.signal},y=this.layer.tileInfo;for(let c=0;s._prefetches.length<s._maxPrefetch&&y.upsampleTile(p);++c){const e=this.fetchAvailability(p.level,p.row,p.col,m);s._prefetches.push(e);const t=()=>{s._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,i,s){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new l.A("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,a);if(r)return Promise.resolve(r);const n=s?.signal;return s={...s,signal:null},new Promise(((e,t)=>{(0,f.u7)(n,(()=>t((0,f.NK)())));const i=S(a);let r=this._pendingTilemapRequests[i];if(!r){r=I.fromDefinition(a,s).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,m.x0)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,s){s.level=e,s.row=t-t%this.size,s.col=i-i%this.size;const a=S(s);return this._tilemapCache.get(a)}get test(){}};A._maxPrefetch=4,A._prefetches=new h.A({initialSize:s._maxPrefetch}),(0,a._)([(0,y.MZ)({constructOnly:!0})],A.prototype,"layer",void 0),(0,a._)([(0,y.MZ)({constructOnly:!0})],A.prototype,"minLOD",void 0),(0,a._)([(0,y.MZ)({constructOnly:!0})],A.prototype,"maxLOD",void 0),(0,a._)([(0,y.MZ)({constructOnly:!0})],A.prototype,"request",void 0),(0,a._)([(0,y.MZ)({constructOnly:!0})],A.prototype,"size",void 0),A=s=(0,a._)([(0,g.$)("esri.layers.support.TilemapCache")],A)},75116:(e,t,i)=>{i.d(t,{A:()=>l});var s=i(35143),a=i(42553),r=i(46053),n=(i(81806),i(76460),i(47249),i(85842));let o=class extends a.A{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s._)([(0,r.MZ)()],o.prototype,"affectsPixelSize",null),(0,s._)([(0,r.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,s._)([(0,n.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o);const l=o},26855:(e,t,i)=>{i.d(t,{A:()=>u});var s,a=i(35143),r=i(46053),n=(i(81806),i(76460),i(47249),i(6409)),o=i(85842),l=i(75116);let c=s=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,a._)([(0,n.e)({GCSShiftXform:"gcs-shift"})],c.prototype,"type",void 0),(0,a._)([(0,r.MZ)()],c.prototype,"tolerance",void 0),c=s=(0,a._)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],c);const u=c},29754:(e,t,i)=>{i.d(t,{A:()=>y});var s,a=i(35143),r=i(46053),n=(i(81806),i(76460),i(47249),i(6409)),o=i(28379),l=i(85842),c=i(17707),u=i(76797),h=i(19247),f=i(75116);function p(e,t,i){const{x:s,y:a}=t;if(i<2)return{x:e[0]+s*e[2]+a*e[4],y:e[1]+s*e[3]+a*e[5]};if(2===i){const t=s*s,i=a*a,r=s*a;return{x:e[0]+s*e[2]+a*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+s*e[3]+a*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=s*s,n=a*a,o=s*a,l=r*s,c=r*a,u=s*n,h=a*n;return{x:e[0]+s*e[2]+a*e[4]+r*e[6]+o*e[8]+n*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+s*e[3]+a*e[5]+r*e[7]+o*e[9]+n*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function d(e,t,i){const{xmin:s,ymin:a,xmax:r,ymax:n,spatialReference:o}=t;let l=[];if(i<2)l.push({x:s,y:n}),l.push({x:r,y:n}),l.push({x:s,y:a}),l.push({x:r,y:a});else{let e=10;for(let t=0;t<e;t++)l.push({x:s,y:a+(n-a)*t/(e-1)}),l.push({x:r,y:a+(n-a)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:s+(r-s)*t/e,y:a}),l.push({x:s+(r-s)*t/e,y:n})}l=l.map((t=>p(e,t,i)));const c=l.map((e=>e.x)),h=l.map((e=>e.y));return new u.A({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,h),ymax:Math.max.apply(null,h),spatialReference:o})}let m=s=class extends f.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:s}=t;if(!i?.length||!s?.length||i.length!==s.length)return null;const a=[];for(let r=0;r<i.length;r++)a.push(i[r]),a.push(s[r]);return a}writeForwardCoefficients(e,t,i){const s=[],a=[];for(let r=0;r<e?.length;r++)r%2==0?s.push(e[r]):a.push(e[r]);t.coeffX=s,t.coeffY=a}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,s,a,r,n]=e,o=s*n-r*a,l=r*a-s*n;return[(r*i-t*n)/o,(s*i-t*a)/l,n/o,a/l,-r/o,-s/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:s}=t;if(!i?.length||!s?.length||i.length!==s.length)return null;const a=[];for(let r=0;r<i.length;r++)a.push(i[r]),a.push(s[r]);return a}writeInverseCoefficients(e,t,i){const s=[],a=[];for(let r=0;r<e?.length;r++)r%2==0?s.push(e[r]):a.push(e[r]);t.inverseCoeffX=s,t.inverseCoeffY=a}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=p(this.forwardCoefficients,e,this.polynomialOrder);return new h.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=p(this.inverseCoefficients,e,this.polynomialOrder);return new h.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,a._)([(0,r.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,a._)([(0,r.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,a._)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,a._)([(0,c.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,a._)([(0,r.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,a._)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,a._)([(0,c.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,a._)([(0,r.MZ)()],m.prototype,"affectsPixelSize",null),(0,a._)([(0,n.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=s=(0,a._)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m);const y=m},25213:(e,t,i)=>{i.d(t,{E9:()=>d,Tw:()=>f,X6:()=>p});var s=i(3825),a=i(76797),r=i(19247),n=i(13312),o=i(23032),l=i(49653),c=i(54994),u=i(77725);async function h(e,t,i){const h=(0,c.Dl)(e),{rasterFunction:f,sourceJSON:p}=t||{},d=f?JSON.stringify(f.rasterFunctionDefinition||f):null,m=(0,c.lF)({...h.query,renderingRule:d,f:"json"}),y=(0,c.jV)(m,i);e=h.path;const g=p||await(0,s.A)(e,y).then((e=>e.data)),w=g.hasRasterAttributeTable?(0,s.A)(`${e}/rasterAttributeTable`,y):null,x=g.hasColormap?(0,s.A)(`${e}/colormap`,y):null,v=g.hasHistograms?(0,s.A)(`${e}/histograms`,y):null,b=g.currentVersion>=10.3?(0,s.A)(`${e}/keyProperties`,y):null,I=g.hasMultidimensions?(0,s.A)(`${e}/multidimensionalInfo`,y):null,S=await Promise.allSettled([w,x,v,b,I]);let _=null;if(g.minValues&&g.minValues.length===g.bandCount){_=[];for(let e=0;e<g.minValues.length;e++)_.push({min:g.minValues[e],max:g.maxValues[e],avg:g.meanValues[e],stddev:g.stdvValues[e]})}const A=a.A.fromJSON(g.extent),T=Math.ceil(A.width/g.pixelSizeX-.1),R=Math.ceil(A.height/g.pixelSizeY-.1),M=n.A.fromJSON(g.spatialReference||g.extent.spatialReference),C="fulfilled"===S[0].status?S[0].value?.data:null,O=C?.features?.length?u.A.fromJSON(C):null,F="fulfilled"===S[1].status?S[1].value?.data.colormap:null,P=F?.length?F:null,k="fulfilled"===S[2].status?S[2].value?.data.histograms:null,D=k?.[0]?.counts?.length?k:null,N="fulfilled"===S[3].status?S[3].value?.data??{}:{},E="fulfilled"===S[4].status?S[4].value?.data.multidimensionalInfo:null,L=E?.variables?.length?E:null;L&&L.variables.forEach((e=>{e.statistics?.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),e.dimensions?.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:B,serviceDataType:z}=g;B&&B!==N.DefaultVariable&&(N.DefaultVariable=B),z?.includes("esriImageServiceDataTypeVector")&&!z.includes(N.DataType)&&(N.DataType=z.replace("esriImageServiceDataType",""));let J=g.noDataValue;g.noDataValues?.length&&g.noDataValues.some((e=>e!==J))&&(J=g.noDataValues);const V=g.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new r.A({x:g.extent.xmin,y:g.extent.ymax,spatialReference:M}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(T,R))/Math.LN2-8)),transposeInfo:g.transposeInfo}):void 0;return new o.A({width:T,height:R,bandCount:g.bandCount,extent:a.A.fromJSON(g.extent),spatialReference:M,pixelSize:new r.A({x:g.pixelSizeX,y:g.pixelSizeY,spatialReference:M}),pixelType:g.pixelType.toLowerCase(),statistics:_,attributeTable:O,colormap:P,histograms:D,keyProperties:N,noDataValue:J,multidimensionalInfo:L,storageInfo:V})}function f(e,t,i){return h(e,{sourceJSON:t},i)}function p(e,t,i){return h(e,{rasterFunction:t},i)}function d(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}}}]);
//# sourceMappingURL=49237.999e7668.chunk.js.map