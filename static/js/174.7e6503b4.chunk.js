(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[174],{733:function(e,t,i){"use strict";function r(e){return e&&"getAtOrigin"in e&&"originOf"in e}i.d(t,"a",(function(){return r}))},736:function(e,t,i){"use strict";i.d(t,"a",(function(){return a}));var r=i(733);function a(e){e&&e.writtenProperties&&e.writtenProperties.forEach(e=>{const t=e.target;e.newOrigin&&e.oldOrigin!==e.newOrigin&&Object(r.a)(t)&&t.updateOrigin(e.propName,e.newOrigin)})}},857:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return Ue}));var r=i(0),a=i(53),o=(i(64),i(73)),s=i(192),l=(i(289),i(345),i(347),i(348),i(103),i(260),i(257),i(385)),n=i(24),u=i(8),p=i(85),b=i(11),c=i(2),d=i(371),m=i(51),y=i(37),O=i(16),j=i(1),h=(i(9),i(5),i(4)),f=i(19),v=i(3),T=i(18),g=i(736),S=i(35),w=i(77),N=i(27),C=i(227),I=i(378),D=i(375),F=i(373),A=i(374),B=i(112),x=i(48),E=i(10),J=i(87),P=i(140),L=i(113);let M=class extends E.a{constructor(){super(...arguments),this.directionLines=new J.a({color:[0,122,194],width:6}),this.directionPoints=new P.a({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new P.a({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new L.a({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new J.a({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new J.a({width:8,color:[20,89,127]}),this.firstStop=new P.a({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.middleStop=new P.a({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.lastStop=new P.a({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.invalidStop=new P.a({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.waypointStop=new P.a({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.breakStop=new P.a({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"directionLines",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"directionPoints",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"pointBarriers",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"polygonBarriers",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"polylineBarriers",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"routeInfo",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"firstStop",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"middleStop",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"lastStop",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"invalidStop",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"waypointStop",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,types:x.e})],M.prototype,"breakStop",void 0),M=Object(r.a)([Object(v.a)("esri.layers.support.DefaultSymbols")],M);const _=M;var W,U=i(79),V=i(258),R=i(785),k=i(973),q=i(80),G=i(707),z=i(195);let K=W=class extends E.a{constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null}static fromPortalJSON(e){var t,i;return new W({directionLineType:G.c.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:null!=(t=e.attributes.FromLevel)?t:null,geometry:q.a.fromJSON(e.geometry),objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null,toLevel:null!=(i=e.attributes.ToLevel)?i:null})}toPortalJSON(){const e={geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),DirectionLineType:Object(c.j)(this.directionLineType)?G.c.toJSON(this.directionLineType):null,DirectionPointID:Object(c.q)(this.directionPointId),Meters:Object(c.q)(this.distance),Minutes:Object(c.q)(this.duration)},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null};return Object(c.j)(this.fromLevel)&&(e.attributes.FromLevel=this.fromLevel),Object(c.j)(this.toLevel)&&(e.attributes.ToLevel=this.toLevel),e}};K.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],K.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({type:G.c.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:G.c.read}}})],K.prototype,"directionLineType",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.DirectionPointID"}}})],K.prototype,"directionPointId",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Meters"}}})],K.prototype,"distance",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Minutes"}}})],K.prototype,"duration",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.FromLevel"}}})],K.prototype,"fromLevel",void 0),Object(r.a)([Object(j.b)({type:q.a})],K.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ObjectID"}}})],K.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],K.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],K.prototype,"symbol",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ToLevel"}}})],K.prototype,"toLevel",void 0),K=W=Object(r.a)([Object(v.a)("esri.rest.support.DirectionLine")],K);const Z=K;var H,Y=i(28);let X=H=class extends E.a{constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.voiceInstruction=null}readArrivalTime(e,t){return Object(c.j)(t.attributes.ArrivalTime)?new Date(t.attributes.ArrivalTime):null}static fromPortalJSON(e){var t,i,r,a,o,l,n,u,p,b,d,m,y;return new H({alternateName:null!=(t=e.attributes.AlternateName)?t:null,arrivalTime:Object(c.j)(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:null!=(i=e.attributes.ArrivalUTCOffset)?i:null,azimuth:null!=(r=e.attributes.Azimuth)?r:null,branchName:null!=(a=e.attributes.BranchName)?a:null,directionPointType:G.d.fromJSON(e.attributes.DirectionPointType),displayText:null!=(o=e.attributes.DisplayText)?o:null,exitName:null!=(l=e.attributes.ExitName)?l:null,geometry:Y.a.fromJSON(e.geometry),intersectingName:null!=(n=e.attributes.IntersectingName)?n:null,level:null!=(u=e.attributes.Level)?u:null,name:null!=(p=e.attributes.Name)?p:null,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,sequence:e.attributes.Sequence,shortVoiceInstruction:null!=(b=e.attributes.ShortVoiceInstruction)?b:null,stopId:null!=(d=e.attributes.StopID)?d:null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null,towardName:null!=(m=e.attributes.TowardName)?m:null,voiceInstruction:null!=(y=e.attributes.VoiceInstruction)?y:null})}toPortalJSON(){const e={geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),DirectionPointType:Object(c.j)(this.directionPointType)?G.d.toJSON(this.directionPointType):null,Sequence:Object(c.q)(this.sequence),StopID:this.stopId},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null};return Object(c.j)(this.alternateName)&&(e.attributes.AlternateName=this.alternateName),Object(c.j)(this.arrivalTime)&&(e.attributes.ArrivalTime=this.arrivalTime.getTime()),Object(c.j)(this.arrivalTimeOffset)&&(e.attributes.ArrivalUTCOffset=this.arrivalTimeOffset),Object(c.j)(this.azimuth)&&(e.attributes.Azimuth=this.azimuth),Object(c.j)(this.branchName)&&(e.attributes.BranchName=this.branchName),Object(c.j)(this.displayText)&&(e.attributes.DisplayText=this.displayText),Object(c.j)(this.exitName)&&(e.attributes.ExitName=this.exitName),Object(c.j)(this.intersectingName)&&(e.attributes.IntersectingName=this.intersectingName),Object(c.j)(this.level)&&(e.attributes.Level=this.level),Object(c.j)(this.name)&&(e.attributes.Name=this.name),Object(c.j)(this.shortVoiceInstruction)&&(e.attributes.ShortVoiceInstruction=this.shortVoiceInstruction),Object(c.j)(this.towardName)&&(e.attributes.TowardName=this.towardName),Object(c.j)(this.voiceInstruction)&&(e.attributes.VoiceInstruction=this.voiceInstruction),e}};X.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],X.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({json:{read:!1}})],X.prototype,"alternateName",void 0),Object(r.a)([Object(j.b)()],X.prototype,"arrivalTime",void 0),Object(r.a)([Object(f.a)("arrivalTime",["attributes.ArrivalTime"])],X.prototype,"readArrivalTime",null),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],X.prototype,"arrivalTimeOffset",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Azimuth"}}})],X.prototype,"azimuth",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.BranchName"}}})],X.prototype,"branchName",void 0),Object(r.a)([Object(j.b)({type:G.d.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:G.d.read}}})],X.prototype,"directionPointType",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.DisplayText"}}})],X.prototype,"displayText",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ExitName"}}})],X.prototype,"exitName",void 0),Object(r.a)([Object(j.b)({type:Y.a})],X.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],X.prototype,"intersectingName",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],X.prototype,"level",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Name"}}})],X.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ObjectID"}}})],X.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],X.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Sequence"}}})],X.prototype,"sequence",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],X.prototype,"shortVoiceInstruction",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.StopID"}}})],X.prototype,"stopId",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],X.prototype,"symbol",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.TowardName"}}})],X.prototype,"towardName",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],X.prototype,"voiceInstruction",void 0),X=H=Object(r.a)([Object(v.a)("esri.rest.support.DirectionPoint")],X);const Q=X;var $,ee=i(6);function te(e,t){if(Object(c.i)(e))return null;const i={},r=new RegExp("^"+t,"i");for(const a in e)e.hasOwnProperty(a)&&r.test(a)&&(i[a.substring(t.length)]=e[a]);return i}function ie(e,t){return Object(c.i)(e)||Object(c.i)(t)?null:Math.round((e-t)/6e4)}let re=$=class extends E.a{constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null}readCosts(e,t){return te(t.attributes,"Attr_")}writeCosts(e,t){if(!Object(c.i)(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes["Attr_"+i]=e[i]}}static fromPortalJSON(e){var t,i;return new $({addedCost:null!=(t=e.attributes.AddedCost)?t:null,barrierType:Object(c.j)(e.attributes.BarrierType)?G.a.fromJSON(e.attributes.BarrierType):null,costs:Object(c.j)(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,curbApproach:Object(c.j)(e.attributes.CurbApproach)?G.b.fromJSON(e.attributes.CurbApproach):null,fullEdge:Object(c.j)(e.attributes.FullEdge)?G.h.fromJSON(e.attributes.FullEdge):null,geometry:Y.a.fromJSON(e.geometry),name:null!=(i=e.attributes.Name)?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,status:Object(c.j)(e.attributes.Status)?G.n.fromJSON(e.attributes.Status):null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null})}clone(){return new $(Object(ee.a)({addedCost:this.addedCost,barrierType:this.barrierType,costs:this.costs,curbApproach:this.curbApproach,fullEdge:this.fullEdge,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,sideOfEdge:this.sideOfEdge,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol}))}toPortalJSON(){return{geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),AddedCost:this.addedCost,BarrierType:Object(c.j)(this.barrierType)?G.a.toJSON(this.barrierType):null,Costs:Object(c.j)(this.costs)?JSON.stringify(this.costs):null,CurbApproach:Object(c.j)(this.curbApproach)?G.b.toJSON(this.curbApproach):null,FullEdge:Object(c.j)(this.fullEdge)?G.h.toJSON(this.fullEdge):null,Name:this.name,Status:Object(c.j)(this.status)?G.n.toJSON(this.status):null},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null}}};re.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],re.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({json:{read:!1}})],re.prototype,"addedCost",void 0),Object(r.a)([Object(j.b)({type:G.a.apiValues,json:{name:"attributes.BarrierType",read:{reader:G.a.read},write:{writer:G.a.write}}})],re.prototype,"barrierType",void 0),Object(r.a)([Object(j.b)()],re.prototype,"costs",void 0),Object(r.a)([Object(f.a)("costs",["attributes"])],re.prototype,"readCosts",null),Object(r.a)([Object(T.a)("costs")],re.prototype,"writeCosts",null),Object(r.a)([Object(j.b)({type:G.b.apiValues,json:{read:{source:"attributes.CurbApproach",reader:G.b.read}}})],re.prototype,"curbApproach",void 0),Object(r.a)([Object(j.b)({type:G.h.apiValues,json:{name:"attributes.FullEdge",read:{reader:G.h.read},write:{writer:G.h.write}}})],re.prototype,"fullEdge",void 0),Object(r.a)([Object(j.b)({type:Y.a,json:{write:!0}})],re.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.Name",write:!0}})],re.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.ObjectID",write:!0}})],re.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],re.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({type:G.m.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:G.m.read}}})],re.prototype,"sideOfEdge",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SourceID"}}})],re.prototype,"sourceId",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SourceOID"}}})],re.prototype,"sourceOid",void 0),Object(r.a)([Object(j.b)({type:G.n.apiValues,json:{read:{source:"attributes.Status",reader:G.n.read}}})],re.prototype,"status",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],re.prototype,"symbol",void 0),re=$=Object(r.a)([Object(v.a)("esri.rest.support.PointBarrier")],re);const ae=re;var oe,se=i(86);let le=oe=class extends E.a{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,t){return te(t.attributes,"Attr_")}writeCosts(e,t){if(!Object(c.i)(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes["Attr_"+i]=e[i]}}static fromPortalJSON(e){var t,i;return new oe({barrierType:Object(c.j)(e.attributes.BarrierType)?G.a.fromJSON(e.attributes.BarrierType):null,costs:Object(c.j)(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:se.a.fromJSON(e.geometry),name:null!=(t=e.attributes.Name)?t:null,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,scaleFactor:null!=(i=e.attributes.ScaleFactor)?i:null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null})}clone(){return new oe(Object(ee.a)({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){var e,t;return{geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),BarrierType:Object(c.j)(this.barrierType)?G.a.toJSON(this.barrierType):null,Costs:Object(c.j)(this.costs)?JSON.stringify(this.costs):null,Name:null!=(e=this.name)?e:null,ScaleFactor:null!=(t=this.scaleFactor)?t:null},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null}}};le.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],le.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({type:G.a.apiValues,json:{name:"attributes.BarrierType",read:{reader:G.a.read},write:{writer:G.a.write}}})],le.prototype,"barrierType",void 0),Object(r.a)([Object(j.b)()],le.prototype,"costs",void 0),Object(r.a)([Object(f.a)("costs",["attributes"])],le.prototype,"readCosts",null),Object(r.a)([Object(T.a)("costs")],le.prototype,"writeCosts",null),Object(r.a)([Object(j.b)({type:se.a,json:{write:!0}})],le.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.Name",write:!0}})],le.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.ObjectID",write:!0}})],le.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],le.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],le.prototype,"scaleFactor",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],le.prototype,"symbol",void 0),le=oe=Object(r.a)([Object(v.a)("esri.rest.support.PolygonBarrier")],le);const ne=le;var ue;let pe=ue=class extends E.a{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,t){return te(t.attributes,"Attr_")}static fromPortalJSON(e){var t,i;return new ue({barrierType:Object(c.j)(e.attributes.BarrierType)?G.a.fromJSON(e.attributes.BarrierType):null,costs:Object(c.j)(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:q.a.fromJSON(e.geometry),name:null!=(t=e.attributes.Name)?t:null,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,scaleFactor:null!=(i=e.attributes.ScaleFactor)?i:null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null})}clone(){return new ue(Object(ee.a)({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){return{geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),BarrierType:Object(c.j)(this.barrierType)?G.a.toJSON(this.barrierType):null,Costs:Object(c.j)(this.costs)?JSON.stringify(this.costs):null,Name:this.name,ScaleFactor:this.scaleFactor},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null}}};pe.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],pe.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({type:G.a.apiValues,json:{read:{source:"attributes.BarrierType",reader:G.a.read}}})],pe.prototype,"barrierType",void 0),Object(r.a)([Object(j.b)()],pe.prototype,"costs",void 0),Object(r.a)([Object(f.a)("costs",["attributes"])],pe.prototype,"readCosts",null),Object(r.a)([Object(j.b)({type:q.a,json:{write:!0}})],pe.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.Name",write:!0}})],pe.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.ObjectID",write:!0}})],pe.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],pe.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],pe.prototype,"scaleFactor",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],pe.prototype,"symbol",void 0),pe=ue=Object(r.a)([Object(v.a)("esri.rest.support.PolylineBarrier")],pe);const be=pe;var ce=i(762);let de=class extends E.a{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}};Object(r.a)([Object(j.b)({type:[String],json:{read:{source:"accumulateAttributeNames"},write:{target:"accumulateAttributeNames"}}})],de.prototype,"accumulateAttributes",void 0),Object(r.a)([Object(j.b)({type:String,json:{write:!0}})],de.prototype,"directionsLanguage",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],de.prototype,"findBestSequence",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],de.prototype,"preserveFirstStop",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],de.prototype,"preserveLastStop",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],de.prototype,"startTimeIsUTC",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],de.prototype,"timeWindowsAreUTC",void 0),Object(r.a)([Object(j.b)({type:ce.a,json:{write:!0}})],de.prototype,"travelMode",void 0),de=Object(r.a)([Object(v.a)("esri.layers.support.RouteSettings")],de);const me=de;var ye;let Oe=ye=class extends E.a{constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.version="1.0.0"}readEndTime(e,t){return Object(c.j)(t.attributes.EndTimeUTC)?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return ie(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return Object(c.j)(t.attributes.StartTimeUTC)?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return ie(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return te(t.attributes,"Total_")}readTotalViolations(e,t){return te(t.attributes,"TotalViolation_")}readTotalWait(e,t){return te(t.attributes,"TotalWait_")}static fromPortalJSON(e){var t,i,r,a,o,l;return new ye({analysisSettings:Object(c.j)(e.attributes.AnalysisSettings)?me.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:Object(c.j)(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:null!=(t=e.attributes.EndUTCOffset)?t:null,geometry:q.a.fromJSON(e.geometry),messages:Object(c.j)(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,startTime:Object(c.j)(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:null!=(i=e.attributes.StartUTCOffset)?i:null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null,totalCosts:Object(c.j)(e.attributes.TotalCosts)?JSON.parse(e.attributes.TotalCosts):null,totalDistance:null!=(r=e.attributes.TotalMeters)?r:null,totalDuration:null!=(a=e.attributes.TotalMinutes)?a:null,totalLateDuration:null!=(o=e.attributes.TotalLateMinutes)?o:null,totalWaitDuration:null!=(l=e.attributes.TotalWaitMinutes)?l:null,version:e.attributes.Version})}toPortalJSON(){return{geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),AnalysisSettings:Object(c.j)(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:Object(c.j)(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:Object(c.j)(this.messages)?JSON.stringify(this.messages):null,RouteName:Object(c.q)(this.name),StartTime:Object(c.j)(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:Object(c.j)(this.totalCosts)?JSON.stringify(this.totalCosts):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:Object(c.q)(this.version)},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Oe.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],Oe.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"analysisSettings",void 0),Object(r.a)([Object(j.b)()],Oe.prototype,"endTime",void 0),Object(r.a)([Object(f.a)("endTime",["attributes.EndTimeUTC"])],Oe.prototype,"readEndTime",null),Object(r.a)([Object(j.b)()],Oe.prototype,"endTimeOffset",void 0),Object(r.a)([Object(f.a)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],Oe.prototype,"readEndTimeOffset",null),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.FirstStopID"}}})],Oe.prototype,"firstStopId",void 0),Object(r.a)([Object(j.b)({type:q.a})],Oe.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.LastStopID"}}})],Oe.prototype,"lastStopId",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"messages",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.Name"}}})],Oe.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.ObjectID"}}})],Oe.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],Oe.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)()],Oe.prototype,"startTime",void 0),Object(r.a)([Object(f.a)("startTime",["attributes.StartTimeUTC"])],Oe.prototype,"readStartTime",null),Object(r.a)([Object(j.b)()],Oe.prototype,"startTimeOffset",void 0),Object(r.a)([Object(f.a)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],Oe.prototype,"readStartTimeOffset",null),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.StopCount"}}})],Oe.prototype,"stopCount",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],Oe.prototype,"symbol",void 0),Object(r.a)([Object(j.b)()],Oe.prototype,"totalCosts",void 0),Object(r.a)([Object(f.a)("totalCosts",["attributes"])],Oe.prototype,"readTotalCosts",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"totalDistance",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"totalDuration",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"totalLateDuration",void 0),Object(r.a)([Object(j.b)()],Oe.prototype,"totalViolations",void 0),Object(r.a)([Object(f.a)("totalViolations",["attributes"])],Oe.prototype,"readTotalViolations",null),Object(r.a)([Object(j.b)()],Oe.prototype,"totalWait",void 0),Object(r.a)([Object(f.a)("totalWait",["attributes"])],Oe.prototype,"readTotalWait",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"totalWaitDuration",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Oe.prototype,"version",void 0),Oe=ye=Object(r.a)([Object(v.a)("esri.rest.support.RouteInfo")],Oe);const je=Oe;var he=i(22);const fe={type:String,json:{read:{source:"token"},write:{target:"token"}}};var ve,Te=i(30);let ge=ve=class extends E.a{constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return Object(h.d)(ve,e)}writePointBarriers(e,t,i){this._writeNetworkFeatures(e,t,i)}writePolygonBarrier(e,t,i){this._writeNetworkFeatures(e,t,i)}writePolylineBarrier(e,t,i){this._writeNetworkFeatures(e,t,i)}readStartTime(e,t){return null!=t.startTime?new Date(t.startTime):null}writeStartTime(e,t){t.startTime=e?e.getTime():null}writeStops(e,t,i){this._writeNetworkFeatures(e,t,i)}clone(){return new ve(Object(ee.a)({accumulateAttributes:this.accumulateAttributes,apiKey:this.apiKey,attributeParameterValues:this.attributeParameterValues,directionsLanguage:this.directionsLanguage,directionsLengthUnits:this.directionsLengthUnits,directionsOutputType:this.directionsOutputType,directionsStyleName:this.directionsStyleName,directionsTimeAttribute:this.directionsTimeAttribute,findBestSequence:this.findBestSequence,ignoreInvalidLocations:this.ignoreInvalidLocations,impedanceAttribute:this.impedanceAttribute,outputGeometryPrecision:this.outputGeometryPrecision,outputGeometryPrecisionUnits:this.outputGeometryPrecisionUnits,outputLines:this.outputLines,outSpatialReference:this.outSpatialReference,pointBarriers:this.pointBarriers,polygonBarriers:this.polygonBarriers,polylineBarriers:this.polylineBarriers,preserveFirstStop:this.preserveFirstStop,preserveLastStop:this.preserveLastStop,restrictionAttributes:this.restrictionAttributes,restrictUTurns:this.restrictUTurns,returnBarriers:this.returnBarriers,returnDirections:this.returnDirections,returnPolygonBarriers:this.returnPolygonBarriers,returnPolylineBarriers:this.returnPolylineBarriers,returnRoutes:this.returnRoutes,returnStops:this.returnStops,returnZ:this.returnZ,startTime:this.startTime,startTimeIsUTC:this.startTimeIsUTC,stops:this.stops,timeWindowsAreUTC:this.timeWindowsAreUTC,travelMode:this.travelMode,useHierarchy:this.useHierarchy,useTimeWindows:this.useTimeWindows}))}_writeNetworkFeatures(e,t,i){t[i]=n.a.isCollection(e)?{features:e.toArray().map(e=>e.toJSON())}:e.toJSON()}};Object(r.a)([Object(j.b)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],ge.prototype,"accumulateAttributes",void 0),Object(r.a)([Object(j.b)(fe)],ge.prototype,"apiKey",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"attributeParameterValues",void 0),Object(r.a)([Object(j.b)({type:String,json:{write:!0}})],ge.prototype,"directionsLanguage",void 0),Object(r.a)([Object(he.a)(G.e)],ge.prototype,"directionsLengthUnits",void 0),Object(r.a)([Object(he.a)(G.f)],ge.prototype,"directionsOutputType",void 0),Object(r.a)([Object(j.b)({type:String,json:{write:!0}})],ge.prototype,"directionsStyleName",void 0),Object(r.a)([Object(j.b)({type:String,json:{write:!0}})],ge.prototype,"directionsTimeAttribute",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"findBestSequence",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"ignoreInvalidLocations",void 0),Object(r.a)([Object(j.b)({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],ge.prototype,"impedanceAttribute",void 0),Object(r.a)([Object(j.b)({type:Number,json:{write:!0}})],ge.prototype,"outputGeometryPrecision",void 0),Object(r.a)([Object(he.a)(G.i)],ge.prototype,"outputGeometryPrecisionUnits",void 0),Object(r.a)([Object(he.a)(G.k)],ge.prototype,"outputLines",void 0),Object(r.a)([Object(j.b)({type:Te.a,json:{write:!0}})],ge.prototype,"outSpatialReference",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"pointBarriers",void 0),Object(r.a)([Object(T.a)("pointBarriers")],ge.prototype,"writePointBarriers",null),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"polygonBarriers",void 0),Object(r.a)([Object(T.a)("polygonBarriers")],ge.prototype,"writePolygonBarrier",null),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"polylineBarriers",void 0),Object(r.a)([Object(T.a)("polylineBarriers")],ge.prototype,"writePolylineBarrier",null),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"preserveFirstStop",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"preserveLastStop",void 0),Object(r.a)([Object(j.b)({type:[String],json:{write:!0}})],ge.prototype,"restrictionAttributes",void 0),Object(r.a)([Object(he.a)(G.l)],ge.prototype,"restrictUTurns",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnBarriers",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnDirections",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnPolygonBarriers",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnPolylineBarriers",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnRoutes",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnStops",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"returnZ",void 0),Object(r.a)([Object(j.b)({type:Date,json:{type:Number,write:!0}})],ge.prototype,"startTime",void 0),Object(r.a)([Object(f.a)("startTime")],ge.prototype,"readStartTime",null),Object(r.a)([Object(T.a)("startTime")],ge.prototype,"writeStartTime",null),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"startTimeIsUTC",void 0),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"stops",void 0),Object(r.a)([Object(T.a)("stops")],ge.prototype,"writeStops",null),Object(r.a)([Object(j.b)({json:{write:!0}})],ge.prototype,"timeWindowsAreUTC",void 0),Object(r.a)([Object(j.b)({type:ce.a,json:{write:!0}})],ge.prototype,"travelMode",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"useHierarchy",void 0),Object(r.a)([Object(j.b)({type:Boolean,json:{write:!0}})],ge.prototype,"useTimeWindows",void 0),ge=ve=Object(r.a)([Object(v.a)("esri.rest.support.RouteParameters")],ge);const Se=ge;var we;let Ne=we=class extends E.a{constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return ie(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return te(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return ie(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return te(t.attributes,"Attr_")}writeServiceCosts(e,t){if(!Object(c.i)(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes["Attr_"+i]=e[i]}}writeTimeWindowEnd(e,t){Object(c.i)(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){Object(c.i)(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return te(t.attributes,"Violation_")}readWait(e,t){return te(t.attributes,"Wait_")}static fromPortalJSON(e){var t,i,r,a,o,l,n,u,p,b;return new we({arriveCurbApproach:Object(c.j)(e.attributes.ArrivalCurbApproach)?G.b.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:Object(c.j)(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:Object(c.j)(e.attributes.CumulativeCosts)?JSON.parse(e.attributes.CumulativeCosts):null,cumulativeDistance:null!=(t=e.attributes.CumulativeMeters)?t:null,cumulativeDuration:null!=(i=e.attributes.CumulativeMinutes)?i:null,curbApproach:Object(c.j)(e.attributes.CurbApproach)?G.b.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:Object(c.j)(e.attributes.DepartureCurbApproach)?G.b.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:Object(c.j)(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:null!=(r=e.attributes.DepartureUTCOffset)?r:null,geometry:Y.a.fromJSON(e.geometry),lateDuration:null!=(a=e.attributes.LateMinutes)?a:null,locationType:Object(c.j)(e.attributes.LocationType)?G.j.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:Object(c.j)(e.popupInfo)?s.a.fromJSON(e.popupInfo):null,routeName:e.attributes.RouteName,sequence:null!=(o=e.attributes.Sequence)?o:null,serviceCosts:Object(c.j)(e.attributes.ServiceCosts)?JSON.parse(e.attributes.ServiceCosts):null,serviceDistance:null!=(l=e.attributes.ServiceMeters)?l:null,serviceDuration:null!=(n=e.attributes.ServiceMinutes)?n:null,status:Object(c.j)(e.attributes.Status)?G.n.fromJSON(e.attributes.Status):null,symbol:Object(c.j)(e.symbol)?Object(z.a)(e.symbol):null,timeWindowEnd:Object(c.j)(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!=(u=e.attributes.TimeWindowEndUTCOffset)?u:null,timeWindowStart:Object(c.j)(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:null!=(p=e.attributes.TimeWindowStartUTCOffset)?p:null,waitDuration:null!=(b=e.attributes.WaitMinutes)?b:null})}clone(){return new we(Object(ee.a)({arriveCurbApproach:this.arriveCurbApproach,arriveTime:this.arriveTime,arriveTimeOffset:this.arriveTimeOffset,bearing:this.bearing,bearingTol:this.bearingTol,cumulativeCosts:this.cumulativeCosts,cumulativeDistance:this.cumulativeDistance,cumulativeTime:this.cumulativeDuration,curbApproach:this.curbApproach,departCurbApproach:this.departCurbApproach,departTime:this.departTime,departTimeOffset:this.departTimeOffset,distanceToNetworkInMeters:this.distanceToNetworkInMeters,geometry:this.geometry,lateDuration:this.lateDuration,locationType:this.locationType,name:this.name,navLatency:this.navLatency,objectId:this.objectId,popupTemplate:this.popupTemplate,posAlong:this.posAlong,routeName:this.routeName,serviceCosts:this.serviceCosts,serviceDistance:this.serviceDistance,serviceDuration:this.serviceDuration,sequence:this.sequence,sideOfEdge:this.sideOfEdge,snapX:this.snapX,snapY:this.snapY,snapZ:this.snapZ,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol,timeWindowEnd:this.timeWindowEnd,timeWindowEndOffset:this.timeWindowEndOffset,timeWindowStart:this.timeWindowStart,timeWindowStartOffset:this.timeWindowStartOffset,waitDuration:this.waitDuration}))}toPortalJSON(){var e,t;return{geometry:Object(c.j)(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:Object(c.q)(this.objectId),ArrivalCurbApproach:Object(c.j)(this.arriveCurbApproach)?G.b.toJSON(this.arriveCurbApproach):null,ArrivalTime:Object(c.j)(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:Object(c.j)(this.cumulativeCosts)?JSON.stringify(this.cumulativeCosts):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:Object(c.j)(this.curbApproach)?G.b.toJSON(this.curbApproach):null,DepartureCurbApproach:Object(c.j)(this.departCurbApproach)?G.b.toJSON(this.departCurbApproach):null,DepartureTime:Object(c.j)(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:Object(c.j)(this.locationType)?G.j.toJSON(this.locationType):null,Name:Object(c.q)(this.name),RouteName:Object(c.q)(this.routeName),Sequence:this.sequence,ServiceCosts:Object(c.j)(this.serviceCosts)?JSON.stringify(this.serviceCosts):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:Object(c.j)(this.status)?G.n.toJSON(this.status):null,TimeWindowEnd:Object(c.j)(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!=(e=this.timeWindowEndOffset)?e:this.arriveTimeOffset,TimeWindowStart:Object(c.j)(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!=(t=this.timeWindowEndOffset)?t:this.arriveTimeOffset,WaitMinutes:this.waitDuration},symbol:Object(c.j)(this.symbol)?this.symbol.toJSON():null,popupInfo:Object(c.j)(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Ne.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],Ne.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},Object(r.a)([Object(j.b)({type:G.b.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:G.b.read}}})],Ne.prototype,"arriveCurbApproach",void 0),Object(r.a)([Object(j.b)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],Ne.prototype,"arriveTime",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"arriveTimeOffset",void 0),Object(r.a)([Object(f.a)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],Ne.prototype,"readArriveTimeOffset",null),Object(r.a)([Object(j.b)({json:{name:"attributes.Bearing",read:!1,write:!0}})],Ne.prototype,"bearing",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],Ne.prototype,"bearingTol",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"cumulativeCosts",void 0),Object(r.a)([Object(f.a)("cumulativeCosts",["attributes"])],Ne.prototype,"readCumulativeCosts",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"cumulativeDistance",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"cumulativeDuration",void 0),Object(r.a)([Object(j.b)({type:G.b.apiValues,json:{name:"attributes.CurbApproach",read:{reader:G.b.read},write:{writer:G.b.write}}})],Ne.prototype,"curbApproach",void 0),Object(r.a)([Object(j.b)({type:G.b.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:G.b.read}}})],Ne.prototype,"departCurbApproach",void 0),Object(r.a)([Object(j.b)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],Ne.prototype,"departTime",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"departTimeOffset",void 0),Object(r.a)([Object(f.a)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],Ne.prototype,"readDepartTimeOffset",null),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],Ne.prototype,"distanceToNetworkInMeters",void 0),Object(r.a)([Object(j.b)({type:Y.a,json:{write:!0}})],Ne.prototype,"geometry",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.LateMinutes",read:!1}})],Ne.prototype,"lateDuration",void 0),Object(r.a)([Object(j.b)({type:G.j.apiValues,json:{name:"attributes.LocationType",read:{reader:G.j.read},write:{writer:G.j.write}}})],Ne.prototype,"locationType",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.Name",write:!0}})],Ne.prototype,"name",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.NavLatency"}}})],Ne.prototype,"navLatency",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.ObjectID",write:!0}})],Ne.prototype,"objectId",void 0),Object(r.a)([Object(j.b)({type:s.a,json:{read:!1}})],Ne.prototype,"popupTemplate",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.PosAlong"}}})],Ne.prototype,"posAlong",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.RouteName",write:!0}})],Ne.prototype,"routeName",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"serviceCosts",void 0),Object(r.a)([Object(f.a)("serviceCosts",["attributes"])],Ne.prototype,"readServiceCosts",null),Object(r.a)([Object(T.a)("serviceCosts")],Ne.prototype,"writeServiceCosts",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"serviceDistance",void 0),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"serviceDuration",void 0),Object(r.a)([Object(j.b)({json:{name:"attributes.Sequence",write:!0}})],Ne.prototype,"sequence",void 0),Object(r.a)([Object(j.b)({type:G.m.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:G.m.read}}})],Ne.prototype,"sideOfEdge",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SnapX"}}})],Ne.prototype,"snapX",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SnapY"}}})],Ne.prototype,"snapY",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SnapZ"}}})],Ne.prototype,"snapZ",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SourceID"}}})],Ne.prototype,"sourceId",void 0),Object(r.a)([Object(j.b)({json:{read:{source:"attributes.SourceOID"}}})],Ne.prototype,"sourceOid",void 0),Object(r.a)([Object(j.b)({type:G.n.apiValues,json:{read:{source:"attributes.Status",reader:G.n.read}}})],Ne.prototype,"status",void 0),Object(r.a)([Object(j.b)({types:x.e,json:{read:!1}})],Ne.prototype,"symbol",void 0),Object(r.a)([Object(j.b)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],Ne.prototype,"timeWindowEnd",void 0),Object(r.a)([Object(T.a)("timeWindowEnd")],Ne.prototype,"writeTimeWindowEnd",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"timeWindowEndOffset",void 0),Object(r.a)([Object(j.b)({type:Date,json:{name:"attributes.TimeWindowStart"}})],Ne.prototype,"timeWindowStart",void 0),Object(r.a)([Object(T.a)("timeWindowStart")],Ne.prototype,"writeTimeWindowStart",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"timeWindowStartOffset",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"violations",void 0),Object(r.a)([Object(f.a)("violations",["attributes"])],Ne.prototype,"readViolations",null),Object(r.a)([Object(j.b)({json:{read:!1}})],Ne.prototype,"waitDuration",void 0),Object(r.a)([Object(j.b)()],Ne.prototype,"wait",void 0),Object(r.a)([Object(f.a)("wait",["attributes"])],Ne.prototype,"readWait",null),Ne=we=Object(r.a)([Object(v.a)("esri.rest.support.Stop")],Ne);const Ce=Ne;var Ie=i(130);function De(e){return e.length?e:null}function Fe(e){return"layers"in e}async function Ae(e){const t=Te.a.WGS84;return await Object(w.d)(e.spatialReference,t),Object(w.g)(e,t)}function Be(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function xe(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:Object(y.b)(e,t,"meters")}const Ee=n.a.ofType(Z),Je=n.a.ofType(Q),Pe=n.a.ofType(ae),Le=n.a.ofType(ne),Me=n.a.ofType(be),_e=n.a.ofType(Ce);let We=class extends(Object(I.a)(Object(A.a)(Object(D.a)(Object(F.a)(Object(d.a)(Object(p.b)(C.a))))))){constructor(...e){super(...e),this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new _,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Pe,this.polygonBarriers=new Le,this.polylineBarriers=new Me,this.routeInfo=null,this.spatialReference=Te.a.WGS84,this.stops=new _e,this.type="route"}writeFeatureCollectionWebmap(e,t,i,r){const a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(e=>!!e),o=a.map((e,t)=>t),s="web-map"===r.origin?"featureCollection.layers":"layers";Object(m.c)(s,a,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=o}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",e=>Z.fromPortalJSON(e))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",e=>Q.fromPortalJSON(e))}get fullExtent(){if(Object(c.j)(this.routeInfo)&&Object(c.j)(this.routeInfo.geometry))return this.routeInfo.geometry.extent;if(this.stops.length>1){const{spatialReference:e}=this.stops[0],t=new Ie.a({spatialReference:e}),i=this.stops.toArray().map(e=>e.geometry);for(const r of i)Object(c.j)(r)&&t.addPoint(r);return t.extent}return new S.a({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:Te.a.WGS84})}readMaxScale(e,t){var i;const r=(Fe(t)?t.layers:t.featureCollection.layers).find(e=>Object(c.j)(e.layerDefinition.maxScale));return null!=(i=null==r?void 0:r.layerDefinition.maxScale)?i:0}readMinScale(e,t){var i;const r=(Fe(t)?t.layers:t.featureCollection.layers).find(e=>Object(c.j)(e.layerDefinition.minScale));return null!=(i=null==r?void 0:r.layerDefinition.minScale)?i:0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",e=>ae.fromPortalJSON(e))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",e=>ne.fromPortalJSON(e))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",e=>be.fromPortalJSON(e))}readRouteInfo(e,t){const i=this._getNetworkFeatures(t,"RouteInfo",e=>je.fromPortalJSON(e));return i.length>0?i.getItemAt(0):null}readSpatialReference(e,t){var i,r;const a=Fe(t)?t.layers:t.featureCollection.layers;if(!a.length)return Te.a.WGS84;const{layerDefinition:o}=a[0],s=null!=(i=null!=(r=o.spatialReference)?r:o.extent.spatialReference)?i:N.b;return Te.a.fromJSON(s)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",e=>Ce.fromPortalJSON(e),e=>this._setStopSymbol(e))}get title(){return Object(c.j)(this.routeInfo)&&Object(c.j)(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return a.a.routeServiceUrl}set url(e){null!=e?this._set("url",Object(B.g)(e,b.a.getLogger(this.declaredClass))):this._set("url",a.a.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){Object(c.j)(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),Object(c.j)(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),Object(c.j)(this.routeInfo)&&this._set("routeInfo",null),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new u.a("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new u.a("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new u.a("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(Object(c.i)(this.routeInfo))throw new u.a("routelayer:route-unsolved","save() requires a solved route");const{portal:i}=t;if(await i._signIn(),i.user||await t.reload(),i.user.username!==t.owner)throw new u.a("routelayer:not-portal-item-owner","You can only overwrite your portal items");const{itemUrl:r}=t,a={messages:[],origin:"portal-item",portal:i,url:r&&Object(O.M)(r),writtenProperties:[]},o=this.write(null,a);return t.extent=await Ae(e),t.title=this.title,await t.update({data:o}),t}async saveAs(e,t={}){if(await this.load(),Object(c.i)(this.routeInfo))throw new u.a("routelayer:route-unsolved","saveAs() requires a solved route");const i=V.default.from(e).clone();null!=i.extent||(i.extent=await Ae(this.fullExtent)),i.id=null,null!=i.portal||(i.portal=U.a.getDefault()),null!=i.title||(i.title=this.title),i.type="Feature Collection",i.typeKeywords=["Data","Feature Collection","Multilayer","Route Layer"];const{portal:r}=i,a={messages:[],origin:"portal-item",portal:r,url:null,writtenProperties:[]};await r._signIn();const o=null==t?void 0:t.folder,s=this.write(null,a);return await r.user.addItem({item:i,folder:o,data:s}),this.portalItem=i,Object(g.a)(a),a.portalItem=i,i}async solve(e,t){var i,r,a,o,s,l;const p=null!=(i=null==e?void 0:e.stops)?i:this.stops,b=null!=(r=null==e?void 0:e.pointBarriers)?r:De(this.pointBarriers),d=null!=(a=null==e?void 0:e.polylineBarriers)?a:De(this.polylineBarriers),m=null!=(o=null==e?void 0:e.polygonBarriers)?o:De(this.polygonBarriers);if(Object(c.i)(p))throw new u.a("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((function(e){return"esri.rest.support.FeatureSet"===e.declaredClass}(p)||function(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}(p))&&p.features.length<2||n.a.isCollection(p)&&p.length<2)throw new u.a("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");const y=await Object(R.c)(this.url,null==e?void 0:e.apiKey,t),O=y.supportedTravelModes.find(e=>e.id===y.defaultTravelMode),j=null!=(s=null==e?void 0:e.travelMode)?s:O,{distanceAttributeName:h}=j,f=null!=(l=null==e?void 0:e.accumulateAttributes)?l:[];f.push(h);const v={startTime:new Date},T={accumulateAttributes:f,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:b,polylineBarriers:d,polygonBarriers:m,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!b,returnDirections:!0,returnPolygonBarriers:!!m,returnPolylineBarriers:!!d,returnRoutes:!0,returnStops:!0,stops:p},g=e?Se.from(e):new Se;for(const n in v)null==g[n]&&(g[n]=v[n]);g.set(T);const S=await Object(k.a)(this.url,g,t),w=this._toRouteLayerSolution(S);return this._isOverridden("title")||(this.title=Object(c.t)(w.routeInfo.name,"Route")),function(e,t,i){var r,a,o,s,l,n,p,b,d,m,y;const O=t.networkDataset.networkAttributes.filter(e=>"esriNAUTCost"===e.usageType),j=t.supportedTravelModes.find(e=>e.id===t.defaultTravelMode),h=null!=(r=i.travelMode)?r:j,{timeAttributeName:f,distanceAttributeName:v}=h,T=O.find(e=>e.name===f),g=O.find(e=>e.name===v),S=null!=(a=null!=(o=null==(s=i.travelMode)?void 0:s.impedanceAttributeName)?o:i.impedanceAttribute)?a:t.impedance,w=G.g.fromJSON(null==T?void 0:T.units),N=G.e.fromJSON(null==g?void 0:g.units);if(!w||!N)throw new u.a("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const C=null!=(l=i.directionsLanguage)?l:t.directionsLanguage,I=null!=(n=null!=(p=i.accumulateAttributes)?p:t.accumulateAttributeNames)?n:[],D=new Set(O.filter(({name:e})=>e===f||e===v||e===S||I.includes(e)).map(({name:e})=>e)),F=e=>{for(const t in e)D.has(t)||delete e[t]};for(const u of e.pointBarriers){var A;Object(c.j)(u.costs)&&(u.addedCost=null!=(A=u.costs[S])?A:0,F(u.costs))}for(const u of e.polygonBarriers){var B;Object(c.j)(u.costs)&&(u.scaleFactor=null!=(B=u.costs[S])?B:1,F(u.costs))}for(const u of e.polylineBarriers){var x;Object(c.j)(u.costs)&&(u.scaleFactor=null!=(x=u.costs[S])?x:1,F(u.costs))}const{routeInfo:E}=e,{findBestSequence:J,preserveFirstStop:P,preserveLastStop:L,startTimeIsUTC:M,timeWindowsAreUTC:_}=i;E.analysisSettings=new me({accumulateAttributes:I,directionsLanguage:C,findBestSequence:J,preserveFirstStop:P,preserveLastStop:L,startTimeIsUTC:M,timeWindowsAreUTC:_,travelMode:h}),E.totalDuration=Be(null!=(b=E.totalCosts[f])?b:0,w),E.totalDistance=xe(null!=(d=E.totalCosts[v])?d:0,N),E.totalLateDuration=Be(null!=(m=E.totalViolations[f])?m:0,w),E.totalWaitDuration=Be(null!=(y=E.totalWait[f])?y:0,w),Object(c.j)(E.totalCosts)&&F(E.totalCosts),Object(c.j)(E.totalViolations)&&F(E.totalViolations),Object(c.j)(E.totalWait)&&F(E.totalWait);for(const u of e.stops){var W,U,V,R,k,q;Object(c.j)(u.serviceCosts)&&(u.serviceDuration=Be(null!=(W=u.serviceCosts[f])?W:0,w),u.serviceDistance=xe(null!=(U=u.serviceCosts[v])?U:0,N),F(u.serviceCosts)),Object(c.j)(u.cumulativeCosts)&&(u.cumulativeDuration=Be(null!=(V=u.cumulativeCosts[f])?V:0,w),u.cumulativeDistance=xe(null!=(R=u.cumulativeCosts[v])?R:0,N),F(u.cumulativeCosts)),Object(c.j)(u.violations)&&(u.lateDuration=Be(null!=(k=u.violations[f])?k:0,w),F(u.violations)),Object(c.j)(u.wait)&&(u.waitDuration=Be(null!=(q=u.wait[f])?q:0,w),F(u.wait))}}(w,y,g),w}update(e){const{stops:t,directionLines:i,directionPoints:r,pointBarriers:a,polylineBarriers:o,polygonBarriers:s,routeInfo:l}=e;this.set({stops:t,pointBarriers:a,polylineBarriers:o,polygonBarriers:s}),this._set("directionLines",i),this._set("directionPoints",r),this._set("routeInfo",l)}_getLayerDefinition(){return{capabilities:"Query,Update,Editing",extent:this.fullExtent.toJSON(),hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),type:"Feature Layer",typeIdField:""}}_getNetworkFeatures(e,t,i,r){const a=(Fe(e)?e.layers:e.featureCollection.layers).find(e=>e.layerDefinition.name===t);if(Object(c.i)(a))return new n.a;const{layerDefinition:u,popupInfo:p,featureSet:b}=a,d=u.drawingInfo.renderer,{features:m}=b,y=d&&Object(l.b)(d),O=m.map(e=>{var r;const a=i(e),{attributes:l}=e,n=new o.a({attributes:l});return null!=a.symbol||(a.symbol=null!=(r=null==y?void 0:y.getSymbol(n))?r:this._getNetworkSymbol(t)),null!=a.popupTemplate||(a.popupTemplate=p&&s.a.fromJSON(p)),a});return r&&O.some(e=>!e.symbol)&&r(O),new n.a(O)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}_setStopSymbol(e){if(!e)return;if(e.length<2){for(const t of e)t.symbol=this.defaultSymbols.invalidStop;return}const t=e.map(e=>e.sequence).filter(e=>Object(c.j)(e)),i=Math.min(...t),r=Math.max(...t);for(const a of e)a.sequence!==i?a.sequence!==r?"ok"===a.status||"not-located-on-closest"===a.status?"waypoint"!==a.locationType?"break"!==a.locationType?a.symbol=this.defaultSymbols.middleStop:a.symbol=this.defaultSymbols.breakStop:a.symbol=this.defaultSymbols.waypointStop:a.symbol=this.defaultSymbols.invalidStop:a.symbol=this.defaultSymbols.lastStop:a.symbol=this.defaultSymbols.firstStop}_toRouteLayerSolution(e){var t,i,r;const a=e.routeResults[0].stops.map(e=>Ce.fromJSON(e.toJSON()));this._setStopSymbol(a);const o=new _e(a),s=new Le(null==(t=e.polygonBarriers)?void 0:t.map(e=>{const t=ne.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t})),l=new Me(null==(i=e.polylineBarriers)?void 0:i.map(e=>{const t=be.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t})),n=new Pe(null==(r=e.pointBarriers)?void 0:r.map(e=>{const t=ae.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t})),u=je.fromJSON(e.routeResults[0].route.toJSON());u.symbol=this.defaultSymbols.routeInfo;const p=new Je(e.routeResults[0].directionPoints.features.map(e=>{const t=Q.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t}));return{directionLines:new Ee(e.routeResults[0].directionLines.features.map(e=>{const t=Z.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t})),directionPoints:p,pointBarriers:n,polygonBarriers:s,polylineBarriers:l,routeInfo:u,stops:o}}_writeDirectionLines(){return Object(c.i)(this.directionLines)||!this.directionLines.length?null:{featureSet:{features:this.directionLines.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionLines.toJSON()}},fields:Z.fields,geometryType:"esriGeometryPolyline",name:"DirectionLines",title:"Direction Lines"},popupInfo:Z.popupInfo}}_writeDirectionPoints(){return Object(c.i)(this.directionPoints)||!this.directionPoints.length?null:{featureSet:{features:this.directionPoints.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionPoints.toJSON()}},fields:Q.fields,geometryType:"esriGeometryPoint",name:"DirectionPoints",title:"Direction Points"},popupInfo:Q.popupInfo}}_writePointBarriers(){return Object(c.i)(this.pointBarriers)||!this.pointBarriers.length?null:{featureSet:{features:this.pointBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.pointBarriers.toJSON()}},fields:ae.fields,geometryType:"esriGeometryPoint",name:"Barrier",title:"Point Barrier"},popupInfo:ae.popupInfo}}_writePolygonBarriers(){return Object(c.i)(this.polygonBarriers)||!this.polygonBarriers.length?null:{featureSet:{features:this.polygonBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolygon"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polygonBarriers.toJSON()}},fields:ne.fields,geometryType:"esriGeometryPolygon",name:"PolygonBarriers",title:"Polygon Barriers"},popupInfo:ne.popupInfo}}_writePolylineBarriers(){return Object(c.i)(this.polylineBarriers)||!this.polylineBarriers.length?null:{featureSet:{features:this.polylineBarriers.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polylineBarriers.toJSON()}},fields:be.fields,geometryType:"esriGeometryPolyline",name:"PolylineBarriers",title:"Line Barriers"},popupInfo:be.popupInfo}}_writeRouteInfo(){return Object(c.i)(this.routeInfo)?null:{featureSet:{features:[this.routeInfo.toPortalJSON()],geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.routeInfo.toJSON()}},fields:je.fields,geometryType:"esriGeometryPolyline",name:"RouteInfo",title:"Route Details"},popupInfo:je.popupInfo}}_writeStops(){return Object(c.i)(this.stops)||!this.stops.length?null:{featureSet:{features:this.stops.toArray().map(e=>e.toPortalJSON()),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"uniqueValue",field1:"Sequence",defaultSymbol:this.defaultSymbols.middleStop.toJSON(),uniqueValueInfos:[{value:"1",symbol:this.defaultSymbols.firstStop.toJSON(),label:"First Stop"},{value:""+this.stops.length,symbol:this.defaultSymbols.lastStop.toJSON(),label:"Last Stop"}]}},fields:Ce.fields,geometryType:"esriGeometryPoint",name:"Stops",title:"Stops"},popupInfo:Ce.popupInfo}}};Object(r.a)([Object(j.b)({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],We.prototype,"_featureCollection",void 0),Object(r.a)([Object(T.a)(["web-map","portal-item"],"_featureCollection")],We.prototype,"writeFeatureCollectionWebmap",null),Object(r.a)([Object(j.b)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],We.prototype,"_type",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,type:_})],We.prototype,"defaultSymbols",void 0),Object(r.a)([Object(j.b)({readOnly:!0})],We.prototype,"directionLines",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],We.prototype,"readDirectionLines",null),Object(r.a)([Object(j.b)({readOnly:!0})],We.prototype,"directionPoints",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],We.prototype,"readDirectionPoints",null),Object(r.a)([Object(j.b)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],We.prototype,"featureCollectionType",void 0),Object(r.a)([Object(j.b)({readOnly:!0})],We.prototype,"fullExtent",null),Object(r.a)([Object(j.b)({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],We.prototype,"legendEnabled",void 0),Object(r.a)([Object(j.b)({type:["show","hide"]})],We.prototype,"listMode",void 0),Object(r.a)([Object(j.b)({type:Number,nonNullable:!0,json:{write:!1}})],We.prototype,"maxScale",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],We.prototype,"readMaxScale",null),Object(r.a)([Object(j.b)({type:Number,nonNullable:!0,json:{write:!1}})],We.prototype,"minScale",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],We.prototype,"readMinScale",null),Object(r.a)([Object(j.b)({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],We.prototype,"operationalLayerType",void 0),Object(r.a)([Object(j.b)({nonNullable:!0,type:n.a.ofType(ae)})],We.prototype,"pointBarriers",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],We.prototype,"readPointBarriers",null),Object(r.a)([Object(j.b)({nonNullable:!0,type:n.a.ofType(ne)})],We.prototype,"polygonBarriers",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],We.prototype,"readPolygonBarriers",null),Object(r.a)([Object(j.b)({nonNullable:!0,type:n.a.ofType(be)})],We.prototype,"polylineBarriers",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],We.prototype,"readPolylineBarriers",null),Object(r.a)([Object(j.b)({readOnly:!0})],We.prototype,"routeInfo",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],We.prototype,"readRouteInfo",null),Object(r.a)([Object(j.b)({type:Te.a})],We.prototype,"spatialReference",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],We.prototype,"readSpatialReference",null),Object(r.a)([Object(j.b)({nonNullable:!0,type:n.a.ofType(Ce)})],We.prototype,"stops",void 0),Object(r.a)([Object(f.a)(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],We.prototype,"readStops",null),Object(r.a)([Object(j.b)()],We.prototype,"title",null),Object(r.a)([Object(j.b)({readOnly:!0,json:{read:!1}})],We.prototype,"type",void 0),Object(r.a)([Object(j.b)()],We.prototype,"url",null),We=Object(r.a)([Object(v.a)("esri.layers.RouteLayer")],We);const Ue=We}}]);
//# sourceMappingURL=174.7e6503b4.chunk.js.map