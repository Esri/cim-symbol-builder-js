{"version":3,"file":"static/js/38.f1bff8ff.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/input/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/input/input.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/input/input.scss?tag=calcite-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts"],"sourcesContent":["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputValidationMessage\",\n};\n\nexport const INPUT_TYPE_ICONS = {\n  tel: \"phone\",\n  password: \"lock\",\n  email: \"email-address\",\n  date: \"calendar\",\n  time: \"clock\",\n  search: \"search\",\n} as const;\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { Scale, Status, Alignment } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { InputMessages } from \"./assets/input/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"./interfaces\";\nimport { CSS, IDS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { NumericInputComponent, syncHiddenFormInput, TextualInputComponent } from \"./common/input\";\n\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\n@Component({\n  tag: \"calcite-input\",\n  styleUrl: \"input.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Input\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    T9nComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    NumericInputComponent,\n    TextualInputComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\"search\"`, `\"time\"`, and `\"date\"` types, and will not display for the `\"textarea\"` type.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * When `true`, uses locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value for type \"number\".\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value for `type=\"number\"`.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons for `type=\"number\"`. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity the component's `value` must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /**\n   * Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\n   * This property only has an effect when `type` is \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() accept: string;\n\n  /**\n   * When `true`, the component can accept more than one value.\n   * This property only has an effect when `type` is \"email\" or \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\n   */\n  @Prop() multiple = false;\n\n  /** Adds text to the end of the component. */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /**\n   * Specifies the component type.\n   *\n   * Note that the following `type`s add type-specific icons by default: `\"date\"`, `\"email\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"time\"`.\n   */\n  @Prop({ reflect: true }) type:\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"search\"\n    | \"tel\"\n    | \"text\"\n    | \"textarea\"\n    | \"time\"\n    | \"url\"\n    | \"week\" = \"text\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * When `type` is `\"file\"`, specifies the component's selected files.\n   *\n   * @mdn https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\n   */\n  @Prop() files: FileList | undefined;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n        this.displayedValue = newValue;\n        this.previousEmittedValue = newValue;\n        return;\n      }\n\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : this.type === \"number\"\n              ? isValidNumber(newValue)\n                ? newValue\n                : this.previousValue || \"\"\n              : newValue,\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  @Watch(\"type\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Input[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** keep track of the rendered child type */\n  private childEl?: HTMLInputElement | HTMLTextAreaElement;\n\n  /** keep track of the rendered child type */\n  private childElType?: \"input\" | \"textarea\" = \"input\";\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n  }\n\n  get isTextarea(): boolean {\n    return this.childElType === \"textarea\";\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() defaultMessages: InputMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    await setUpMessages(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    if (this.type === \"number\") {\n      if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n        this.displayedValue = this.value;\n        this.previousEmittedValue = this.value;\n      } else {\n        this.warnAboutInvalidNumberValue(this.value);\n        this.setValue({\n          origin: \"connected\",\n          value: isValidNumber(this.value) ? this.value : \"\",\n        });\n      }\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event({ cancelable: true }) calciteInputInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.type === \"number\") {\n      this.childNumberEl?.focus();\n    } else {\n      this.childEl?.focus();\n    }\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    if (this.type === \"number\") {\n      this.childNumberEl?.select();\n    } else {\n      this.childEl?.select();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputFocusHandler = (): void => {\n    this.calciteInternalInputFocus.emit();\n  };\n\n  private inputChangeHandler = (): void => {\n    if (this.type === \"file\") {\n      this.files = (this.childEl as HTMLInputElement).files;\n    }\n  };\n\n  private inputInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (!isValidNumber(delocalizedValue)) {\n        nativeEvent.preventDefault();\n      }\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.type !== \"number\" || this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    if (event.key === numberStringFormatter.decimal) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key)) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private numberButtonPointerUpAndOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private numberButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(this.type, this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el: HTMLInputElement | HTMLTextAreaElement) => {\n    this.childEl = el;\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (this.type === \"text\" && !this.childEl) {\n      return;\n    }\n    if (this.type === \"number\" && !this.childNumberEl) {\n      return;\n    }\n    this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n  }\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n\n    if (this.type === \"number\") {\n      numberStringFormatter.numberFormatOptions = {\n        locale: this.effectiveLocale,\n        numberingSystem: this.numberingSystem,\n        useGrouping: this.groupSeparator,\n        signDisplay: \"never\",\n      };\n\n      const isValueDeleted =\n        this.previousValue?.length > value.length || this.value?.length > value.length;\n      const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n      const sanitizedValue =\n        hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n\n      const newValue =\n        value && !sanitizedValue\n          ? isValidNumber(this.previousValue)\n            ? this.previousValue\n            : \"\"\n          : sanitizedValue;\n\n      let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n      if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n        newLocalizedValue = addLocalizedTrailingDecimalZeros(\n          newLocalizedValue,\n          newValue,\n          numberStringFormatter,\n        );\n      }\n\n      // adds localized trailing decimal separator\n      this.displayedValue =\n        hasTrailingDecimalSeparator && isValueDeleted\n          ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n          : newLocalizedValue;\n\n      this.userChangedValue = origin === \"user\" && this.value !== newValue;\n      // don't sanitize the start of negative/decimal numbers, but\n      // don't set value to an invalid number\n      this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n    } else {\n      this.userChangedValue = origin === \"user\" && this.value !== value;\n      this.value = value;\n    }\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.previousEmittedValue = value;\n    }\n\n    if (nativeEvent) {\n      const calciteInputInputEvent = this.calciteInputInput.emit();\n      if (calciteInputInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue =\n          this.type === \"number\"\n            ? numberStringFormatter.localize(this.previousValue)\n            : this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (this.type === \"number\" && value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const autofocus = this.el.autofocus || this.el.hasAttribute(\"autofocus\") ? true : null;\n    const enterKeyHint = this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\");\n    const inputMode = this.el.inputMode || this.el.getAttribute(\"inputmode\");\n\n    const localeNumberInput =\n      this.type === \"number\" ? (\n        <input\n          accept={this.accept}\n          aria-errormessage={IDS.validationMessage}\n          aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n          aria-label={getLabelText(this)}\n          autocomplete={this.autocomplete}\n          autofocus={autofocus}\n          defaultValue={this.defaultValue}\n          disabled={this.disabled ? true : null}\n          enterKeyHint={enterKeyHint}\n          inputMode={inputMode}\n          key=\"localized-input\"\n          maxLength={this.maxLength}\n          minLength={this.minLength}\n          multiple={this.multiple}\n          name={undefined}\n          onBlur={this.inputBlurHandler}\n          onFocus={this.inputFocusHandler}\n          onInput={this.inputNumberInputHandler}\n          onKeyDown={this.inputNumberKeyDownHandler}\n          onKeyUp={this.inputKeyUpHandler}\n          pattern={this.pattern}\n          placeholder={this.placeholder || \"\"}\n          readOnly={this.readOnly}\n          ref={this.setChildNumberElRef}\n          type=\"text\"\n          value={this.displayedValue}\n        />\n      ) : null;\n\n    const childEl =\n      this.type !== \"number\"\n        ? [\n            <this.childElType\n              accept={this.accept}\n              aria-errormessage={IDS.validationMessage}\n              aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n              aria-label={getLabelText(this)}\n              autocomplete={this.autocomplete}\n              autofocus={autofocus}\n              class={{\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n              }}\n              defaultValue={this.defaultValue}\n              disabled={this.disabled ? true : null}\n              enterKeyHint={enterKeyHint}\n              inputMode={inputMode}\n              max={this.maxString}\n              maxLength={this.maxLength}\n              min={this.minString}\n              minLength={this.minLength}\n              multiple={this.multiple}\n              name={this.name}\n              onBlur={this.inputBlurHandler}\n              onChange={this.inputChangeHandler}\n              onFocus={this.inputFocusHandler}\n              onInput={this.inputInputHandler}\n              onKeyDown={this.inputKeyDownHandler}\n              onKeyUp={this.inputKeyUpHandler}\n              pattern={this.pattern}\n              placeholder={this.placeholder || \"\"}\n              readOnly={this.readOnly}\n              ref={this.setChildElRef}\n              required={this.required ? true : null}\n              step={this.step}\n              tabIndex={\n                this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null\n              }\n              type={this.type}\n              value={this.value}\n            />,\n            this.isTextarea ? (\n              <div class={CSS.resizeIconWrapper}>\n                <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n              </div>\n            ) : null,\n          ]\n        : null;\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {localeNumberInput}\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n              ? numberButtonsVertical\n              : null}\n            {this.suffixText ? suffixText : null}\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-prefix-size: Specifies the component's prefix width.\n * @prop --calcite-input-suffix-size: Specifies the component's suffix width.\n */\n\n:host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & textarea {\n    @apply h-6;\n    min-block-size: theme(\"spacing.6\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & input[type=\"file\"] {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n  & textarea {\n    @apply text-n2h\n    h-auto\n    py-1\n    px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.8\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & input[type=\"file\"] {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n  & textarea {\n    @apply text-n1h\n      h-auto\n      py-2\n      px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.11\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & input[type=\"file\"] {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n  & textarea {\n    @apply text-0h\n      h-auto\n      py-3\n      px-4;\n  }\n}\n\n@include disabled() {\n  & textarea {\n    resize: none;\n  }\n}\n\ntextarea,\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply font-inherit\n    text-color-1\n    bg-foreground-1\n    relative\n    m-0\n    box-border\n    flex\n    max-h-full\n    w-full\n    max-w-full\n    flex-1\n    rounded-none\n    font-normal;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// states\ninput,\ntextarea {\n  @apply border\n    border-color-input\n    border-solid\n    text-color-1\n    text-ellipsis;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\ninput:focus,\ntextarea:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly],\ntextarea[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ntextarea,\ninput {\n  @apply focus-base;\n}\ntextarea:focus,\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input,\n  & textarea {\n    @apply border-color-danger;\n  }\n  & input:focus,\n  & textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block;\n}\n\n.icon,\n.resize-icon-wrapper {\n  @apply z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration,\ninput[type=\"date\"]::-webkit-clear-button,\ninput[type=\"time\"]::-webkit-clear-button {\n  @apply hidden;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-prefix-size, auto);\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-suffix-size, auto);\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & textarea,\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & textarea,\n  & input {\n    text-align: end;\n  }\n}\n\n// number buttons\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n    @apply m-0;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input,\n  textarea {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n// hide the default date picker\n:input::-webkit-calendar-picker-indicator {\n  @apply hidden;\n}\n\ninput[type=\"date\"]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\n// textarea resize icon\ntextarea::-webkit-resizer {\n  @apply absolute\n    bottom-0\n    box-border\n    py-0\n    px-1;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n\n  @apply bg-foreground-1\n    text-color-3\n    pointer-events-none\n    absolute\n    h-3\n    w-3;\n\n  & calcite-icon {\n    inset-block-end: theme(\"spacing.1\");\n    inset-inline-end: theme(\"spacing.1\");\n    transform: rotate(-45deg);\n  }\n}\n\n.calcite--rtl {\n  .resize-icon-wrapper {\n    & calcite-icon {\n      transform: rotate(45deg);\n    }\n  }\n}\n\n:host([type=\"color\"]) input {\n  @apply p-1;\n}\n\n// file input\n:host([type=\"file\"]) input {\n  @apply bg-foreground-1\n    border-color-input\n    cursor-pointer\n    border\n    border-dashed\n    text-center;\n}\n\n:host([type=\"file\"][scale=\"s\"]) input {\n  @apply py-px px-2;\n}\n\n:host([type=\"file\"][scale=\"m\"]) input {\n  @apply py-1 px-3;\n}\n\n:host([type=\"file\"][scale=\"l\"]) input {\n  @apply py-2 px-4;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n      flex\n      cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n"],"names":["CSS","IDS","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","Input","childElType","previousValueOrigin","mutationObserver","createObserver","this","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","value","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","composedPath","includes","inputWrapperEl","actionWrapperEl","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","type","files","childEl","inputInputHandler","target","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildElRef","el","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","signDisplay","isValueDeleted","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInput","inputKeyUpHandler","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","max","toString","minWatcher","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","icon","isTextarea","clearable","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","selectText","select","onLabelClick","inputStep","step","Math","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","input","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","render","dir","getElementDir","loader","h","class","label","messages","loading","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","autofocus","hasAttribute","enterKeyHint","inputMode","localeNumberInput","accept","toAriaBoolean","status","getLabelText","autocomplete","defaultValue","maxLength","minLength","multiple","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","pattern","placeholder","ref","onChange","required","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","id","message","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","requestAnimationFrame"],"sourceRoot":""}