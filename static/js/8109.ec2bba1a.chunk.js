"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[8109],{37420:(t,e,n)=>{n.d(e,{Ue:()=>Bn,G8:()=>jn});var s=n(86950),r=n(10064),o=n(84652),i=n(27366),a=n(49861),u=(n(25243),n(63780),n(93169),n(69912)),l=(n(32718),n(46784));let c=class extends l.wq{constructor(){super(...arguments),this.raster=void 0}};(0,i._)([(0,a.Cb)({json:{write:!0}})],c.prototype,"raster",void 0),c=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],c);const p=c;var h;let f=h=class extends p{clone(){return new h({raster:this.raster})}};f=h=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],f);const m=f;var d=n(89125),g=n(96212),y=n(53737);const b=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);let v=class extends l.wq{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const t=[];for(let e=0;e<s.length;e++){const{parameters:n}=s[e],r=n.rasters||n.raster&&[n.raster];r?.length&&t.push(...r)}s=t}for(let i=e.length-1;i>=0;i--)e[i].isNoopProcess&&e.splice(i,1);let r=!1;for(let i=0;i<e.length;i++){const t=e[i];t.id=e.length-i-1;const{rasters:n}=t.parameters;r=r||null!=n&&n.length>1}const o=e.some((t=>{let{name:e}=t;return b.has(e.toLowerCase())}));return{functions:e,hasBranches:r,hasSurfaceFunction:o}}bind(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;this.id=n+1;const s=this._getRasterValues();let r=!0;for(let o=0;o<s.length;o++){const n=s[o];if(null!=n&&this._isRasterFunctionValue(n)){const s=n.bind(t,e,this.id+o);if(!s.success)return this._bindingResult=s,s;r=r&&s.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const n=t.filter((t=>"ExtractBand"===t.functionName));return n.length&&n.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let n=0;n<t;n++)e.push(n)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some(((t,e)=>t!==e)),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith("u")||t?.startsWith("s"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t])).flat()}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(0===e.length)return n;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&s.includes(t)?n[s.indexOf(t)]:"number"!=typeof t?n[0]:void 0)),o=r.find((t=>t))??n[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,n);else{const t=r,s=this._getPrimaryRasterId(t);if(null==s)continue;n.includes(s)||(this.mainPrimaryRasterId===s?(e.unshift(t),n.unshift(s)):(e.push(t),n.push(s)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(null==t||"$$"===t){const t=n[0];return null==t?null:t.clone()}if("string"==typeof t){const s=e.primaryRasterIds.indexOf(t);return-1===s?null:n[s]}if("number"==typeof t){const e=n[0];if(null==e)return null;const{width:s,height:r,pixelType:o,mask:i}=e,a=i?new Uint8Array(i):null,u=new Float32Array(s*r);u.fill(t);const l=this.sourceRasterInfos[0].bandCount,c=new Array(l).fill(u);return new g.Z({width:s,height:r,pixelType:o,pixels:c,mask:a})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,o=n.BandProperties;o&&o.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:"string"==typeof n.BAND_COUNT?String(e):e})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}}),(0,d.p)((t=>t?.toLowerCase()))],v.prototype,"outputPixelType",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"mainPrimaryRasterId",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"sourceRasters",void 0),(0,i._)([(0,a.Cb)({type:[y.Z],json:{write:!0}})],v.prototype,"sourceRasterInfos",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"rasterInfo",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"readingBufferSize",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],v.prototype,"id",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"supportsGPU",null),(0,i._)([(0,a.Cb)()],v.prototype,"rawInputBandIds",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"isInputBandIdsSwizzled",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"swizzledBandSelection",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"isBranch",void 0),(0,i._)([(0,a.Cb)()],v.prototype,"flatWebGLFunctionChain",null),(0,i._)([(0,a.Cb)()],v.prototype,"_bindingResult",void 0),v=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BaseRasterFunction")],v);const w=v;var x=n(86807);let _=class extends w{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],o=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return(0,x.M_)(e,{resolution:o})}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],_.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:m,json:{write:!0,name:"rasterFunctionArguments"}})],_.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],_.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],_.prototype,"isGCS",void 0),_=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.AspectFunction")],_);const C=_;var A=n(27135),P=n(43404);const F=new Set(["+","-","*","/","(",")"]);function I(t,e,n,s){if("number"==typeof n&&"number"==typeof s)return n+s;let r,o,i;"number"==typeof n?(i=s,r=i.length,o=new Float32Array(r),o.fill(n)):(r=n.length,o=n,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function T(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let e=0;e<t.length;e++)if("("===t[e])n=e;else if(")"===t[e]){s=e;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function N(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,n=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){n=i;break}const s=0===n?t:t.slice(e+1,n);let r=-1;for(let i=0;i<s.length;i++)if("*"===s[i]||"/"===s[i]){r=i;break}if(r>-1)n>0&&(r+=e+1);else{for(let t=0;t<s.length;t++)if("+"===s[t]||"-"===s[t]){r=t;break}n>0&&(r+=e+1)}let o=0;for(let i=0;i<r;i++)"("===t[i]&&o++;return{opIndex:r,numIndex:r-o}}function R(t,e,n){let s,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const n=t.split(""),s=[],r=[];let o="";for(let i=0;i<n.length;i++){const t=n[i];if(F.has(t))""!==o&&r.push(parseFloat(o)),s.push(t),o="";else{if("b"===t.toLowerCase()){i++,o=t.concat(n[i]),r.push(e[parseInt(o[1],10)-1]),o="";continue}o=o.concat(t),i===n.length-1&&r.push(parseFloat(o))}}return{ops:s,nums:r}}(n,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const n=new Float32Array(e[0].length);return"number"==typeof t?n.fill(t):n.set(t),[n]}for(;r.length>0;){const{numIndex:e,opIndex:n}=N(r);if(s=I(t,r[n],o[e],o[e+1]),1===r.length)break;r=T(r,n),o.splice(e,2,s)}return[s]}var j=n(17314);const B=new P.X({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function k(t,e){if(!(0,j.nk)(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=M(i,o[r[0]],o[r[1]]);break;case"ndwi":a=M(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=function(t,e,n){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":a=function(t,e,n,s){const r=n.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=n[i],r=e[i],a=r+t+s;a&&(o[i]=(r-t)/a*(1+s))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=function(t,e,n,s,r,o){const i=n.length,a=new Float32Array(i),u=-r*s+o*(1+s*s);for(let l=0;l<i;l++)if(null==t||t[l]){const t=n[l],o=e[l],i=r*o+t+u;i&&(a[l]=s*(o-s*t-r)/i)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o];r[o]=.5*(2*(s+1)-Math.sqrt((2*s+1)**2-8*(s-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o];if(1!==t){const e=(2*(s*s-t*t)+1.5*s+.5*t)/(s+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":a=function(t,e,n,s,r){const o=n.length,i=new Float32Array(o),a=Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(null==t||t[u]){const t=n[u],o=e[u];i[u]=(o-s*t-r)/a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=function(t,e){const[n,s,r,o,i,a]=e,u=n.length,l=new Float32Array(u);for(let c=0;c<u;c++)(null==t||t[c])&&(l[c]=-.2848*n[c]-.2435*s[c]-.5436*r[c]+.7243*o[c]+.084*i[c]-1.18*a[c]);return[l]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=function(t,e){const[n,,s,r,o,i]=e,a=n.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let p=0;p<a;p++)(null==t||t[p])&&(u[p]=i[p]?o[p]/i[p]*100:0,l[p]=n[p]?o[p]/n[p]*100:0,c[p]=r[p]?s[p]/r[p]*(o[p]/r[p])*100:0);return[u,l,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"vari":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=e+t-r[a];o&&(i[a]=(e-t)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a],u=Math.sqrt((2*t+1)**2-6*t-5*Math.sqrt(e)-.5);i[a]=1.5*(1.2*(t-o)-2.5*(e-o))*u}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a];i[a]=100*(t-e)-10*(t-o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=t+6*e-7.5*r[a]+1;o&&(i[a]=2.5*(t-e)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;const[s,r,o]=e,i=r.length,a=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const t=s[u],e=r[u],i=o[u],l=t+n*e+(1-n)*i;l&&(a[u]=(t-n*e-(1-n)*i)/l)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o])for(o=0;o<s;o++){const t=(.1-e[o])**2+(.06-n[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":a=R(i,o,n);break;default:return t}const u=null!=i?new Uint8Array(i.length):null;null!=i&&null!=u&&u.set(i);const l=new g.Z({width:t.width,height:t.height,pixelType:"f32",pixels:a,mask:u});return l.updateStatistics(),l}function S(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function M(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o],i=t+s;i&&(r[o]=(t-s)/i)}return[r]}var D;let G=D=class extends p{constructor(){super(...arguments),this.method="custom"}clone(){return new D({method:this.method,bandIndexes:this.bandIndexes,raster:(0,o.d9)(this.raster)})}};(0,i._)([(0,a.Cb)({json:{type:String,write:!0}})],G.prototype,"bandIndexes",void 0),(0,i._)([(0,A.J)(B)],G.prototype,"method",void 0),G=D=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],G);const E=G,O=new Set(["vari","mtvi2","rtvi-core","evi"]);let z=class extends w{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=null,e.histograms=null,e.bandCount="sultan"===this.functionArguments.method?3:1,e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map((t=>parseFloat(t)));return k(e,{method:n,bandIndexes:r,equation:s})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=S([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=S([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=S([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=S([e[0],e[1],0]),s="ci";break;case"savi":n=S([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=S([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=S([e[0],e[1],0]),s="msavi";break;case"gemi":n=S([e[0],e[1],0]),s="gemi";break;case"pvi":n=S([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=S([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=S([e[0],e[1],e[2]]),s="mtvi2";break;case"rtvi-core":n=S([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=S([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=S([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=S([e[1],e[0],0]),s="bai";break;default:n=S([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),n=t.length,s=e.map((t=>t>=n?n-1:t)),r=O.has(this.functionArguments.method)?3:2,o=s.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],z.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:E,json:{write:!0,name:"rasterFunctionArguments"}})],z.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],z.prototype,"rasterArgumentNames",void 0),z=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],z);const Z=z;var V,U=n(38511),L=n(22850),W=n(57634);let X=V=class extends p{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return L.Oi.includes(e)?e:null}readColorRamp(t){return(0,W.i)(t)}readColorRampName(t,e){if(!t)return null;const n=L.H0.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return n?L.H0.fromJSON(n):null}clone(){return new V({colormap:(0,o.d9)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,i._)([(0,a.Cb)({type:[[Number]],json:{write:!0}})],X.prototype,"colormap",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],X.prototype,"colormapName",void 0),(0,i._)([(0,d.p)("colormapName")],X.prototype,"castColormapName",null),(0,i._)([(0,a.Cb)({types:W.V,json:{write:!0}})],X.prototype,"colorRamp",void 0),(0,i._)([(0,U.r)("colorRamp")],X.prototype,"readColorRamp",null),(0,i._)([(0,a.Cb)({type:L.H0.apiValues,json:{type:L.H0.jsonValues,write:L.H0.write}})],X.prototype,"colorRampName",void 0),(0,i._)([(0,U.r)("colorRampName")],X.prototype,"readColorRampName",null),X=V=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],X);const q=X,H=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],J=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function $(t,e){const n=[],s=[];for(let o=0;o<t.length-1;o++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[o].slice(1),toColor:t[o+1].slice(1)}),s.push(t[o+1][0]-t[o][0]);const r=t[t.length-1][0];return(0,L.XL)({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function Y(t){let e;switch(t){case"elevation":e=$([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=(0,L.XL)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=$([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=H;break;case"ndvi2":e=function(){const t=$([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=J;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let K=class extends w{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)e=(0,L.Jw)(s,{interpolateAlpha:!0});else if(r){const t=(0,L.B4)(r);t&&(e=(0,L.Jw)(t))}else n&&(e=Y(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],K.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:q,json:{write:!0,name:"rasterFunctionArguments"}})],K.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],K.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],K.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],K.prototype,"indexedColormap",void 0),K=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapFunction")],K);const Q=K;var tt,et=n(31201);let nt=tt=class extends p{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new tt({rasters:(0,o.d9)(this.rasters)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],nt.prototype,"rasters",void 0),(0,i._)([(0,et.c)("rasters")],nt.prototype,"writeRasters",null),nt=tt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],nt);const st=nt;let rt=class extends w{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map((t=>{let{bandCount:e}=t;return e})).reduce(((t,e)=>t+e)),t.every((t=>{let{statistics:e}=t;return null!=e&&e.length}))){const e=[];t.forEach((t=>{let{statistics:n}=t;return null!=n&&e.push(...n)})),n.statistics=e}if(t.every((t=>{let{histograms:e}=t;return null!=e&&e.length}))){const e=[];t.forEach((t=>{let{histograms:n}=t;return null!=n&&e.push(...n)})),n.histograms=e}n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const n=e?.[0];return null==n?null:(0,j.Gd)(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:st,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],rt.prototype,"rasterArgumentNames",void 0),rt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CompositeBandFunction")],rt);const ot=rt,it={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},at={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},ut={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},lt={setNull:50,conditional:78},ct={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65,...at,...ut,majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75,...lt};var pt=n(92089);const ht=new Map;function ft(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=o.length,l=i?0:s,c=i?s:0,p=i?1:e;for(let h=l;h<n-l;h++){const n=h*e;for(let i=c;i<e-c;i++){if(r&&!r[n+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[n+i+(r-s)*p]*o[r];a[n+i]=e}}return a}function mt(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=Math.floor(s/2),l=Math.floor(r/2);for(let c=u;c<n-u;c++){const n=c*e;for(let c=l;c<e-l;c++){if(o&&!o[n+c])continue;let p=0;for(let o=0;o<s;o++)for(let s=0;s<r;s++)p+=t[n+c+(o-u)*e+s-l]*i[o*r+s];a[n+c]=p}}return a}function dt(t,e,n,s,r){const o=Math.floor(s/2);for(let a=0;a<o;a++)for(let s=0;s<e;s++)t[a*e+s]=t[(r-1-a)*e+s],t[(n-1-a)*e+s]=t[(n-r+a)*e+s];const i=Math.floor(r/2);for(let a=0;a<n;a++){const n=a*e;for(let s=0;s<i;s++)t[n+s]=t[n+r-1-s],t[n+e-s-1]=t[n+e+s-r]}}function gt(t,e){const n=function(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let n=null;for(let s=0;s<e;s++){const o=t[s+r*e],i=t[s];if(null==n)if(0===i){if(o)return{separable:!1,row:null,col:null}}else n=o/i;else if(o/i!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};s.push(n)}return{separable:!0,row:n,col:s}}(e.kernel),s=!1!==e.mirrorEdges,r=n.separable?function(t,e,n){let s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,c=[],p=e.length,h=n.length,f=Math.floor(p/2),m=Math.floor(h/2);for(let d=0;d<l;d++){let t=ft(r[d],o,i,f,u,e,!0);t=ft(t,o,i,m,u,n,!1),s&&dt(t,o,i,p,h),c.push(t)}return new g.Z({width:o,height:i,pixelType:a,pixels:c,mask:u})}(t,n.row,n.col,s):function(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const{pixels:s,width:r,height:o,pixelType:i,mask:a}=t,u=s.length,l=[],{kernel:c,rows:p,cols:h}=e;for(let f=0;f<u;f++){const t=mt(s[f],r,o,p,h,a,c);n&&dt(t,r,o,p,h),l.push(t)}return new g.Z({width:r,height:o,pixelType:i,pixels:l,mask:a})}(t,e,s),{outputPixelType:o}=e;return o&&r.clamp(o),r}var yt;ht.set(it.none,[0,0,0,0,1,0,0,0,0]),ht.set(it.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),ht.set(it.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),ht.set(it.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),ht.set(it.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),ht.set(it.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),ht.set(it.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),ht.set(it.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),ht.set(it.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),ht.set(it.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),ht.set(it.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),ht.set(it.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),ht.set(it.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),ht.set(it.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),ht.set(it.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),ht.set(it.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),ht.set(it.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),ht.set(it.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),ht.set(it.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),ht.set(it.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),ht.set(it.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),ht.set(it.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),ht.set(it.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let bt=yt=class extends p{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=ht.get(t);if(!e||t===it.userDefined||t===it.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new yt({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,o.d9)(this.raster)})}};(0,i._)([(0,a.Cb)({json:{type:Number,write:!0}})],bt.prototype,"rows",void 0),(0,i._)([(0,a.Cb)({json:{type:Number,write:!0}})],bt.prototype,"cols",void 0),(0,i._)([(0,a.Cb)({json:{name:"type",type:Number,write:!0}})],bt.prototype,"convolutionType",null),(0,i._)([(0,a.Cb)({json:{type:[Number],write:!0}})],bt.prototype,"kernel",void 0),bt=yt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],bt);const vt=bt;let wt=class extends w{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(it).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==it.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[it.none,it.sharpen,it.sharpen2,it.sharpening3x3,it.sharpening5x5];return"u8"===this.outputPixelType||i.includes(t)||(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:s.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===it.none)return e;let{kernel:n,rows:s,cols:r}=this.functionArguments;const o=n.reduce(((t,e)=>t+e));return 0!==o&&1!==o&&(n=n.map((t=>t/o))),gt(e,{kernel:n,rows:s,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const e=t.reduce(((t,e)=>t+e));0!==e&&1!==e&&(t=t.map((t=>t/e)));const n=new Float32Array(25);return n.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:n,clampRange:(0,pt.r)(this.outputPixelType)}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:vt,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],wt.prototype,"rasterArgumentNames",void 0),wt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ConvolutionFunction")],wt);const xt=wt;var _t;const Ct=new P.X({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let At=_t=class extends p{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Ct.fromJSON(e.type??e.curvatureType??0)}clone(){return new _t({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,i._)([(0,a.Cb)({json:{write:{target:"type"}}}),(0,A.J)(Ct)],At.prototype,"curvatureType",void 0),(0,i._)([(0,U.r)("curvatureType",["type","curvatureType"])],At.prototype,"readCurvatureType",null),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],At.prototype,"zFactor",void 0),At=_t=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],At);const Pt=At;let Ft=class extends w{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&n>=1?n*x.CX:n;return(0,x.Ne)(e,{zFactor:u,curvatureType:s,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*x.CX:t}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Pt,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ft.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ft.prototype,"isGCS",void 0),Ft=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CurvatureFunction")],Ft);const It=Ft;var Tt;let Nt=Tt=class extends p{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=j.CD.bestMatch}clone(){return new Tt({bandIds:[...this.bandIds],bandNames:[...this.bandNames],missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Nt.prototype,"bandIds",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Nt.prototype,"bandNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Nt.prototype,"bandWavelengths",void 0),(0,i._)([(0,A.J)({0:"name",1:"wavelength",2:"id"})],Nt.prototype,"method",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Nt.prototype,"missingBandAction",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Nt.prototype,"wavelengthMatchTolerance",void 0),Nt=Tt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Nt);const Rt=Nt;let jt=class extends w{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===s||"id"!==s&&!i?.length),l=o?.length&&("wavelength"===s||"id"!==s&&!i?.length),c=a===j.CD.fail,p=u?this._matchBandNames(n,r):l?this._matchBandWavelengths(n,o,c):this._matchBandIds(n,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=n.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:f,histograms:m}=h;null!=f&&f.length&&(h.statistics=p.map((t=>f[t]||f[f.length-1]))),null!=m&&m.length&&(h.histograms=p.map((t=>m[t]||m[m.length-1])));let d=h.keyProperties?.BandProperties;return d?.length&&(d=p.map((t=>t>=d.length?d[d.length-1]:d[t])),h.keyProperties={...h.keyProperties,BandProperties:d}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:S(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_matchBandNames(t,e){const n=t.bandInfos.map((t=>{let{name:e}=t;return e.toLowerCase()})),s=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let o=n.indexOf(t);if(-1===o&&"nearinfrared"===t&&(o=n.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=n.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;s.push(o)}return s}_matchBandIds(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some((t=>t<0||t>=s))?null:e}_matchBandWavelengths(t,e,n){const{bandInfos:s}=t,r=[];for(let a=0;a<s.length;a++){const{minWavelength:t,maxWavelength:e}=s[a];if(!t||!e)return null;r.push({minWavelength:t,maxWavelength:e})}const{wavelengthMatchTolerance:o}=this.functionArguments,i=[];for(let a=0;a<e.length;a++){const t=e[a];let s=!1,u=-1,l=Number.MAX_VALUE;for(let e=0;e<r.length;e++){const n=r[e],o=t>=n.minWavelength&&t<=n.maxWavelength,i=Math.abs(t-(n.minWavelength+n.maxWavelength)/2);o?i<l&&(s=!0,u=e,l=i):!s&&i<l&&(u=e,l=i)}if(!s&&o&&l<o&&(s=!0),!s&&n)return null;i.push(u)}return i}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Rt,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],jt.prototype,"rasterArgumentNames",void 0),jt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ExtractBandFunction")],jt);const Bt=jt;var kt;let St=kt=class extends p{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new kt({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,o.d9)(this.rasters)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],St.prototype,"operation",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],St.prototype,"rasters",void 0),(0,i._)([(0,et.c)("rasters")],St.prototype,"writeRasters",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],St.prototype,"processAsMultiband",void 0),St=kt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],St);const Mt=St,Dt=new Map;Dt.set(ut.acos,[0,Math.PI]),Dt.set(ut.asin,[-Math.PI/2,Math.PI/2]),Dt.set(ut.atan,[-Math.PI/2,Math.PI/2]),Dt.set(ut.cos,[-1,1]),Dt.set(ut.sin,[-1,1]),Dt.set(at.booleanAnd,[0,1]),Dt.set(at.booleanNot,[0,1]),Dt.set(at.booleanOr,[0,1]),Dt.set(at.booleanXOr,[0,1]),Dt.set(at.equalTo,[0,1]),Dt.set(at.notEqual,[0,1]),Dt.set(at.greaterThan,[0,1]),Dt.set(at.greaterThanEqual,[0,1]),Dt.set(at.lessThan,[0,1]),Dt.set(at.lessThanEqual,[0,1]),Dt.set(at.isNull,[0,1]);const Gt=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Et(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t.map((t=>t.mask)),s=n.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===s.length)return new Uint8Array(r).fill(255);const o=s[0],i=new Uint8Array(o);if(1===s.length)return i;if(!e){for(let t=1;t<s.length;t++){const e=s[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}if(s.length!==n.length)return new Uint8Array(r).fill(255);for(let a=1;a<s.length;a++){const t=s[a];for(let e=0;e<i.length;e++)0===i[e]&&(i[e]=t[e]?255:0)}return i}function Ot(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]+r[a]);return i}function zt(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand("f32",r);return o.set(s),o}function Zt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]-r[a]);return i}function Vt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]*r[a]);return i}function Ut(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return o}function Lt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]/r[a]);return i}function Wt(t,e,n){return Lt(t,e,"f32")}function Xt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=Math.floor(s[a]/r[a]));return i}function qt(t,e,n,s){const r=t[0],o=r.length,i=g.Z.createEmptyBand(n,o);if(s===ut.atanh){for(let t=0;t<o;t++)if(e[t]){const n=r[t];Math.abs(n)>=1?e[t]=0:i[t]=Math.atanh(n)}return i}const a=s===ut.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(e[u]){const t=r[u];Math.abs(t)>1?e[u]=0:i[u]=a(t)}return i}function Ht(t,e,n,s){const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s(r[a]));return i}function Jt(t,e,n,s){const[r,o]=t,i=r.length,a=g.Z.createEmptyBand(n,i);for(let u=0;u<i;u++)e&&!e[u]||(a[u]=s(r[u],o[u]));return a}function $t(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]&r[a]);return i}function Yt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<<r[a]);return i}function Kt(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=~s[i]);return o}function Qt(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]|r[a]);return i}function te(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>>r[a]);return i}function ee(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]^r[a]);return i}function ne(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]&&r[a]?1:0);return i}function se(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=s[i]?0:1);return o}function re(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]||r[a]?1:0);return i}function oe(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=(s[a]?1:0)^(r[a]?1:0));return i}function ie(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]===r[a]?1:0);return i}function ae(t,e,n,s){const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o),a=s===Math.E;for(let u=0;u<o;u++)e&&!e[u]||(i[u]=a?Math.exp(r[u]):s**r[u]);return i}function ue(t,e,n){return ae(t,e,n,10)}function le(t,e,n){return ae(t,e,n,2)}function ce(t,e,n){return ae(t,e,n,Math.E)}function pe(t,e,n,s){const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(r[a]<=0?e[a]=0:i[a]=s(r[a]));return i}function he(t,e,n){return pe(t,e,n,Math.log10)}function fe(t,e,n){return pe(t,e,n,Math.log2)}function me(t,e,n){return pe(t,e,n,Math.log)}function de(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>r[a]?1:0);return i}function ge(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>=r[a]?1:0);return i}function ye(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<r[a]?1:0);return i}function be(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<=r[a]?1:0);return i}function ve(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand(n,r);if(!e)return o;for(let i=0;i<r;i++)o[i]=e[i]?0:1;return o}function we(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]%r[a]);return i}function xe(t,e,n){const[s]=t,r=s.length,o=g.Z.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=-s[i]);return o}function _e(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]===r[a]?0:1);return i}function Ce(t,e,n){const[s,r]=t,o=s.length,i=g.Z.createEmptyBand(n,o),a=new Uint8Array(o);for(let u=0;u<o;u++)null!=e&&!e[u]||0!==s[u]||(i[u]=r[u],a[u]=255);return{band:i,mask:a}}function Ae(t,e,n){const[s,r,o]=t,i=s.length,a=g.Z.createEmptyBand(n,i);for(let u=0;u<i;u++)e&&!e[u]||(a[u]=s[u]?r[u]:o[u]);return a}function Pe(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let n=1;n<s;n++){const s=t[n][a];e<s&&(e=s)}i[a]=e}return i}function Fe(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let n=1;n<s;n++){const s=t[n][a];e>s&&(e=s)}i[a]=e}return i}function Ie(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a],n=e;for(let r=1;r<s;r++){const s=t[r][a];n<s?n=s:e>s&&(e=s)}i[a]=n-e}return i}function Te(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=0;for(let n=0;n<s;n++)e+=t[n][a];i[a]=e/s}return i}function Ne(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a])for(let e=0;e<s;e++){const n=t[e];i[a]+=n[a]}return i}function Re(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){const e=new Float32Array(s);let n=0;for(let o=0;o<s;o++){const s=t[o];n+=s[a],e[o]=s[a]}n/=s;let r=0;for(let t=0;t<s;t++)r+=(e[t]-n)**2;i[a]=Math.sqrt(r/s)}return i}function je(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[o]=t,i=o.length,a=g.Z.createEmptyBand(n,i),u=new Float32Array(s),l=s%2==1;for(let c=0;c<i;c++)if(!e||e[c]){for(let e=0;e<s;e++)u[e]=t[e][c];u.sort(),a[c]=l?u[r]:(u[r]+u[r-1])/2}return a}function Be(t,e,n){const[s,r]=t;if(null==r)return s;const o=s.length,i=g.Z.createEmptyBand(n,o);for(let a=0;a<o;a++)e[a]&&(s[a]===r[a]?i[a]=s[a]:e[a]=0);return i}function ke(t,e,n){const s=t.length;if(s<=2)return Be(t,e,n);const r=t[0].length,o=g.Z.createEmptyBand(n,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){let e;i.clear();for(let o=0;o<s;o++)e=t[o][a],i.set(e,i.has(e)?i.get(e)+1:1);let n=0,r=0;for(const t of i.keys())n=i.get(t),n>r&&(r=n,e=t);o[a]=e}return o}function Se(t,e,n){const s=t.length;if(s<=2)return Be(t,e,n);const r=t[0].length,o=g.Z.createEmptyBand(n,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){let e;i.clear();for(let o=0;o<s;o++)e=t[o][a],i.set(e,i.has(e)?i.get(e)+1:1);let n=0,r=t.length;for(const t of i.keys())n=i.get(t),n<r&&(r=n,e=t);o[a]=e}return o}function Me(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=g.Z.createEmptyBand(n,o),a=new Set;for(let u=0;u<o;u++)if(!e||e[u]){let e;a.clear();for(let n=0;n<s;n++)e=t[n][u],a.add(e);i[u]=a.size}return i}const De=new Map,Ge=new Map,Ee=new Map,Oe=new Map;function ze(){De.size||(De.set(4,Math.sqrt),De.set(6,Math.acos),De.set(7,Math.asin),De.set(8,Math.atan),De.set(9,Math.atanh),De.set(10,Math.abs),De.set(21,Math.cos),De.set(22,Math.cosh),De.set(48,Math.floor),De.set(49,Math.ceil),De.set(51,Math.sin),De.set(52,Math.sinh),De.set(56,Math.tan),De.set(57,Math.tanh),De.set(59,Math.acosh),De.set(60,Math.asinh),De.set(65,Math.floor),Ge.set(5,Math.pow),Ge.set(61,Math.atan2),Ee.set(1,Ot),Ee.set(2,Zt),Ee.set(3,Vt),Ee.set(11,$t),Ee.set(12,Yt),Ee.set(12,Yt),Ee.set(13,Kt),Ee.set(14,Qt),Ee.set(15,te),Ee.set(16,ee),Ee.set(17,ne),Ee.set(18,se),Ee.set(19,re),Ee.set(20,oe),Ee.set(23,Lt),Ee.set(24,ie),Ee.set(25,ce),Ee.set(26,ue),Ee.set(27,le),Ee.set(28,de),Ee.set(29,ge),Ee.set(30,Ut),Ee.set(31,ve),Ee.set(32,zt),Ee.set(33,ye),Ee.set(34,be),Ee.set(35,me),Ee.set(36,he),Ee.set(37,fe),Ee.set(44,we),Ee.set(45,xe),Ee.set(46,_e),Ee.set(64,Wt),Ee.set(65,Xt),Ee.set(76,Ae),Ee.set(78,Ae),Oe.set(38,ke),Oe.set(39,Pe),Oe.set(40,Te),Oe.set(41,je),Oe.set(42,Fe),Oe.set(43,Se),Oe.set(47,Ie),Oe.set(54,Re),Oe.set(55,Ne),Oe.set(58,Me),Oe.set(66,ke),Oe.set(67,Pe),Oe.set(68,Te),Oe.set(69,je),Oe.set(70,Fe),Oe.set(71,Se),Oe.set(72,Ie),Oe.set(73,Re),Oe.set(74,Ne),Oe.set(75,Me))}function Ze(t,e,n,s){let[r,o]=(0,pt.r)(n);const i=n.startsWith("u")||n.startsWith("s");i&&(r-=1e-5,o+=1e-5);for(let a=0;a<e.length;a++)if(e[a]){const n=t[a];isNaN(n)||n<r||n>o?e[a]=0:s[a]=i?Math.round(n):n}}let Ve=class extends w{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some((t=>t.bandCount!==n)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=Gt[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType("f32");const a=e.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,a.bandCount=999!==i||s?n:1;const u=function(t){return Dt.get(t)}(r);if(u){a.statistics=[];for(let t=0;t<a.bandCount;t++)a.statistics[t]={min:u[0],max:u[1],avg:(u[0]+u[1])/2,stddev:(u[0]+u[1])/10}}return this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};ze();let s=Et(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,o=!Oe.has(e)||n.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let l=0;l<i;l++){const n=Oe.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[l]));let i,u=!0;if(e===lt.setNull){const t=Ce(n,s,r);i=t.band,s=t.mask,u=!1}else Ee.has(e)?i=Ee.get(e)(n,s,"f64"):De.has(e)?i=e===ut.asin||e===ut.acos||e===ut.atanh?qt(n,s,"f64",e):Ht(n,s,"f64",De.get(e)):Ge.has(e)?i=Jt(n,s,"f64",Ge.get(e)):Oe.has(e)?i=Oe.get(e)(n,s,"f64"):(i=n[0],u=!1);if(u&&e!==at.isNull&&!Dt.has(e)){const t=g.Z.createEmptyBand(r,i.length);s||(s=new Uint8Array(i.length).fill(255)),Ze(i,s,r,t),i=t}a.push(i)}const u=t[0];return new g.Z({width:u.width,height:u.height,pixelType:r,mask:e===at.isNull?null:s,pixels:a})}(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Gt[t],n=Object.keys(ct).find((e=>ct[e]===t))?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,o]=(0,pt.r)(s);const i=s.startsWith("u")||s.startsWith("s");return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:n,domainRange:[r,o],isOutputRounded:i}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ve.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Mt,json:{write:!0,name:"rasterFunctionArguments"}})],Ve.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ve.prototype,"rasterArgumentNames",void 0),Ve=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.LocalFunction")],Ve);const Ue=Ve;var Le,We=n(16889);let Xe=Le=class extends p{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=j.DX.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const n=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||n.length>0,0===n.length?null:n}return null}));return e?n:null}clone(){return new Le({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Xe.prototype,"includedRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Xe.prototype,"noDataValues",void 0),(0,i._)([(0,a.Cb)()],Xe.prototype,"normalizedNoDataValues",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],Xe.prototype,"noDataInterpretation",void 0),Xe=Le=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Xe);const qe=Xe;let He=class extends w{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let i=0;i<t.bandCount;i++){const t=(0,j.nA)(e,n?.slice(2*i,2*i+2),s?.[i]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=s&&s.every((t=>t?.length===s[0]?.length));return{success:!0,supportsGPU:(!n||n.length<=2*j.hd)&&(!s||o&&s[0].length<=j.hd)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===j.DX.matchAll;return(0,j.sS)(e,{includedRanges:r,noDataValues:i,outputPixelType:n,matchAll:a,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(j.hd);n.fill(We._3),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array(j.hd);for(let r=0;r<s.length;r+=2)s[r]=t?.[r]??-We._3,s[r+1]=t?.[r+1]??We._3;return t&&t.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],He.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:qe,json:{write:!0,name:"rasterFunctionArguments"}})],He.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],He.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],He.prototype,"lookups",void 0),He=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.MaskFunction")],He);const Je=He;var $e;let Ye=$e=class extends p{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new $e({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Ye.prototype,"visibleBandID",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ye.prototype,"infraredBandID",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ye.prototype,"scientificOutput",void 0),Ye=$e=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Ye);const Ke=Ye;let Qe=class extends w{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=s.clone();o.pixelType=this.outputPixelType,o.colormap=null,o.histograms=null,o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return function(t,e,n,s){const{mask:r,pixels:o,width:i,height:a}=t,u=o[n],l=o[e],c=l.length,p=s?new Uint8Array(c):new Float32Array(c),h=s?100:1,f=s?100.5:0;for(let d=0;d<c;d++)if(null==r||r[d]){const t=u[d],e=l[d],n=t+e;n&&(p[d]=(t-e)/n*h+f)}const m=new g.Z({width:i,height:a,mask:r,pixelType:s?"u8":"f32",pixels:[p]});return m.updateStatistics(),m}(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments;return{bandIndexMat3:S(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map((e=>t[e]))}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Qe.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Ke,json:{write:!0,name:"rasterFunctionArguments"}})],Qe.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Qe.prototype,"rasterArgumentNames",void 0),Qe=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.NDVIFunction")],Qe);const tn=Qe;var en;let nn=en=class extends p{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new en({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"inputRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"outputValues",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"noDataRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"allowUnmatched",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"isLastInputRangeInclusive",void 0),nn=en=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],nn);const sn=nn;let rn=class extends w{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:n}=t,{allowUnmatched:s,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=n&&n.length&&r?.length)if(s){const e=Math.min.apply(null,[...r,n[0].min]),s=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:e,max:s}]}else{let e=r[0],s=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,s=s>r[t]?s:r[t];t.statistics=[{...n[0],min:e,max:s}]}return this.rasterInfo=t,this.lookup=s?null:(0,j.oB)({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:s,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=j.hd)&&(!i||i.length<=j.hd)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:n,outputPixelType:s}=this;if(n){const t=(0,j.XV)(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return null!=t&&n.mask&&(t.mask=(0,j.wV)(e.pixels[0],e.mask,n.mask,n.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u}=this.functionArguments;return(0,j.a2)(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:s,allowUnmatched:a,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*j.hd),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let l=0;l<j.hd;l++)s[3*l]=o[2*l]??We._3-1,s[3*l+1]=o[2*l+1]??We._3,s[3*l+2]=i[l]??0,l<a&&(l>0&&(s[3*l]-=r),(l<a-1||!n)&&(s[3*l+1]-=r));const u=new Float32Array(2*j.hd);return u.fill(We._3),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:u,clampRange:(0,pt.r)(this.outputPixelType)}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],rn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:sn,json:{write:!0,name:"rasterFunctionArguments"}})],rn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],rn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],rn.prototype,"lookup",void 0),rn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.RemapFunction")],rn);const on=rn;var an;const un=new P.X({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let ln=an=class extends p{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new an({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,i._)([(0,A.J)(un)],ln.prototype,"slopeType",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],ln.prototype,"zFactor",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"psPower",write:!0}})],ln.prototype,"pixelSizePower",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"psZFactor",write:!0}})],ln.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],ln.prototype,"removeEdgeEffect",void 0),ln=an=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],ln);const cn=ln;let pn=class extends w{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,l=u?.[0],c=l??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return(0,x.yg)(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*x.CX:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],pn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:cn,json:{write:!0,name:"rasterFunctionArguments"}})],pn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],pn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],pn.prototype,"isGCS",void 0),pn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.SlopeFunction")],pn);const hn=pn;var fn;let mn=fn=class extends p{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};n.push(e)})),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,s.push(e)})),e[n]=s}clone(){return new fn({statistics:(0,o.d9)(this.statistics),histograms:(0,o.d9)(this.histograms)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],mn.prototype,"statistics",void 0),(0,i._)([(0,U.r)("statistics")],mn.prototype,"readStatistics",null),(0,i._)([(0,et.c)("statistics")],mn.prototype,"writeStatistics",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],mn.prototype,"histograms",void 0),mn=fn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],mn);const dn=mn;let gn=class extends w{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],gn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:dn,json:{write:!0,name:"rasterFunctionArguments"}})],gn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],gn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],gn.prototype,"indexedColormap",void 0),(0,i._)([(0,a.Cb)()],gn.prototype,"isNoopProcess",void 0),gn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],gn);const yn=gn;var bn;const vn=new P.X({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let wn=bn=class extends p{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[n]=t)}clone(){return new bn({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,o.d9)(this.statistics),gamma:(0,o.d9)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,o.d9)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],wn.prototype,"computeGamma",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{name:"dra",write:!0}})],wn.prototype,"dynamicRangeAdjustment",void 0),(0,i._)([(0,a.Cb)({type:[Number],json:{write:!0}})],wn.prototype,"gamma",void 0),(0,i._)([(0,a.Cb)()],wn.prototype,"histograms",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],wn.prototype,"maxPercent",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],wn.prototype,"minPercent",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],wn.prototype,"numberOfStandardDeviations",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"max",write:!0}})],wn.prototype,"outputMax",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"min",write:!0}})],wn.prototype,"outputMin",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],wn.prototype,"sigmoidStrengthLevel",void 0),(0,i._)([(0,a.Cb)({json:{type:[[Number]],write:!0}})],wn.prototype,"statistics",void 0),(0,i._)([(0,et.c)("statistics")],wn.prototype,"writeStatistics",null),(0,i._)([(0,A.J)(vn)],wn.prototype,"stretchType",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],wn.prototype,"useGamma",void 0),wn=bn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],wn);const xn=wn;var _n=n(21449);let Cn=class extends w{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:o}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const s=(0,_n.AV)(n.toJSON(),{rasterInfo:t}),i=this._isOutputRoundingNeeded()?"round":"float";this.lookup=(0,_n.hE)({pixelType:e,...s,gamma:o?r:null,rounding:i}),this.cutOffs=s}else s||(this.cutOffs=(0,_n.AV)(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();return i.pixelType=this.outputPixelType,i.statistics=null,i.histograms=null,i.colormap=null,i.attributeTable=null,"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed"),this.rasterInfo=i,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:n}=this;if(n)return(0,j.XV)(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||(0,_n.AV)(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=s.useGamma?s.gamma:null;return(0,_n.dy)(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=s&&n&&n.length?(0,_n.um)(r,n):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(a[l]-i[l]);const c=this._isOutputRoundingNeeded();return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:s,gamma:s&&n?n:[1,1,1],gammaCorrection:s&&o?o:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Cn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:xn,json:{write:!0,name:"rasterFunctionArguments"}})],Cn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Cn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Cn.prototype,"lookup",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Cn.prototype,"cutOffs",void 0),Cn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StretchFunction")],Cn);const An=Cn;var Pn;let Fn=Pn=class extends p{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Pn({attributeTableAsRecordSet:(0,o.d9)(this.attributeTableAsRecordSet)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Fn.prototype,"attributeTableAsRecordSet",void 0),Fn=Pn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.TableFunctionArguments")],Fn);const In=Fn;let Tn=class extends w{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,"thematic"!==n.dataType&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Tn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:In,json:{write:!0,name:"rasterFunctionArguments"}})],Tn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Tn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],Tn.prototype,"isNoopProcess",void 0),Tn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.TableFunction")],Tn);const Nn=Tn,Rn=new Map;function jn(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&jn(t,e))}))}function Bn(t,e){if(e=e??{},"function"in(t=(0,o.d9)(t))&&"arguments"in t&&t.arguments){const n=On(t,new Map,e);if(Zn(n),!n.renderingRule)throw new r.Z("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return Mn(t=Sn(t),e);throw new r.Z("raster-function-helper","unsupported raster function json.")}function kn(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Sn(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let t=n[r];const e=r.toLowerCase();if("rasters"===e&&Array.isArray(t))s.rasters=t.map((t=>kn(t)?Sn(t):t));else switch(kn(t)&&(t=Sn(t)),e){case"dra":s.dra=t;break;case"pspower":s.psPower=t;break;case"pszfactor":s.psZFactor=t;break;case"bandids":s.bandIds=t;break;default:s[r[0].toLowerCase()+r.slice(1)]=t}}return"Local"!==e||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function Mn(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!Rn.has(n))throw new r.Z("raster-function-helper",`unsupported raster function: ${n}`);const i=Rn.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(s,u),p="rasters"===u[0],h=[];for(let r=0;r<c.length;r++){const t=c[r];let n;null==t||"string"==typeof t&&t.startsWith("$")?l.push(e?.raster):"string"==typeof t?e[t]&&l.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=Mn(t,e),p||(a.functionArguments[u[r]]=n),l.push(n)),p&&h.push(n??t)}if(p&&(a.functionArguments.rasters=h),e){a.sourceRasters=l;const t=e.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function Dn(t,e){if(t&&e)for(const n in t){const s=t[n];s&&"object"==typeof s&&"type"in s&&("RasterFunctionTemplate"===s.type?Dn(s.arguments,e):"RasterFunctionVariable"===s.type&&null!=e[s.name]&&(s.value=e[s.name]))}}function Gn(t,e){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?Gn(t,e):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=En(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(En)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let s=0;s<n.elements.length;s++){const o=n.elements[s],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:n}=On(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}else{if("RasterFunctionVariable"!==i)throw new r.Z("raster-function-helper","unsupported raster function json.");{const n=Gn(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}}else t.push(o)}s=t}else s=n.elements}return null!=n._object_id&&e.set(n._object_id,s),s}function En(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=t;if(!Array.isArray(n)){const{r:t,g:e,b:r}=(0,s.xr)({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:t,g:e,b:n}=(0,s.xr)({h:r.Hue,s:r.Saturation,v:r.Value});r=[t,e,n,r.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:r}}function On(t,e,n){n&&Dn(t,n);const s={renderingRule:{},templates:e};return zn(t,s),s}function zn(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&s.set(i,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const a={};n.rasterFunctionArguments=a;for(const u in o){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const t=o[u];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?a[u]=Gn(t,s):(n.rasterFunctionArguments[u]={},zn(t,{renderingRule:n.rasterFunctionArguments[u],templates:s})),null!=t._object_id&&s.set(t._object_id,a[u])):a[u]=t}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),n.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":!function(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(a);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}}function Zn(t){const{renderingRule:e,templates:n}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const o in s){const t=s[o],e="_object_ref_id"===o?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==e)t&&"object"==typeof t&&(t.rasterFunctionArguments&&Zn({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((s,o)=>{if("object"==typeof s)if(null!=s._object_ref_id){if(!n.has(s._object_ref_id))throw new r.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const i=n.get(e);i&&"object"==typeof i?Object.assign(s,i):t[o]=i}else Zn({renderingRule:s,templates:n})})));else{if(!n.has(e))throw new r.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const t=n.get(e);"_object_ref_id"!==o?s[o]=t:t&&"object"==typeof t&&Object.assign(s,t)}}}Rn.set("Aspect",{desc:"Aspect Function",ctor:C,rasterArgumentNames:["raster"]}),Rn.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Z,rasterArgumentNames:["raster"]}),Rn.set("Colormap",{desc:"Colormap Function",ctor:Q,rasterArgumentNames:["raster"]}),Rn.set("CompositeBand",{desc:"CompositeBand Function",ctor:ot,rasterArgumentNames:["rasters"]}),Rn.set("Convolution",{desc:"Convolution Function",ctor:xt,rasterArgumentNames:["raster"]}),Rn.set("ExtractBand",{desc:"ExtractBand Function",ctor:Bt,rasterArgumentNames:["raster"]}),Rn.set("Curvature",{desc:"Curvature Function",ctor:It,rasterArgumentNames:["raster"]}),Rn.set("Local",{desc:"Local Function",ctor:Ue,rasterArgumentNames:["rasters"]}),Rn.set("Mask",{desc:"Mask Function",ctor:Je,rasterArgumentNames:["raster"]}),Rn.set("NDVI",{desc:"NDVI Function",ctor:tn,rasterArgumentNames:["raster"]}),Rn.set("Remap",{desc:"Remap Function",ctor:on,rasterArgumentNames:["raster"]}),Rn.set("Slope",{desc:"Slope Function",ctor:hn,rasterArgumentNames:["raster"]}),Rn.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:yn,rasterArgumentNames:["raster"]}),Rn.set("Stretch",{desc:"Stretch Function",ctor:An,rasterArgumentNames:["raster"]}),Rn.set("Table",{desc:"Attribute Table Function",ctor:Nn,rasterArgumentNames:["raster"]})},32935:(t,e,n)=>{n.d(e,{Z:()=>u});var s=n(27366),r=n(46784),o=n(49861),i=(n(25243),n(63780),n(93169),n(69912));let a=class extends r.wq{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};(0,s._)([(0,o.Cb)()],a.prototype,"affectsPixelSize",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],a.prototype,"spatialReference",void 0),a=(0,s._)([(0,i.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],a);const u=a},3089:(t,e,n)=>{n.d(e,{Z:()=>c});var s,r=n(27366),o=n(49861),i=(n(25243),n(63780),n(93169),n(27135)),a=n(69912),u=n(32935);let l=s=class extends u.Z{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new s({tolerance:this.tolerance})}};(0,r._)([(0,i.J)({GCSShiftXform:"gcs-shift"})],l.prototype,"type",void 0),(0,r._)([(0,o.Cb)()],l.prototype,"tolerance",void 0),l=s=(0,r._)([(0,a.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],l);const c=l},69405:(t,e,n)=>{n.d(e,{Z:()=>g});var s,r=n(27366),o=(n(59486),n(49861)),i=(n(25243),n(63780),n(93169),n(27135)),a=n(38511),u=n(69912),l=n(31201),c=n(32935),p=n(585),h=n(53866);function f(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(2===n){const e=s*s,n=r*r,o=s*r;return{x:t[0]+s*t[2]+r*t[4]+e*t[6]+o*t[8]+n*t[10],y:t[1]+s*t[3]+r*t[5]+e*t[7]+o*t[9]+n*t[11]}}const o=s*s,i=r*r,a=s*r,u=o*s,l=o*r,c=s*i,p=r*i;return{x:t[0]+s*t[2]+r*t[4]+o*t[6]+a*t[8]+i*t[10]+u*t[12]+l*t[14]+c*t[16]+p*t[18],y:t[1]+s*t[3]+r*t[5]+o*t[7]+a*t[9]+i*t[11]+u*t[13]+l*t[15]+c*t[17]+p*t[19]}}function m(t,e,n){const{xmin:s,ymin:r,xmax:o,ymax:i,spatialReference:a}=e;let u=[];if(n<2)u.push({x:s,y:i}),u.push({x:o,y:i}),u.push({x:s,y:r}),u.push({x:o,y:r});else{let t=10;for(let e=0;e<t;e++)u.push({x:s,y:r+(i-r)*e/(t-1)}),u.push({x:o,y:r+(i-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)u.push({x:s+(o-s)*e/t,y:r}),u.push({x:s+(o-s)*e/t,y:i})}u=u.map((e=>f(t,e,n)));const l=u.map((t=>t.x)),c=u.map((t=>t.y));return new h.Z({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:a})}let d=s=class extends c.Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=function(t){const[e,n,s,r,o,i]=t,a=s*i-o*r,u=o*r-s*i;return[(o*n-e*i)/a,(s*n-e*r)/u,i/a,r/u,-o/a,-s/u]}(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=f(this.forwardCoefficients,t,this.polynomialOrder);return new p.Z({x:e.x,y:e.y,spatialReference:t.spatialReference})}return m(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=f(this.inverseCoefficients,t,this.polynomialOrder);return new p.Z({x:e.x,y:e.y,spatialReference:t.spatialReference})}return m(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,r._)([(0,o.Cb)({json:{write:!0}})],d.prototype,"polynomialOrder",void 0),(0,r._)([(0,o.Cb)()],d.prototype,"forwardCoefficients",void 0),(0,r._)([(0,a.r)("forwardCoefficients",["coeffX","coeffY"])],d.prototype,"readForwardCoefficients",null),(0,r._)([(0,l.c)("forwardCoefficients")],d.prototype,"writeForwardCoefficients",null),(0,r._)([(0,o.Cb)({json:{write:!0}})],d.prototype,"inverseCoefficients",null),(0,r._)([(0,a.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],d.prototype,"readInverseCoefficients",null),(0,r._)([(0,l.c)("inverseCoefficients")],d.prototype,"writeInverseCoefficients",null),(0,r._)([(0,o.Cb)()],d.prototype,"affectsPixelSize",null),(0,r._)([(0,i.J)({PolynomialXform:"polynomial"})],d.prototype,"type",void 0),d=s=(0,r._)([(0,u.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],d);const g=d},77960:(t,e,n)=>{n.d(e,{j:()=>m,c:()=>d});var s,r=n(3089),o=n(27366),i=(n(32718),n(25243),n(63780),n(93169),n(10064),n(27135)),a=n(69912),u=n(32935);let l=s=class extends u.Z{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,o._)([(0,i.J)({IdentityXform:"identity"})],l.prototype,"type",void 0),l=s=(0,o._)([(0,a.j)("esri.layers.support.rasterTransforms.IdentityTransform")],l);const c=l;var p=n(69405);const h={GCSShiftXform:r.Z,IdentityXform:c,PolynomialXform:p.Z},f=Object.keys(h);function m(t){const e=t?.type;return!t||f.includes(e)}function d(t){const e=t?.type;if(!e)return null;const n=h[t?.type];if(n){const e=new n;return e.read(t),e}return null}}}]);
//# sourceMappingURL=8109.ec2bba1a.chunk.js.map