"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[9301],{59301:(t,e,n)=>{n.r(e),n.d(e,{executeAttachmentQuery:()=>p,fetchAttachments:()=>d,processAttachmentQueryResult:()=>h});var a=n(19545),o=n(76200),s=n(35995),c=n(22585),r=n(11812);function u(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function h(t,e){const n={};for(const o of e){const{parentObjectId:e,parentGlobalId:c,attachmentInfos:u}=o;for(const o of u){const{id:u}=o,h=(0,s.qg)((0,a.Dp)(`${t.path}/${e}/attachments/${u}`)),p=r.Z.fromJSON(o);p.set({url:h,parentObjectId:e,parentGlobalId:c}),n[e]?n[e].push(p):n[e]=[p]}}return n}function p(t,e,n){let a={query:(0,c.A)({...t.query,f:"json",...u(e)})};return n&&(a={...n,...a,query:{...n.query,...a.query}}),(0,o.default)(t.path+"/queryAttachments",a).then((t=>t.data.attachmentGroups))}async function d(t,e,n){const{objectIds:a}=e,s=[];for(const c of a)s.push((0,o.default)(t.path+"/"+c+"/attachments",n));return Promise.all(s).then((t=>a.map(((e,n)=>({parentObjectId:e,attachmentInfos:t[n].data.attachmentInfos})))))}}}]);
//# sourceMappingURL=9301.575a4ee0.chunk.js.map