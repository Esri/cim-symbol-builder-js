{"version":3,"file":"static/js/6461.c329ffa6.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,mosaic as o,approximateTransform as i,getLocalArithmeticNorthRotations as n}from\"./rasterFunctions/pixelUtils.js\";import{create as a}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as l,load as m,getProjectionOffsetGrid as c}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as f,estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as d}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import O from\"../../geometry/Point.js\";class N{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=u(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=f(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=a(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?O.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(r){const t=p(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=o(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=n(r.destDimension,r.gcsGrid),l=S(l,r.isUV?\"vector-uv\":\"vector-magdir\",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||l(t.spatialReference,s.spatialReference,o))&&await m();const i=e.rasterTransform?d(e.rasterTransform):null;return c({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"names":["N","convertVectorFieldData","r","t","e","pixelBlock","s","u","type","Promise","resolve","toJSON","computeStatisticsHistograms","f","data","options","symbolize","extent","h","this","symbolizer","y","symbolizerJSON","histograms","rendererJSON","rasterFunction","a","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","O","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","p","split","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","o","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","l","coefs","i","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","n","S","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","x","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","m","rasterTransform","d","c","datumTransformation"],"sourceRoot":""}