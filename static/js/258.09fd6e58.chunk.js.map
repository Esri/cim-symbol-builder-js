{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/labelFormatUtils.js"],"names":["u","t","getLogger","p","type","evaluate","c","getAttribute","e","field","async","f","r","a","symbol","n","where","l","o","d","s","expression","$feature","repurposeFeature","toString","error","feature","needsHydrationToEvaluate","i","replace","slice","get","attributes","name","m","WhereClause","create","y","testFeature","domain","codedValues","code","range","minValue","maxValue"],"mappings":"2GAAA,oKAIia,MAAMA,EAAEC,IAAEC,UAAU,wCAAwCC,EAAE,CAACC,KAAK,SAASC,SAAS,IAAI,MAAMC,EAAE,CAACC,aAAa,CAACC,EAAEP,IAAIO,EAAEC,MAAMR,IAAIS,eAAeC,EAAEV,EAAEW,EAAEC,GAAG,IAAIZ,IAAIA,EAAEa,OAAO,OAAOX,EAAE,MAAMY,EAAEd,EAAEe,MAAMC,EAAEC,YAAEjB,GAAGU,EAAEI,QAAQ,8BAAwC,KAAK,IAAII,EAAE,GAAG,WAAWF,EAAEb,KAAK,CAAC,MAAMH,QAAQmB,YAAEH,EAAEI,WAAWR,EAAED,GAAGO,EAAE,CAACf,KAAK,SAASC,SAASO,GAAG,IAAI,MAAMJ,EAAEP,EAAEI,SAAS,CAACiB,SAAS,eAAeV,EAAEX,EAAEsB,iBAAiBX,GAAGA,IAAI,GAAG,MAAMJ,EAAE,OAAOA,EAAEgB,WAAW,MAAMX,GAAGb,EAAEyB,MAAM,IAAIjB,IAAE,wBAAwB,oEAAoE,CAACkB,QAAQd,EAAES,WAAWJ,KAAK,OAAO,MAAMU,yBAAyB,IAAI,MAAMC,YAAEX,EAAEI,kBAAkBF,EAAE,CAACf,KAAK,SAASC,SAASG,GAAGS,EAAEI,WAAWQ,QAAQ,WAAY5B,IAAI,MAAMY,EAAEZ,EAAE6B,MAAM,GAAG,GAAGf,EAAEH,EAAEmB,IAAIlB,GAAG,IAAIE,EAAE,OAAOd,EAAE,IAAIgB,EAAE,KAA2F,MAAnF,eAAeT,EAAGA,GAAGA,EAAEwB,aAAaf,EAAET,EAAEwB,WAAWjB,EAAEkB,OAAYhB,EAAET,EAAEC,MAAMM,EAAEkB,MAAa,MAAMhB,EAAE,GAAGiB,EAAEjB,EAAEF,MAAO,GAAGA,EAAE,CAAC,IAAIP,EAAE,IAAIA,EAAEG,EAAEwB,YAAYC,OAAOrB,EAAEH,GAAG,MAAMyB,GAAG,OAAOlC,EAAE,MAAMF,EAAEkB,EAAEd,SAASc,EAAEd,SAASO,IAAI,MAAMC,EAAE,eAAeD,OAAE,EAAON,EAAE,OAAOE,EAAE8B,YAAY1B,EAAEC,GAAGZ,EAAEW,GAAG,MAAM,OAAOO,EAAE,SAASe,EAAE1B,EAAEP,GAAG,GAAG,MAAMO,EAAE,MAAM,GAAG,MAAMU,EAAEjB,EAAEsC,OAAO,GAAGrB,EAAE,GAAG,eAAeA,EAAEd,MAAM,gBAAgBc,EAAEd,KAAK,CAAC,MAAMH,EAAEO,EAAE,IAAI,MAAMA,KAAKU,EAAEsB,YAAY,GAAGhC,EAAEiC,OAAOxC,EAAE,OAAOO,EAAEyB,UAAU,GAAG,UAAUf,EAAEd,KAAK,CAAC,MAAMH,GAAGO,EAAEI,EAAE,UAAUM,EAAEA,EAAEwB,MAAM,GAAGxB,EAAEyB,SAAS9B,EAAE,UAAUK,EAAEA,EAAEwB,MAAM,GAAGxB,EAAE0B,SAAS,GAAGhC,GAAGX,GAAGA,GAAGY,EAAE,OAAOK,EAAEe,KAAK,IAAIL,EAAEpB,EAAE,MAAM,SAASP,EAAEG,MAAM,sBAAsBH,EAAEG,KAAKwB,EAAEhB,YAAEgB,EAAEf,YAAE,eAAeI,YAAEhB,KAAK2B,EAAEb,aAAGa,IAAIA,GAAG","file":"static/js/258.09fd6e58.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import t from\"../../core/Logger.js\";import{formatDate as r,convertDateFormatToIntlOptions as a}from\"../../intl/date.js\";import{formatNumber as n}from\"../../intl/number.js\";import{isNumericField as l}from\"./fieldUtils.js\";import{getLabelExpression as o,getSingleFieldArcadeExpression as i}from\"./labelUtils.js\";import{createLabelExpression as s}from\"../../support/arcadeOnDemand.js\";const u=t.getLogger(\"esri.layers.support.labelFormatUtils\"),p={type:\"simple\",evaluate:()=>null},c={getAttribute:(e,t)=>e.field(t)};async function f(t,r,a){if(!t||!t.symbol)return p;const n=t.where,l=o(t),f=n?await import(\"../../core/sql/WhereClause.js\"):null;let d;if(\"arcade\"===l.type){const t=await s(l.expression,a,r);d={type:\"arcade\",evaluate(r){try{const e=t.evaluate({$feature:\"attributes\"in r?t.repurposeFeature(r):r});if(null!=e)return e.toString()}catch(a){u.error(new e(\"bad-arcade-expression\",\"Encountered an error when evaluating label expression for feature\",{feature:r,expression:l}))}return null},needsHydrationToEvaluate:()=>null==i(l.expression)}}else d={type:\"simple\",evaluate:e=>l.expression.replace(/{[^}]*}/g,(t=>{const a=t.slice(1,-1),n=r.get(a);if(!n)return t;let l=null;if(\"attributes\"in e){e&&e.attributes&&(l=e.attributes[n.name])}else l=e.field(n.name);return null==l?\"\":m(l,n)}))};if(n){let e;try{e=f.WhereClause.create(n,r)}catch(y){return p}const t=d.evaluate;d.evaluate=r=>{const a=\"attributes\"in r?void 0:c;return e.testFeature(r,a)?t(r):null}}return d}function m(e,t){if(null==e)return\"\";const o=t.domain;if(o)if(\"codedValue\"===o.type||\"coded-value\"===o.type){const t=e;for(const e of o.codedValues)if(e.code===t)return e.name}else if(\"range\"===o.type){const t=+e,r=\"range\"in o?o.range[0]:o.minValue,a=\"range\"in o?o.range[1]:o.maxValue;if(r<=t&&t<=a)return o.name}let i=e;return\"date\"===t.type||\"esriFieldTypeDate\"===t.type?i=r(i,a(\"short-date\")):l(t)&&(i=n(+i)),i||\"\"}export{f as createLabelFunction,m as formatField};\n"],"sourceRoot":""}