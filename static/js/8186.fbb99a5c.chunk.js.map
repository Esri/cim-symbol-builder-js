{"version":3,"file":"static/js/8186.fbb99a5c.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/flow-item/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/flow-item/flow-item.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/flow-item/flow-item.scss?tag=calcite-flow-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/panel/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  backButton: \"back-button\",\n};\n\nexport const ICONS = {\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n} as const;\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  contentTop: \"content-top\",\n  contentBottom: \"content-bottom\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerActions: \"footer-actions\",\n  footerEnd: \"footer-end\",\n  footerStart: \"footer-start\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { SLOTS as PANEL_SLOTS } from \"../panel/resources\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { CollapseDirection } from \"../interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { FlowItemMessages } from \"./assets/flow-item/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot alerts - A slot for adding `calcite-alert`s to the component.\n * @slot content-top - A slot for adding content above the unnamed (default) slot and below the action-bar slot (if populated).\n * @slot content-bottom - A slot for adding content below the unnamed (default) slot and above the footer slot (if populated)\n * @slot header-actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n * @slot header-actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot header-content - A slot for adding custom content to the component's header.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer - A slot for adding custom content to the component's footer. Should not be used with the `\"footer-start\"` or `\"footer-end\"` slots.\n * @slot footer-actions - [Deprecated] Use the `\"footer\"` slot instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer-end - A slot for adding a trailing footer custom content. Should not be used with the `\"footer\"` slot.\n * @slot footer-start - A slot for adding a leading footer custom content. Should not be used with the `\"footer\"` slot.\n */\n@Component({\n  tag: \"calcite-flow-item\",\n  styleUrl: \"flow-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class FlowItem\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, displays a close button in the trailing side of the component's header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ reflect: true }) closed = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: CollapseDirection = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When provided, the method will be called before it is removed from its parent `calcite-flow`.\n   */\n  @Prop() beforeBack: () => Promise<void>;\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: () => Promise<void>;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<FlowItemMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: FlowItemMessages;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, displays a back button in the component's header.\n   *\n   * @internal\n   */\n  @Prop() showBackButton = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the back button is clicked.\n   */\n  @Event({ cancelable: true }) calciteFlowItemBack: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calciteFlowItemScroll: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteFlowItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calciteFlowItemToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFlowItemElement;\n\n  containerEl: HTMLCalcitePanelElement;\n\n  backButtonEl: HTMLCalciteActionElement;\n\n  @State() defaultMessages: FlowItemMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component.\n   *\n   * @returns promise.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const { backButtonEl, containerEl } = this;\n\n    if (backButtonEl) {\n      return backButtonEl.setFocus();\n    } else if (containerEl) {\n      return containerEl.setFocus();\n    }\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    await this.containerEl?.scrollContentTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleInternalPanelScroll = (event: CustomEvent<void>): void => {\n    if (event.target !== this.containerEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.calciteFlowItemScroll.emit();\n  };\n\n  handleInternalPanelClose = (event: CustomEvent<void>): void => {\n    if (event.target !== this.containerEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.closed = true;\n    this.calciteFlowItemClose.emit();\n  };\n\n  handleInternalPanelToggle = (event: CustomEvent<void>): void => {\n    if (event.target !== this.containerEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.collapsed = (event.target as HTMLCalcitePanelElement).collapsed;\n    this.calciteFlowItemToggle.emit();\n  };\n\n  backButtonClick = (): void => {\n    this.calciteFlowItemBack.emit();\n  };\n\n  setBackRef = (node: HTMLCalciteActionElement): void => {\n    this.backButtonEl = node;\n  };\n\n  setContainerRef = (node: HTMLCalcitePanelElement): void => {\n    this.containerEl = node;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBackButton(): VNode {\n    const { el } = this;\n\n    const rtl = getElementDir(el) === \"rtl\";\n    const { showBackButton, backButtonClick, messages } = this;\n    const label = messages.back;\n    const icon = rtl ? ICONS.backRight : ICONS.backLeft;\n\n    return showBackButton ? (\n      <calcite-action\n        aria-label={label}\n        class={CSS.backButton}\n        icon={icon}\n        key=\"flow-back-button\"\n        onClick={backButtonClick}\n        ref={this.setBackRef}\n        scale=\"s\"\n        slot=\"header-actions-start\"\n        text={label}\n        title={label}\n      />\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      collapsed,\n      collapseDirection,\n      collapsible,\n      closable,\n      closed,\n      description,\n      disabled,\n      heading,\n      headingLevel,\n      loading,\n      menuOpen,\n      messages,\n      overlayPositioning,\n      beforeClose,\n    } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <calcite-panel\n            beforeClose={beforeClose}\n            closable={closable}\n            closed={closed}\n            collapseDirection={collapseDirection}\n            collapsed={collapsed}\n            collapsible={collapsible}\n            description={description}\n            disabled={disabled}\n            heading={heading}\n            headingLevel={headingLevel}\n            loading={loading}\n            menuOpen={menuOpen}\n            messageOverrides={messages}\n            onCalcitePanelClose={this.handleInternalPanelClose}\n            onCalcitePanelScroll={this.handleInternalPanelScroll}\n            onCalcitePanelToggle={this.handleInternalPanelToggle}\n            overlayPositioning={overlayPositioning}\n            ref={this.setContainerRef}\n            scale={this.scale}\n          >\n            {this.renderBackButton()}\n            <slot name={SLOTS.actionBar} slot={PANEL_SLOTS.actionBar} />\n            <slot name={SLOTS.alerts} slot={PANEL_SLOTS.alerts} />\n            <slot name={SLOTS.headerActionsStart} slot={PANEL_SLOTS.headerActionsStart} />\n            <slot name={SLOTS.headerActionsEnd} slot={PANEL_SLOTS.headerActionsEnd} />\n            <slot name={SLOTS.headerContent} slot={PANEL_SLOTS.headerContent} />\n            <slot name={SLOTS.headerMenuActions} slot={PANEL_SLOTS.headerMenuActions} />\n            <slot name={SLOTS.fab} slot={PANEL_SLOTS.fab} />\n            <slot name={SLOTS.contentTop} slot={PANEL_SLOTS.contentTop} />\n            <slot name={SLOTS.contentBottom} slot={PANEL_SLOTS.contentBottom} />\n            <slot name={SLOTS.footerStart} slot={PANEL_SLOTS.footerStart} />\n            <slot name={SLOTS.footer} slot={PANEL_SLOTS.footer} />\n            <slot name={SLOTS.footerEnd} slot={PANEL_SLOTS.footerEnd} />\n            <slot name={SLOTS.footerActions} slot={PANEL_SLOTS.footerActions} />\n            <slot />\n          </calcite-panel>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-flow-item-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-flow-item-header-border-block-end: Specifies the component header's block end border.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full flex-auto overflow-hidden;\n}\n\n@include disabled();\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\ncalcite-panel {\n  --calcite-panel-footer-padding: var(--calcite-flow-item-footer-padding);\n  --calcite-panel-header-border-block-end: var(--calcite-flow-item-header-border-block-end);\n}\n\n@include base-component();\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n  footerContent: \"footer-content\",\n  footerActions: \"footer-actions\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const IDS = {\n  close: \"close\",\n  collapse: \"collapse\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n} as const;\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerEnd: \"footer-end\",\n  footerStart: \"footer-start\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","ICONS","SLOTS","FlowItem","handleInternalPanelScroll","event","target","this","containerEl","stopPropagation","calciteFlowItemScroll","emit","handleInternalPanelClose","closed","calciteFlowItemClose","handleInternalPanelToggle","collapsed","calciteFlowItemToggle","backButtonClick","calciteFlowItemBack","setBackRef","node","backButtonEl","setContainerRef","onMessagesChange","connectedCallback","connectLocalized","connectMessages","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","componentDidLoad","setComponentLoaded","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","scrollContentTo","options","renderBackButton","el","rtl","getElementDir","showBackButton","messages","label","back","icon","h","class","key","onClick","ref","scale","slot","text","title","render","collapseDirection","collapsible","closable","description","disabled","heading","headingLevel","loading","menuOpen","overlayPositioning","beforeClose","Host","InteractiveContainer","messageOverrides","onCalcitePanelClose","onCalcitePanelScroll","onCalcitePanelToggle","name","SLOTS$1","actionBar","alerts","headerActionsStart","headerActionsEnd","headerContent","headerMenuActions","fab","contentTop","contentBottom","footerStart","footer","footerEnd","footerActions","interceptedClick","HTMLElement","prototype","click","call","onPointerDown","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","requestAnimationFrame","actionBarContainer","backButton","container","header","headerContainer","headerContainerBorderEnd","summary","headerActions","contentWrapper","fabContainer","footerContent","IDS","close","collapse","menu","backLeft","backRight","expand","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","noop","fetchMessages","lang","componentName","tagName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}