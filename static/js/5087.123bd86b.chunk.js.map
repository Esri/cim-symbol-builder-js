{"version":3,"file":"static/js/5087.123bd86b.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/modal/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/modal/modal.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/modal/modal.scss?tag=calcite-modal&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/logger.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/openCloseComponent.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  modal: \"modal\",\n  title: \"title\",\n  header: \"header\",\n  footer: \"footer\",\n  scrim: \"scrim\",\n  back: \"back\",\n  close: \"close\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  containerEmbedded: \"container--embedded\",\n  content: \"content\",\n  contentNoFooter: \"content--no-footer\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"modal--opening-idle\",\n  openingActive: \"modal--opening-active\",\n  closingIdle: \"modal--closing-idle\",\n  closingActive: \"modal--closing-active\",\n};\n\nexport const DURATIONS = {\n  slow: 14000,\n  medium: 10000,\n  fast: 6000,\n  test: 300 / 1000,\n};\n\nexport const ICONS = {\n  close: \"x\",\n} as const;\n\nexport const SLOTS = {\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  back: \"back\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  ensureId,\n  focusFirstTabbable,\n  getSlotted,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { logger } from \"../../utils/logger\";\nimport { ModalMessages } from \"./assets/modal/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlet totalOpenModals: number = 0;\nlet initialDocumentOverflowStyle: string = \"\";\n\nlogger.deprecated(\"component\", {\n  name: \"modal\",\n  removalVersion: 4,\n  suggested: \"dialog\",\n});\n\n/**\n * @deprecated Use the `calcite-dialog` component instead.\n * @slot header - A slot for adding header text.\n * @slot content - A slot for adding the component's content.\n * @slot content-top - A slot for adding content to the component's sticky header, where content remains at the top of the component when scrolling up and down.\n * @slot content-bottom - A slot for adding content to the component's sticky footer, where content remains at the bottom of the component when scrolling up and down.\n * @slot primary - A slot for adding a primary button.\n * @slot secondary - A slot for adding a secondary button.\n * @slot back - A slot for adding a back button.\n */\n@Component({\n  tag: \"calcite-modal\",\n  styleUrl: \"modal.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Modal\n  implements\n    ConditionalSlotComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component.  */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * We use an internal property to handle styles for when a modal is actually opened, not just when the open attribute is applied. This is a property because we need to apply styles to the host element and to keep the styles present while beforeClose is.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) opened = false;\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: (el: HTMLCalciteModalElement) => Promise<void>;\n\n  /** When `true`, disables the component's close button. */\n  @Prop({ reflect: true }) closeButtonDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /** When `true`, disables the closing of the component when clicked outside. */\n  @Prop({ reflect: true }) outsideCloseDisabled = false;\n\n  /** When `true`, prevents the component from expanding to the entire screen on mobile devices. */\n  @Prop({ reflect: true }) docked: boolean;\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) embedded = false;\n\n  /** When `true`, disables the default close on escape behavior. */\n  @Prop({ reflect: true }) escapeDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  /** Sets the component to always be fullscreen. Overrides `widthScale` and `--calcite-modal-width` / `--calcite-modal-height`. */\n  @Prop({ reflect: true }) fullscreen: boolean;\n\n  /** Specifies the kind of the component, which will apply to top border. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\", Kind>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ModalMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ModalMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    // when modal initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      this.openModal();\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.cssVarObserver?.observe(this.el, { attributeFilter: [\"style\"] });\n    this.updateSizeCssVars();\n    this.updateFooterVisibility();\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    this.cssVarObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    deactivateFocusTrap(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.embedded = false;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-describedby={this.contentId}\n        aria-labelledby={this.titleId}\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: this.opened,\n            [CSS.containerEmbedded]: this.embedded,\n          }}\n        >\n          <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          {this.renderStyle()}\n          <div\n            class={{\n              [CSS.modal]: true,\n            }}\n            ref={this.setTransitionEl}\n          >\n            <div class={CSS.header}>\n              {this.renderCloseButton()}\n              <header class={CSS.title}>\n                <slot name={CSS.header} />\n              </header>\n            </div>\n            {this.renderContentTop()}\n            <div\n              class={{\n                [CSS.content]: true,\n                [CSS.contentNoFooter]: !this.hasFooter,\n              }}\n              ref={(el) => (this.modalContent = el)}\n            >\n              <slot name={SLOTS.content} />\n            </div>\n            {this.renderContentBottom()}\n            {this.renderFooter()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderFooter(): VNode {\n    return this.hasFooter ? (\n      <div class={CSS.footer} key=\"footer\">\n        <span class={CSS.back}>\n          <slot name={SLOTS.back} />\n        </span>\n        <span class={CSS.secondary}>\n          <slot name={SLOTS.secondary} />\n        </span>\n        <span class={CSS.primary}>\n          <slot name={SLOTS.primary} />\n        </span>\n      </div>\n    ) : null;\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return !this.closeButtonDisabled ? (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"button\"\n        onClick={this.handleCloseClick}\n        ref={(el) => (this.closeButtonEl = el)}\n        title={this.messages.close}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderStyle(): VNode {\n    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {\n      return (\n        <style>\n          {`.${CSS.container} {\n              ${this.docked && this.cssWidth ? `align-items: center !important;` : \"\"}\n            }\n            .${CSS.modal} {\n              block-size: ${this.cssHeight ? this.cssHeight : \"auto\"} !important;\n              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : \"\"}\n            }\n            @media screen and (max-width: ${this.cssWidth}) {\n              .${CSS.container} {\n                ${this.docked ? `align-items: flex-end !important;` : \"\"}\n              }\n              .${CSS.modal} {\n                max-block-size: 100% !important;\n                inline-size: 100% !important;\n                max-inline-size: 100% !important;\n                min-inline-size: 100% !important;\n                margin: 0 !important;\n                ${!this.docked ? `block-size: 100% !important;` : \"\"}\n                ${!this.docked ? `border-radius: 0 !important;` : \"\"}\n                ${\n                  this.docked\n                    ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;`\n                    : \"\"\n                }\n              }\n            }\n          `}\n        </style>\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  ignoreOpenChange = false;\n\n  @Element() el: HTMLCalciteModalElement;\n\n  modalContent: HTMLDivElement;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  private cssVarObserver: MutationObserver = createObserver(\"mutation\", () => {\n    this.updateSizeCssVars();\n  });\n\n  titleId: string;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  closeButtonEl: HTMLButtonElement;\n\n  contentId: string;\n\n  @State() cssWidth: string | number;\n\n  @State() cssHeight: string | number;\n\n  @State() hasFooter = true;\n\n  @State() hasContentTop = false;\n\n  @State() hasContentBottom = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ModalMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && !this.escapeDisabled && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteModalClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteModalOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button (the first focusable item).\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  /**\n   * Sets the scroll top of the component's content.\n   *\n   * @param top\n   * @param left\n   */\n  @Method()\n  async scrollContent(top = 0, left = 0): Promise<void> {\n    if (this.modalContent) {\n      if (this.modalContent.scrollTo) {\n        this.modalContent.scrollTo({ top, left, behavior: \"smooth\" });\n      } else {\n        this.modalContent.scrollTop = top;\n        this.modalContent.scrollLeft = left;\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.transitionEl.classList.add(CSS.openingActive);\n    this.calciteModalBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);\n    this.calciteModalOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.transitionEl.classList.add(CSS.closingActive);\n    this.calciteModalBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteModalClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  @Watch(\"open\")\n  toggleModal(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(value: boolean): void {\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    this.transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteModalOpen\", this.openEnd);\n  };\n\n  private handleCloseClick = () => {\n    this.open = false;\n  };\n\n  private async openModal(): Promise<void> {\n    await componentOnReady(this.el);\n    this.el.addEventListener(\"calciteModalOpen\", this.openEnd);\n    this.opened = true;\n    const titleEl = getSlotted(this.el, SLOTS.header);\n    const contentEl = getSlotted(this.el, SLOTS.content);\n\n    this.titleId = ensureId(titleEl);\n    this.contentId = ensureId(contentEl);\n\n    if (!this.embedded) {\n      if (totalOpenModals === 0) {\n        initialDocumentOverflowStyle = document.documentElement.style.overflow;\n      }\n\n      totalOpenModals++;\n      // use an inline style instead of a utility class to avoid global class declarations.\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    }\n  }\n\n  private handleOutsideClose = (): void => {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n\n    this.open = false;\n  };\n\n  closeModal = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    totalOpenModals--;\n    this.opened = false;\n    this.removeOverflowHiddenClass();\n  };\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", initialDocumentOverflowStyle);\n  }\n\n  private handleMutationObserver = (): void => {\n    this.updateFooterVisibility();\n    this.updateFocusTrapElements();\n  };\n\n  private updateFooterVisibility = (): void => {\n    this.hasFooter = !!getSlotted(this.el, [SLOTS.back, SLOTS.primary, SLOTS.secondary]);\n  };\n\n  private updateSizeCssVars = (): void => {\n    this.cssWidth = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-width\");\n    this.cssHeight = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-height\");\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-modal-content-background: Specifies the background color of content placed in the component's `\"content\"` slot.\n * @prop --calcite-modal-content-padding: Specifies the padding of the component's `\"content\"` slot.\n * @prop --calcite-modal-scrim-background: Specifies the background color of the component's scrim.\n * @prop --calcite-modal-width: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.\n * @prop --calcite-modal-height: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set.\n *\n */\n\n:host {\n  --calcite-modal-scrim-background: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n  @apply absolute flex inset-0 opacity-0 z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n  // the modal should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-modal-scrim-background-internal: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n}\n\n.content-top[hidden],\n.content-bottom[hidden] {\n  @apply hidden;\n}\n\n.container {\n  @apply text-color-2\n    fixed\n    inset-0\n    flex\n    items-center\n    justify-center\n    overflow-y-hidden\n    opacity-0\n    z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.3\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.4\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.1h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.n1\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.4\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.5\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.2h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.0\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.5\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.6\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.3h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.1\");\n}\n\n.scrim {\n  --calcite-scrim-background: var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));\n  @apply fixed inset-0 flex overflow-y-hidden;\n}\n\n.modal {\n  @apply shadow-2-sm\n    bg-foreground-1\n    pointer-events-none\n    float-none\n    m-6\n    box-border\n    flex\n    w-full\n    flex-col\n    overflow-hidden\n    rounded\n    opacity-0\n    z-modal;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-slow) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n\n  --calcite-modal-hidden-position: translate3d(0, 20px, 0);\n  --calcite-modal-shown-position: translate3d(0, 0, 0);\n\n  &--opening {\n    &-idle {\n      transform: var(--calcite-modal-hidden-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-shown-position);\n    }\n  }\n\n  &--closing {\n    &-idle {\n      transform: var(--calcite-modal-shown-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-hidden-position);\n    }\n  }\n}\n\n:host([opened]) {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n}\n\n.container--open {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n  .modal {\n    @apply pointer-events-auto visible opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-slow) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n/**\n * Header\n */\n.header {\n  @apply bg-foreground-1\n    border-color-3\n    flex\n    min-w-0\n    max-w-full\n    rounded-t\n    border-0\n    border-b\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n}\n\n.close {\n  @apply text-color-3\n    transition-default\n    focus-base\n    order-2\n    m-0\n    cursor-pointer\n    appearance-none\n    border-none\n    bg-transparent;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-internal);\n  flex: 0 0 auto;\n  calcite-icon {\n    @apply pointer-events-none;\n    vertical-align: -2px;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n.title {\n  @apply order-1 flex min-w-0 items-center;\n  flex: 1 1 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n@include slotted(\"header\", \"*\") {\n  @apply text-color-1 m-0 font-normal;\n  font-size: var(--calcite-modal-title-text-internal);\n}\n\n/**\n * Content area\n */\n.content {\n  @apply relative box-border block h-full overflow-auto p-0;\n  background-color: var(--calcite-modal-content-background, theme(\"colors.background.foreground.1\"));\n  max-block-size: 100%;\n  padding: var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal));\n}\n\n.content-top,\n.content-bottom {\n  @apply bg-foreground-1 border-color-3 border-solid border-0 z-header flex;\n  flex: 0 0 auto;\n  padding: var(--calcite-modal-padding-internal);\n}\n\n.content-top {\n  @apply min-w-0 max-w-full border-b;\n}\n\n.content-bottom {\n  @apply mt-auto box-border w-full justify-between border-t;\n}\n\n.content-top:not(.header ~ .content-top) {\n  @apply rounded-t;\n}\n\n.content-bottom:not(.content-bottom ~ .footer),\n.content--no-footer {\n  @apply rounded-b;\n}\n\n@include slotted(\"content\", \"*\") {\n  font-size: var(--calcite-modal-context-text-internal);\n}\n\n/**\n * Footer\n */\n.footer {\n  @apply bg-foreground-1\n    border-color-3\n    mt-auto\n    box-border\n    flex\n    w-full\n    justify-between\n    rounded-b\n    border-0\n    border-t\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n.footer--hide-back .back,\n.footer--hide-secondary .secondary {\n  @apply hidden;\n}\n\n.back {\n  @apply block;\n  margin-inline-end: auto;\n}\n\n.secondary {\n  @apply mx-1 block;\n}\n\nslot[name=\"primary\"] {\n  @apply block;\n}\n\n/**\n * Sizes\n */\n@mixin modal-size($size, $width) {\n  :host([width-scale=\"#{$size}\"]) .modal {\n    @apply max-h-full max-w-full;\n    inline-size: var(--calcite-modal-width, $width);\n    block-size: var(--calcite-modal-height, auto);\n  }\n\n  @media screen and (max-width: $width + 2 * $baseline) {\n    :host([width-scale=\"#{$size}\"]) {\n      .modal {\n        @apply m-0 h-full max-h-full w-full max-w-full;\n      }\n      .content {\n        flex: 1 1 auto;\n        max-block-size: unset;\n      }\n    }\n    :host([width-scale=\"#{$size}\"][docked]) .container {\n      align-items: flex-end;\n    }\n  }\n}\n\n:host([width=\"small\"]) .modal {\n  @apply w-auto;\n}\n\n@include modal-size(\"s\", 32rem);\n@include modal-size(\"m\", 48rem);\n@include modal-size(\"l\", 94rem);\n\n/**\n * Fullscreen\n */\n:host([fullscreen]) {\n  .modal {\n    @apply m-0 max-h-full max-w-full h-full w-full rounded-none;\n    --calcite-modal-hidden-position: translate3D(0, 20px, 0) scale(0.95);\n    --calcite-modal-shown-position: translate3D(0, 0, 0) scale(1);\n  }\n  .content {\n    @apply max-h-full;\n    flex: 1 1 auto;\n  }\n}\n\n:host([opened][fullscreen]) {\n  .header,\n  .footer,\n  .content-top,\n  .content-bottom {\n    border-radius: 0;\n  }\n}\n\n/**\n * Docked\n */\n:host([docked]) {\n  .modal {\n    block-size: var(--calcite-modal-height, auto);\n  }\n  .content {\n    @apply h-auto;\n    flex: 1 1 auto;\n  }\n}\n\n/**\n * Kinds\n */\n:host([kind=\"brand\"]) .modal {\n  @apply border-color-brand;\n}\n\n:host([kind=\"danger\"]) .modal {\n  @apply border-color-danger;\n}\n\n:host([kind=\"info\"]) .modal {\n  @apply border-color-info;\n}\n\n:host([kind=\"success\"]) .modal {\n  @apply border-color-success;\n}\n\n:host([kind=\"warning\"]) .modal {\n  @apply border-color-warning;\n}\n\n:host([kind=\"brand\"]),\n:host([kind=\"danger\"]),\n:host([kind=\"info\"]),\n:host([kind=\"success\"]),\n:host([kind=\"warning\"]) {\n  .modal {\n    @apply border-0 border-t-4 border-solid;\n  }\n  .header,\n  .content-top {\n    @apply rounded rounded-b-none;\n  }\n}\n\n/**\n * Tablet\n */\n@media screen and (max-width: $viewport-medium) {\n  @include slotted(\"header\", \"content-top\", \"*\") {\n    @apply text-1;\n  }\n  .footer,\n  .content-bottom {\n    @apply sticky bottom-0;\n  }\n}\n\n/**\n * Mobile\n */\n@media screen and (max-width: $viewport-small) {\n  .footer,\n  .content-bottom {\n    @apply flex-col;\n  }\n  .back,\n  .secondary {\n    @apply m-0 mb-1;\n  }\n}\n\n/**\n * Conditional styles for when Modal is slotted in Shell\n */\n\n.container--embedded {\n  position: absolute;\n  pointer-events: auto;\n  calcite-scrim {\n    position: absolute;\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","import type { JSX } from \"../components\";\nimport { logLevel } from \"./config\";\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"trace\" | \"off\";\n\ntype Message = string;\ntype MajorVersion = number;\n\ntype DeprecatedContext = \"component\" | \"property\" | \"method\" | \"event\" | \"slot\";\n\ntype DeprecatedParams = {\n  name: string;\n  suggested?: string | string[];\n  component?: string;\n  removalVersion: MajorVersion | \"future\";\n};\n\ntype SimpleComponentName<T> = T extends `calcite-${infer Name}` ? Name : T;\n\ntype ComponentDeprecatedParams = Omit<DeprecatedParams, \"name\"> & {\n  name: SimpleComponentName<keyof JSX.IntrinsicElements>;\n};\n\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set<string>();\n\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10,\n} as const;\n\nfunction willLog(level: LogLevel): boolean {\n  return logLevels[level] >= logLevels[logLevel];\n}\n\nfunction forwardToConsole(level: LogLevel, ...data: any[]): void {\n  if (!willLog(level)) {\n    return;\n  }\n\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\n\nlet listFormatter: Intl.ListFormat;\n\nexport const logger = {\n  debug: (message: Message) => forwardToConsole(\"debug\", message),\n  info: (message: Message) => forwardToConsole(\"info\", message),\n  warn: (message: Message) => forwardToConsole(\"warn\", message),\n  error: (message: Message) => forwardToConsole(\"error\", message),\n  trace: (message: Message) => forwardToConsole(\"trace\", message),\n\n  deprecated,\n} as const;\n\n/**\n * Logs a deprecation warning to the console.\n *\n * @param context the context in which the deprecation is occurring\n * @param params the deprecation details\n */\nfunction deprecated(context: Exclude<DeprecatedContext, \"component\">, params: DeprecatedParams): void;\nfunction deprecated(context: Extract<DeprecatedContext, \"component\">, params: ComponentDeprecatedParams): void;\nfunction deprecated(\n  context: DeprecatedContext,\n  { component, name, suggested, removalVersion }: DeprecatedParams | ComponentDeprecatedParams,\n): void {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n\n  loggedDeprecations.add(key);\n\n  const multiSuggestions = Array.isArray(suggested);\n\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n\n  forwardToConsole(\"warn\", message);\n}\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","ICONS","SLOTS","totalOpenModals","initialDocumentOverflowStyle","logger","deprecated","name","removalVersion","suggested","Modal","ignoreOpenChange","mutationObserver","createObserver","this","handleMutationObserver","cssVarObserver","updateSizeCssVars","openTransitionProp","setTransitionEl","el","transitionEl","openEnd","setFocus","removeEventListener","handleCloseClick","open","handleOutsideClose","outsideCloseDisabled","closeModal","async","beforeClose","_error","requestAnimationFrame","opened","removeOverflowHiddenClass","updateFooterVisibility","updateFocusTrapElements","hasFooter","getSlotted","cssWidth","getComputedStyle","getPropertyValue","cssHeight","contentTopSlotChangeHandler","event","hasContentTop","slotChangeHasAssignedElement","contentBottomSlotChangeHandler","hasContentBottom","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","onMessagesChange","componentWillLoad","setUpMessages","setUpLoadableComponent","openModal","componentDidLoad","setComponentLoaded","connectedCallback","observe","childList","subtree","attributeFilter","connectConditionalSlotComponent","connectLocalized","connectMessages","connectFocusTrap","disconnectedCallback","disconnect","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","embedded","render","h","Host","key","contentId","titleId","role","class","onClick","renderStyle","ref","renderCloseButton","renderContentTop","modalContent","renderContentBottom","renderFooter","hidden","onSlotchange","closeButtonDisabled","messages","close","closeButtonEl","title","icon","scale","getIconScale","fullscreen","docked","effectiveLocaleChange","updateMessages","effectiveLocale","handleEscape","escapeDisabled","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","scrollContent","top","left","scrollTo","behavior","scrollTop","scrollLeft","onBeforeOpen","classList","add","calciteModalBeforeOpen","emit","onOpen","remove","calciteModalOpen","onBeforeClose","calciteModalBeforeClose","onClose","calciteModalClose","toggleModal","value","handleOpenedChange","idleClass","onToggleOpenCloseComponent","componentOnReady","addEventListener","titleEl","contentEl","ensureId","document","documentElement","style","overflow","setProperty","componentScale","isStencilEl","Promise","resolve","observerOptions","component","processMutations","unobserve","mutations","forEach","target","forceUpdate","loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","forwardToConsole","level","data","logLevel","willLog","console","call","listFormatter","message","context","has","multiSuggestions","Array","isArray","Intl","ListFormat","type","format","map","suggestion","internalReadTask","readTask","isOpen","whenTransitionDone","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","isBrowser","componentName","tagName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}