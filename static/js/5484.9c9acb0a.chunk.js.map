{"version":3,"file":"static/js/5484.9c9acb0a.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm-es5/locale-705ed382.js","../node_modules/@esri/calcite-components/dist/esm-es5/number-bb265f44.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.83\n */\nimport{a as sanitizeExponentialNumberString,i as isValidNumber,b as sanitizeDecimalString}from\"./number-bb265f44.js\";var locales=[\"ar\",\"bg\",\"bs\",\"ca\",\"cs\",\"da\",\"de\",\"de-CH\",\"el\",\"en\",\"en-AU\",\"en-CA\",\"en-GB\",\"es\",\"es-MX\",\"et\",\"fi\",\"fr\",\"fr-CH\",\"he\",\"hi\",\"hr\",\"hu\",\"id\",\"it\",\"it-CH\",\"ja\",\"ko\",\"lt\",\"lv\",\"mk\",\"nb\",\"nl\",\"pl\",\"pt\",\"pt-PT\",\"ro\",\"ru\",\"sk\",\"sl\",\"sr\",\"sv\",\"th\",\"tr\",\"uk\",\"vi\",\"zh-CN\",\"zh-HK\",\"zh-TW\"];var allDecimalsExceptLast=new RegExp(\"[.](?=.*[.])\",\"g\");var everythingExceptNumbersDecimalsAndMinusSigns=new RegExp(\"[^0-9-.]\",\"g\");var defaultGroupSeparator=new RegExp(\",\",\"g\");var defaultNumberingSystem=(new Intl.NumberFormat).resolvedOptions().numberingSystem;function createLocaleNumberFormatter(e,r){if(r===void 0){r=defaultNumberingSystem}return new Intl.NumberFormat(e,{minimumFractionDigits:0,maximumFractionDigits:20,numberingSystem:r})}function delocalizeNumberString(e,r){return sanitizeExponentialNumberString(e,(function(e){var t=e.replace(getMinusSign(r),\"-\").replace(getGroupSeparator(r),\"\").replace(getDecimalSeparator(r),\".\").replace(allDecimalsExceptLast,\"\").replace(everythingExceptNumbersDecimalsAndMinusSigns,\"\");return isValidNumber(t)?t:e}))}function getGroupSeparator(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(1234567);var a=t.find((function(e){return e.type===\"group\"})).value;return a.trim().length===0?\" \":a}function getDecimalSeparator(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(1.1);return t.find((function(e){return e.type===\"decimal\"})).value}function getMinusSign(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(-9);return t.find((function(e){return e.type===\"minusSign\"})).value}function localizeNumberString(e,r,t,a){if(t===void 0){t=false}return sanitizeExponentialNumberString(e,(function(e){if(e){var n=Number(sanitizeDecimalString(e.replace(defaultGroupSeparator,\"\")));if(!isNaN(n)){var i=createLocaleNumberFormatter(r,a);var u=i.formatToParts(n);var o=u.map((function(e){var a=e.type,n=e.value;switch(a){case\"group\":return t?getGroupSeparator(r):\"\";case\"decimal\":return getDecimalSeparator(r);case\"minusSign\":return getMinusSign(r);default:return n}})).reduce((function(e,r){return e+r}));return o}}return e}))}export{locales as a,delocalizeNumberString as d,getDecimalSeparator as g,localizeNumberString as l};","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.83\n */\nfunction isActivationKey(e){return e===\"Enter\"||e===\" \"}var numberKeys=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"];function isValidNumber(e){return!(!e||isNaN(Number(e)))}function parseNumberString(e){if(!e||!stringContainsNumbers(e)){return\"\"}return sanitizeExponentialNumberString(e,(function(e){var n=false;var r=e.split(\"\").filter((function(e,r){if(e.match(/\\./g)&&!n){n=true;return true}if(e.match(/\\-/g)&&r===0){return true}return numberKeys.includes(e)})).reduce((function(e,n){return e+n}));return isValidNumber(r)?Number(r).toString():\"\"}))}function sanitizeDecimalString(e){var n=/(?!^\\.)\\.$/;return e.replace(n,\"\")}function sanitizeNegativeString(e){var n=/(?!^-)-/g;return e.replace(n,\"\")}function sanitizeLeadingZeroString(e){var n=/^([-0])0+(?=\\d)/;return e.replace(n,\"$1\")}function sanitizeNumberString(e){return sanitizeExponentialNumberString(e,(function(e){var n=sanitizeNegativeString(sanitizeDecimalString(sanitizeLeadingZeroString(e)));var r=/^-\\b0\\b\\.?0*$/;return isValidNumber(n)?r.test(n)?n:Number(n).toString():e}))}function sanitizeExponentialNumberString(e,n){if(!e){return e}var r=e.toLowerCase().indexOf(\"e\")+1;return e.replace(/[eE]*$/g,\"\").substring(0,r).concat(e.slice(r).replace(/[eE]/g,\"\")).split(/[eE]/).map((function(e,r){return r===1?n(e.replace(/\\./g,\"\")):n(e)})).join(\"e\").replace(/^e/,\"1e\")}function stringContainsNumbers(e){return numberKeys.some((function(n){return e.includes(n)}))}export{sanitizeExponentialNumberString as a,sanitizeDecimalString as b,isActivationKey as c,isValidNumber as i,numberKeys as n,parseNumberString as p,sanitizeNumberString as s};"],"names":["locales","allDecimalsExceptLast","RegExp","everythingExceptNumbersDecimalsAndMinusSigns","defaultGroupSeparator","defaultNumberingSystem","Intl","NumberFormat","resolvedOptions","numberingSystem","createLocaleNumberFormatter","e","r","minimumFractionDigits","maximumFractionDigits","delocalizeNumberString","sanitizeExponentialNumberString","t","replace","getMinusSign","getGroupSeparator","getDecimalSeparator","isValidNumber","a","formatToParts","find","type","value","trim","length","localizeNumberString","n","Number","sanitizeDecimalString","isNaN","o","map","reduce","isActivationKey","numberKeys","parseNumberString","some","includes","stringContainsNumbers","split","filter","match","toString","sanitizeNumberString","sanitizeNegativeString","sanitizeLeadingZeroString","test","toLowerCase","indexOf","substring","concat","slice","join"],"sourceRoot":""}