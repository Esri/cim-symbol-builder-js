{"version":3,"file":"static/js/782.ebe975a6.chunk.js","mappings":";6MAAO,MAAMA,EACJ,QADIA,EAEK,mBAFLA,EAGM,oBCgBNC,GAAIC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEA4Ef,KAAAC,sBAAuBC,EAAAA,EAAAA,GAAe,YAAY,IAAMC,KAAKC,oBAyC7D,KAAAC,iBAAmB,CAACC,EAA0BC,IAEZD,GAAoBC,EAAmB,GADtCD,EAAmB,EAO7CC,EAAmBD,EAAmB,aAAe,YAHnD,KAMX,KAAAF,gBAAkB,KAChB,MAAM,oBAAEI,EAAmB,GAAEC,EAAE,MAAEC,GAAUP,KAErCQ,EAAWC,MAAMC,KACrBJ,EAAGK,iBACD,qBAAoBN,EAAsB,IAAIA,IAAwB,MAExEO,QAAQC,GAAaA,EAASC,QAAQ,kBAAoBR,IAEtDS,EAAeR,EAAMS,OACrBC,EAAeT,EAASQ,OACxBE,EAAaV,EAASS,EAAe,GACrCE,EAAeX,EAASS,EAAe,GAe7C,GAbIA,GAAgBC,GAClBV,EAASY,SAASC,IAChBA,EAASC,eAAiBD,IAAaH,GAAcD,EAAe,EACpEI,EAASE,OAASF,IAAaH,CAAU,IAIzCC,IACFA,EAAaK,UAAW,GAG1BxB,KAAKO,MAAQC,EAETO,IAAiBE,EAAc,CACjC,MAAMQ,EAAgBzB,KAAKE,iBAAiBa,EAAcE,GAC1DjB,KAAK0B,UAAYT,EACjBjB,KAAKyB,cAAgBA,uDAxFe,oBAEnB,aAEmB,GA/DxC,UAAME,GACJ,MAAM,MAAEpB,GAAUP,KAEZ4B,EAAWrB,EAAMA,EAAMS,OAAS,GAEtC,IAAKY,EACH,OAGF,MAAMC,EAAaD,EAASC,WACxBD,EAASC,WACT,IAAqBC,QAAQC,UAEjC,UACQF,EAAWG,KAAKJ,GACtB,MAAOK,GAEP,OAKF,OAFAL,EAASM,SAEFN,EAOT,cAAMO,SACEC,EAAAA,EAAAA,GAAmBpC,MAEzB,MAAM,MAAEO,GAAUP,KACZkB,EAAaX,EAAMA,EAAMS,OAAS,GAExC,OAAOE,GAAYiB,WAsCrBE,iBAAAA,GACErC,KAAKF,sBAAsBwC,QAAQtC,KAAKM,GAAI,CAAEiC,WAAW,EAAMC,SAAS,IACxExC,KAAKC,kBAGP,uBAAMwC,IACJC,EAAAA,EAAAA,GAAuB1C,MAGzB2C,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB5C,MAGrB6C,oBAAAA,GACE7C,KAAKF,sBAAsBgD,aAU7B,yBAAMC,CAAoBC,GACxB,IAAIA,EAAMC,iBAKV,aADMjD,KAAK2B,OACJ3B,KAAKmC,WAsDde,MAAAA,GACE,MAAM,cAAEzB,GAAkBzB,KAEpBmD,EAAwB,CAC5B,CAACzD,IAAY,EACb,CAACA,GAAuC,cAAlB+B,EACtB,CAAC/B,GAAwC,eAAlB+B,GAGzB,OACE2B,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAOH,IACVC,EAAAA,EAAAA,GAAA,QAAAC,IAAA,4FCtMQ,gkDC2DhB,MAAME,EAAa,IAAIC,QAEjBC,EAAa,IAAID,iBAePd,EAAuBgB,GACrCD,EAAWE,IAAID,EAAW,IAAI5B,SAASC,GAAYwB,EAAWI,IAAID,EAAW3B,KAC/E,UAegBa,EAAmBc,GACjCH,EAAWK,IAAIF,EAAfH,EACF,CAuCOM,eAAezB,EAAmBsB,GAGvC,kBAxB8BA,GAC9B,OAAOD,EAAWG,IAAIF,EACxB,CAoBQI,CAAgBJ,IAEjBK,EAAAA,EAAAA,KAKL,OADAC,EAAAA,EAAAA,IAAYN,GACL,IAAI5B,SAASC,GAAYkC,uBAAsB,IAAMlC,OAC9D,4DChGgBhC,EACdmE,EACAC,EACAC,GAEA,KAAKL,EAAAA,EAAAA,KACH,OAGF,MAAMM,EAIR,SAA6CH,GAE3C,MAAMI,UAAiCC,OAAOC,iBAQ5CC,WAAAA,CAAYN,GACVO,MAAMP,GARA,KAAAQ,cAGH,GAMH3E,KAAKmE,SAAWA,EAGlB7B,OAAAA,CAAQsC,EAAcR,GAGpB,OAFApE,KAAK2E,cAAcE,KAAK,CAAED,SAAQR,YAE3BM,MAAMpC,QAAQsC,EAAQR,GAG/BU,SAAAA,CAAUF,GACR,MAAMG,EAAqB/E,KAAK2E,cAAc/D,QAAQoE,GAAaA,EAASJ,SAAWA,IACvF5E,KAAK2E,cAAgB,GACrB3E,KAAKmE,SAASO,MAAMO,cAAejF,MACnCA,KAAK8C,aACLiC,EAAmB3D,SAAS4D,GAAahF,KAAKsC,QAAQ0C,EAASJ,OAAQI,EAASZ,YAIpF,MAEa,iBAATF,EACIK,OAAOW,qBACE,aAAThB,EACEI,EACAC,OAAOY,cAGnB,CA3CmBC,CAAelB,GAChC,OAAO,IAAIG,EAASF,EAAiBC,EACvC","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/flow/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/flow/flow.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/flow/flow.scss?tag=calcite-flow&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["export const CSS = {\n  frame: \"frame\",\n  frameAdvancing: \"frame--advancing\",\n  frameRetreating: \"frame--retreating\",\n};\n","import { Component, Element, h, Listen, Method, Prop, State, VNode } from \"@stencil/core\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { FlowDirection, FlowItemLikeElement } from \"./interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-flow-item` elements to the component.\n */\n@Component({\n  tag: \"calcite-flow\",\n  styleUrl: \"flow.scss\",\n  shadow: true,\n})\nexport class Flow implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Removes the currently active `calcite-flow-item`.\n   */\n  @Method()\n  async back(): Promise<HTMLCalciteFlowItemElement | FlowItemLikeElement> {\n    const { items } = this;\n\n    const lastItem = items[items.length - 1];\n\n    if (!lastItem) {\n      return;\n    }\n\n    const beforeBack = lastItem.beforeBack\n      ? lastItem.beforeBack\n      : (): Promise<void> => Promise.resolve();\n\n    try {\n      await beforeBack.call(lastItem);\n    } catch (_error) {\n      // back prevented\n      return;\n    }\n\n    lastItem.remove();\n\n    return lastItem;\n  }\n\n  /**\n   * Sets focus on the component.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const { items } = this;\n    const activeItem = items[items.length - 1];\n\n    return activeItem?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * This property enables the component to consider other custom elements implementing flow-item's interface.\n   *\n   * @internal\n   */\n  @Prop() customItemSelectors: string;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFlowElement;\n\n  @State() flowDirection: FlowDirection = null;\n\n  @State() itemCount = 0;\n\n  @State() items: FlowItemLikeElement[] = [];\n\n  itemMutationObserver = createObserver(\"mutation\", () => this.updateFlowProps());\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.itemMutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.updateFlowProps();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.itemMutationObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  @Listen(\"calciteFlowItemBack\")\n  async handleItemBackClick(event: CustomEvent): Promise<void> {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    await this.back();\n    return this.setFocus();\n  }\n\n  getFlowDirection = (oldFlowItemCount: number, newFlowItemCount: number): FlowDirection | null => {\n    const allowRetreatingDirection = oldFlowItemCount > 1;\n    const allowAdvancingDirection = oldFlowItemCount && newFlowItemCount > 1;\n\n    if (!allowAdvancingDirection && !allowRetreatingDirection) {\n      return null;\n    }\n\n    return newFlowItemCount < oldFlowItemCount ? \"retreating\" : \"advancing\";\n  };\n\n  updateFlowProps = (): void => {\n    const { customItemSelectors, el, items } = this;\n\n    const newItems = Array.from<FlowItemLikeElement>(\n      el.querySelectorAll(\n        `calcite-flow-item${customItemSelectors ? `,${customItemSelectors}` : \"\"}`,\n      ),\n    ).filter((flowItem) => flowItem.closest(\"calcite-flow\") === el);\n\n    const oldItemCount = items.length;\n    const newItemCount = newItems.length;\n    const activeItem = newItems[newItemCount - 1];\n    const previousItem = newItems[newItemCount - 2];\n\n    if (newItemCount && activeItem) {\n      newItems.forEach((itemNode) => {\n        itemNode.showBackButton = itemNode === activeItem && newItemCount > 1;\n        itemNode.hidden = itemNode !== activeItem;\n      });\n    }\n\n    if (previousItem) {\n      previousItem.menuOpen = false;\n    }\n\n    this.items = newItems;\n\n    if (oldItemCount !== newItemCount) {\n      const flowDirection = this.getFlowDirection(oldItemCount, newItemCount);\n      this.itemCount = newItemCount;\n      this.flowDirection = flowDirection;\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { flowDirection } = this;\n\n    const frameDirectionClasses = {\n      [CSS.frame]: true,\n      [CSS.frameAdvancing]: flowDirection === \"advancing\",\n      [CSS.frameRetreating]: flowDirection === \"retreating\",\n    };\n\n    return (\n      <div class={frameDirectionClasses}>\n        <slot />\n      </div>\n    );\n  }\n}\n",":host {\n  @extend %component-host;\n  @apply relative\n    flex\n    w-full\n    flex-auto\n    items-stretch\n    overflow-hidden\n    bg-transparent;\n\n  .frame {\n    @apply relative\n      m-0\n      flex\n      w-full\n      flex-auto\n      flex-col\n      items-stretch\n      p-0;\n  }\n\n  ::slotted(calcite-flow-item),\n  ::slotted(calcite-panel) {\n    @apply h-full;\n  }\n\n  ::slotted(.calcite-match-height:last-child) {\n    @apply flex\n    flex-auto\n    overflow-hidden;\n  }\n\n  .frame--advancing {\n    animation: calcite-frame-advance var(--calcite-animation-timing);\n  }\n\n  .frame--retreating {\n    animation: calcite-frame-retreat var(--calcite-animation-timing);\n  }\n\n  @keyframes calcite-frame-advance {\n    0% {\n      @apply bg-opacity-50;\n      transform: translate3d(50px, 0, 0);\n    }\n    100% {\n      @apply bg-opacity-100;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n  @keyframes calcite-frame-retreat {\n    0% {\n      @apply bg-opacity-50;\n      transform: translate3d(-50px, 0, 0);\n    }\n    100% {\n      @apply bg-opacity-100;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["CSS","Flow","proxyCustomElement","HTMLElement","itemMutationObserver","createObserver","this","updateFlowProps","getFlowDirection","oldFlowItemCount","newFlowItemCount","customItemSelectors","el","items","newItems","Array","from","querySelectorAll","filter","flowItem","closest","oldItemCount","length","newItemCount","activeItem","previousItem","forEach","itemNode","showBackButton","hidden","menuOpen","flowDirection","itemCount","back","lastItem","beforeBack","Promise","resolve","call","_error","remove","setFocus","componentFocusable","connectedCallback","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnect","handleItemBackClick","event","defaultPrevented","render","frameDirectionClasses","h","key","class","resolveMap","WeakMap","promiseMap","component","set","get","async","componentLoaded","isBrowser","forceUpdate","requestAnimationFrame","type","callback","options","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","target","push","unobserve","newObservedEntries","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}