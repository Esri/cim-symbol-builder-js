{"version":3,"file":"static/js/4165.3e174415.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tip/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tip/tip.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tip/tip.scss?tag=calcite-tip&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/tip-group/tip-group.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tip-group/tip-group.scss?tag=calcite-tip-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/tip-manager/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tip-manager/tip-manager.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tip-manager/tip-manager.scss?tag=calcite-tip-manager&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/logger.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","export const CSS = {\n  container: \"container\",\n  header: \"header\",\n  heading: \"heading\",\n  close: \"close\",\n  imageFrame: \"image-frame\",\n  content: \"content\",\n  info: \"info\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n} as const;\n\nexport const SLOTS = {\n  thumbnail: \"thumbnail\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { constrainHeadingLevel, Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { TipMessages } from \"./assets/tip/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip\",\n  removalVersion: 4,\n  suggested: [\"card\", \"notice\", \"panel\", \"tile\"],\n});\n\n/**\n * @deprecated Use the `calcite-card`, `calcite-notice`, `calcite-panel`, or `calcite-tile` component instead.\n * @slot - A slot for adding text and a hyperlink.\n * @slot thumbnail - A slot for adding an HTML image element.\n */\n@Component({\n  tag: \"calcite-tip\",\n  styleUrl: \"tip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Tip implements ConditionalSlotComponent, LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * When `true`, the component does not display.\n   */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * When `true`, the close button is not present on the component.\n   */\n  @Prop({ reflect: true }) closeDisabled = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, the component is selected if it has a parent `calcite-tip-manager`.\n   *\n   * Only one tip can be selected within the `calcite-tip-manager` parent.\n   */\n  @Prop({ reflect: true }) selected = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TipMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TipMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTipElement;\n\n  @State() defaultMessages: TipMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when the component has been closed.\n   */\n  @Event({ cancelable: false }) calciteTipDismiss: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  hideTip = (): void => {\n    this.closed = true;\n\n    this.calciteTipDismiss.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeader(): VNode {\n    const { heading, headingLevel, el } = this;\n    const parentLevel = el.closest(\"calcite-tip-manager\")?.headingLevel;\n    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;\n    const level = headingLevel || relativeLevel;\n\n    return heading ? (\n      <header class={CSS.header}>\n        <Heading class={CSS.heading} level={level}>\n          {heading}\n        </Heading>\n      </header>\n    ) : null;\n  }\n\n  renderDismissButton(): VNode {\n    const { closeDisabled, hideTip } = this;\n    return !closeDisabled ? (\n      <calcite-action\n        class={CSS.close}\n        icon={ICONS.close}\n        onClick={hideTip}\n        scale=\"l\"\n        text={this.messages.close}\n      />\n    ) : null;\n  }\n\n  renderImageFrame(): VNode {\n    const { el } = this;\n\n    return getSlotted(el, SLOTS.thumbnail) ? (\n      <div class={CSS.imageFrame} key=\"thumbnail\">\n        <slot name={SLOTS.thumbnail} />\n      </div>\n    ) : null;\n  }\n\n  renderInfoNode(): VNode {\n    return (\n      <div class={CSS.info}>\n        <slot />\n      </div>\n    );\n  }\n\n  renderContent(): VNode {\n    return (\n      <div class={CSS.content}>\n        {this.renderImageFrame()}\n        {this.renderInfoNode()}\n      </div>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <article class={CSS.container}>\n          {this.renderHeader()}\n          {this.renderContent()}\n        </article>\n        {this.renderDismissButton()}\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply border-color-2\n    bg-foreground-1\n    text-color-2\n    text-n1h\n    relative\n    m-4\n    box-border\n    flex\n    flex-row\n    border\n    border-solid;\n\n  * {\n    @apply box-border;\n  }\n}\n\n.container {\n  @apply w-full p-4;\n}\n\n:host([closed]),\n:host([closed]) .container {\n  @apply hidden;\n}\n\n:host([selected]) .container {\n  @apply m-0 border-none p-0;\n}\n\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply mb-2;\n}\n.header .heading {\n  @apply text-0h text-color-1 p-0;\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.content {\n  @apply flex;\n}\n\n.info {\n  @apply py-0 px-4;\n  inline-size: 70%;\n  &:only-child {\n    @apply w-full px-0;\n  }\n}\n\n::slotted(p) {\n  @apply mt-0;\n}\n\n::slotted(a) {\n  @apply focus-base;\n  color: theme(\"backgroundColor.brand\");\n}\n\n::slotted(a:focus) {\n  @apply focus-outset;\n}\n\n.image-frame {\n  inline-size: theme(\"width[1/4]\");\n  img {\n    @apply max-w-full;\n  }\n}\n\n::slotted(img) {\n  @apply max-w-full;\n}\n\n@include base-component();\n","import { Component, h, Prop, VNode } from \"@stencil/core\";\nimport { logger } from \"../../utils/logger\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip-group\",\n  removalVersion: 4,\n  suggested: [\"carousel\", \"carousel-item\"],\n});\n\n/**\n * @deprecated Use the `calcite-carousel` and `calcite-carousel-item` components instead.\n * @slot - A slot for adding `calcite-tip`s.\n */\n@Component({\n  tag: \"calcite-tip-group\",\n  styleUrl: \"tip-group.scss\",\n  shadow: true,\n})\nexport class TipGroup {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * The component header text for all nested `calcite-tip`s.\n   *\n   */\n  @Prop() groupTitle: string;\n\n  render(): VNode {\n    return <slot />;\n  }\n}\n",":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1h\n    box-border\n    block;\n}\n\n::slotted(calcite-tip) {\n  @apply m-0 border-none;\n  max-inline-size: var(--calcite-tip-max-width);\n}\n\n@include base-component();\n","export const CSS = {\n  header: \"header\",\n  heading: \"heading\",\n  close: \"close\",\n  container: \"container\",\n  tipContainer: \"tip-container\",\n  tipContainerAdvancing: \"tip-container--advancing\",\n  tipContainerRetreating: \"tip-container--retreating\",\n  pagination: \"pagination\",\n  pagePosition: \"page-position\",\n  pageNext: \"page-next\",\n  pagePrevious: \"page-previous\",\n};\n\nexport const ICONS = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n  close: \"x\",\n} as const;\n\nexport const TEXT = {\n  defaultGroupTitle: \"Tips\",\n  defaultPaginationLabel: \"Tip\",\n  close: \"Close\",\n  previous: \"Previous\",\n  next: \"Next\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { TipManagerMessages } from \"./assets/tip-manager/t9n\";\nimport { CSS, ICONS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip-manager\",\n  removalVersion: 4,\n  suggested: \"carousel\",\n});\n\n/**\n * @deprecated Use the `calcite-carousel` and `calcite-carousel-item` components instead.\n * @slot - A slot for adding `calcite-tip`s.\n */\n@Component({\n  tag: \"calcite-tip-manager\",\n  styleUrl: \"tip-manager.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TipManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * When `true`, does not display or position the component.\n   */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  closedChangeHandler(): void {\n    this.direction = null;\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TipManagerMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TipManagerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTipManagerElement;\n\n  @State() selectedIndex: number;\n\n  @Watch(\"selectedIndex\")\n  selectedChangeHandler(): void {\n    this.showSelectedTip();\n    this.updateGroupTitle();\n  }\n\n  @State() tips: HTMLCalciteTipElement[];\n\n  @State() total: number;\n\n  @State() direction: \"advancing\" | \"retreating\";\n\n  @State() groupTitle: string;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setUpTips());\n\n  container: HTMLDivElement;\n\n  @State() defaultMessages: TipManagerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  async effectiveLocaleChange(): Promise<void> {\n    await updateMessages(this, this.effectiveLocale);\n    this.updateGroupTitle();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.setUpTips();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    this.updateGroupTitle();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Selects the next `calcite-tip` to display. */\n  @Method()\n  async nextTip(): Promise<void> {\n    this.direction = \"advancing\";\n    const nextIndex = this.selectedIndex + 1;\n    this.selectedIndex = (nextIndex + this.total) % this.total;\n  }\n\n  /** Selects the previous `calcite-tip` to display. */\n  @Method()\n  async previousTip(): Promise<void> {\n    this.direction = \"retreating\";\n    const previousIndex = this.selectedIndex - 1;\n    this.selectedIndex = (previousIndex + this.total) % this.total;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when the component has been closed.\n   */\n  @Event({ cancelable: false }) calciteTipManagerClose: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setUpTips(): void {\n    const tips = Array.from(this.el.querySelectorAll(\"calcite-tip\"));\n    this.total = tips.length;\n    if (this.total === 0) {\n      return;\n    }\n    const selectedTip = this.el.querySelector<HTMLCalciteTipElement>(\"calcite-tip[selected]\");\n\n    this.tips = tips;\n    this.selectedIndex = selectedTip ? tips.indexOf(selectedTip) : 0;\n\n    tips.forEach((tip: HTMLCalciteTipElement) => {\n      tip.closeDisabled = true;\n    });\n    this.showSelectedTip();\n  }\n\n  hideTipManager = (): void => {\n    this.closed = true;\n    this.calciteTipManagerClose.emit();\n  };\n\n  showSelectedTip(): void {\n    this.tips.forEach((tip, index) => {\n      const isSelected = this.selectedIndex === index;\n      tip.selected = isSelected;\n      tip.hidden = !isSelected;\n    });\n  }\n\n  updateGroupTitle(): void {\n    if (this.tips) {\n      const selectedTip = this.tips[this.selectedIndex];\n      const tipParent = selectedTip.closest(\"calcite-tip-group\");\n      this.groupTitle = tipParent?.groupTitle || this.messages?.defaultGroupTitle;\n    }\n  }\n\n  previousClicked = (): void => {\n    this.previousTip();\n  };\n\n  nextClicked = (): void => {\n    this.nextTip();\n  };\n\n  tipManagerKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.target !== this.container) {\n      return;\n    }\n\n    switch (event.key) {\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.nextTip();\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.previousTip();\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.selectedIndex = 0;\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.selectedIndex = this.total - 1;\n        break;\n    }\n  };\n\n  storeContainerRef = (el: HTMLDivElement): void => {\n    this.container = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderPagination(): VNode {\n    const dir = getElementDir(this.el);\n    const { selectedIndex, tips, total, messages } = this;\n\n    const nextLabel = messages.next;\n    const previousLabel = messages.previous;\n    const paginationLabel = messages.defaultPaginationLabel;\n\n    return tips.length > 1 ? (\n      <footer class={CSS.pagination}>\n        <calcite-action\n          class={CSS.pagePrevious}\n          icon={dir === \"ltr\" ? ICONS.chevronLeft : ICONS.chevronRight}\n          onClick={this.previousClicked}\n          scale=\"m\"\n          text={previousLabel}\n        />\n        <span class={CSS.pagePosition}>{`${paginationLabel} ${selectedIndex + 1}/${total}`}</span>\n        <calcite-action\n          class={CSS.pageNext}\n          icon={dir === \"ltr\" ? ICONS.chevronRight : ICONS.chevronLeft}\n          onClick={this.nextClicked}\n          scale=\"m\"\n          text={nextLabel}\n        />\n      </footer>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { closed, direction, headingLevel, groupTitle, selectedIndex, messages, total } = this;\n\n    const closeLabel = messages.close;\n\n    if (total === 0) {\n      return null;\n    }\n\n    return (\n      <section\n        aria-hidden={toAriaBoolean(closed)}\n        class={CSS.container}\n        hidden={closed}\n        onKeyDown={this.tipManagerKeyDownHandler}\n        ref={this.storeContainerRef}\n        tabIndex={0}\n      >\n        <header class={CSS.header}>\n          <Heading class={CSS.heading} level={headingLevel}>\n            {groupTitle}\n          </Heading>\n          <calcite-action\n            class={CSS.close}\n            onClick={this.hideTipManager}\n            scale=\"m\"\n            text={closeLabel}\n          >\n            <calcite-icon icon={ICONS.close} scale=\"m\" />\n          </calcite-action>\n        </header>\n        <div\n          class={{\n            [CSS.tipContainer]: true,\n            [CSS.tipContainerAdvancing]: !closed && direction === \"advancing\",\n            [CSS.tipContainerRetreating]: !closed && direction === \"retreating\",\n          }}\n          key={selectedIndex}\n          tabIndex={0}\n        >\n          <slot />\n        </div>\n        {this.renderPagination()}\n      </section>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tip-manager-height: The maximum height of the component.\n * @prop --calcite-tip-max-width: The maximum width of a slotted `calcite-tip` within the component.\n */\n\n:host {\n  @apply bg-foreground-1\n  text-color-2\n  text-n1h\n  box-border\n  block;\n\n  --calcite-tip-manager-height: 19vh;\n\n  * {\n    @apply box-border;\n  }\n}\n\n:host([closed]) {\n  @apply hidden;\n}\n\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply border-color-3\n    border-0\n    border-b\n    border-solid\n    py-0;\n\n  padding-inline-end: theme(\"padding.0\");\n  padding-inline-start: theme(\"padding.4\");\n\n  .heading {\n    @apply text-color-1\n      text-1h\n      p-0\n      font-bold;\n  }\n}\n\n.container {\n  @apply focus-base\n    relative\n    overflow-hidden;\n  min-block-size: 150px;\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.tip-container {\n  @apply focus-base\n    mt-px\n    flex\n    items-start\n    justify-center\n    overflow-auto\n    p-4;\n  animation-name: none;\n  animation-duration: var(--calcite-animation-timing);\n  block-size: var(--calcite-tip-manager-height);\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n::slotted(calcite-tip) {\n  @apply m-0 border-none;\n  max-inline-size: var(--calcite-tip-max-width);\n}\n\n.tip-container--advancing {\n  animation-name: tip-advance;\n}\n\n.tip-container--retreating {\n  animation-name: tip-retreat;\n}\n\n/* Pagination Styles*/\n.pagination {\n  @apply flex\n  items-center\n  justify-center\n  px-0\n  pt-3\n  pb-2;\n}\n\n.page-position {\n  @apply text-n2h my-0 mx-2;\n}\n\n/* @keyframes*/\n@keyframes tip-advance {\n  0% {\n    @apply opacity-0;\n    transform: translate3d(50px, 0, 0) scale(0.99);\n  }\n  100% {\n    @apply opacity-100;\n    transform: translate3d(0, 0, 0) scale(1);\n  }\n}\n@keyframes tip-retreat {\n  0% {\n    @apply opacity-0;\n    transform: translate3d(-50px, 0, 0) scale(0.99);\n  }\n  100% {\n    @apply opacity-100;\n    transform: translate3d(0, 0, 0) scale(1);\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","import type { JSX } from \"../components\";\nimport { logLevel } from \"./config\";\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"trace\" | \"off\";\n\ntype Message = string;\ntype MajorVersion = number;\n\ntype DeprecatedContext = \"component\" | \"property\" | \"method\" | \"event\" | \"slot\";\n\ntype DeprecatedParams = {\n  name: string;\n  suggested?: string | string[];\n  component?: string;\n  removalVersion: MajorVersion | \"future\";\n};\n\ntype SimpleComponentName<T> = T extends `calcite-${infer Name}` ? Name : T;\n\ntype ComponentDeprecatedParams = Omit<DeprecatedParams, \"name\"> & {\n  name: SimpleComponentName<keyof JSX.IntrinsicElements>;\n};\n\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set<string>();\n\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10,\n} as const;\n\nfunction willLog(level: LogLevel): boolean {\n  return logLevels[level] >= logLevels[logLevel];\n}\n\nfunction forwardToConsole(level: LogLevel, ...data: any[]): void {\n  if (!willLog(level)) {\n    return;\n  }\n\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\n\nlet listFormatter: Intl.ListFormat;\n\nexport const logger = {\n  debug: (message: Message) => forwardToConsole(\"debug\", message),\n  info: (message: Message) => forwardToConsole(\"info\", message),\n  warn: (message: Message) => forwardToConsole(\"warn\", message),\n  error: (message: Message) => forwardToConsole(\"error\", message),\n  trace: (message: Message) => forwardToConsole(\"trace\", message),\n\n  deprecated,\n} as const;\n\n/**\n * Logs a deprecation warning to the console.\n *\n * @param context the context in which the deprecation is occurring\n * @param params the deprecation details\n */\nfunction deprecated(context: Exclude<DeprecatedContext, \"component\">, params: DeprecatedParams): void;\nfunction deprecated(context: Extract<DeprecatedContext, \"component\">, params: ComponentDeprecatedParams): void;\nfunction deprecated(\n  context: DeprecatedContext,\n  { component, name, suggested, removalVersion }: DeprecatedParams | ComponentDeprecatedParams,\n): void {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n\n  loggedDeprecations.add(key);\n\n  const multiSuggestions = Array.isArray(suggested);\n\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n\n  forwardToConsole(\"warn\", message);\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["constrainHeadingLevel","level","Math","min","max","ceil","Heading","props","children","HeadingTag","h","class","key","CSS$1","ICONS$1","SLOTS","logger","deprecated","name","removalVersion","suggested","Tip","hideTip","this","closed","calciteTipDismiss","emit","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectConditionalSlotComponent","connectLocalized","connectMessages","componentWillLoad","setUpMessages","disconnectedCallback","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","renderHeader","heading","headingLevel","el","parentLevel","closest","relativeLevel","renderDismissButton","closeDisabled","icon","onClick","scale","text","messages","close","renderImageFrame","getSlotted","renderInfoNode","renderContent","render","Fragment","TipGroup","CSS","ICONS","TipManager","mutationObserver","createObserver","setUpTips","hideTipManager","calciteTipManagerClose","previousClicked","previousTip","nextClicked","nextTip","tipManagerKeyDownHandler","event","target","container","preventDefault","selectedIndex","total","storeContainerRef","closedChangeHandler","direction","selectedChangeHandler","showSelectedTip","updateGroupTitle","observe","childList","subtree","disconnect","nextIndex","previousIndex","tips","Array","from","querySelectorAll","length","selectedTip","querySelector","indexOf","forEach","tip","index","isSelected","selected","hidden","tipParent","groupTitle","defaultGroupTitle","renderPagination","dir","getElementDir","nextLabel","next","previousLabel","previous","paginationLabel","defaultPaginationLabel","closeLabel","toAriaBoolean","onKeyDown","ref","tabIndex","observerOptions","component","processMutations","unobserve","mutations","forceUpdate","loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","forwardToConsole","data","logLevel","willLog","console","call","listFormatter","message","context","has","add","multiSuggestions","isArray","Intl","ListFormat","style","type","format","map","suggestion","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","async","fetchMessages","lang","isBrowser","componentName","tagName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}