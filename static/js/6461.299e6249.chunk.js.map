{"version":3,"file":"static/js/6461.299e6249.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as n,approximateTransform as a,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as d,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as y}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import O from\"../../geometry/Extent.js\";class N{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=d(t,e.type);return Promise.resolve(r(o)?o.toJSON():null)}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?O.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:O.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>r(e)?s.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return r(t)?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=u(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=n(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=a(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(S(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=O.fromJSON(r.projectedExtent),s=O.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,s.spatialReference,o))&&await f();const i=r.rasterTransform?y(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"names":["N","convertVectorFieldData","e","t","s","pixelBlock","o","d","type","Promise","resolve","r","toJSON","data","options","symbolize","extent","O","this","symbolizer","h","symbolizerJSON","histograms","rendererJSON","rasterFunction","l","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","u","split","i","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","n","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","a","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","m","S","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","x","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","c","spatialReference","f","rasterTransform","y","p","datumTransformation"],"sourceRoot":""}