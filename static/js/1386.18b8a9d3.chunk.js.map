{"version":3,"file":"static/js/1386.18b8a9d3.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/guid.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/list-item/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/list-item/utils.ts"],"sourcesContent":["export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n} as const;\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <span\n          // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n          aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n          aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n          aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n          class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          ref={(el): void => {\n            this.handleButton = el;\n          }}\n          // role of radio is being applied to allow space key to select in screen readers\n          role=\"radio\"\n          tabIndex={this.disabled ? null : 0}\n          title={this.getTooltip()}\n        >\n          <calcite-icon icon={ICONS.drag} scale=\"s\" />\n        </span>\n      </InteractiveContainer>\n    );\n  }\n}\n","/**\n* CSS Custom Properties  \n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-handle-background-color: Specifies the component's background color.\n* @prop --calcite-handle-background-color-hover: Specifies the component's background color on hover.\n* @prop --calcite-handle-background-color-selected: Specifies the component's background color when selected.\n* @prop --calcite-handle-icon-color: Specifies the component's icon color.\n* @prop --calcite-handle-icon-color-hover: Specifies the component's icon color on hover.\n* @prop --calcite-handle-icon-color-selected: Specifies the component's icon color when selected.\n*/\n\n:host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n\n  color: var(--calcite-handle-icon-color, var(--calcite-color-border-input));\n  background-color: var(--calcite-handle-background-color, transparent);\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-hover, var(--calcite-color-foreground-2));\n  }\n  &:focus {\n    @apply focus-inset;\n\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n  }\n  &--selected {\n    color: var(--calcite-handle-icon-color-selected, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-selected, var(--calcite-color-foreground-3));\n  }\n}\n\n@include disabled();\n\n@include base-component();\n",":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n}\n\n:host([filter-hidden]),\n:host([closed]) {\n  @apply hidden;\n}\n\n.wrapper--bordered {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1\n  overflow-hidden;\n  * {\n    @apply box-border;\n  }\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply hidden flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.nested-container--open {\n  @apply flex;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-normal\n    items-stretch\n    p-0;\n}\n\n.content-container--unavailable {\n  @apply opacity-disabled;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr {\n  @apply relative;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.content-bottom {\n  @apply flex flex-col;\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex py-0;\n  color: theme(\"borderColor.color.input\");\n  padding-inline: var(--calcite-spacing-md) var(--calcite-spacing-xxs);\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0 relative;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\ntr:focus {\n  .actions-start,\n  .actions-end {\n    inset-block: theme(\"spacing[0.5]\");\n    .close,\n    ::slotted(calcite-action),\n    ::slotted(calcite-action-menu),\n    ::slotted(calcite-handle),\n    ::slotted(calcite-dropdown) {\n      block-size: calc(100% - theme(\"spacing[1]\"));\n    }\n  }\n\n  &::after,\n  &::before {\n    @apply absolute;\n    content: \"\";\n    inline-size: theme(\"spacing[0.5]\");\n    z-index: theme(\"zIndex.header\");\n    background-color: theme(\"colors.brand\");\n    inset-block: 0;\n  }\n  &::before {\n    inset-inline-start: 0;\n  }\n  &::after {\n    inset-inline-end: 0;\n  }\n}\n\n.container--border:focus::before {\n  display: none;\n}\n\n::slotted(calcite-list:empty) {\n  @apply border-t-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list`, `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * When `true`, the component's content appears inactive.\n   */\n  @Prop({ reflect: true }) unavailable = false;\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            class={CSS.close}\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerOpen]: this.openable && this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent, unavailable } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerUnavailable]: unavailable,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent<void>): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","function gen(counts: number[]): string {\n  return counts\n    .map((count) => {\n      let out = \"\";\n      for (let i = 0; i < count; i++) {\n        out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n      }\n      return out;\n    })\n    .join(\"-\");\n}\n\nexport const guid = (): string => gen([2, 1, 1, 1, 3]);\n","export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerUnavailable: \"content-container--unavailable\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerOpen: \"nested-container--open\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n  close: \"close\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n} as const;\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { isBrowser } from \"../../utils/browser\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el): el is HTMLCalciteListElement => el.matches(listSelector)),\n  );\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = assignedElements\n    .filter((el): el is HTMLCalciteListItemGroupElement => el?.matches(listItemGroupSelector))\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el): el is HTMLCalciteListItemElement =>\n    el?.matches(listItemSelector),\n  );\n\n  const listItemListChildren = assignedElements\n    .filter((el): el is HTMLCalciteListElement => el?.matches(listSelector))\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n"],"names":["CSS","ICONS","SUBSTITUTIONS","Handle","proxyCustomElement","HTMLElement","handleKeyDown","event","this","disabled","key","selected","calciteHandleChange","emit","preventDefault","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","onMessagesChange","connectedCallback","connectMessages","connectLocalized","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectMessages","disconnectLocalized","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","handleButton","focus","getTooltip","label","messages","dragHandle","replace","dragHandleUntitled","type","setPosition","setSize","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","render","h","InteractiveContainer","toAriaBoolean","class","onBlur","onKeyDown","ref","el","role","tabIndex","title","icon","scale","focusMap","Map","ListItem","dragHandleSelectedChangeHandler","dragSelected","target","calciteListItemDragHandleChange","stopPropagation","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","closed","calciteListItemClose","handleContentSlotChange","hasCustomContent","slotChangeHasAssignedElement","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleDefaultSlotChange","handleOpenableChange","handleToggleClick","toggle","value","open","calciteListItemToggle","handleItemClick","defaultPrevented","toggleSelected","shiftKey","selectionMode","calciteInternalListItemSelectMultiple","selectMultiple","calciteListItemSelect","handleItemKeyDown","composedPath","containerEl","openable","cells","getGridCells","currentIndex","findIndex","cell","includes","nextIndex","focusCell","prevIndex","calciteInternalFocusPreviousItem","focusCellNull","focusEl","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","parentListEl","set","gridCells","forEach","tableCell","removeAttribute","activeCellTestAttribute","setAttribute","indexOf","activeHandler","active","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","closest","level","getDepth","setSelectionDefaults","focusIndex","get","renderSelected","selectionAppearance","selectionContainer","selectionContainerSingle","onClick","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","renderDragHandle","dragDisabled","dragContainer","onFocusin","onCalciteHandleChange","renderOpen","dir","getElementDir","closedRTL","closedLTR","tooltip","collapse","expand","openContainer","renderActionsStart","actionsStart","hidden","name","SLOTS","onSlotchange","renderActionsEnd","closable","actionsEnd","appearance","close","text","renderContentStart","contentStart","renderCustomContent","customContent","content","renderContentEnd","contentEnd","renderContentBottom","contentBottom","renderDefaultContainer","nestedContainer","nestedContainerOpen","renderContentProperties","description","renderContentContainer","unavailable","hasCenterContent","contentContainer","contentContainerUnavailable","contentContainerSelectable","contentContainerHasCenterContent","filterHidden","bordered","showBorder","borderSelected","borderUnselected","Host","wrapper","wrapperBordered","container","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","onFocus","calciteInternalListItemToggle","calciteInternalListItemChange","slotEl","listItemChildren","getListItemChildren","listItemChildLists","getListItemChildLists","updateListItemChildren","length","filter","guid","map","count","out","i","Math","random","substring","join","MAX_COLUMNS","blank","listSelector","listItemGroupSelector","listItemSelector","Array","from","assignedElements","flatten","matches","listItemGroupChildren","group","querySelectorAll","reduce","previousValue","currentValue","list","listItem","element","includeGroup","isBrowser","expression","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength"],"sourceRoot":""}