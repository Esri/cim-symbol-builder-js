{"version":3,"file":"static/js/7699.ae010778.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/table-row/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/table-row/table-row.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/table-row/table-row.scss?tag=calcite-table-row&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/key.ts"],"sourcesContent":["export const CSS = {\n  lastVisibleRow: \"last-visible-row\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  focusElementInGroup,\n  FocusElementInGroupDestination,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { RowType, TableInteractionMode, TableRowFocusEvent } from \"../table/interfaces\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-table-cell` or `calcite-table-header` elements.\n */\n\n@Component({\n  tag: \"calcite-table-row\",\n  styleUrl: \"table-row.scss\",\n  shadow: true,\n})\nexport class TableRow implements InteractiveComponent, LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** @internal */\n  @Prop({ mutable: true }) cellCount: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastVisibleRow: boolean;\n\n  /** @internal */\n  @Prop() rowType: RowType;\n\n  /** @internal */\n  @Prop() numbered = false;\n\n  /** @internal */\n  @Prop() positionSection: number;\n\n  /** @internal */\n  @Prop() positionSectionLocalized: string;\n\n  /** @internal */\n  @Prop() positionAll: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"none\", SelectionMode> = \"none\";\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  @Watch(\"bodyRowCount\")\n  @Watch(\"scale\")\n  @Watch(\"selected\")\n  @Watch(\"selectedRowCount\")\n  @Watch(\"interactionMode\")\n  handleCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  @Watch(\"numbered\")\n  @Watch(\"selectionMode\")\n  handleDelayedCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      requestAnimationFrame(() => this.updateCells());\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableRowElement;\n\n  private rowCells: (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[] = [];\n\n  private tableRowEl: HTMLTableRowElement;\n\n  private tableRowSlotEl: HTMLSlotElement;\n\n  @State() effectiveLocale = \"\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteTableRowSelect: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusRequest: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTableRowFocusChange\", { target: \"document\" })\n  calciteInternalTableRowFocusChangeHandler(event: CustomEvent): void {\n    if ((event.target as Element).contains(this.el)) {\n      const position = event.detail.cellPosition;\n      const rowPosition = event.detail.rowPosition;\n      const destination = event.detail.destination;\n      const lastCell = event.detail.lastCell;\n\n      if (rowPosition === this.positionAll) {\n        if (this.disabled) {\n          const deflectDirection =\n            destination === \"last\" ? \"previous\" : destination === \"first\" ? \"next\" : destination;\n          this.emitTableRowFocusRequest(position, this.positionAll, deflectDirection);\n          return;\n        }\n        const cellPosition = lastCell\n          ? this.rowCells[this.rowCells.length - 1]\n          : this.rowCells?.find((_, index) => index + 1 === position);\n\n        if (cellPosition) {\n          cellPosition.setFocus();\n        }\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.interactionMode !== \"interactive\") {\n      return;\n    }\n    const el = event.target as HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement;\n    const key = event.key;\n    const isControl = event.ctrlKey;\n    const cells = this.rowCells;\n    if (el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\")) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"previous\");\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"next\");\n          event.preventDefault();\n          break;\n        case \"PageUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"first\");\n          event.preventDefault();\n          break;\n        case \"PageDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"last\");\n          event.preventDefault();\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(cells, el, \"previous\", false);\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          focusElementInGroup(cells, el, \"next\", false);\n          event.preventDefault();\n          break;\n        case \"Home\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(1, this.positionAll, \"first\");\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"first\", false);\n            event.preventDefault();\n          }\n          break;\n        case \"End\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(this.rowCells?.length, this.positionAll, \"last\", true);\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"last\", false);\n            event.preventDefault();\n          }\n          break;\n      }\n    }\n  };\n\n  private emitTableRowFocusRequest = (\n    cellPosition: number,\n    rowPosition: number,\n    destination: FocusElementInGroupDestination,\n    lastCell?: boolean,\n  ): void => {\n    this.calciteInternalTableRowFocusRequest.emit({\n      cellPosition,\n      rowPosition,\n      destination,\n      lastCell,\n    });\n  };\n\n  private updateCells = (): void => {\n    const alignment = this.alignment\n      ? this.alignment\n      : this.rowType !== \"head\"\n        ? \"center\"\n        : \"start\";\n    const slottedCells = this.tableRowSlotEl\n      ?.assignedElements({ flatten: true })\n      ?.filter(\n        (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n          el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\"),\n      );\n\n    const renderedCells = Array.from(\n      this.tableRowEl?.querySelectorAll(\"calcite-table-header, calcite-table-cell\"),\n    )?.filter(\n      (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n        el.numberCell || el.selectionCell,\n    );\n\n    const cells = renderedCells ? renderedCells.concat(slottedCells) : slottedCells;\n\n    if (cells.length > 0) {\n      cells?.forEach((cell: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement, index) => {\n        cell.interactionMode = this.interactionMode;\n        cell.lastCell = index === cells.length - 1;\n        cell.parentRowAlignment = alignment;\n        cell.parentRowIsSelected = this.selected;\n        cell.parentRowType = this.rowType;\n        cell.positionInRow = index + 1;\n        cell.scale = this.scale;\n\n        if (cell.nodeName === \"CALCITE-TABLE-CELL\") {\n          (cell as HTMLCalciteTableCellElement).readCellContentsToAT = this.readCellContentsToAT;\n          (cell as HTMLCalciteTableCellElement).disabled = this.disabled;\n        }\n      });\n    }\n\n    this.rowCells =\n      (cells as (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[]) || [];\n    this.cellCount = cells?.length;\n  };\n\n  private handleSelectionOfRow = (): void => {\n    this.calciteTableRowSelect.emit();\n  };\n\n  private handleKeyboardSelection = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n      this.handleSelectionOfRow();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? \"check-square-f\"\n        : this.selectionMode === \"multiple\"\n          ? \"square\"\n          : this.selected\n            ? \"circle-f\"\n            : \"circle\";\n\n    return <calcite-icon icon={icon} scale={getIconScale(this.scale)} />;\n  }\n\n  renderSelectableCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        bodyRowCount={this.bodyRowCount}\n        key=\"selection-head\"\n        onClick={this.selectionMode === \"multiple\" && this.handleSelectionOfRow}\n        onKeyDown={this.selectionMode === \"multiple\" && this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        selectedRowCount={this.selectedRowCount}\n        selectedRowCountLocalized={this.selectedRowCountLocalized}\n        selectionCell={true}\n        selectionMode={this.selectionMode}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-body\"\n        onClick={this.handleSelectionOfRow}\n        onKeyDown={this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        parentRowIsSelected={this.selected}\n        parentRowPositionLocalized={this.positionSectionLocalized}\n        selectionCell={true}\n      >\n        {this.renderSelectionIcon()}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-foot\"\n        parentRowAlignment={this.alignment}\n        selectionCell={true}\n      />\n    );\n  }\n\n  renderNumberedCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        key=\"numbered-head\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-body\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      >\n        {this.positionSectionLocalized}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-foot\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-rowindex={this.positionAll + 1}\n            aria-selected={toAriaBoolean(this.selected)}\n            class={{ [CSS.lastVisibleRow]: this.lastVisibleRow }}\n            onKeyDown={this.keyDownHandler}\n            ref={(el) => (this.tableRowEl = el)}\n          >\n            {this.numbered && this.renderNumberedCell()}\n            {this.selectionMode !== \"none\" && this.renderSelectableCell()}\n            <slot\n              onSlotchange={this.updateCells}\n              ref={(el) => (this.tableRowSlotEl = el as HTMLSlotElement)}\n            />\n          </tr>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-row-background: Specifies the background color of the component.\n * @prop --calcite-table-row-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-row-background: var(--calcite-table-row-background, var(--calcite-color-foreground-1));\n  --calcite-internal-table-row-border-color: var(--calcite-table-row-border-color, transparent);\n  @apply contents;\n}\n\n@include base-component();\n\n@include disabled() {\n  tr {\n    @apply opacity-disabled pointer-events-none;\n  }\n}\n\ntr {\n  border-block-end: 1px solid var(--calcite-internal-table-row-border-color);\n  background-color: var(--calcite-internal-table-row-background);\n}\n\ntr.last-visible-row {\n  border-block-end: 0;\n}\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","export function isActivationKey(key: string): boolean {\n  return key === \"Enter\" || key === \" \";\n}\n\nexport const numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport const letterKeys = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n"],"names":["CSS","TableRow","rowCells","keyDownHandler","event","this","interactionMode","el","target","key","isControl","ctrlKey","cells","matches","emitTableRowFocusRequest","positionInRow","positionAll","preventDefault","focusElementInGroup","length","cellPosition","rowPosition","destination","lastCell","calciteInternalTableRowFocusRequest","emit","updateCells","alignment","rowType","slottedCells","tableRowSlotEl","assignedElements","flatten","filter","renderedCells","Array","from","tableRowEl","querySelectorAll","numberCell","selectionCell","concat","forEach","cell","index","parentRowAlignment","parentRowIsSelected","selected","parentRowType","scale","nodeName","readCellContentsToAT","disabled","cellCount","handleSelectionOfRow","calciteTableRowSelect","handleKeyboardSelection","isActivationKey","handleCellChanges","handleDelayedCellChanges","requestAnimationFrame","componentDidLoad","componentDidRender","updateHostInteraction","calciteInternalTableRowFocusChangeHandler","contains","position","detail","deflectDirection","find","_","setFocus","renderSelectionIcon","icon","selectionMode","h","getIconScale","renderSelectableCell","bodyRowCount","onClick","onKeyDown","selectedRowCount","selectedRowCountLocalized","parentRowPositionLocalized","positionSectionLocalized","renderNumberedCell","render","Host","InteractiveContainer","toAriaBoolean","class","lastVisibleRow","ref","numbered","onSlotchange","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","interceptedClick","HTMLElement","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","document","activeElement","blur","element","addEventListener","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","numberKeys"],"sourceRoot":""}