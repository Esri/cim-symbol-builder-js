{"version":3,"file":"static/js/9003.4c9c83d6.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/calcite-avatar.entry.js","../node_modules/@esri/calcite-components/dist/esm/utils-e9181006.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.1.0\n */\nimport { r as registerInstance, h, g as getElement } from './index-b8735a76.js';\nimport { e as getModeName } from './dom-13d14bf1.js';\nimport { h as hexToRGB, i as isValidHex } from './utils-e9181006.js';\nimport './guid-7a9e307b.js';\nimport './resources-8032eb01.js';\n\n/**\n * Convert a string to a valid hex by hashing its contents\n * and using the hash as a seed for three distinct color values\n *\n * @param str\n */\nfunction stringToHex(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let hex = \"#\";\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 0xff;\n    hex += (\"00\" + value.toString(16)).substr(-2);\n  }\n  return hex;\n}\n/**\n * Find the hue of a color given the separate RGB color channels\n *\n * @param rgb\n */\nfunction rgbToHue(rgb) {\n  let { r, g, b } = rgb;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  if (max === min) {\n    return 0;\n  }\n  let hue = (max + min) / 2;\n  switch (max) {\n    case r:\n      hue = (g - b) / delta + (g < b ? 6 : 0);\n      break;\n    case g:\n      hue = (b - r) / delta + 2;\n      break;\n    case b:\n      hue = (r - g) / delta + 4;\n      break;\n  }\n  return Math.round(hue * 60);\n}\n/**\n * For a hex color, find the hue\n *\n * @param hex {string} - form of \"#------\"\n */\nfunction hexToHue(hex) {\n  return rgbToHue(hexToRGB(hex));\n}\n\nconst avatarCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}:host{display:inline-block;overflow:hidden;border-radius:50%}:host([scale=s]){block-size:1.5rem;inline-size:1.5rem;font-size:var(--calcite-font-size--3)}:host([scale=m]){block-size:2rem;inline-size:2rem;font-size:var(--calcite-font-size--2)}:host([scale=l]){block-size:2.75rem;inline-size:2.75rem;font-size:var(--calcite-font-size-0)}.icon{display:flex}.background{display:flex;block-size:100%;inline-size:100%;align-items:center;justify-content:center;border-radius:50%}.initials{font-weight:var(--calcite-font-weight-bold);text-transform:uppercase;color:var(--calcite-ui-text-2)}.thumbnail{block-size:100%;inline-size:100%;border-radius:50%}\";\n\nconst Avatar = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scale = \"m\";\n    this.thumbnail = undefined;\n    this.fullName = undefined;\n    this.username = undefined;\n    this.userId = undefined;\n    this.thumbnailFailedToLoad = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    return this.determineContent();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  determineContent() {\n    if (this.thumbnail && !this.thumbnailFailedToLoad) {\n      return (h(\"img\", { alt: \"\", class: \"thumbnail\", onError: () => (this.thumbnailFailedToLoad = true), src: this.thumbnail }));\n    }\n    const initials = this.generateInitials();\n    const backgroundColor = this.generateFillColor();\n    return (h(\"span\", { class: \"background\", style: { backgroundColor } }, initials ? (h(\"span\", { \"aria-hidden\": \"true\", class: \"initials\" }, initials)) : (h(\"calcite-icon\", { class: \"icon\", icon: \"user\", scale: this.scale }))));\n  }\n  /**\n   * Generate a valid background color that is consistent and unique to this user\n   */\n  generateFillColor() {\n    const { userId, username, fullName, el } = this;\n    const theme = getModeName(el);\n    const id = userId && `#${userId.substr(userId.length - 6)}`;\n    const name = username || fullName || \"\";\n    const hex = id && isValidHex(id) ? id : stringToHex(name);\n    // if there is not unique information, or an invalid hex is produced, return a default\n    if ((!userId && !name) || !isValidHex(hex)) {\n      return `var(--calcite-ui-foreground-2)`;\n    }\n    const hue = hexToHue(hex);\n    const l = theme === \"dark\" ? 20 : 90;\n    return `hsl(${hue}, 60%, ${l}%)`;\n  }\n  /**\n   * Use fullname or username to generate initials\n   */\n  generateInitials() {\n    const { fullName, username } = this;\n    if (fullName) {\n      return fullName\n        .trim()\n        .split(\" \")\n        .map((name) => name.substring(0, 1))\n        .join(\"\");\n    }\n    else if (username) {\n      return username.substring(0, 2);\n    }\n    return false;\n  }\n  get el() { return getElement(this); }\n};\nAvatar.style = avatarCss;\n\nexport { Avatar as calcite_avatar };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.1.0\n */\nfunction rgbToHex(color) {\n  const { r, g, b } = color;\n  return `#${r.toString(16).padStart(2, \"0\")}${g.toString(16).padStart(2, \"0\")}${b\n    .toString(16)\n    .padStart(2, \"0\")}`.toLowerCase();\n}\nconst hexChar = /^[0-9A-F]$/i;\nconst shortHandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nfunction isValidHex(hex) {\n  return isShorthandHex(hex) || isLonghandHex(hex);\n}\nfunction isShorthandHex(hex) {\n  return hex && hex.length === 4 && shortHandHex.test(hex);\n}\nfunction isLonghandHex(hex) {\n  return hex && hex.length === 7 && longhandHex.test(hex);\n}\nfunction normalizeHex(hex) {\n  hex = hex.toLowerCase();\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n  if (isShorthandHex(hex)) {\n    return rgbToHex(hexToRGB(hex));\n  }\n  return hex;\n}\nfunction hexToRGB(hex) {\n  if (!isValidHex(hex)) {\n    return null;\n  }\n  hex = hex.replace(\"#\", \"\");\n  if (hex.length === 3) {\n    const [first, second, third] = hex.split(\"\");\n    const r = parseInt(`${first}${first}`, 16);\n    const g = parseInt(`${second}${second}`, 16);\n    const b = parseInt(`${third}${third}`, 16);\n    return { r, g, b };\n  }\n  const r = parseInt(hex.slice(0, 2), 16);\n  const g = parseInt(hex.slice(2, 4), 16);\n  const b = parseInt(hex.slice(4, 6), 16);\n  return { r, g, b };\n}\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = (x) => x;\nconst CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\"\n});\nconst ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\"\n});\nfunction parseMode(colorValue) {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n  return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n  return value1?.rgbNumber() === value2?.rgbNumber();\n}\n\nexport { CSSColorMode as C, isLonghandHex as a, hexChar as b, colorEqual as c, hexToRGB as h, isValidHex as i, normalizeHex as n, parseMode as p, rgbToHex as r };\n"],"names":["hexToHue","hex","rgb","r","g","b","max","Math","min","delta","hue","round","rgbToHue","hexToRGB","Avatar","constructor","hostRef","registerInstance","this","scale","thumbnail","undefined","fullName","username","userId","thumbnailFailedToLoad","render","determineContent","h","alt","class","onError","src","initials","generateInitials","backgroundColor","generateFillColor","style","icon","el","theme","getModeName","id","substr","length","name","isValidHex","str","hash","i","charCodeAt","j","toString","stringToHex","trim","split","map","substring","join","getElement","rgbToHex","color","padStart","toLowerCase","hexChar","shortHandHex","longhandHex","isShorthandHex","isLonghandHex","test","normalizeHex","startsWith","replace","first","second","third","parseInt","slice","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","colorObject","channels","every","channel","colorEqual","value1","value2","rgbNumber"],"sourceRoot":""}