{"version":3,"file":"static/js/78598.b4333788.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/chunks/global.js","../node_modules/@esri/calcite-components/dist/chunks/utils4.js","../node_modules/color-string/node_modules/color-name/index.js","../node_modules/color-string/index.js","../node_modules/color/node_modules/color-name/index.js","../node_modules/color/node_modules/color-convert/conversions.js","../node_modules/color/node_modules/color-convert/route.js","../node_modules/color/node_modules/color-convert/index.js","../node_modules/color/index.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nconst calciteContainerSizeWidthXxs = { max: \"320px\" };\nconst calciteContainerSizeWidthXs = { max: \"476px\" };\nconst calciteContainerSizeWidthSm = { max: \"768px\" };\nconst calciteContainerSizeWidthMd = { max: \"1152px\" };\nconst calciteSpacingFixedSm = \"8px\";\nconst calciteSpacingFixedMd = \"12px\";\nconst calciteSpacingFixedXl = \"16px\";\nconst calciteSpacingBase = \"2px\";\nconst calciteSpacingXxs = \"0.25rem\";\nconst calciteSpacingSm = \"0.5rem\";\nexport {\n  calciteContainerSizeWidthXs as a,\n  calciteContainerSizeWidthSm as b,\n  calciteContainerSizeWidthXxs as c,\n  calciteContainerSizeWidthMd as d,\n  calciteSpacingXxs as e,\n  calciteSpacingBase as f,\n  calciteSpacingSm as g,\n  calciteSpacingFixedXl as h,\n  calciteSpacingFixedMd as i,\n  calciteSpacingFixedSm as j\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport Color from \"color\";\nimport { h as calciteSpacingFixedXl, i as calciteSpacingFixedMd, j as calciteSpacingFixedSm } from \"./global.js\";\nconst CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\"\n};\nconst DEFAULT_COLOR = Color(\"#007AC2\");\nconst DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\nconst RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255\n};\nconst HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100\n};\nconst HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\nconst OPACITY_LIMITS = {\n  min: 0,\n  max: 100\n};\nconst STATIC_DIMENSIONS = {\n  s: {\n    gap: parseInt(calciteSpacingFixedSm),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 20\n    },\n    minWidth: 200\n  },\n  m: {\n    gap: parseInt(calciteSpacingFixedMd),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 24\n    },\n    minWidth: 240\n  },\n  l: {\n    gap: parseInt(calciteSpacingFixedXl),\n    slider: {\n      height: 12\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 32\n    },\n    minWidth: 304\n  }\n};\nconst SCOPE_SIZE = 1;\nconst hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\nconst alphaToOpacity = (alpha) => Number((alpha * 100).toFixed());\nconst opacityToAlpha = (opacity) => Number((opacity / 100).toFixed(2));\nfunction isValidHex(hex, hasAlpha = false) {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\nfunction evaluateHex(hex, length, pattern) {\n  if (!hex) {\n    return false;\n  }\n  return hex.length === length && pattern.test(hex);\n}\nfunction isShorthandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction isLonghandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction normalizeHex(hex, hasAlpha = false, convertFromHexToHexa = false) {\n  hex = hex.toLowerCase();\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n  if (hasAlpha && convertFromHexToHexa && isValidHex(\n    hex,\n    false\n    /* we only care about RGB hex for conversion */\n  )) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n  return hex;\n}\nfunction hexify(color, hasAlpha = false) {\n  return hasAlpha ? color.hexa() : color.hex();\n}\nfunction rgbToHex(color) {\n  const { r, g, b } = color;\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\nfunction numToHex(num) {\n  return num.toString(16).padStart(2, \"0\");\n}\nfunction normalizeAlpha(colorObject) {\n  const normalized = {\n    ...colorObject,\n    a: colorObject.alpha ?? 1\n    /* Color() will omit alpha if 1 */\n  };\n  delete normalized.alpha;\n  return normalized;\n}\nfunction normalizeColor(alphaColorObject) {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n  return normalized;\n}\nfunction hexToRGB(hex, hasAlpha = false) {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n  hex = hex.replace(\"#\", \"\");\n  let r;\n  let g;\n  let b;\n  let a;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\nconst enumify = (x) => x;\nconst CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\"\n});\nconst ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\"\n});\nfunction parseMode(colorValue) {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n  return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\nfunction alphaCompatible(mode) {\n  return mode === CSSColorMode.HEXA || mode === CSSColorMode.RGBA_CSS || mode === CSSColorMode.HSLA_CSS || mode === ObjectColorMode.RGBA || mode === ObjectColorMode.HSLA || mode === ObjectColorMode.HSVA;\n}\nfunction toAlphaMode(mode) {\n  const alphaMode = mode === CSSColorMode.HEX ? CSSColorMode.HEXA : mode === CSSColorMode.RGB_CSS ? CSSColorMode.RGBA_CSS : mode === CSSColorMode.HSL_CSS ? CSSColorMode.HSLA_CSS : mode === ObjectColorMode.RGB ? ObjectColorMode.RGBA : mode === ObjectColorMode.HSL ? ObjectColorMode.HSLA : mode === ObjectColorMode.HSV ? ObjectColorMode.HSVA : mode;\n  return alphaMode;\n}\nfunction toNonAlphaMode(mode) {\n  const nonAlphaMode = mode === CSSColorMode.HEXA ? CSSColorMode.HEX : mode === CSSColorMode.RGBA_CSS ? CSSColorMode.RGB_CSS : mode === CSSColorMode.HSLA_CSS ? CSSColorMode.HSL_CSS : mode === ObjectColorMode.RGBA ? ObjectColorMode.RGB : mode === ObjectColorMode.HSLA ? ObjectColorMode.HSL : mode === ObjectColorMode.HSVA ? ObjectColorMode.HSV : mode;\n  return nonAlphaMode;\n}\nconst borderWidthInPx = 1;\nconst inlineSizeBorderTotalWidth = borderWidthInPx * 2;\nfunction getSliderWidth(availableWidth, activeStaticDimensions, hasAlpha) {\n  const previewWidth = hasAlpha ? STATIC_DIMENSIONS[\"l\"].preview.size : activeStaticDimensions.preview.size;\n  const effectiveWidth = availableWidth - inlineSizeBorderTotalWidth;\n  const inlineSpaceAroundElements = activeStaticDimensions.gap * 3;\n  return Math.max(effectiveWidth - inlineSpaceAroundElements - previewWidth, 0);\n}\nfunction getColorFieldDimensions(availableWidth) {\n  const colorFieldAspectRatio = 1.8;\n  const effectiveWidth = availableWidth - inlineSizeBorderTotalWidth;\n  return {\n    width: Math.max(effectiveWidth, 0),\n    height: Math.max(Math.floor(effectiveWidth / colorFieldAspectRatio), 0)\n  };\n}\nexport {\n  CSSColorMode as C,\n  DEFAULT_COLOR as D,\n  HSV_LIMITS as H,\n  OPACITY_LIMITS as O,\n  RGB_LIMITS as R,\n  STATIC_DIMENSIONS as S,\n  isLonghandHex as a,\n  isShorthandHex as b,\n  alphaToOpacity as c,\n  hexChar as d,\n  getColorFieldDimensions as e,\n  DEFAULT_STORAGE_KEY_PREFIX as f,\n  getSliderWidth as g,\n  hexify as h,\n  isValidHex as i,\n  alphaCompatible as j,\n  normalizeColor as k,\n  colorEqual as l,\n  CSS as m,\n  normalizeHex as n,\n  opacityToAlpha as o,\n  parseMode as p,\n  toNonAlphaMode as q,\n  rgbToHex as r,\n  HUE_LIMIT_CONSTRAINED as s,\n  toAlphaMode as t,\n  normalizeAlpha as u,\n  SCOPE_SIZE as v,\n  hexToRGB as w\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","import colorNames from 'color-name';\n\nconst reverseNames = Object.create(null);\n\n// Create a list of reverse color names\nfor (const name in colorNames) {\n\tif (Object.hasOwn(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nconst cs = {\n\tto: {},\n\tget: {},\n};\n\ncs.get = function (string) {\n\tconst prefix = string.slice(0, 3).toLowerCase();\n\tlet value;\n\tlet model;\n\tswitch (prefix) {\n\t\tcase 'hsl': {\n\t\t\tvalue = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'hwb': {\n\t\t\tvalue = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tvalue = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn {model, value};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst abbr = /^#([a-f\\d]{3,4})$/i;\n\tconst hex = /^#([a-f\\d]{6})([a-f\\d]{2})?$/i;\n\tconst rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst keyword = /^(\\w+)$/;\n\n\tlet rgb = [0, 0, 0, 1];\n\tlet match;\n\tlet i;\n\tlet hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tconst i2 = i * 2;\n\t\t\trgb[i] = Number.parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i + 1], 10);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(Number.parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!Object.hasOwn(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hsl);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst s = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst l = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hwb);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst w = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst b = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function (...rgba) {\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function (...rgba) {\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function (...rgba) {\n\tconst r = Math.round(rgba[0] / 255 * 100);\n\tconst g = Math.round(rgba[1] / 255 * 100);\n\tconst b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function (...hsla) {\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// Hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function (...hwba) {\n\tlet a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (...rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// Helpers\nfunction clamp(number_, min, max) {\n\treturn Math.min(Math.max(min, number_), max);\n}\n\nfunction hexDouble(number_) {\n\tconst string_ = Math.round(number_).toString(16).toUpperCase();\n\treturn (string_.length < 2) ? '0' + string_ : string_;\n}\n\nexport default cs;\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nimport cssKeywords from 'color-name';\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']},\n};\n\nexport default convert;\n\n// LAB f(t) constant\nconst LAB_FT = (6 / 29) ** 3;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tswitch (max) {\n\t\tcase min: {\n\t\t\th = 0;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase r: {\n\t\t\th = (g - b) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase g: {\n\t\t\th = 2 + (b - r) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase b: {\n\t\t\th = 4 + (r - g) / delta;\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tswitch (v) {\n\t\t\tcase r: {\n\t\t\t\th = bdif - gdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase g: {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase b: {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t// No default\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100,\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Number.POSITIVE_INFINITY;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.040_45 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.040_45 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.040_45 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.412_456_4) + (g * 0.357_576_1) + (b * 0.180_437_5);\n\tconst y = (r * 0.212_672_9) + (g * 0.715_152_2) + (b * 0.072_175);\n\tconst z = (r * 0.019_333_9) + (g * 0.119_192) + (b * 0.950_304_1);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t3;\n\tlet value;\n\n\tif (s === 0) {\n\t\tvalue = l * 255;\n\t\treturn [value, value, value];\n\t}\n\n\tconst t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tvalue = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tvalue = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tvalue = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tvalue = t1;\n\t\t}\n\n\t\trgb[i] = value * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0: {\n\t\t\treturn [v, t, p];\n\t\t}\n\n\t\tcase 1: {\n\t\t\treturn [q, v, p];\n\t\t}\n\n\t\tcase 2: {\n\t\t\treturn [p, v, t];\n\t\t}\n\n\t\tcase 3: {\n\t\t\treturn [p, q, v];\n\t\t}\n\n\t\tcase 4: {\n\t\t\treturn [t, p, v];\n\t\t}\n\n\t\tcase 5: {\n\t\t\treturn [v, p, q];\n\t\t}\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\t// eslint-disable-next-line no-bitwise\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces, default-case-last */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: { r = v;  g = n;  b = wh; break;\n\t\t}\n\n\t\tcase 1: { r = n;  g = v;  b = wh; break;\n\t\t}\n\n\t\tcase 2: { r = wh; g = v;  b = n; break;\n\t\t}\n\n\t\tcase 3: { r = wh; g = n;  b = v; break;\n\t\t}\n\n\t\tcase 4: { r = n;  g = wh; b = v; break;\n\t\t}\n\n\t\tcase 5: { r = v;  g = wh; b = n; break;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces, default-case-last */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.240_454_2) + (y * -1.537_138_5) + (z * -0.498_531_4);\n\tg = (x * -0.969_266) + (y * 1.876_010_8) + (z * 0.041_556);\n\tb = (x * 0.055_643_4) + (y * -0.204_025_9) + (z * 1.057_225_2);\n\n\t// Assume sRGB\n\tr = r > 0.003_130_8\n\t\t? ((1.055 * (r ** (1 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.003_130_8\n\t\t? ((1.055 * (g ** (1 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.003_130_8\n\t\t? ((1.055 * (b ** (1 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > LAB_FT ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > LAB_FT ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > LAB_FT ? z2 : (z - 16 / 116) / 7.787;\n\n\t// Illuminant D65 XYZ Tristrimulus Values\n\t// https://en.wikipedia.org/wiki/CIE_1931_color_space\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t/* eslint-disable no-bitwise */\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\t\t/* eslint-enable no-bitwise */\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\t// eslint-disable-next-line no-bitwise\n\tif (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\targs = args[0];\n\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (Math.trunc(args > 50) + 1) * 0.5;\n\t/* eslint-disable no-bitwise */\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\targs = args[0];\n\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\t/* eslint-disable no-bitwise */\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f\\d]{6}|[a-f\\d]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = [...colorString].map(char => char + char).join('');\n\t}\n\n\tconst integer = Number.parseInt(colorString, 16);\n\t/* eslint-disable no-bitwise */\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet hue;\n\n\tconst grayscale = chroma < 1 ? min / (1 - chroma) : 0;\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2 * s * l) : (2 * s * (1 - l));\n\n\tlet f = 0;\n\tif (c < 1) {\n\t\tf = (l - 0.5 * c) / (1 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0: {\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 1: {\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 2: {\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t}\n\n\t\tcase 3: {\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t}\n\n\t\tcase 4: {\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t}\n\n\t\tdefault: {\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255,\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1 - c);\n\tlet f = 0;\n\n\tif (v > 0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65_535) * 255, (apple[1] / 65_535) * 255, (apple[2] / 65_535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65_535, (rgb[1] / 255) * 65_535, (rgb[2] / 255) * 65_535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\t/* eslint-disable no-bitwise */\n\tconst value = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (value << 16) + (value << 8) + value;\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst value = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [value / 255 * 100];\n};\n","import conversions from './conversions.js';\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null,\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length > 0) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let {length} = adjacents, i = 0; i < length; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nfunction route(fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n}\n\nexport default route;\n","import conversions from './conversions.js';\nimport route from './route.js';\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let {length} = result, i = 0; i < length; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfor (const fromModel of models) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\tfor (const toModel of routeModels) {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t}\n}\n\nexport default convert;\n","import colorString from 'color-string';\nimport convert from 'color-convert';\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](...arguments_);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(...arguments_);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(...this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(...rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_colour_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...arguments_) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments_.length > 0) {\n\t\t\treturn new Color(arguments_, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...arguments_) {\n\t\tlet color = arguments_[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(arguments_, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] ||= [])[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nexport default Color;\n"],"names":["calciteContainerSizeWidthXxs","max","calciteContainerSizeWidthXs","calciteContainerSizeWidthSm","calciteContainerSizeWidthMd","calciteSpacingFixedSm","calciteSpacingFixedMd","calciteSpacingFixedXl","calciteSpacingBase","calciteSpacingXxs","calciteSpacingSm","CSS","channel","channels","colorField","colorFieldScope","colorMode","colorModeContainer","container","control","controlAndScope","controlSection","deleteColor","header","hexAndChannelsGroup","hexOptions","hueScope","hueSlider","opacityScope","opacitySlider","preview","previewAndSliders","saveColor","savedColor","savedColors","savedColorsButtons","savedColorsSection","scope","section","slider","sliders","splitSection","DEFAULT_COLOR","Color","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","r","g","b","HSV_LIMITS","h","s","v","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","min","STATIC_DIMENSIONS","gap","parseInt","height","thumb","radius","size","minWidth","m","l","SCOPE_SIZE","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","alpha","Number","toFixed","opacityToAlpha","opacity","isValidHex","hex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","length","pattern","test","normalizeHex","convertFromHexToHexa","toLowerCase","startsWith","rgbToHex","hexToRGB","hexify","color","hexa","numToHex","a","num","toString","padStart","normalizeAlpha","colorObject","normalized","normalizeColor","alphaColorObject","replace","first","second","third","fourth","split","slice","isNaN","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","every","colorEqual","value1","value2","rgb","array","alphaCompatible","mode","toAlphaMode","toNonAlphaMode","inlineSizeBorderTotalWidth","borderWidthInPx","getSliderWidth","availableWidth","activeStaticDimensions","previewWidth","effectiveWidth","inlineSpaceAroundElements","Math","getColorFieldDimensions","width","floor","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","reverseNames","Object","create","name","colorNames","hasOwn","cs","to","get","clamp","number_","hexDouble","string_","round","toUpperCase","string","value","model","hsl","hwb","match","i","hexAlpha","i2","parseFloat","rgba","percent","hsla","hwba","keyword","reverseKeywords","key","keys","cssKeywords","convert","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","LAB_FT","Error","defineProperty","deriveBFS","fromModel","graph","models","conversions","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","args","wrapConversion","toModel","path","fn","cur","conversion","delta","rdif","gdif","bdif","diff","diffc","c","w","k","reversed","currentClosestKeyword","currentClosestDistance","POSITIVE_INFINITY","y","x","z","t3","t2","t1","smin","lmin","hi","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","mult","trunc","rem","colorString","map","char","join","integer","chroma","hue","pure","mg","wrapRaw","wrappedFn","arg0","undefined","wrapRounded","result","routes","route","routeModels","raw","skippedModels","hashedModelKeys","sort","limiters","object","this","valpha","newArray","Array","prototype","call","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","arguments_","percentString","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","saturationv","wblack","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","isArray","number","roundTo","modifier"],"sourceRoot":""}