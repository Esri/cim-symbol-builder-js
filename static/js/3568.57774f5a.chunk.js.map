{"version":3,"file":"static/js/3568.57774f5a.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation/navigation.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation/navigation.scss?tag=calcite-navigation&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-logo/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-logo/navigation-logo.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-logo/navigation-logo.scss?tag=calcite-navigation-logo&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-user/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-user/navigation-user.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/navigation-user/navigation-user.scss?tag=calcite-navigation-user&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","export const CSS = {\n  container: \"container\",\n  containerContent: \"container-content\",\n  hasProgress: \"progress-bar\",\n  hide: \"hide\",\n  primary: \"primary\",\n  secondary: \"secondary\",\n  tertiary: \"tertiary\",\n};\n\nexport const SLOTS = {\n  logo: \"logo\",\n  user: \"user\",\n  progress: \"progress\",\n  navigationAction: \"navigation-action\",\n  contentStart: \"content-start\",\n  contentEnd: \"content-end\",\n  contentCenter: \"content-center\",\n  navSecondary: \"navigation-secondary\",\n  navTertiary: \"navigation-tertiary\",\n};\n\nexport const ICONS = {\n  hamburger: \"hamburger\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  State,\n  VNode,\n  Method,\n} from \"@stencil/core\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot logo - A slot for adding a `calcite-logo` component to the primary navigation level.\n * @slot user - A slot for adding a `calcite-user` component to the primary navigation level.\n * @slot progress - A slot for adding a `calcite-progress` component to the primary navigation level.\n * @slot navigation-action - A slot for adding a `calcite-action` component to the primary navigation level.\n * @slot content-start - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the start position of any navigation level.\n * @slot content-center - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the center position of the primary navigation level.\n * @slot content-end - A slot for adding a `calcite-menu`, `calcite-action`, or other interactive elements in the end position of any navigation level.\n * @slot navigation-secondary - A slot for adding a `calcite-navigation` component in the secondary navigation level. Components rendered here will not display `calcite-navigation-logo` or `calcite-navigation-user` components.\n * @slot navigation-tertiary - A slot for adding a `calcite-navigation` component in the tertiary navigation level.  Components rendered here will not display `calcite-navigation-logo` or `calcite-navigation-user` components.\n */\n@Component({\n  tag: \"calcite-navigation\",\n  styleUrl: \"navigation.scss\",\n  shadow: true,\n})\nexport class CalciteNavigation implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `navigationAction` is `true`, specifies the label of the `calcite-action`.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, displays a `calcite-action` and emits a `calciteNavActionSelect` event on selection change.\n   */\n  @Prop({ reflect: true }) navigationAction = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationElement;\n\n  @State() logoSlotHasElements: boolean;\n\n  @State() navigationActionSlotHasElements: boolean;\n\n  @State() primaryContentCenterSlotHasElements: boolean;\n\n  @State() primaryContentEndSlotHasElements: boolean;\n\n  @State() primaryContentStartSlotHasElements: boolean;\n\n  @State() progressSlotHasElement: boolean;\n\n  @State() secondarySlotHasElements: boolean;\n\n  @State() tertiarySlotHasElements: boolean;\n\n  @State() userSlotHasElements: boolean;\n\n  navigationActionEl: HTMLCalciteActionElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `navigationAction` is `true`, emits when the displayed action selection changes. */\n  @Event({ cancelable: false }) calciteNavigationActionSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `navigationAction` is `true`, sets focus on the component's action element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    return this.navigationActionEl?.setFocus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private actionClickHandler = () => {\n    this.calciteNavigationActionSelect.emit();\n  };\n\n  private handleUserSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.userSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleLogoSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.logoSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentStartSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentEndSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleContentCenterSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.primaryContentCenterSlotHasElements = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private handleSecondarySlotChange = (event: Event): void => {\n    this.secondarySlotHasElements = slotChangeHasAssignedElement(event);\n  };\n\n  private handleTertiarySlotChange = (event: Event): void => {\n    this.tertiarySlotHasElements = slotChangeHasAssignedElement(event);\n  };\n\n  private handleMenuActionSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.navigationActionSlotHasElements = slotChangeHasAssignedElement(event);\n      if (this.navigationActionSlotHasElements) {\n        this.navigationAction = false;\n      }\n    }\n  };\n\n  private handleProgressSlotChange = (event: Event): void => {\n    if (this.isPrimaryLevel()) {\n      this.progressSlotHasElement = slotChangeHasAssignedElement(event);\n    }\n  };\n\n  private isPrimaryLevel(): boolean {\n    return this.el.slot !== SLOTS.navSecondary && this.el.slot !== SLOTS.navTertiary;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderMenuAction(): VNode {\n    return (\n      <slot name={SLOTS.navigationAction} onSlotchange={this.handleMenuActionSlotChange}>\n        {this.navigationAction && (\n          <calcite-action\n            icon={ICONS.hamburger}\n            onClick={this.actionClickHandler}\n            ref={(el: HTMLCalciteActionElement) => (this.navigationActionEl = el)}\n            text={this.label}\n          />\n        )}\n      </slot>\n    );\n  }\n\n  render(): VNode {\n    const primaryLevelHasElements =\n      this.logoSlotHasElements ||\n      this.userSlotHasElements ||\n      this.navigationActionSlotHasElements ||\n      this.primaryContentCenterSlotHasElements ||\n      this.primaryContentEndSlotHasElements ||\n      this.primaryContentStartSlotHasElements ||\n      this.navigationAction;\n    const slotName = this.el.slot;\n    return (\n      <Host>\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.secondary]: slotName === SLOTS.navSecondary,\n            [CSS.tertiary]: slotName === SLOTS.navTertiary,\n            [CSS.primary]: primaryLevelHasElements,\n          }}\n        >\n          <div class={{ [CSS.hide]: !this.progressSlotHasElement, [SLOTS.progress]: true }}>\n            <slot name={SLOTS.progress} onSlotchange={this.handleProgressSlotChange} />\n          </div>\n          <div\n            class={{ [CSS.containerContent]: true, [CSS.hasProgress]: this.progressSlotHasElement }}\n          >\n            {this.renderMenuAction()}\n            <div class={{ [CSS.hide]: !this.logoSlotHasElements, [SLOTS.logo]: true }}>\n              <slot name={SLOTS.logo} onSlotchange={this.handleLogoSlotChange} />\n            </div>\n            <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n            <slot name={SLOTS.contentCenter} onSlotchange={this.handleContentCenterSlotChange} />\n            <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n            <div class={{ [CSS.hide]: !this.userSlotHasElements, [SLOTS.user]: true }}>\n              <slot name={SLOTS.user} onSlotchange={this.handleUserSlotChange} />\n            </div>\n          </div>\n        </div>\n\n        <Fragment>\n          <slot name={SLOTS.navSecondary} onSlotchange={this.handleSecondarySlotChange} />\n          <slot name={SLOTS.navTertiary} onSlotchange={this.handleTertiarySlotChange} />\n        </Fragment>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-navigation-width: Specifies the width of the component's content area.\n * @prop --calcite-navigation-background: Specifies the background color of the component.\n * @prop --calcite-navigation-border-color: Specifies the border color of the component.\n */\n\n@include base-component();\n\n.container {\n  @apply flex\n  flex-col\n  mx-auto\n  w-full;\n  margin-block: 0;\n  margin-inline: auto;\n  background-color: var(--calcite-navigation-background, var(--calcite-color-foreground-1));\n  &.primary,\n  &.secondary,\n  &.tertiary {\n    border-block-end: 1px solid;\n    border-block-end-color: var(--calcite-navigation-border-color, var(--calcite-color-border-3));\n  }\n}\n\n.user,\n.logo {\n  @apply flex;\n}\n\n.hide {\n  @apply hidden;\n}\n\n.primary {\n  @apply h-16;\n}\n\n.secondary {\n  @apply h-12;\n}\n\n.tertiary {\n  @apply h-12;\n}\n\n.container-content {\n  @apply flex\n  w-full\n  h-full\n  mx-auto;\n  margin-block: 0;\n  inline-size: var(--calcite-navigation-width, 100%);\n  max-inline-size: 100%;\n  &.progress-bar {\n    margin-block-start: 0.125rem;\n  }\n}\n\nslot[name] {\n  @apply flex flex-row;\n}\n\nslot[name=\"navigation-secondary\"]::slotted(calcite-navigation),\nslot[name=\"navigation-tertiary\"]::slotted(calcite-navigation) {\n  @apply w-full;\n}\n\nslot[name=\"content-start\"]::slotted(*),\nslot[name=\"content-center\"]::slotted(*),\nslot[name=\"content-end\"]::slotted(*) {\n  @apply flex flex-row items-center;\n}\n\nslot[name=\"progress\"],\nslot[name=\"progress\"] calcite-progress {\n  inset-block-start: 0;\n  inset-inline: 0;\n}\nslot[name=\"content-end\"] {\n  @apply ms-auto;\n}\n\nslot[name=\"content-start\"] {\n  @apply me-auto;\n}\n\nslot[name=\"content-end\"],\nslot[name=\"logo\"] ~ slot[name=\"user\"],\nslot[name=\"user\"]:only-child {\n  @apply ms-auto;\n}\n\nslot[name=\"content-center\"] {\n  @apply ms-auto me-auto;\n}\n\nslot[name=\"content-start\"] ~ slot[name=\"content-center\"] {\n  @apply ms-0;\n}\n\nslot[name=\"content-start\"] ~ slot[name=\"content-end\"],\nslot[name=\"content-center\"] ~ slot[name=\"content-end\"],\nslot[name=\"content-center\"] ~ slot[name=\"user\"],\nslot[name=\"content-end\"] ~ slot[name=\"user\"] {\n  @apply m-0;\n}\n","export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n  description: \"description\",\n  anchor: \"anchor\",\n  image: \"image\",\n  standalone: \"standalone\",\n  icon: \"icon\",\n};\n","import { Component, Element, h, Host, Prop, VNode, Method } from \"@stencil/core\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-navigation-logo\",\n  styleUrl: \"navigation-logo.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class CalciteNavigationLogo implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is highlighted. */\n  @Prop({ reflect: true }) active: boolean;\n\n  /** Specifies the URL destination of the component, which can be set as an absolute or relative path.*/\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Describes the appearance or function of the `thumbnail`. If no label is provided, context will not be provided to assistive technologies. */\n  @Prop() label: string;\n\n  /**\n   * Defines the relationship between the `href` value and the current document.\n   *\n   * @mdn [rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)\n   */\n  @Prop({ reflect: true }) rel: string;\n\n  /** A description for the component, which displays below the `heading`.*/\n  @Prop() description: string;\n\n  /**\n   * Specifies where to open the linked document defined in the `href` property.\n   *\n   * @mdn [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   */\n  @Prop({ reflect: true }) target: string;\n\n  /** Specifies heading text for the component, such as a product or organization name.*/\n  @Prop() heading: string;\n\n  /** Specifies the `src` to an image. */\n  @Prop() thumbnail: string;\n\n  /**\n   * Specifies the heading level of the component's heading for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (this.href) {\n      this.el.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationLogoElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderIcon(): VNode {\n    /** Icon scale is not variable as the component does not have a scale property */\n    return <calcite-icon class={CSS.icon} flipRtl={this.iconFlipRtl} icon={this.icon} scale=\"l\" />;\n  }\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description } = this;\n    const headingNode = heading ? (\n      <Heading\n        class={{\n          [CSS.heading]: true,\n          [CSS.standalone]: !this.description,\n        }}\n        key={CSS.heading}\n        level={headingLevel}\n      >\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? (\n      <span class={CSS.description} key={CSS.description}>\n        {description}\n      </span>\n    ) : null;\n\n    return headingNode || descriptionNode ? (\n      <div class={CSS.container} key={CSS.container}>\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { thumbnail } = this;\n    return (\n      <Host>\n        <a class={CSS.anchor} href={this.href} rel={this.rel} target={this.target}>\n          {thumbnail && <img alt={this.label || \"\"} class={CSS.image} src={thumbnail} />}\n          {this.icon && this.renderIcon()}\n          {this.renderHeaderContent()}\n        </a>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply inline-flex outline-none;\n}\n\n.anchor {\n  @apply flex\n    m-0\n    items-center\n    justify-center\n    cursor-pointer\n    transition-default\n    focus-base\n    no-underline\n    text-0h;\n  color: inherit;\n  border-block-end: 2px solid transparent;\n}\n\n.anchor:hover,\n.anchor:focus {\n  @apply bg-foreground-2;\n}\n.anchor:focus {\n  @apply focus-inset;\n}\n\n.anchor:active {\n  @apply bg-foreground-3;\n}\n\n.image,\n.icon {\n  @apply flex h-7 m-0 px-4;\n}\n\n.image ~ .icon {\n  @apply ps-0;\n}\n\n.image ~ .container,\n.icon ~ .container {\n  @apply ps-0;\n}\n\n:host(:active) .anchor {\n  @apply text-color-1;\n}\n\n:host([active]) .anchor {\n  @apply text-color-1;\n  border-color: var(--calcite-color-brand);\n  --calcite-icon-color: var(--calcite-color-brand);\n}\n\n.container {\n  @apply flex\n  flex-col\n  truncate\n  text-start\n  px-4\n  mt-0.5;\n}\n\n.heading {\n  @apply text-0\n  ms-0\n  truncate\n  text-color-1\n  font-medium;\n}\n\n.standalone {\n  @apply text-1;\n}\n\n.description {\n  @apply text-color-2 truncate;\n  font-size: var(--calcite-font-size--1);\n}\n\n@include base-component();\n","export const CSS = {\n  textContainer: \"text-container\",\n  fullName: \"full-name\",\n  username: \"username\",\n  button: \"button\",\n};\n","import { Component, Element, h, Host, Prop, VNode, Method } from \"@stencil/core\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-navigation-user\",\n  styleUrl: \"navigation-user.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class CalciteNavigationUser implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is highlighted.*/\n  @Prop({ reflect: true }) active: boolean;\n\n  /** Specifies the full name of the user.*/\n  @Prop() fullName: string;\n\n  /** Describes the appearance of the avatar. If no label is provided, context will not be provided to assistive technologies.*/\n  @Prop() label: string;\n\n  /** When `true`, hides the `fullName` and `username` contents.*/\n  @Prop({ reflect: true }) textDisabled = false;\n\n  /** Specifies the `src` to an image (remember to add a token if the user is private).*/\n  @Prop() thumbnail: string;\n\n  /** Specifies the unique id of the user.*/\n  @Prop() userId: string;\n\n  /** Specifies the username of the user.*/\n  @Prop() username: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteNavigationUserElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host>\n        <button aria-label={this.label} class={CSS.button}>\n          <calcite-avatar\n            full-name={this.fullName}\n            label={this.label}\n            thumbnail={this.thumbnail}\n            user-id={this.userId}\n            username={this.username}\n          />\n          {(this.fullName || this.username) && !this.textDisabled && (\n            <div class={CSS.textContainer}>\n              {this.fullName && (\n                <span class={CSS.fullName} key={CSS.fullName}>\n                  {this.fullName}\n                </span>\n              )}\n              {this.username && (\n                <span class={CSS.username} key={CSS.username}>\n                  {this.username}\n                </span>\n              )}\n            </div>\n          )}\n        </button>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply inline-flex outline-none;\n  & .button {\n    background-color: transparent;\n    border: none;\n    @apply font-sans\n      flex\n      m-0\n      items-center\n      justify-center\n      cursor-pointer\n      transition-default\n      focus-base\n      text-0h;\n    border-block-end: 2px solid transparent;\n  }\n}\n\n:host(:hover) .button,\n:host(:focus) .button {\n  @apply bg-foreground-2;\n}\n\n:host(:focus) .button {\n  @apply focus-inset;\n}\n\n:host(:active) .button {\n  @apply bg-foreground-3 text-color-1;\n}\n\n:host([active]) .button {\n  @apply text-color-1 border-color-brand;\n  --calcite-icon-color: var(--calcite-color-brand);\n}\n\n.text-container {\n  @apply flex\n  flex-col\n  text-start\n  px-4\n  mt-0.5;\n}\n\ncalcite-avatar {\n  @apply px-4;\n}\n\ncalcite-avatar ~ .text-container {\n  @apply ps-0;\n}\n\n.full-name {\n  @apply text-0\n  ms-0\n  text-color-1\n  font-medium;\n}\n\n.username {\n  @apply text-color-2;\n  font-size: var(--calcite-font-size--1);\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n"],"names":["constrainHeadingLevel","level","Math","min","max","ceil","Heading","props","children","HeadingTag","h","class","key","CSS$2","SLOTS","ICONS","CalciteNavigation","actionClickHandler","this","calciteNavigationActionSelect","emit","handleUserSlotChange","event","isPrimaryLevel","userSlotHasElements","slotChangeHasAssignedElement","handleLogoSlotChange","logoSlotHasElements","handleContentStartSlotChange","primaryContentStartSlotHasElements","handleContentEndSlotChange","primaryContentEndSlotHasElements","handleContentCenterSlotChange","primaryContentCenterSlotHasElements","handleSecondarySlotChange","secondarySlotHasElements","handleTertiarySlotChange","tertiarySlotHasElements","handleMenuActionSlotChange","navigationActionSlotHasElements","navigationAction","handleProgressSlotChange","progressSlotHasElement","setFocus","componentFocusable","navigationActionEl","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","el","slot","renderMenuAction","name","onSlotchange","icon","onClick","ref","text","label","render","primaryLevelHasElements","slotName","Host","Fragment","CSS$1","CalciteNavigationLogo","href","focus","renderIcon","flipRtl","iconFlipRtl","scale","renderHeaderContent","heading","headingLevel","description","headingNode","descriptionNode","thumbnail","rel","target","alt","src","CSS","CalciteNavigationUser","fullName","userId","username","textDisabled","resolveMap","WeakMap","promiseMap","component","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","requestAnimationFrame"],"sourceRoot":""}