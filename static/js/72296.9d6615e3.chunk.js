"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[72296,7995],{79720:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Gi});var r=i(35143),s=i(16868),n=i(69098),o=i(50076),a=i(77717),l=i(50346),u=i(46053),p=(i(81806),i(76460)),c=(i(47249),i(85842)),m=i(17707),d=i(25515),y=i(39356),h=i(3825),g=i(53084),f=i(68134),w=i(90534),v=i(40565),R=i(28379),_=i(76797),b=i(65215),S=i(13312),I=i(80963),x=i(95363),M=i(15359),A=i(42553),F=i(44038),D=i(52297);const N={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var T=i(93187),j=i(74916),P=i(77638);const O=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Z={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},C=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function V(e){return C.has(e.type)}function E(e,t){if(!e||!t)return(0,g.o8)(e||t);const i=(0,g.o8)(e);if(i.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),J(i.functionDefinition.arguments,t),i.rasterFunctionDefinition=i.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(z(i.functionArguments).Raster=t);return i}function J(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&J(e[i].arguments,t))}function q(e){const t=(0,g.o8)(N[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=q(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=H(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function G(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,r=new F.A;r.functionName="Stretch";const s=$[j.u.toJSON(e.stretchType)],n="u8",o=e.customStatistics?.map((e=>[e.min,e.max,e.avg??0,e.stddev??1])),a={StretchType:s,Statistics:o,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),s===$.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):s===$.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,r.outputPixelType=n):s===$.minMax?r.outputPixelType=n:s===$.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=a,r.variableName="Raster",e.colorRamp){const s=e.colorRamp,n=new F.A;if(i)n.functionArguments={ColorRamp:(0,T.hf)(s)};else{const i=(0,T.hs)(s,!0);if(i)n.functionArguments={colorRampName:i};else if(!t.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:(0,T.R8)(s)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,i?new F.A({rasterFunctionDefinition:q(n)}):n}return i?new F.A({rasterFunctionDefinition:q(r)}):r}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],s=[],n=[],o=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=U(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol?.color;let s;r?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach((o=>{null!=t.minValue&&null!=t.maxValue&&(s=o.attributes[e.field],(s>=t.minValue&&s<t.maxValue||i===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([o.attributes[p],r.r,r.g,r.b]))}))}));const i=a?L(n,a):n,r=new F.A;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:q(r)}):r}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;a?.a?(0===t?i.push(e.minValue,e.maxValue+o):i.push(e.minValue+o,e.maxValue+o),r.push(t),n.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)}));const c=a?L(n,a):n,m=new F.A;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:s},m.variableName="Raster";const d=new F.A;return d.functionName="Colormap",d.functionArguments={Colormap:c,Raster:m},t.convertToRFT?new F.A({rasterFunctionDefinition:q(d)}):d}(e,t);case"unique-value":return function(e,t){const i=[],{pixelType:r,rasterAttributeTable:s}=t,n=null==s?null:s.features,o=U(s),a=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(n){if(o){const t=new Map;l.forEach((e=>{const i=e.value,r=B(e);null!=i&&r?.a&&t.set(String(i),r.toRgb())}));const r=e.field;r&&n.forEach((({attributes:e})=>{const s=String(e[r]),n=e[o],l=t.get(s);l?i.push([n,...l]):a&&i.push([n,...a])}))}}else for(let c=0;c<l.length;c++){const e=l[c],t=B(e),r=+e.value;if(t?.a){if(isNaN(r))return null;i.push([r,t.r,t.g,t.b])}}const u=r?L(i,r):i,p=new F.A;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:q(p)}):p}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,s=r?L(i,r):i,n=new F.A;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,t.convertToRFT?new F.A({rasterFunctionDefinition:q(n)}):n}(e,t);case"vector-field":return function(e,t){const i=new F.A;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:s}=t,n="vector-uv"===r;let o,a;if(s&&2===s.length){const e=s.map((e=>e.toLowerCase()));o=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new P.A,c={magnitudeBandID:o,directionBandID:a,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Z[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const m=q(i);return t.convertToRFT?F.A.fromJSON({rasterFunctionDefinition:m}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new F.A;const r=new F.A;r.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,o={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};return 0===s&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===n&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),r.functionArguments=o,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?o.ColorRamp=(0,T.hf)(e.colorRamp):o.Colormap=(0,T.R8)(e.colorRamp)),i?new F.A({rasterFunctionDefinition:q(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function z(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?z(t.functionArguments):e}const $={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function L(e,t){const i=O.has(t)?(0,D.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function U(e){if(null==e)return;const{fields:t}=e,i=t?.find((e=>e?.name&&"value"===e.name.toLowerCase()));return i?.name}function B(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find((e=>"fill"===e.type))?.material?.color:e.symbol?.color}function H(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,T.vL)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var k=i(29365),Q=i(58646);let K=class extends A.A{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new k.A({where:i})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const i=e.pixelFilter,r=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const s=e.multidimensionalSubset?.areaOfInterest;return s&&(t=function(e,t){const i=new F.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return E(i,e)}(t,s)),r&&!i&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:i,renderer:r}=t;return e=e||t.rasterFunction,r&&V(r)?E(G(r,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandNames:i.bandInfos.map((({name:e})=>e)),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:i.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=this.layer.serviceRasterInfo.pixelSize;let r=new F.A({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:i}});return r=e?.rasterFunctionDefinition?new F.A({rasterFunctionDefinition:q(r)}):r,E(r,e)}};(0,r._)([(0,u.MZ)()],K.prototype,"layer",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"adjustAspectRatio",null),(0,r._)([(0,m.K)("adjustAspectRatio")],K.prototype,"writeAdjustAspectRatio",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"bandIds",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"compression",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"compressionQuality",null),(0,r._)([(0,m.K)("compressionQuality")],K.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"compressionTolerance",null),(0,r._)([(0,m.K)("compressionTolerance")],K.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"format",null),(0,r._)([(0,u.MZ)({type:String,json:{read:{reader:Q.SZ.read},write:{writer:Q.SZ.write}}})],K.prototype,"interpolation",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"noData",null),(0,r._)([(0,u.MZ)({type:String,json:{read:{reader:Q.hm.read},write:{writer:Q.hm.write}}})],K.prototype,"noDataInterpretation",null),(0,r._)([(0,u.MZ)({type:Q.e8.apiValues,json:{read:Q.e8.read,write:Q.e8.write}})],K.prototype,"pixelType",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"lercVersion",void 0),(0,r._)([(0,m.K)("lercVersion")],K.prototype,"writeLercVersion",null),(0,r._)([(0,u.MZ)({type:Number})],K.prototype,"version",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],K.prototype,"mosaicRule",null),(0,r._)([(0,u.MZ)({json:{write:!0,name:"renderingRule"}})],K.prototype,"rasterFunction",null),K=(0,r._)([(0,c.$)("esri.layers.support.ExportImageServiceParameters")],K);var W=i(44135),X=i(1900),Y=i(16852),ee=i(13023),te=i(66486),ie=i(51939),re=i(23032),se=i(42915),ne=i(68347),oe=i(37267),ae=i(99846),le=i(78937),ue=i(20118),pe=i(88205),ce=i(19902),me=i(1438),de=i(54994),ye=i(19247);let he=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0}})],he.prototype,"fromGeometry",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0,write:!0}})],he.prototype,"toGeometry",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],he.prototype,"objectIds",void 0),(0,r._)([(0,u.MZ)({type:String,json:{write:!0}})],he.prototype,"where",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],he.prototype,"maxCount",void 0),he=(0,r._)([(0,c.$)("esri.rest.support.FindImagesParameters")],he);const ge=he,fe=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"make",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"model",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"rows",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,r._)([(0,c.$)("esri.rest.support.CameraInfoMixin")],t),t};let we=class extends(fe(A.A)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,r._)([(0,u.MZ)({json:{write:!0}})],we.prototype,"id",void 0),(0,r._)([(0,u.MZ)({json:{name:"uri",write:!0}})],we.prototype,"referenceUri",void 0),(0,r._)([(0,u.MZ)({type:Date,json:{write:!0}})],we.prototype,"acquisitionDate",void 0),(0,r._)([(0,m.K)("acquisitionDate")],we.prototype,"writeAcquisitionDate",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],we.prototype,"cameraID",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],we.prototype,"center",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],we.prototype,"perspectiveCenter",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],we.prototype,"orientation",void 0),we=(0,r._)([(0,c.$)("esri.rest.support.ImageInspectionInfo")],we);const ve=we;let Re=class extends A.A{constructor(){super(...arguments),this.images=null}};(0,r._)([(0,u.MZ)({type:[ve],json:{write:!0}})],Re.prototype,"images",void 0),Re=(0,r._)([(0,c.$)("esri.rest.support.FindImagesResult")],Re);const _e=Re;var be;let Se=be=class extends A.A{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new be((0,g.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,r._)([(0,u.MZ)({type:[String],json:{name:"angleName",write:!0}})],Se.prototype,"angleNames",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Se.prototype,"point",void 0),(0,r._)([(0,u.MZ)({type:S.A,json:{write:!0}})],Se.prototype,"spatialReference",void 0),(0,r._)([(0,u.MZ)({type:v.jz,json:{write:!0}})],Se.prototype,"rasterId",void 0),Se=be=(0,r._)([(0,c.$)("esri.rest.support.ImageAngleParameters")],Se);const Ie=Se;let xe=class extends A.A{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],xe.prototype,"north",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],xe.prototype,"up",void 0),(0,r._)([(0,u.MZ)({type:S.A,json:{write:!0}})],xe.prototype,"spatialReference",void 0),xe=(0,r._)([(0,c.$)("esri.rest.support.ImageAngleResult")],xe);const Me=xe;var Ae=i(31633),Fe=i(31608),De=i(45802);const Ne=new De.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Te=class extends A.A{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,r._)([(0,u.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"value",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],Te.prototype,"displayValue",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"uncertainty",void 0),Te=(0,r._)([(0,c.$)("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Te);let je=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],je.prototype,"unit",void 0),je=(0,r._)([(0,c.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],je);let Pe=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.dk.read,write:Ae.dk.write}})],Pe.prototype,"unit",void 0),Pe=(0,r._)([(0,c.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Pe);let Oe=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.b$.read,write:Ae.b$.write}})],Oe.prototype,"unit",void 0),Oe=(0,r._)([(0,c.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],Oe);let Ze=class extends A.A{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};(0,r._)([(0,u.MZ)()],Ze.prototype,"type",void 0),(0,r._)([(0,u.MZ)({type:Ne.apiValues,json:{read:Ne.read,write:Ne.write}})],Ze.prototype,"measureOperation",void 0),(0,r._)([(0,u.MZ)({type:k.A,json:{write:!0}})],Ze.prototype,"mosaicRule",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Ze.prototype,"pixelSize",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Ze.prototype,"raster",void 0),Ze=(0,r._)([(0,c.$)("esri.rest.support.BaseImageMeasureParameters")],Ze);const Ce=Ze;var Ve;let Ee=Ve=class extends Ce{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Ve((0,g.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"fromGeometry",read:!0,write:!0}})],Ee.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],Ee.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({type:Ne.apiValues,json:{write:Ne.write}})],Ee.prototype,"measureOperation",null),(0,r._)([(0,u.MZ)({json:{read:!0}})],Ee.prototype,"is3D",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],Ee.prototype,"linearUnit",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.dk.read,write:Ae.dk.write}})],Ee.prototype,"areaUnit",void 0),Ee=Ve=(0,r._)([(0,c.$)("esri.rest.support.ImageAreaParameters")],Ee);const Je=Ee;let qe=class extends A.A{constructor(e){super(e),this.name=null,this.sensorName=null}};(0,r._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],qe.prototype,"name",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],qe.prototype,"sensorName",void 0),qe=(0,r._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult")],qe);const Ge=qe;let ze=class extends Ge{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,r._)([(0,u.MZ)({type:Pe,json:{read:!0,write:!0}})],ze.prototype,"area",void 0),(0,r._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],ze.prototype,"perimeter",void 0),ze=(0,r._)([(0,c.$)("esri.rest.support.ImageAreaResult")],ze);const $e=ze;let Le=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,r._)([(0,u.MZ)({type:S.A,json:{name:"outSR",write:!0}})],Le.prototype,"outSpatialReference",void 0),Le=(0,r._)([(0,c.$)("esri.rest.support.ImageBoundaryParameters")],Le);const Ue=Le;let Be=class extends A.A{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?b.A.fromJSON(e):_.A.fromJSON(e)}};(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],Be.prototype,"area",void 0),(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"shape",write:!0}})],Be.prototype,"geometry",void 0),(0,r._)([(0,R.w)("geometry")],Be.prototype,"readGeometry",null),Be=(0,r._)([(0,c.$)("esri.rest.support.ImageBoundaryResult")],Be);const He=Be;var ke;let Qe=ke=class extends Ce{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new ke((0,g.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0,write:!0}})],Qe.prototype,"fromGeometry",void 0),(0,r._)([(0,m.K)("fromGeometry")],Qe.prototype,"writeFromGeometry",null),(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0,write:!0}})],Qe.prototype,"toGeometry",void 0),(0,r._)([(0,u.MZ)({type:Ne.apiValues,json:{write:Ne.write}})],Qe.prototype,"measureOperation",null),(0,r._)([(0,u.MZ)({json:{read:!0}})],Qe.prototype,"is3D",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],Qe.prototype,"linearUnit",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.b$.read,write:Ae.b$.write}})],Qe.prototype,"angularUnit",void 0),Qe=ke=(0,r._)([(0,c.$)("esri.rest.support.ImageDistanceParameters")],Qe);const Ke=Qe;let We=class extends Ge{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,r._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],We.prototype,"distance",void 0),(0,r._)([(0,u.MZ)({type:Oe,json:{read:!0,write:!0}})],We.prototype,"azimuthAngle",void 0),(0,r._)([(0,u.MZ)({type:Oe,json:{read:!0,write:!0}})],We.prototype,"elevationAngle",void 0),We=(0,r._)([(0,c.$)("esri.rest.support.ImageDistanceResult")],We);const Xe=We;var Ye=i(6409),et=i(38432),tt=i(59187);let it=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=JSON.stringify(e.toJSON()))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{read:ce.rS,write:!0}})],it.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],it.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],it.prototype,"objectIds",void 0),(0,r._)([(0,Ye.e)(et.x,{ignoreUnknown:!1,name:"spatialRel"})],it.prototype,"spatialRelationship",void 0),(0,r._)([(0,u.MZ)({type:tt.A,json:{name:"time",write:!0}})],it.prototype,"timeExtent",void 0),(0,r._)([(0,u.MZ)({type:String,json:{write:!0}})],it.prototype,"where",void 0),it=(0,r._)([(0,c.$)("esri.rest.support.ImageGPSInfoParameters")],it);const rt=it;let st=class extends(fe(A.A)){constructor(){super(...arguments),this.id=null}};(0,r._)([(0,u.MZ)({json:{write:!0}})],st.prototype,"id",void 0),st=(0,r._)([(0,c.$)("esri.rest.support.CameraInfo")],st);const nt=st;let ot=class extends A.A{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,r._)([(0,u.MZ)({json:{write:!0}})],ot.prototype,"id",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],ot.prototype,"name",void 0),(0,r._)([(0,u.MZ)({type:Date,json:{write:!0}})],ot.prototype,"acquisitionDate",void 0),(0,r._)([(0,m.K)("acquisitionDate")],ot.prototype,"writeAcquisitionDate",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],ot.prototype,"cameraID",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],ot.prototype,"center",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],ot.prototype,"gps",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],ot.prototype,"orientation",void 0),ot=(0,r._)([(0,c.$)("esri.rest.support.ImageGPSInfo")],ot);const at=ot;let lt=class extends A.A{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,r._)([(0,u.MZ)({type:[at],json:{write:!0}})],lt.prototype,"images",void 0),(0,r._)([(0,u.MZ)({type:[nt],json:{write:!0}})],lt.prototype,"cameras",void 0),lt=(0,r._)([(0,c.$)("esri.rest.support.ImageGPSInfoResult")],lt);const ut=lt;var pt;let ct=pt=class extends Ce{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new pt((0,g.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0}})],ct.prototype,"fromGeometry",void 0),(0,r._)([(0,m.K)("fromGeometry")],ct.prototype,"writeFromGeometry",null),(0,r._)([(0,u.MZ)({type:ye.A,json:{read:!0,write:!0}})],ct.prototype,"toGeometry",void 0),(0,r._)([(0,u.MZ)({type:Ne.apiValues,json:{write:Ne.write}})],ct.prototype,"measureOperation",null),(0,r._)([(0,u.MZ)({json:{read:!0}})],ct.prototype,"operationType",void 0),(0,r._)([(0,u.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],ct.prototype,"linearUnit",void 0),ct=pt=(0,r._)([(0,c.$)("esri.rest.support.ImageHeightParameters")],ct);const mt=ct;let dt=class extends Ge{constructor(){super(...arguments),this.height=null}};(0,r._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],dt.prototype,"height",void 0),dt=(0,r._)([(0,c.$)("esri.rest.support.ImageHeightResult")],dt);const yt=dt;var ht,gt=i(46570);let ft=ht=class extends A.A{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=k.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=F.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=null!=e.start?e.start.getTime():null,s=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=s?`${r},${s}`:`${r}`:null}}clone(){return new ht((0,g.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{write:!0}})],ft.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],ft.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({type:k.A,json:{write:!0}})],ft.prototype,"mosaicRule",null),(0,r._)([(0,m.K)("mosaicRule")],ft.prototype,"writeMosaicRule",null),(0,r._)([(0,u.MZ)({type:F.A,json:{write:!0,name:"renderingRule"}})],ft.prototype,"rasterFunction",null),(0,r._)([(0,m.K)("rasterFunction")],ft.prototype,"writeRasterFunction",null),(0,r._)([(0,u.MZ)({type:[F.A],json:{write:!0,name:"renderingRules"}})],ft.prototype,"rasterFunctions",void 0),(0,r._)([(0,m.K)("rasterFunctions")],ft.prototype,"writeRasterFunctions",null),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],ft.prototype,"pixelSize",void 0),(0,r._)([(0,m.K)("pixelSize")],ft.prototype,"writePixelSize",null),(0,r._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],ft.prototype,"returnGeometry",void 0),(0,r._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],ft.prototype,"returnCatalogItems",void 0),(0,r._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],ft.prototype,"returnPixelValues",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],ft.prototype,"maxItemCount",void 0),(0,r._)([(0,u.MZ)({type:tt.A,json:{write:{target:"time"}}})],ft.prototype,"timeExtent",void 0),(0,r._)([(0,m.K)("timeExtent")],ft.prototype,"writeTimeExtent",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],ft.prototype,"raster",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],ft.prototype,"viewId",void 0),(0,r._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],ft.prototype,"processAsMultidimensional",void 0),ft=ht=(0,r._)([(0,c.$)("esri.rest.support.ImageIdentifyParameters")],ft);const wt=ft;var vt=i(77725);let Rt=class extends A.A{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"catalogItemVisibilities",void 0),(0,r._)([(0,u.MZ)({type:vt.A,json:{write:!0}})],Rt.prototype,"catalogItems",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Rt.prototype,"location",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"name",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"objectId",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"processedValues",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"properties",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Rt.prototype,"value",void 0),Rt=(0,r._)([(0,c.$)("esri.rest.support.ImageIdentifyResult")],Rt);const _t=Rt;var bt;let St=bt=class extends A.A{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new bt({geometries:this.geometries?.map((e=>e.clone()))??[],rasterId:this.rasterId})}};(0,r._)([(0,u.MZ)({type:[ye.A],json:{write:!0}})],St.prototype,"geometries",void 0),(0,r._)([(0,m.K)("geometries")],St.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({type:v.jz,json:{write:!0}})],St.prototype,"rasterId",void 0),St=bt=(0,r._)([(0,c.$)("esri.rest.support.ImagePixelLocationParameters")],St);const It=St;let xt=class extends A.A{constructor(){super(...arguments),this.geometries=null}};(0,r._)([(0,u.MZ)({json:{write:!0}})],xt.prototype,"geometries",void 0),xt=(0,r._)([(0,c.$)("esri.rest.support.ImagePixelLocationResult")],xt);const Mt=xt;var At;let Ft=At=class extends Ce{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new At((0,g.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"fromGeometry",read:ce.rS}})],Ft.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],Ft.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({type:Ne.apiValues,json:{read:Ne.read,write:Ne.write}})],Ft.prototype,"measureOperation",null),(0,r._)([(0,u.MZ)({json:{read:!0}})],Ft.prototype,"is3D",void 0),Ft=At=(0,r._)([(0,c.$)("esri.rest.support.ImagePointParameters")],Ft);const Dt=Ft;let Nt=class extends Ge{constructor(){super(...arguments),this.point=null}};(0,r._)([(0,u.MZ)({type:ye.A,json:{name:"point.value",read:!0,write:!0}})],Nt.prototype,"point",void 0),Nt=(0,r._)([(0,c.$)("esri.rest.support.ImagePointResult")],Nt);const Tt=Nt;var jt,Pt=i(66388);let Ot=jt=class extends A.A{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=e.toJSON())}set locations(e){if(e?.length){const t=new Pt.A({spatialReference:e[0].spatialReference,points:e.map((({x:e,y:t})=>[e,t]))});this._set("locations",e),this.geometry=t}}clone(){return new jt((0,g.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{read:ce.rS}})],Ot.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],Ot.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({type:[ye.A]})],Ot.prototype,"locations",null),(0,r._)([(0,u.MZ)({type:String,json:{type:Q.SZ.jsonValues,read:Q.SZ.read,write:Q.SZ.write}})],Ot.prototype,"interpolation",void 0),(0,r._)([(0,u.MZ)({type:k.A,json:{write:!0}})],Ot.prototype,"mosaicRule",void 0),(0,r._)([(0,u.MZ)({type:[String],json:{write:!0}})],Ot.prototype,"outFields",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Ot.prototype,"pixelSize",void 0),(0,r._)([(0,u.MZ)({type:String,json:{write:!0}})],Ot.prototype,"raster",void 0),(0,r._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],Ot.prototype,"returnFirstValueOnly",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],Ot.prototype,"sampleDistance",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],Ot.prototype,"sampleCount",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],Ot.prototype,"sliceId",void 0),(0,r._)([(0,u.MZ)({type:tt.A,json:{read:{source:"time"},write:{target:"time"}}})],Ot.prototype,"timeExtent",void 0),Ot=jt=(0,r._)([(0,c.$)("esri.rest.support.ImageSampleParameters")],Ot);const Zt=Ot;let Ct=class extends A.A{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,r._)([(0,u.MZ)({json:{write:!0}})],Ct.prototype,"attributes",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Ct.prototype,"location",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Ct.prototype,"locationId",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Ct.prototype,"rasterId",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Ct.prototype,"resolution",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Ct.prototype,"pixelValue",void 0),Ct=(0,r._)([(0,c.$)("esri.rest.support.ImageSample")],Ct);const Vt=Ct;let Et=class extends A.A{constructor(){super(...arguments),this.samples=[]}};(0,r._)([(0,u.MZ)({type:[Vt],json:{write:!0}})],Et.prototype,"samples",void 0),Et=(0,r._)([(0,c.$)("esri.rest.support.ImageSampleResult")],Et);const Jt=Et;let qt=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,i){t.geometries=e?.length?{geometryType:(0,ce.$B)(e[0]),geometries:e.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};(0,r._)([(0,u.MZ)({types:[Fe.yR]})],qt.prototype,"geometries",void 0),(0,r._)([(0,m.K)("geometries")],qt.prototype,"writeGeometries",null),(0,r._)([(0,u.MZ)({type:[v.jz],json:{write:!0}})],qt.prototype,"rasterIds",void 0),(0,r._)([(0,u.MZ)({type:S.A,json:{name:"outSR",write:!0}})],qt.prototype,"outSpatialReference",void 0),qt=(0,r._)([(0,c.$)("esri.rest.support.ImageToMapMultirayParameters")],qt);const Gt=qt;let zt=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]={...e.toJSON(),spatialReference:void 0})}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{read:ce.rS,write:!0}})],zt.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],zt.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],zt.prototype,"rasterId",void 0),(0,r._)([(0,u.MZ)({type:S.A,json:{name:"outSR",write:!0}})],zt.prototype,"outSpatialReference",void 0),(0,r._)([(0,u.MZ)({json:{name:"options.DOff",write:!0}})],zt.prototype,"depthOffset",void 0),(0,r._)([(0,u.MZ)({json:{name:"options.Adjust",write:!0}})],zt.prototype,"adjust",void 0),zt=(0,r._)([(0,c.$)("esri.rest.support.ImageToMapParameters")],zt);const $t=zt;let Lt=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,r._)([(0,u.MZ)({type:String,json:{name:"uri",write:!0}})],Lt.prototype,"referenceUri",void 0),(0,r._)([(0,u.MZ)({type:Number,json:{write:!0}})],Lt.prototype,"rasterId",void 0),Lt=(0,r._)([(0,c.$)("esri.rest.support.ImageUrlParameters")],Lt);const Ut=Lt;let Bt=class extends A.A{constructor(){super(...arguments),this.url=null}};(0,r._)([(0,u.MZ)({json:{name:"imageURL",write:!0}})],Bt.prototype,"url",void 0),Bt=(0,r._)([(0,c.$)("esri.rest.support.ImageUrlResult")],Bt);const Ht=Bt,kt=new De.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let Qt=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,i){e?.length&&(t.geometryType=(0,ce.$B)(e[0]),t.geometries=e.map((e=>e.toJSON())))}};(0,r._)([(0,u.MZ)({types:[Fe.yR]})],Qt.prototype,"geometries",void 0),(0,r._)([(0,m.K)("geometries")],Qt.prototype,"writeGeometries",null),(0,r._)([(0,u.MZ)({type:k.A,json:{write:!0}})],Qt.prototype,"mosaicRule",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],Qt.prototype,"pixelSize",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Qt.prototype,"constantZ",void 0),(0,r._)([(0,u.MZ)({type:kt.apiValues,json:{read:kt.read,write:kt.write}})],Qt.prototype,"baseType",void 0),Qt=(0,r._)([(0,c.$)("esri.rest.support.ImageVolumeParameters")],Qt);const Kt=Qt;let Wt=class extends A.A{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};(0,r._)([(0,u.MZ)({json:{write:!0}})],Wt.prototype,"area",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Wt.prototype,"cut",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Wt.prototype,"fill",void 0),(0,r._)([(0,u.MZ)({json:{name:"maxz",write:!0}})],Wt.prototype,"maxZ",void 0),(0,r._)([(0,u.MZ)({json:{name:"minz",write:!0}})],Wt.prototype,"minZ",void 0),(0,r._)([(0,u.MZ)({json:{name:"meanz",write:!0}})],Wt.prototype,"meanZ",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Wt.prototype,"cutCellCount",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],Wt.prototype,"fillCellCount",void 0),Wt=(0,r._)([(0,c.$)("esri.rest.support.ImageVolume")],Wt);const Xt=Wt;let Yt=class extends A.A{constructor(){super(...arguments),this.volumes=[]}};(0,r._)([(0,u.MZ)({type:[Xt],json:{write:!0}})],Yt.prototype,"volumes",void 0),Yt=(0,r._)([(0,c.$)("esri.rest.support.ImageVolumeResult")],Yt);const ei=Yt;let ti=class extends(n.A.ClonableMixin(A.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]=JSON.stringify(e))}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{read:ce.rS,write:!0}})],ti.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],ti.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],ti.prototype,"rasterId",void 0),(0,r._)([(0,u.MZ)({json:{name:"options.VisibleOnly",write:!0}})],ti.prototype,"visibleOnly",void 0),ti=(0,r._)([(0,c.$)("esri.rest.support.MapToImageParameters")],ti);const ii=ti;let ri=class extends A.A{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),ye.A.fromJSON(e)}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"Shape",read:ce.rS,write:!0}})],ri.prototype,"geometry",void 0),(0,r._)([(0,u.MZ)({json:{name:"Length",write:!0}})],ri.prototype,"length",void 0),(0,r._)([(0,u.MZ)({json:{name:"Area",write:!0}})],ri.prototype,"area",void 0),(0,r._)([(0,u.MZ)({type:ye.A,json:{name:"Center",write:!0}})],ri.prototype,"center",void 0),(0,r._)([(0,R.w)("center")],ri.prototype,"readCenter",null),ri=(0,r._)([(0,c.$)("esri.rest.support.MeasureAreaFromImageResult")],ri);const si=ri;var ni;let oi=ni=class extends A.A{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ce.$B)(e),t[i]={...e.toJSON(),spatialReference:void 0})}clone(){const e=(0,g.o8)({geometry:this.geometry,rasterId:this.rasterId});return new ni(e)}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"fromGeometry",read:ce.rS,write:!0}})],oi.prototype,"geometry",void 0),(0,r._)([(0,m.K)("geometry")],oi.prototype,"writeGeometry",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],oi.prototype,"rasterId",void 0),oi=ni=(0,r._)([(0,c.$)("esri.rest.support.MeasureFromImageParameters")],oi);const ai=oi;let li=class extends A.A{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,r._)([(0,u.MZ)({types:Fe.yR,json:{name:"Shape",read:ce.rS,write:!0}})],li.prototype,"geometry",void 0),(0,r._)([(0,u.MZ)({json:{name:"Length",write:!0}})],li.prototype,"length",void 0),li=(0,r._)([(0,c.$)("esri.rest.support.MeasureLengthFromImageResult")],li);const ui=li;function pi(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function ci(e,t,i){t=(0,v.PZ)(gt.A,t);const r=(0,de.Dl)(e),s=t.geometry?[t.geometry]:[],n=await(0,me.el)(s),o=t.toJSON();pi(o);const a=n?.[0];null!=a&&(o.geometry=hi(a));const l=(0,de.lF)({...r.query,f:"json",...o});return(0,de.jV)(l,i)}async function mi(e,t,i){t=(0,v.PZ)(wt,t);const r=(0,de.Dl)(e),s=t.geometry?[t.geometry]:[];return(0,me.el)(s).then((e=>{const s=t.toJSON(),n=e?.[0];null!=n&&(s.geometry=JSON.stringify(hi(n)));const o=(0,de.lF)({...r.query,f:"json",...s}),a=(0,de.jV)(o,i);return(0,h.A)(r.path+"/identify",a)})).then((e=>_t.fromJSON(e.data)))}async function di(e,t,i,r){const s=(0,de.Dl)(e),n=await(0,me.el)(i),o=t.toJSON();null!=n[0]&&(o.fromGeometry=JSON.stringify(hi(n[0]))),null!=n[1]&&(o.toGeometry=JSON.stringify(hi(n[1])));const a=(0,de.lF)({...s.query,f:"json",...o}),l=(0,de.jV)(a,r),{data:u}=await(0,h.A)(s.path+"/measure",l);return u}async function yi(e,t,i){t=(0,v.PZ)(ai,t);const r=(0,de.Dl)(e),s=t.toJSON(),n=(0,de.lF)({...r.query,f:"json",...s}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(r.path+"/measureFromImage",o);return a}function hi(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=gi(e.spatialReference)),t}function gi(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function fi(e,t){if(!e.imageCoordinateSystem)return(0,I.YX)(e);const i=gi(e),{icsid:r,icsns:s}=i;return null==r||null!=s&&!t?.toLowerCase().includes("/"+s.toLowerCase()+"/")?JSON.stringify(i):`0:${r}`}var wi=i(25213),vi=i(49653);var Ri=i(37713),_i=i(53104),bi=i(14009),Si=i(97015),Ii=i(46533);const xi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Mi=(0,v.Qp)(v.GB,{min:0,max:255});const Ai=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new K({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new X.A(this.fields):null}set format(e){e&&xi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=k.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?k.A.fromJSON(i):this._isMosaicRuleSupported(t)?k.A.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const s=this.definitionExpression;r?s&&s!==r.where&&(r=r.clone(),r.where=s):s&&(r=new k.A({where:s})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Mi(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i?.name}return e}get parsedUrl(){return(0,w.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=t?.find((({name:t})=>t===e));return i?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,s=(0,pe.LF)(r,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!r.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),V(s)||p.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map((e=>e.clone()))??[];e.push((0,ie.rZ)()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push((0,ie.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((({name:e})=>"none"===e.toLowerCase()))&&e.push((0,ie.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((({name:e})=>"none"!==e.toLowerCase())).forEach((({name:t})=>e.push((0,ie.nq)(t))));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const i=t?.multidimensionalInfo?.variables[0].unit?.trim(),r=(0,ie.DV)(i),s=(0,ie.y6)();e.push(r,s)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){const i=(0,ie.AL)(t.multidimensionalInfo);e.push(...i)}const i=t?.attributeTable;if(null!=i){const t=(0,ie.jC)(i);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=F.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?F.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?S.A.fromJSON(i):null}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=Q.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:s,pixelFilter:n,bandIds:o}=this;if(!this._isPicture()&&r&&s&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),a=this._rasterJobHandler.instance;if(a){n&&(s.bind(),await a.updateSymbolizer(s,t),this._cachedRendererJson=r.toJSON());const l=await a.symbolize({bandIds:o,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:s.symbolize({bandIds:o,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new o.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,g.o8)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),async function(e,t,i){const r=(t=(0,v.PZ)(Kt,t)).toJSON();r.geometries=JSON.stringify(r.geometries);const s=(0,de.Dl)(e),n=(0,de.lF)({...s.query,f:"json",...r}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(`${s.path}/calculateVolume`,o);return ei.fromJSON({volumes:a.results})}(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new o.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(Ie,t)).toJSON();null!=r.angleName&&(r.angleName=r.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(r.point.spatialReference=gi(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(r.spatialReference=fi(t.spatialReference));const s=(0,de.Dl)(e),n=(0,de.lF)({...s.query,f:"json",...r}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(`${s.path}/computeAngles`,o);return a.spatialReference=a.spatialReference?null!=a.spatialReference.geodataXform?new S.A({wkid:0,imageCoordinateSystem:a.spatialReference}):S.A.fromJSON(a.spatialReference):null,"NaN"===a.north&&(a.north=null),"NaN"===a.up&&(a.up=null),new Me(a)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new o.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(It,t)).toJSON(),{geometries:s}=t;if(s)for(let u=0;u<s.length;u++)s[u].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[u].spatialReference=gi(s[u].spatialReference));const n=(0,de.Dl)(e),o=(0,de.lF)({...n.query,f:"json",...r}),a=(0,de.jV)(o,i),{data:l}=await(0,h.A)(`${n.path}/computePixelLocation`,a);return Mt.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new o.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ci(e,t,i),s=(0,de.Dl)(e),{data:n}=await(0,h.A)(`${s.path}/computeHistograms`,r);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new o.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ci(e,t,i),s=(0,de.Dl)(e),{data:n}=await(0,h.A)(`${s.path}/computeStatisticsHistograms`,r),{statistics:o}=n;return o?.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new o.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,v.PZ)(mt,t);const r=await di(e,t,[t.fromGeometry,t.toGeometry],i);return yt.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new o.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,v.PZ)(Je,t);const r=await di(e,t,[t.geometry],i);return $e.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new o.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,v.PZ)(Ke,t);const r=await di(e,t,[t.fromGeometry,t.toGeometry],i);return Xe.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new o.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,g.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,v.PZ)(Dt,t);const r=await di(e,t,[t.geometry],i);return Tt.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new o.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,i){const r=await yi(e,t,i);return ui.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new o.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,i){const r=await yi(e,t,i);return si.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r,s={}){if(null==e||null==t||null==r)throw new o.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:s.signal});e&&(this.rasterInfo=e)}const n=this.getExportImageServiceParameters(e,t,r,s.timeExtent);if(null==n){if(s.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,s.returnImageBitmap?{imageBitmap:await(0,Y.m)(e,`${i(this.parsedUrl)}/exportImage`,s.signal)}:{imageOrCanvasElement:e}}const{bandIds:n,rasterInfo:o}=this,a=(n?.length||o.bandCount)??0,l=t*r,u=o.pixelType,p=[];for(let e=0;e<a;e++)p.push(te.A.createEmptyBand(u,l));return{pixelData:{pixelBlock:new te.A({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const a=!!s.requestAsImageElement&&!this.pixelFilter,l=a&&!!s.returnImageBitmap,u={imageServiceParameters:n,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a,returnImageBitmap:l,signal:s.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return(0,h.A)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,h.A)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>vt.A.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,i){const r=(0,de.Dl)(e),s=(0,de.lF)({...r?.query,f:"json"}),n=(0,de.jV)(s,i),o=`${r?.path}/${t}/info`,a=(0,h.A)(`${o}`,n),l=(0,h.A)(`${o}/keyProperties`,n),u=await Promise.allSettled([a,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let m=null;p.statistics?.length&&(m=p.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const d=_.A.fromJSON(p.extent),y=Math.ceil(d.width/p.pixelSizeX-.1),g=Math.ceil(d.height/p.pixelSizeY-.1),f=d.spatialReference,w=new ye.A({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:f}),v=p.histograms?.length?p.histograms:null,R=new vi.A({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new re.A({width:y,height:g,bandCount:p.bandCount,extent:d,spatialReference:f,pixelSize:w,pixelType:p.pixelType.toLowerCase(),statistics:m,histograms:v,keyProperties:c,storageInfo:R})}(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,h.A)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),s=r?.ics;if(!s)return;let n=null;try{n=(await(0,h.A)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n?.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,h.A)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:(0,I.YX)(a),outSR:"0:"+e},u=(0,h.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=(n.xmin+n.xmax)/2,c=(n.ymax-n.ymin)/6,m=n.ymin+c,d=[];for(let i=0;i<5;i++)d.push({x:p,y:m+c*i});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,I.YX)(a),outSR:"0:"+e},g=(0,h.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),f=await Promise.all([o,u,g]);let w=f[0].ipxf;if(null==w){const e=s.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(w={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=_.A.fromJSON(f[1]?.geometries?.[0]);v&&(v.spatialReference=new S.A({wkid:0,imageCoordinateSystem:s}));const R=f[2].geometries?f[2].geometries.filter((e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],b=R.length;if(b<3)return{ics:s,icsToPixelTransform:w,icsExtent:v,northDirection:null};let x=0,M=0,A=0,F=0;for(let i=0;i<b;i++)x+=R[i].x,M+=R[i].y,A+=R[i].x*R[i].x,F+=R[i].x*R[i].y;const D=(b*F-x*M)/(b*A-x*x);let N=0;const T=R[4].x>R[0].x,j=R[4].y>R[0].y;return D===1/0?N=j?90:270:0===D?N=T?0:180:D>0?N=T?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+180:D<0&&(N=j?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI),{ics:s,icsToPixelTransform:w,icsExtent:v,northDirection:N}}async generateRasterInfo(e,t){e=(0,v.PZ)(F.A,e);const r={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,wi.Tw)(i(this.parsedUrl),this.sourceJSON,r);const s=function(e){const t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),r=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),s=r?.map((e=>i?e.slice(8,-18):e.slice(18,-1)));return s?s.join("/"):null}(e);if(!s)throw new o.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const n=(0,wi.X6)(i(this.parsedUrl),e,r);this._functionRasterInfos[s]=n;try{return await n}catch(Ze){throw this._functionRasterInfos[s]=null,Ze}}getExportImageServiceParameters(e,t,r,s){const n=fi((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl)),o=this.exportImageServiceParameters.toJSON(),{bandIds:a,noData:l}=o;let{renderingRule:u}=o;const p=this.rasterFunction?.rasterFunctionDefinition,c=this.renderer?.type,m=!c||"raster-stretch"===c||"raster-colormap"===c||"unique-value"===c||"class-breaks"===c||"raster-shaded-relief"===c;if(a?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&m){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:a}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;o.bandIds=void 0}else o.bandIds=a?.join(",");Array.isArray(l)&&l.length>0&&(o.noData=l.join(","));const d=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;o.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null,s=d.timeExtent,o.renderingRule=this._getRenderingRuleString(F.A.fromJSON(u));const y={};if(null!=s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?y.time=""+e:null==e&&null==t||(y.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...o,...y}}async getSamples(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i?.operations.supportsGetSamples)throw new o.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,g.o8)(e);const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),async function(e,t,i){const r=(t=(0,v.PZ)(Zt,t)).toJSON();pi(r),r.outFields?.length&&(r.outFields=r.outFields.join(","));const s=await(0,me.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=hi(n));const o=(0,de.Dl)(e),a=(0,de.lF)({...o.query,f:"json",...r}),l=(0,de.jV)(a,i),{data:u}=await(0,h.A)(`${o.path}/getSamples`,l),p=u.samples.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return Jt.fromJSON({samples:p})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new o.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,g.o8)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=b.A.fromExtent(e.geometry));const i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new o.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;const{raster:r,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),r&&null==e.raster&&(e.raster=r),mi(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new o.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)($t,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(r.geometry=hi(t.geometry)),t.depthOffset&&t.adjust||delete r.options;const s=(0,de.Dl)(e),n=(0,de.lF)({...s.query,f:"json",...r}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(`${s.path}/imageToMap`,o);return(0,ce.rS)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new o.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(Gt,t)).toJSON();t.rasterIds?.length&&(r.rasterIds=t.rasterIds.join(","));const s=(0,de.Dl)(e),n=(0,de.lF)({...s.query,f:"json",...r}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(`${s.path}/imageToMapMultiray`,o);return(0,ce.rS)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new o.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(ii,t)).toJSON(),s=await(0,me.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=hi(n)),t.visibleOnly||delete r.options;const o=n?.spatialReference??t.geometry?.spatialReference;o&&(r.inSR=fi(o));const a=(0,de.Dl)(e),l=(0,de.lF)({...a.query,f:"json",...r}),u=(0,de.jV)(l,i),{data:p}=await(0,h.A)(`${a.path}/mapToImage`,u);return(0,ce.rS)(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new o.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(ge,t)).toJSON(),s=await(0,me.el)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(r.fromGeometry=hi(s[0]),s[0].spatialReference&&(r.inSR=fi(s[0].spatialReference))),null!=s[1]&&(r.toGeometry=hi(s[1])),t.objectIds?.length&&(r.objectIds=r.objectIds.join(","));const n=(0,de.Dl)(e),o=(0,de.lF)({...n.query,f:"json",...r}),a=(0,de.jV)(o,i),{data:l}=await(0,h.A)(`${n.path}/find`,a);return _e.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new o.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,i){const r=(t=(0,v.PZ)(Ut,t)).toJSON(),s=(0,de.Dl)(e),n=(0,de.lF)({...s.query,f:"json",...r}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(`${s.path}/getImageUrl`,o);return Ht.fromJSON(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new Si.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new o.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},async function(e,t,i){t=(0,v.PZ)(Ue,t);const r=(0,de.Dl)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=fi(t.outSpatialReference));const n=(0,de.lF)({...r.query,f:"json",...s}),o=(0,de.jV)(n,i),{data:a}=await(0,h.A)(r.path+"/queryBoundary",o);return He.fromJSON(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,bi.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,_i.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new o.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},async function(e,t,i){const r=(t=(0,v.PZ)(rt,t)).toJSON();pi(r),r.objectIds?.length&&(r.objectIds=r.objectIds.join(",")),r.geometry||r.objectIds||r.time||r.where||(r.where="1=1");const s=await(0,me.el)(t.geometry),n=s?.[0];null!=n&&(r.geometry=hi(n));const o=n?.spatialReference??t.geometry?.spatialReference;o&&(r.inSR=fi(o));const a=(0,de.Dl)(e),l=(0,de.lF)({...a.query,f:"json",...r}),u=(0,de.jV)(l,i),{data:p}=await(0,h.A)(`${a.path}/queryGPSInfo`,u);return ut.fromJSON(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Ri.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new o.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const p=ie.F_.servicePixelValue.toLowerCase(),c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(a=e.outFields.some((e=>!e.toLowerCase().startsWith(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().startsWith(p)&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new F.A({functionName:e[0]}))),u=t.map((e=>e[1]));const{rasterFunction:i}=this;0===l.length?i?.functionName?(l.push(i),u.push(i.functionName)):l=null:i?.functionName&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let y=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:i}=(0,ne.Rp)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new o.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=i?.timeExtent&&(y=i.timeExtent)}const h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=b.A.fromExtent(g));const f=this._getQueryParams({geometry:g,timeExtent:y,mosaicRule:h,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:i,returnCatalogItems:a,returnGeometry:m,raster:this.raster,maxItemCount:s?1:null});delete f.f;const w=new wt(f);try{await this._generateRasterInfo(this.rasterFunction);const i=await mi(this.url,w,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=i.value&&i.value.toLowerCase().includes("nodata"),l=a&&!m&&i?.catalogItems?.features.length&&(n||!o),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,ne.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:h?.multidimensionalDefinition,timeExtent:y,multidimensionalSubset:this.multidimensionalSubset}):null;if(!l)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p});const c=this.objectIdField||"ObjectId",d=i.catalogItems?.features??[],g=d.map((e=>e.attributes?.[c])),f=new Si.A({objectIds:g,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),v=await this.queryRasters(f);return v?.features?.length&&v.features.forEach((t=>{d.forEach((i=>{i.attributes[c]===t.attributes[c]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s,effectiveMultidimensionalDefinition:p})}catch{throw new o.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,h.A)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),s=(0,h.A)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([r,s]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,Ii.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,ne.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,wi.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,wi.E9)(e,t),e))),s=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,s,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),p.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,f.wB)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(null==e||null==r||null==t||null==i?.startField)return e;const{startField:s}=i,n=r.variables.some((e=>e.dimensions.some((e=>e.name===s))))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),a=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==a||null==l||a===l,p=u?[a||l]:[[a,l]],c=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===n&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new M.A({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new o.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,v.PZ)(Si.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new se.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,le.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:s}=await(0,h.A)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,s&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new o.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),s=i?.ResampleType||i?.resampleType;return r&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,r=(0,le.I8)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){const e=r?.bandIds??(0,le.ci)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=r?.renderer??(0,le.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const s=(0,le.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=i):this.symbolizer=new ue.A({rendererJSON:s,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,oe.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const r=await(0,h.A)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:s,signal:n}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${i(this.parsedUrl)}/exportImage`,{data:o}=await(0,h.A)(r,{responseType:s?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return o instanceof Blob?{imageBitmap:await(0,Y.m)(o,r,n),params:t}:{imageOrCanvasElement:o,params:t}}const a=this._initJobHandler(),l=(0,h.A)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([l,a]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,oe.g)(u)),!c)throw new o.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:n},d="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,oe.D)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ne.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new k.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t)),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:s,returnDomainValues:n,templateFields:o}=t,a=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map((e=>e.replaceAll(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof i&&i.toLowerCase().includes("nodata"),m=[];if(i&&!l&&!c){const e={};e[p]=0,u=[i],l=[new y.A({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,ie.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!l)return[];this._updateResponseFieldNames(l,o),c&&!s&&(l=[]);const{itemPixelValue:d,servicePixelValue:h}=ie.F_,g=this.rasterFields.some((e=>e.name===d));for(let y=0;y<l.length;y++){const e=l[y];if(null!=i){const t=u[y],n=this.rasterFunction&&a&&a.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?a[r.indexOf(this.rasterFunction.functionName)]:i;if("nodata"===t.toLowerCase()&&!s)continue;g&&(e.attributes[d]=t),e.attributes[h]=n,this._updateFeatureWithMagDirValues(e,t);const o=this.fields&&this.fields.length>0;let l=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?o?t:i:n;this.rasterFunction||(l=o?t:i),this._updateFeatureWithRasterAttributeTableValues(e,l)}if(e.sourceLayer=e.layer=this,n&&this._updateFeatureWithDomainValues(e),r&&a&&r.length===a.length)for(let t=0;t<r.length;t++){const i=`${ie.F_.servicePixelValue}.${r[t]}`;e.attributes[i]=a[t]}m.push(l[y])}return m}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){const{isOutside:i,intersection:s}=(0,ne.Rp)(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=s?.timeExtent&&(t=s.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){const{isOutside:e}=(0,ne.Rp)(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:s}=i,n=s.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!n)return;const o=r.filter((e=>e.attributes[n]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const i=ie.ER+t.name;e.attributes[i]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),s=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new te.A({height:1,width:1,pixelType:"f32",pixels:r,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new _.A(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,ae.Lu)([n.pixels[0][0],n.pixels[1][0]]);e.attributes[ie.F_.magnitude]=o[0],e.attributes[ie.F_.direction]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(e?.attributes)for(const r of t){const t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_applyMosaicRule(e){const{raster:t,mosaicRule:i}=this;i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:s}=e,n=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&a,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),c=u&&p.includes("basic"),m=this._isMosaicDataset(e)&&t.includes("catalog"),d=t.includes("download"),y=i>=10.7&&o||i>=11.4&&(o||u&&p.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsImageToMap:i>=11.2&&m,supportsImageToMapMultiray:i>=11.2&&m,supportsMapToImage:i>=11.2&&m,supportsFindImages:i>=11.2&&m,supportsGetImageUrl:i>=11.3&&d,supportsMeasure:u,supportsMeasureFromImage:i>=11.2,supportsDownload:d,supportsQuery:m&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:y,supportsComputePixelLocation:i>=10.7&&m,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&m,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}};function i(e){return e?.path??""}return(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,r._)([(0,R.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,r._)([(0,u.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,r._)([(0,u.MZ)({type:[v.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,r._)([(0,R.w)("bandIds")],t.prototype,"readBandIds",null),(0,r._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,r._)([(0,R.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,r._)([(0,u.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,r._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,r._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,r._)([(0,R.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,r._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"rasterInfo",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,type:[W.A]})],t.prototype,"fields",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,r._)([(0,u.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,r._)([(0,R.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,r._)([(0,u.MZ)({type:_.A})],t.prototype,"fullExtent",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,r._)([(0,u.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,r._)([(0,u.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,r._)([(0,u.MZ)({type:String,json:{type:Q.SZ.jsonValues,read:Q.SZ.read,write:Q.SZ.write}})],t.prototype,"interpolation",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"minScale",void 0),(0,r._)([(0,R.w)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,u.MZ)()],t.prototype,"maxScale",void 0),(0,r._)([(0,R.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,u.MZ)({type:k.A})],t.prototype,"mosaicRule",null),(0,r._)([(0,R.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,r._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,r._)([(0,u.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,r._)([(0,u.MZ)({type:ee.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,u.MZ)({json:{type:v.jz}})],t.prototype,"noData",void 0),(0,r._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,r._)([(0,u.MZ)({type:String,json:{type:Q.hm.jsonValues,read:Q.hm.read,write:Q.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,r._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,r._)([(0,R.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,r._)([(0,u.MZ)({})],t.prototype,"typeIdField",void 0),(0,r._)([(0,u.MZ)({})],t.prototype,"types",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,r._)([(0,u.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"raster",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,r._)([(0,R.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,r._)([(0,u.MZ)()],t.prototype,"viewId",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"renderer",null),(0,r._)([(0,u.MZ)({types:pe.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:pe.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,r._)([(0,R.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,r._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,r._)([(0,u.MZ)(x.ke)],t.prototype,"opacity",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,r._)([(0,u.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,r._)([(0,u.MZ)({type:F.A,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,r._)([(0,R.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,type:S.A})],t.prototype,"spatialReference",void 0),(0,r._)([(0,R.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,r._)([(0,u.MZ)({type:Q.e8.apiValues,json:{read:Q.e8.read,type:Q.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,r._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,r._)([(0,u.MZ)({constructOnly:!0,type:re.A})],t.prototype,"serviceRasterInfo",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,u.MZ)(x.OZ)],t.prototype,"url",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,r._)([(0,R.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,r._)([(0,c.$)("esri.layers.mixins.ArcGISImageService")],t),t};var Fi=i(19502),Di=i(65624),Ni=i(31362),Ti=i(11270),ji=i(94729),Pi=i(8350),Oi=i(21617),Zi=i(5682),Ci=i(78817),Vi=i(38278),Ei=i(30973),Ji=i(61701);let qi=class extends((0,Di.dM)((0,Ci.e)((0,Zi.j)((0,Ti.q)((0,ji.A)((0,Pi.H)(Ai((0,Oi.J)((0,Ni.d)((0,Fi.b)((0,a.P)(n.A.ClonableMixin(d.A))))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,l.sg)((async(e,t,r)=>{const{save:s,saveAs:n}=await i.e(20964).then(i.bind(i,20964));switch(e){case Ji.X.SAVE:return s(this,t);case Ji.X.SAVE_AS:return n(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){const r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,i=new Set,r=ie.F_.itemPixelValue.toLowerCase(),s="raster-dataset"===this.sourceType,n=ie.Oo.toLowerCase(),o=`${ie.F_.servicePixelValue.toLowerCase()}.`;for(const u of t){const e=u.name.toLowerCase();e===r||e.startsWith(o)||s&&e.startsWith(n)||i.add(u.name)}const a=(0,Ei.tn)({fields:t,title:this.title},{...e,visibleFieldNames:i}),{rasterInfo:l}=this;return a?.fieldInfos&&l&&(0,ie.h4)(a.fieldInfos,l),a}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Ji.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Ji.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,Vi.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,r._)([(0,u.MZ)(x.fV)],qi.prototype,"legendEnabled",null),(0,r._)([(0,u.MZ)({type:["show","hide"]})],qi.prototype,"listMode",null),(0,r._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],qi.prototype,"isReference",void 0),(0,r._)([(0,u.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],qi.prototype,"operationalLayerType",void 0),(0,r._)([(0,m.K)("web-map","operationalLayerType")],qi.prototype,"writeOperationalLayerType",null),(0,r._)([(0,u.MZ)(x.M6)],qi.prototype,"popupEnabled",void 0),(0,r._)([(0,u.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],qi.prototype,"popupTemplate",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],qi.prototype,"defaultPopupTemplate",null),(0,r._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],qi.prototype,"type",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],qi.prototype,"_isPreviewLayer",null),qi=(0,r._)([(0,c.$)("esri.layers.ImageryLayer")],qi);const Gi=qi},20176:(e,t,i)=>{i.d(t,{N3:()=>a,Om:()=>o});var r=i(97255),s=i(90321),n=i(1484);class o{constructor(e=null,t={},i,r,s=0){this.geometry=e,this.attributes=t,this.centroid=i,this.objectId=r,this.displayId=s}static fromJSON(e){const t=e.geometry?n.A.fromJSON(e.geometry):null,i=e.centroid?n.A.fromJSON(e.centroid):null,r=e.objectId;return new o(t,e.attributes,i,r)}weakClone(){const e=new o(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new o(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=(0,s.Q)(new n.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,r.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function a(e){return!!e.geometry?.coords?.length}},75146:(e,t,i)=>{i.d(t,{A:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},90321:(e,t,i)=>{function r(e,t){return e?t?4:3:t?3:2}function s(e,t,i,s){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const a=e.coords,l=[],u=i?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:p,coords:c}=t,m=r(i,s);let d=0;for(const r of p){const e=n(u,c,d,r,i,s);e&&l.push(e),d+=r*m}if(l.sort(((e,t)=>{let r=e[2]-t[2];return 0===r&&i&&(r=e[4]-t[4]),r})),l.length){let e=6*l[0][2];a[0]=l[0][0]/e,a[1]=l[0][1]/e,i&&(e=6*l[0][4],a[2]=0!==e?l[0][3]/e:0),(a[0]<u[0]||a[0]>u[1]||a[1]<u[2]||a[1]>u[3]||i&&(a[2]<u[4]||a[2]>u[5]))&&(a.length=0)}if(!a.length){const e=t.lengths[0]?o(c,0,p[0],i,s):null;if(!e)return null;a[0]=e[0],a[1]=e[1],i&&e.length>2&&(a[2]=e[2])}return e}function n(e,t,i,s,n,o){const a=r(n,o);let l=i,u=i+a,p=0,c=0,m=0,d=0,y=0;for(let r=0,g=s-1;r<g;r++,l+=a,u+=a){const i=t[l],r=t[l+1],s=t[l+2],o=t[u],a=t[u+1],h=t[u+2];let g=i*a-o*r;d+=g,p+=(i+o)*g,c+=(r+a)*g,n&&(g=i*h-o*s,m+=(s+h)*g,y+=g),i<e[0]&&(e[0]=i),i>e[1]&&(e[1]=i),r<e[2]&&(e[2]=r),r>e[3]&&(e[3]=r),n&&(s<e[4]&&(e[4]=s),s>e[5]&&(e[5]=s))}if(d>0&&(d*=-1),y>0&&(y*=-1),!d)return null;const h=[p,c,.5*d];return n&&(h[3]=m,h[4]=.5*y),h}function o(e,t,i,s,n){const o=r(s,n);let c=t,m=t+o,d=0,y=0,h=0,g=0;for(let r=0,f=i-1;r<f;r++,c+=o,m+=o){const t=e[c],i=e[c+1],r=e[c+2],n=e[m],o=e[m+1],f=e[m+2],w=s?l(t,i,r,n,o,f):a(t,i,n,o);if(w)if(d+=w,s){const e=p(t,i,r,n,o,f);y+=w*e[0],h+=w*e[1],g+=w*e[2]}else{const e=u(t,i,n,o);y+=w*e[0],h+=w*e[1]}}return d>0?s?[y/d,h/d,g/d]:[y/d,h/d]:i>0?s?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function a(e,t,i,r){const s=i-e,n=r-t;return Math.sqrt(s*s+n*n)}function l(e,t,i,r,s,n){const o=r-e,a=s-t,l=n-i;return Math.sqrt(o*o+a*a+l*l)}function u(e,t,i,r){return[e+.5*(i-e),t+.5*(r-t)]}function p(e,t,i,r,s,n){return[e+.5*(r-e),t+.5*(s-t),i+.5*(n-i)]}i.d(t,{Q:()=>s})},8350:(e,t,i)=>{i.d(t,{H:()=>d});var r=i(35143),s=i(46053),n=(i(81806),i(76460),i(47249),i(85842)),o=i(69098),a=i(42553),l=i(40565),u=i(6409),p=i(88205);let c=class extends(o.A.ClonableMixin(a.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],c.prototype,"method",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"value",void 0),(0,r._)([(0,s.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],c.prototype,"bandIds",void 0),(0,r._)([(0,s.MZ)({types:p.uy,json:{write:!0,origins:{"web-scene":{types:p.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],c.prototype,"renderer",void 0),c=(0,r._)([(0,n.$)("esri.renderers.support.RasterPresetRenderer")],c);const m=c,d=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,r._)([(0,s.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,r._)([(0,s.MZ)({type:[m],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,r._)([(0,n.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},16852:(e,t,i)=>{i.d(t,{C:()=>o,m:()=>n});var r=i(50076),s=i(50346);async function n(e,t,i){let n;try{n=await createImageBitmap(e)}catch(o){throw new r.A("request:server",`Unable to load ${t}`,{url:t,error:o})}return(0,s.Te)(i),n}async function o(e,t,i,n,o){let a;try{a=await createImageBitmap(e)}catch(l){throw new r.A("request:server",`Unable to load tile ${t}/${i}/${n}`,{error:l,level:t,row:i,col:n})}return(0,s.Te)(o),a}},25213:(e,t,i)=>{i.d(t,{E9:()=>y,Tw:()=>m,X6:()=>d});var r=i(3825),s=i(76797),n=i(19247),o=i(13312),a=i(23032),l=i(49653),u=i(54994),p=i(77725);async function c(e,t,i){const c=(0,u.Dl)(e),{rasterFunction:m,sourceJSON:d}=t||{},y=m?JSON.stringify(m.rasterFunctionDefinition||m):null,h=(0,u.lF)({...c.query,renderingRule:y,f:"json"}),g=(0,u.jV)(h,i);e=c.path;const f=d||await(0,r.A)(e,g).then((e=>e.data)),w=f.hasRasterAttributeTable?(0,r.A)(`${e}/rasterAttributeTable`,g):null,v=f.hasColormap?(0,r.A)(`${e}/colormap`,g):null,R=f.hasHistograms?(0,r.A)(`${e}/histograms`,g):null,_=f.currentVersion>=10.3?(0,r.A)(`${e}/keyProperties`,g):null,b=f.hasMultidimensions?(0,r.A)(`${e}/multidimensionalInfo`,g):null,S=await Promise.allSettled([w,v,R,_,b]);let I=null;if(f.minValues&&f.minValues.length===f.bandCount){I=[];for(let e=0;e<f.minValues.length;e++)I.push({min:f.minValues[e],max:f.maxValues[e],avg:f.meanValues[e],stddev:f.stdvValues[e]})}const x=s.A.fromJSON(f.extent),M=Math.ceil(x.width/f.pixelSizeX-.1),A=Math.ceil(x.height/f.pixelSizeY-.1),F=o.A.fromJSON(f.spatialReference||f.extent.spatialReference),D="fulfilled"===S[0].status?S[0].value?.data:null,N=D?.features?.length?p.A.fromJSON(D):null,T="fulfilled"===S[1].status?S[1].value?.data.colormap:null,j=T?.length?T:null,P="fulfilled"===S[2].status?S[2].value?.data.histograms:null,O=P?.[0]?.counts?.length?P:null,Z="fulfilled"===S[3].status?S[3].value?.data??{}:{},C="fulfilled"===S[4].status?S[4].value?.data.multidimensionalInfo:null,V=C?.variables?.length?C:null;V&&V.variables.forEach((e=>{e.statistics?.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),e.dimensions?.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:E,serviceDataType:J}=f;E&&E!==Z.DefaultVariable&&(Z.DefaultVariable=E),J?.includes("esriImageServiceDataTypeVector")&&!J.includes(Z.DataType)&&(Z.DataType=J.replace("esriImageServiceDataType",""));let q=f.noDataValue;f.noDataValues?.length&&f.noDataValues.some((e=>e!==q))&&(q=f.noDataValues);const G=f.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new n.A({x:f.extent.xmin,y:f.extent.ymax,spatialReference:F}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(M,A))/Math.LN2-8)),transposeInfo:f.transposeInfo}):void 0;return new a.A({width:M,height:A,bandCount:f.bandCount,extent:s.A.fromJSON(f.extent),spatialReference:F,pixelSize:new n.A({x:f.pixelSizeX,y:f.pixelSizeY,spatialReference:F}),pixelType:f.pixelType.toLowerCase(),statistics:I,attributeTable:N,colormap:j,histograms:O,keyProperties:Z,noDataValue:q,multidimensionalInfo:V,storageInfo:G})}function m(e,t,i){return c(e,{sourceJSON:t},i)}function d(e,t,i){return c(e,{rasterFunction:t},i)}function y(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},78238:(e,t,i)=>{function r(e){const t={};for(const i in e){if("declaredClass"===i)continue;const s=e[i];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){t[i]=[];for(let e=0;e<s.length;e++)t[i][e]=r(s[e])}else"object"==typeof s?s.toJSON&&(t[i]=JSON.stringify(s)):t[i]=s}return t}i.d(t,{z:()=>r})},37713:(e,t,i)=>{i.d(t,{I:()=>o});var r=i(54994),s=i(36643),n=i(97015);async function o(e,t,i){const o=(0,r.Dl)(e),{data:a}=await(0,s.gW)(o,n.A.from(t),i);return a.count}},53104:(e,t,i)=>{i.d(t,{V:()=>o});var r=i(54994),s=i(36643),n=i(97015);async function o(e,t,i){const o=(0,r.Dl)(e),{data:a}=await(0,s.Pk)(o,n.A.from(t),i);return a.objectIds??[]}},14009:(e,t,i)=>{i.d(t,{e:()=>l,s:()=>a});var r=i(54994),s=i(36643),n=i(77725),o=i(97015);async function a(e,t,i){const r=await l(e,t,i);return n.A.fromJSON(r)}async function l(e,t,i){const n=(0,r.Dl)(e),a={...i},l=o.A.from(t),{data:u}=await(0,s.eW)(n,l,l.sourceSpatialReference,a);return u}},36643:(e,t,i)=>{i.d(t,{IJ:()=>y,Jf:()=>w,Pk:()=>g,eW:()=>d,gW:()=>f,kS:()=>h});var r=i(3825),s=i(90534),n=i(19902),o=i(1438),a=i(80963),l=i(78238),u=i(89122),p=i(57831);const c="Layer does not support extent calculation.";function m(e,t){const i=e.geometry,r=e.toJSON();delete r.compactGeometryEnabled,delete r.defaultSpatialReferenceEnabled;const s=r;let o,l,u;if(null!=i&&(l=i.spatialReference,u=(0,a.YX)(l),s.geometryType=(0,n.$B)(i),s.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(i,e.compactGeometryEnabled),s.inSR=u),r.groupByFieldsForStatistics&&(s.groupByFieldsForStatistics=r.groupByFieldsForStatistics.join(",")),r.objectIds&&(s.objectIds=r.objectIds.join(",")),r.orderByFields&&(s.orderByFields=r.orderByFields.join(",")),!r.outFields||!r.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete s.outFields:r.outFields.includes("*")?s.outFields="*":s.outFields=r.outFields.join(","),r.outSR?(s.outSR=(0,a.YX)(r.outSR),o=e.outSpatialReference):i&&(r.returnGeometry||r.returnCentroid)&&(s.outSR=s.inSR,o=l),r.returnGeometry&&delete r.returnGeometry,r.outStatistics&&(s.outStatistics=JSON.stringify(r.outStatistics)),r.fullText&&(s.fullText=JSON.stringify(r.fullText)),r.pixelSize&&(s.pixelSize=JSON.stringify(r.pixelSize)),r.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=l&&null!=e.quantizationParameters?.extent&&l.equals(e.quantizationParameters.extent.spatialReference)&&delete r.quantizationParameters.extent.spatialReference,s.quantizationParameters=JSON.stringify(r.quantizationParameters)),r.parameterValues&&(s.parameterValues=JSON.stringify(r.parameterValues)),r.rangeValues&&(s.rangeValues=JSON.stringify(r.rangeValues)),r.dynamicDataSource&&(s.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r.timeExtent){const e=r.timeExtent,{start:t,end:i}=e;null==t&&null==i||(s.time=t===i?t:`${t??"null"},${i??"null"}`),delete r.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=l&&null!=o&&l.equals(o)&&(s.defaultSR=s.inSR,delete s.inSR,delete s.outSR),s}async function d(e,t,i,r){const s=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await v(e,t,"json",r);return(0,p.q)(t,i,s.data),s}async function y(e,t,i,r){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:i.createFeatureResult()};const s=await h(e,t,r),n=s;return n.data=(0,u.m)(s.data,i),n}function h(e,t,i){return v(e,t,"pbf",i)}function g(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):v(e,t,"json",i,{returnIdsOnly:!0})}function f(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):v(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0})}async function w(e,t,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const r=await v(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),s=r.data;if(s.hasOwnProperty("extent"))return r;if(s.features)throw new Error(c);if(s.hasOwnProperty("count"))throw new Error(c);return r}async function v(e,t,i,n={},a={}){const u="string"==typeof e?(0,s.An)(e):e,p=t.geometry?[t.geometry]:[],c=await(0,o.el)(p,null,{signal:n.signal}),d=c?.[0];null!=d&&((t=t.clone()).geometry=d);const y=(0,l.z)({...u.query,f:i,...a,...m(t,a)});return(0,r.A)((0,s.fj)(u.path,(h=a,null==t.formatOf3DObjects||h.returnCountOnly||h.returnExtentOnly||h.returnIdsOnly?"query":"query3d")),{...n,responseType:"pbf"===i?"array-buffer":"json",query:{...y,...n.query}});var h}}}]);
//# sourceMappingURL=72296.9d6615e3.chunk.js.map