"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[1657],{51657:(e,t,n)=>{n.r(t),n.d(t,{default:()=>F});var s=n(76200),i=n(14921),r=n(10064),o=n(32718),a=n(92026),u=n(66978),l=n(77981),c=n(92975),d=n(83406),p=n(97114),y=n(19995),h=n(14e3),f=n(47615),g=n(63543),m=n(68808),_=n(52410),b=n(85249),w=n(80031);const I={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class F{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._loadOptions={url:e.url,customParameters:e.customParameters};const n=[];await this._checkProjection(e.spatialReference);let s=null;e.url&&(s=await this._fetch(t?.signal));const i=(0,f.my)(s,{geometryType:e.geometryType}),o=e.fields||i.fields||[],a=null!=e.hasZ?e.hasZ:i.hasZ,u=i.geometryType;let l=e.objectIdField||i.objectIdFieldName||"__OBJECTID";const d=e.spatialReference||c.Zn;let y=e.timeInfo;o===i.fields&&i.unknownFields.length>0&&n.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:i.unknownFields}});let m=new _.Z(o).get(l);m?("esriFieldTypeString"!==m.type&&(m.type="esriFieldTypeOID"),m.editable=!1,m.nullable=!1,l=m.name):(m={alias:l,name:l,type:"string"===i.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(m));const F={};for(const c of o){if(null==c.name&&(c.name=c.alias),null==c.alias&&(c.alias=c.name),!c.name)throw new r.Z("geojson-layer:invalid-field-name","field name is missing",{field:c});if(!b.v.jsonValues.includes(c.type))throw new r.Z("geojson-layer:invalid-field-type",`invalid type for field "${c.name}"`,{field:c});if(c.name!==m.name){const e=(0,w.os)(c);void 0!==e&&(F[c.name]=e)}}this._fieldsIndex=new _.Z(o);const E=this._fieldsIndex.requiredFields.indexOf(m);if(E>-1&&this._fieldsIndex.requiredFields.splice(E,1),y){if(y.startTimeField){const e=this._fieldsIndex.get(y.startTimeField);e?(y.startTimeField=e.name,e.type="esriFieldTypeDate"):y.startTimeField=null}if(y.endTimeField){const e=this._fieldsIndex.get(y.endTimeField);e?(y.endTimeField=e.name,e.type="esriFieldTypeDate"):y.endTimeField=null}if(y.trackIdField){const e=this._fieldsIndex.get(y.trackIdField);e?y.trackIdField=e.name:(y.trackIdField=null,n.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:y}}))}y.startTimeField||y.endTimeField||(n.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:y}}),y=null)}const T=u?(0,g.bU)(u):void 0,S={warnings:n,featureErrors:[],layerDefinition:{...I,drawingInfo:T??void 0,templates:(0,g.Hq)(F),extent:void 0,geometryType:u,objectIdField:l,fields:o,hasZ:!!a,timeInfo:y}};this._queryEngine=new h.q({fields:o,geometryType:u,hasM:!1,hasZ:a,objectIdField:l,spatialReference:d,timeInfo:y,featureStore:new p.Z({geometryType:u,hasM:!1,hasZ:a}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,g.Dm)(F,l);const q=await this._createFeatures(s);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,q);const j=this._normalizeFeatures(q,S.warnings,S.featureErrors);this._queryEngine.featureStore.addMany(j);const{fullExtent:v,timeExtent:x}=await this._queryEngine.fetchRecomputedExtents();if(S.layerDefinition.extent=v,x){const{start:e,end:t}=x;S.layerDefinition.timeInfo.timeExtent=[e,t]}return S}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([(0,m.b)(t,n),(0,y._W)(e.adds,t),(0,y._W)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,i.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,u.D_)(e)||o.Z.getLogger("esri.layers.GeoJSONLayer").error(new r.Z("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:n}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:n,objectIdField:s}=this._queryEngine,i=(0,f.lG)(e,{geometryType:t,hasZ:n,objectIdField:s});if(!(0,c.fS)(this._queryEngine.spatialReference,c.Zn))for(const r of i)(0,a.pC)(r.geometry)&&(r.geometry=(0,d.GH)((0,y.iV)((0,d.di)(r.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),c.Zn,this._queryEngine.spatialReference)));return i}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:n}=this._loadOptions,i=(await(0,s.default)(t,{responseType:"json",query:{...n},signal:e})).data;return await(0,f.O3)(i),i}_normalizeFeatures(e,t,n){const{objectIdField:s}=this._queryEngine,i=[];for(const r of e){const e=this._createDefaultAttributes(),o=(0,m.O0)(this._fieldsIndex,e,r.attributes,!0,t);o?n?.push(o):(this._assignObjectId(e,r.attributes,!0),r.attributes=e,r.objectId=e[s],i.push(r))}return i}async _applyEdits(e){const{adds:t,updates:n,deletes:s}=e,i={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(i,t),n&&n.length&&this._applyUpdateEdits(i,n),s&&s.length){for(const e of s)i.deleteResults.push((0,m.d1)(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:r,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:o,featureEditResults:i}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:s,hasM:i,hasZ:r,objectIdField:o,spatialReference:u,featureStore:c}=this._queryEngine,p=[];for(const d of t){if(d.geometry&&s!==(0,l.Ji)(d.geometry)){n.push((0,m.av)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),i=(0,m.O0)(this._fieldsIndex,t,d.attributes);if(i)n.push(i);else{if(this._assignObjectId(t,d.attributes),d.attributes=t,null!=d.uid){const t=d.attributes[o];e.uidToObjectId[d.uid]=t}if((0,a.pC)(d.geometry)){const e=d.geometry.spatialReference??u;d.geometry=(0,y.iV)((0,m.og)(d.geometry,e),e,u)}p.push(d),n.push((0,m.d1)(d.attributes[o]))}}c.addMany((0,d.Yn)([],p,s,r,i,o))}_applyUpdateEdits(e,t){let{updateResults:n}=e;const{geometryType:s,hasM:i,hasZ:r,objectIdField:o,spatialReference:u,featureStore:c}=this._queryEngine;for(const p of t){const{attributes:e,geometry:t}=p,h=e&&e[o];if(null==h){n.push((0,m.av)(`Identifier field ${o} missing`));continue}if(!c.has(h)){n.push((0,m.av)(`Feature with object id ${h} missing`));continue}const f=(0,d.EI)(c.getFeature(h),s,r,i);if((0,a.pC)(t)){if(s!==(0,l.Ji)(t)){n.push((0,m.av)("Incorrect geometry type."));continue}const e=t.spatialReference??u;f.geometry=(0,y.iV)((0,m.og)(t,e),e,u)}if(e){const t=(0,m.O0)(this._fieldsIndex,f.attributes,e);if(t){n.push(t);continue}}c.add((0,d.XA)(f,s,r,i,o)),n.push((0,m.d1)(h))}}_createObjectIdGenerator(e,t){const n=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===n.type)return()=>n.name+"-"+Date.now().toString(16);let s=Number.NEGATIVE_INFINITY;for(const i of t)i.objectId&&(s=Math.max(s,i.objectId));return s=Math.max(0,s)+1,()=>s++}_assignObjectId(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this._queryEngine.objectIdField;e[s]=n&&s in t?t[s]:this._objectIdGenerator()}async _checkProjection(e){try{await(0,y._W)(c.Zn,e)}catch{throw new r.Z("geojson-layer","Projection not supported")}}}},47615:(e,t,n)=>{n.d(t,{O3:()=>I,lG:()=>E,my:()=>F,q9:()=>u});var s=n(10064),i=n(3182),r=n(80457),o=n(80031);const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return a[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*c(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function d(e){for(const t of e)if(t.length>2)return!0;return!1}function p(e){let t=0;for(let n=0;n<e.length;n++){const s=e[n],i=e[(n+1)%e.length];t+=s[0]*i[1]-i[0]*s[1]}return t<=0}function y(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function h(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return m(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const s of t.coordinates)m(e,s,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const s of t.coordinates){f(e,s[0],n);for(let t=1;t<s.length;t++)g(e,s[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return b(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const s=t.coordinates;f(e,s[0],n);for(let i=1;i<s.length;i++)g(e,s[i],n);return e}(e,t,n)}}function f(e,t,n){const s=y(t);!function(e){return!p(e)}(s)?m(e,s,n):_(e,s,n)}function g(e,t,n){const s=y(t);!function(e){return p(e)}(s)?m(e,s,n):_(e,s,n)}function m(e,t,n){for(const s of t)b(e,s,n);e.lengths.push(t.length)}function _(e,t,n){for(let s=t.length-1;s>=0;s--)b(e,t[s],n);e.lengths.push(t.length)}function b(e,t,n){const[s,i,r]=t;e.coords.push(s,i),n.hasZ&&e.coords.push(r||0)}function w(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function I(e){if(!e)throw new s.Z("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new s.Z("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,i=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!i.test(n))throw new s.Z("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function F(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=[],s=new Set,i=new Set;let r,a=!1,p=null,y=!1,{geometryType:h=null}=t,f=!1;for(const m of l(e)){const{geometry:e,properties:t,id:l}=m;if((!e||(h||(h=u(e.type)),u(e.type)===h))&&(a||(a=d(c(e))),y||(y=null!=l,y&&(r=typeof l,t&&(p=Object.keys(t).filter((e=>t[e]===l))))),t&&p&&y&&null!=l&&(p.length>1?p=p.filter((e=>t[e]===l)):1===p.length&&(p=t[p[0]]===l?p:[])),!f&&t)){let e=!0;for(const r in t){if(s.has(r))continue;const a=t[r];if(null==a){e=!1,i.add(r);continue}const u=w(a);if("unknown"===u){i.add(r);continue}i.delete(r),s.add(r);const l=(0,o.q6)(r);l&&n.push({name:l,alias:r,type:u})}f=e}}const g=(0,o.q6)(1===p?.length&&p[0]||null)??void 0;if(g)for(const u of n)if(u.name===g&&(0,o.H7)(u)){u.type="esriFieldTypeOID";break}return{fields:n,geometryType:h,hasZ:a,objectIdFieldName:g,objectIdFieldType:r,unknownFields:Array.from(i)}}function E(e,t){return Array.from(function*(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{geometryType:n,objectIdField:s}=t;for(const o of e){const{geometry:e,properties:a,id:l}=o;if(e&&u(e.type)!==n)continue;const c=a||{};let d;s&&(d=c[s],null==l||d||(c[s]=d=l));const p=new i.u_(e?h(new r.Z,e,t):null,c,null,d??void 0);yield p}}(l(e),t))}},63543:(e,t,n)=>{n.d(t,{Dm:()=>c,Hq:()=>d,MS:()=>p,bU:()=>a});var s=n(93169),i=n(84652),r=n(60480),o=n(76115);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?o.I4:"esriGeometryPolyline"===e?o.ET:o.lF}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let l=1;function c(e,t){if((0,s.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let n=`this.${t} = null;`;for(const t in e)n+=`this${u.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const s=new Function(`\n      return class AttributesClass$${l++} {\n        constructor() {\n          ${n};\n        }\n      }\n    `)();return()=>new s}catch(n){return()=>({[t]:null,...e})}}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{name:"New Feature",description:"",prototype:{attributes:(0,i.d9)(e)}}]}function p(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0},query:r.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}},68808:(e,t,n)=>{n.d(t,{O0:()=>p,av:()=>u,b:()=>g,d1:()=>c,og:()=>f});var s=n(92026),i=n(92975),r=n(80031);class o{constructor(){this.code=null,this.description=null}}class a{constructor(e){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function u(e){return new a(e)}class l{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function c(e){return new l(e)}const d=new Set;function p(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4?arguments[4]:void 0;d.clear();for(const o in n){const a=e.get(o);if(!a)continue;const l=n[o],c=y(a,l);if(c!==l&&i&&i.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:a,originalValue:l,sanitizedValue:c}}),d.add(a.name),a&&(s||a.editable)){const e=(0,r.Qc)(a,c);if(e)return u((0,r.vP)(e,a,c));t[a.name]=c}}for(const r of e?.requiredFields??[])if(!d.has(r.name))return u(`missing required field "${r.name}"`);return null}function y(e,t){let n=t;return"string"==typeof t&&(0,r.H7)(e)?n=parseFloat(t):null!=t&&(0,r.qN)(e)&&"string"!=typeof t&&(n=String(t)),(0,r.Pz)(n)}let h;function f(e,t){if(!e||!(0,i.JY)(t))return e;if("rings"in e||"paths"in e){if((0,s.Wi)(h))throw new TypeError("geometry engine not loaded");return h.simplify(t,e)}return e}async function g(e,t){!(0,i.JY)(e)||"esriGeometryPolygon"!==t&&"esriGeometryPolyline"!==t||await async function(){return(0,s.Wi)(h)&&(h=await Promise.all([n.e(9058),n.e(3645)]).then(n.bind(n,50309))),h}()}}}]);
//# sourceMappingURL=1657.e87fbf5e.chunk.js.map