{"version":3,"file":"static/js/69811.5abddbbb.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/composed-offset-position/dist/composed-offset-position.browser.min.mjs","../node_modules/@esri/calcite-components/dist/chunks/floating-ui.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/now.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/debounce.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import{isContainingBlock as t}from\"@floating-ui/utils/dom\";function e(t){return i(t)}function n(t){return f(t,\"offsetTop\")}function o(t){return f(t,\"offsetLeft\")}function r(t){return t.assignedSlot?t.assignedSlot:t.parentNode instanceof ShadowRoot?t.parentNode.host:t.parentNode}function i(e){for(let t=e;t;t=r(t))if(t instanceof Element&&\"none\"===getComputedStyle(t).display)return null;for(let n=r(e);n;n=r(n)){if(!(n instanceof Element))continue;const e=getComputedStyle(n);if(\"contents\"!==e.display){if(\"static\"!==e.position||t(e))return n;if(\"BODY\"===n.tagName)return n}}return null}function f(t,e){let n=t[e],o=i(t);const r=function(t){const e=new Set;let n=t.getRootNode();for(;n;)e.add(n),n=n.parentNode?n.parentNode.getRootNode():null;return e}(t);for(;o&&!r.has(o.getRootNode());)n-=o[e],o=i(o);return n}export{o as offsetLeft,e as offsetParent,n as offsetTop};\n","import { autoUpdate as T, computePosition as W, shift as _, hide as B, flip as P, offset as H, autoPlacement as L, arrow as N, platform as v } from \"@floating-ui/dom\";\nimport { debounce as z } from \"lodash-es\";\nimport { offsetParent as G } from \"composed-offset-position\";\nimport { D as w, i as E } from \"./runtime.js\";\nimport { g as V } from \"./dom.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\n(function() {\n  if (E()) {\n    const e = v.getOffsetParent;\n    v.getOffsetParent = (n) => e(n, G);\n  }\n})();\nfunction U(t) {\n  const e = window.devicePixelRatio || 1;\n  return Math.round(t * e) / e;\n}\nconst O = (\n  /* we export arrow function to allow us to spy on it during testing */\n  async (t, {\n    referenceEl: e,\n    floatingEl: n,\n    overlayPositioning: i = \"absolute\",\n    placement: a,\n    flipDisabled: s,\n    flipPlacements: o,\n    offsetDistance: l,\n    offsetSkidding: r,\n    arrowEl: g,\n    type: D\n  }) => {\n    if (!e || !n)\n      return;\n    const m = V(n) === \"rtl\", {\n      x: R,\n      y: S,\n      placement: b,\n      strategy: k,\n      middlewareData: p\n    } = await W(e, n, {\n      strategy: i,\n      placement: a === \"auto\" || a === \"auto-start\" || a === \"auto-end\" ? void 0 : M(a, m),\n      middleware: J({\n        placement: a,\n        flipDisabled: s,\n        flipPlacements: o?.map((c) => M(c, m)),\n        offsetDistance: l,\n        offsetSkidding: r,\n        arrowEl: g,\n        type: D\n      })\n    });\n    if (g && p.arrow) {\n      const { x: c, y: j } = p.arrow, u = b.split(\"-\")[0], y = c != null ? \"left\" : \"top\", C = Q[u], I = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n      \"floatingLayout\" in t && (t.floatingLayout = u === \"left\" || u === \"right\" ? \"horizontal\" : \"vertical\"), Object.assign(g.style, {\n        ...I,\n        [y]: `${y == \"left\" ? c : j}px`,\n        [u]: \"100%\",\n        transform: C\n      });\n    }\n    const h = p.hide?.referenceHidden ? \"hidden\" : null, $ = h ? \"none\" : null;\n    n.setAttribute(q, b), Object.assign(n.style, {\n      pointerEvents: $,\n      position: k,\n      transform: `translate(${U(R)}px,${U(S)}px)`,\n      visibility: h\n    });\n  }\n), q = \"data-placement\", F = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\"\n], ot = \"bottom-start\", rt = \"bottom-end\", st = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction J({\n  placement: t,\n  flipDisabled: e,\n  flipPlacements: n,\n  offsetDistance: i,\n  offsetSkidding: a,\n  arrowEl: s,\n  type: o\n}) {\n  const l = [_(), B()];\n  if (o === \"menu\")\n    return [\n      ...l,\n      P({\n        fallbackPlacements: n || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n      })\n    ];\n  if (o === \"popover\" || o === \"tooltip\") {\n    const r = [\n      ...l,\n      H({\n        mainAxis: typeof i == \"number\" ? i : 0,\n        crossAxis: typeof a == \"number\" ? a : 0\n      })\n    ];\n    return t === \"auto\" || t === \"auto-start\" || t === \"auto-end\" ? r.push(\n      L({ alignment: t === \"auto-start\" ? \"start\" : t === \"auto-end\" ? \"end\" : null })\n    ) : e || r.push(P(n ? { fallbackPlacements: n } : {})), s && r.push(\n      N({\n        element: s\n      })\n    ), r;\n  }\n  return [];\n}\nfunction lt(t, e) {\n  const n = t.filter(\n    (i) => F.includes(i)\n  );\n  return n.length !== t.length && console.warn(\n    `${e.tagName}: Invalid value found in: flipPlacements. Try any of these: ${F.map((i) => `\"${i}\"`).join(\", \").trim()}`,\n    { el: e }\n  ), n;\n}\nfunction M(t, e = !1) {\n  const n = [\"left\", \"right\"];\n  return e && n.reverse(), t.replace(/leading/gi, n[0]).replace(/trailing/gi, n[1]);\n}\nasync function ft(t, e, n = !1) {\n  if (!t.open || !e.floatingEl || !e.referenceEl)\n    return;\n  if (Object.assign(e.floatingEl.style, {\n    display: \"block\",\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: e.overlayPositioning ?? \"absolute\"\n  }), !f.get(t))\n    return A(t);\n  await (n ? K(t) : O)(t, e);\n}\nfunction K(t) {\n  let e = d.get(t);\n  return e || (e = z(O, w.reposition, {\n    leading: !0,\n    maxWait: w.reposition\n  }), d.set(t, e), e);\n}\nconst Q = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\"\n}, f = /* @__PURE__ */ new WeakMap(), d = /* @__PURE__ */ new WeakMap();\nasync function A(t) {\n  const { referenceEl: e, floatingEl: n } = t;\n  if (!n.isConnected)\n    return;\n  const i = E() ? T : (o, l, r) => (r(), () => {\n  });\n  f.set(t, { state: \"pending\" });\n  let a;\n  const s = i(\n    e,\n    n,\n    // callback is invoked immediately\n    () => {\n      const o = t.reposition();\n      a || (a = o);\n    }\n  );\n  return f.set(t, { state: \"active\", cleanUp: s }), a;\n}\nfunction X(t) {\n  const { floatingEl: e } = t;\n  e && Object.assign(e.style, {\n    display: \"\",\n    pointerEvents: \"\",\n    position: \"\",\n    transform: \"\",\n    visibility: \"\"\n  });\n}\nasync function ct(t) {\n  const { floatingEl: e, referenceEl: n } = t;\n  if (X(t), !(!e || !n) && (Y(t), !!t.open))\n    return A(t);\n}\nfunction Y(t) {\n  const { floatingEl: e, referenceEl: n } = t;\n  if (!e || !n)\n    return;\n  const i = f.get(t);\n  i?.state === \"active\" && i.cleanUp(), f.delete(t), d.get(t)?.cancel(), d.delete(t);\n}\nconst x = 4, ut = Math.ceil(Math.hypot(x, x));\nexport {\n  st as F,\n  Y as a,\n  ot as b,\n  ct as c,\n  ut as d,\n  rt as e,\n  lt as f,\n  X as h,\n  ft as r\n};\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n"],"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","getFrameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getNodeScroll","scrollLeft","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","scrollTop","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","body","ownerDocument","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","getNodeName","isOverflowElement","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","isTopLayer","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","rectsAreEqual","a","b","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","undefined","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","sort","placementsThatFitOnEachSide","every","resetPlacement","shift","checkMainAxis","checkCrossAxis","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","list","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","t","r","assignedSlot","ShadowRoot","host","Element","display","n","tagName","U","window","devicePixelRatio","E","G","O","floatingEl","overlayPositioning","flipDisabled","s","flipPlacements","o","offsetDistance","l","offsetSkidding","arrowEl","g","type","D","m","V","R","S","k","p","W","M","J","c","j","u","C","Q","I","floatingLayout","Object","assign","style","transform","h","setAttribute","q","pointerEvents","visibility","F","ot","rt","st","animation","animationActive","_","B","P","H","L","N","lt","console","warn","join","trim","reverse","ft","open","f","z","w","reposition","leading","maxWait","K","A","WeakMap","isConnected","T","cleanUp","X","ct","Y","delete","cancel","ut","ceil","hypot","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","isOwn","call","tag","unmasked","getRawTag","objectToString","global","freeSelf","self","freeGlobal","Function","Date","now","reWhitespace","string","test","charAt","reTrimStart","trimmedEndIndex","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isSymbol","isObject","other","valueOf","baseTrim","isBinary","nativeMax","nativeMin","func","wait","lastArgs","lastThis","timerId","lastCallTime","lastInvokeTime","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","toNumber","flush","isObjectLike","baseGetTag"],"sourceRoot":""}