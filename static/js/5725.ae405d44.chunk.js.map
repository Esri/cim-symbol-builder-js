{"version":3,"file":"static/js/5725.ae405d44.chunk.js","mappings":";2MACA,MAgBMA,EAAWA,CAACC,GAAcC,OAAMC,MAAKC,WAAYC,GAAkBC,KACvE,MAAMC,EAAcL,EACdM,EAAyBD,EAAYJ,KAASF,EAAWQ,QACzDC,EAAmBH,EAAYJ,KAASG,EACxCK,EAA2BL,IAAmBL,EAAWQ,QAC3DD,IAA2BE,GAAoBC,IACjDJ,EAAYJ,GAAOF,EAAWQ,SAGhC,GADkCP,IAASD,EAAWW,UACvB,CAC7B,GAAIP,EAAgB,CAClB,MAAMQ,EAAUZ,EAAWW,UAAUC,QACjCH,GACFG,EAAQC,EAAEb,EAAYM,EAAYJ,IAEpCF,EAAWc,UAAUC,IACnB,GAAIA,EAAQC,IAAId,GAAM,CACpB,MAAMe,EAAQX,EAAYJ,GACtBe,IAAUjB,EAAWQ,SACvBI,EAAQC,EAAEb,EAAYiB,EAE1B,IAEJ,CACAjB,EAAWkB,EAAId,OAAiB,EAASF,CAC3C,CACA,MAAMiB,EAAanB,EAAWW,UAAUS,YAAYC,kBAAkBC,IAAIpB,IAAMqB,SAChFvB,EAAWwB,cAAa,KAClBlB,EAAYJ,KAASF,EAAWQ,UAGhCW,GACFM,EAAAA,EAAAA,IAAe,KACbnB,EAAYJ,GAAOF,EAAWQ,OAAO,IAGvCF,EAAYJ,GAAOF,EAAWQ,QAChC,GACA,4BClDJ,MAAMkB,EAAkBN,GAAgBO,OAAM,EAAQP,GAChDQ,EAAyBR,GAAiBT,GAAcgB,EAC5DhB,EAMAS,GAEF,MAAMS,UAA6BC,EAAAA,EACjCV,WAAAA,CAAYT,EAAWS,GACrBW,MAAMpB,GACN,MAAMqB,EAAkBC,KAAKzB,QAC7B,KACE0B,EAAAA,EAAAA,GAAoBD,KAAKtB,WACzB,MAAMM,EAAQG,EAAYa,KAAKtB,UAAWsB,MACpCE,EAA4BF,KAAKzB,UAAYwB,EACnD,IAAII,EAAAA,EAAAA,GAAUnB,GAAQ,CACfkB,GACHF,KAAKI,sBAAsBpB,GAE7B,MAAMqB,EAAWrB,EAAMsB,MAAMC,IAC3BP,KAAKzB,QAAUgC,EACfT,MAAMU,kBAAkB,IACvBC,OAAOC,IACRV,KAAKW,EAAEC,OAAOF,GACdG,QAAQH,MAAMA,EAAM,IAEtBV,KAAKc,QAAOC,eAAkBV,GAChC,MACOH,QAAuC,IAAVlB,IAChCgB,KAAKzB,QAAUS,GAEjBgC,gBAAe,IAAMlB,MAAMU,oBAE/B,CAAE,MAAOE,GACPV,KAAKW,EAAEC,OAAOF,GACdG,QAAQH,MAAMA,EAChB,CACF,CAEAF,gBAAAA,GAEA,EAEF,MAAMd,GDlDgBuB,ECkDKrB,EDlDK,IAAIsB,KAClC,MAAMC,GAAqBC,EAAAA,EAAAA,KACrBC,EAAW,IAAIJ,KAASC,GACxB9C,EAAiBiD,EAAS9C,SAChC+C,EAAAA,EAAAA,GAAoBH,EAAmBI,IAAI,IAC3C,MAAM5C,EAAU0C,EAAS3C,UAAUC,QACnCA,EAAQC,EAAEyC,EAAUjD,GACpBiD,EAAS9B,aAAaZ,EAAQC,EAAE4C,KAAK7C,EAAS0C,KAC9CI,EAAAA,EAAAA,GAA0BJ,GAC1B,MAAMK,EAAiB,CAACL,EAAS3C,aAAcyC,GAAoBQ,UACnE,OAAOC,EAAAA,EAAAA,GACLF,GACCG,QAA8B,IAAfA,OAAwB,EAAS/D,EAASuD,EAAUQ,EAAYzD,IAChFA,EACD,GAdmB6C,MCmDtB,MAAMa,EAAqBA,CAACC,EAAYC,IAAa,IAAIC,EAAyBF,EAAYC,GAC9F,MAAMC,UAAiCpC,EAAAA,EACrC,GACA,GACA,GACAV,WAAAA,CAAY4C,EAAYC,GACtBlC,QACIoC,EAAAA,KAGJlC,MAAK,EAAc+B,EACnB/B,MAAK,EAAYgC,EACjBhC,MAAK,EAAY,IAAImC,kBAAkBC,IACrCA,EAAUC,SAASC,IACbP,EAAWQ,SAASD,EAASE,gBAC/BR,EAASS,KACPzC,KAAKtB,UACLsB,KAAKtB,UAAUgE,GAAGC,aAAaL,EAASE,eACxCF,EAASM,SACTN,EAASE,cAEb,GACA,IAEN,CACAK,aAAAA,GACE7C,MAAK,EAAYqC,SAASS,IACpB9C,KAAKtB,UAAUgE,GAAGK,aAAaD,IACjC9C,MAAK,EAAUyC,KAAKzC,KAAKtB,UAAW,KAAMsB,KAAKtB,UAAUgE,GAAGC,aAAaG,GAAYA,EACvF,IAEF9C,MAAK,EAAUgD,QAAQhD,KAAKtB,UAAUgE,GAAI,CACxCX,YAAY,EACZkB,mBAAmB,EACnBC,gBAAiBlD,MAAK,GAE1B,CACAmD,gBAAAA,GACEnD,MAAK,EAAUoD,YACjB,EAEF,MACMC,EAAcpC,GAAU,IAAIC,KAChC,MAAMC,GAAqBC,EAAAA,EAAAA,KACrBC,EAAW,IAAIJ,KAASC,GAE9B,OADAI,EAAAA,EAAAA,GAAoBH,EAAmBI,IAAI,IACpCF,CAAQ,EAwCXiC,EAAqBC,GAAiB,CAACC,EAAU,CAAC,IAEtD/D,GAAe,CAACf,EAAWX,KACzB,MAAM0F,GAASC,EAAAA,EAAAA,IAAkBhF,EAAUgE,IACrCiB,EAAU,CAAE,MAAWF,EAAOG,KAAM,WAAgBH,EAAOI,UAAW,UAAc,GACpFC,EAAyBpF,EAC/BX,EAAWgG,aACT,KAAMC,EAAAA,EAAAA,IACJtF,EAAUgE,IACV,IAAMa,EAAa,cACnB,EAAGM,YAAWI,aAAYL,WACxB,MAAMM,EAAmB,IACpBD,EACH,MAAWL,EACX,WAAgBC,EAChB,UAAc,GAEhB9F,EAAWQ,QAAU2F,EACrB,MAAMC,EAAQF,EAAWG,eACJ,kBAAVD,GAAsB,UAAWzF,GAAgC,MAAnBA,EAAUyF,QACjEzF,EAAUyF,QAAUA,GAEtBE,EAAeP,EAAuBQ,iBAAiB,GAEzDd,EAAQe,QAGZ,MAAMF,EAAkBC,IACtB,MAAME,EAAezG,EAAWQ,QAC1BkG,EAAcD,EAAwB,WAAKA,EAC3CE,EAAUC,EAAUF,EAAaH,GACnCA,IACFI,EAAmB,UAAID,GAEzB1G,EAAWQ,QAAUmG,CAAO,EAS9B,MAPI,qBAAsBZ,GACxB/F,EAAWc,UAAUC,IACfA,EAAQC,IAAI,qBACdsF,EAAeP,EAAuBQ,iBACxC,IAGAd,EAAQoB,UACV7G,EAAWqC,sBAAsBuD,GAAS,GACnC5F,EAAW8G,OAEXlB,CACT,IAGEgB,EAAYA,CAACG,EAAUC,KAC3B,IAAKA,EACH,OAAOD,EAET,MAAME,EAAS,IAAKF,GAQpB,OAPAG,OAAOC,QAAQH,GAAY1C,SAAQ,EAAEpE,EAAKe,MAEtCgG,EAAO/G,GADY,kBAAVe,EACK2F,EAAUG,EAAS7G,GAAMe,GAEzBA,GAAS8F,EAAS7G,EAClC,IAEK+G,CAAM,mBCtMf,SAASG,EAAmBC,EAAOC,GACjC,OAAQD,EAAQC,GAASA,CAC3B,2FCDA,SAASC,EAAaC,GACpB,MAA0B,MAAnBA,EAAyB,IAAM,GACxC,CACA,SAASC,EAA0B9G,EAAW+G,EAASC,GAChDhH,EAAU+G,IAAa/G,EAAUgH,IACpCC,EAAAA,EAAOC,KAAK,IAAIlH,EAAUgE,GAAGmD,eAAeJ,EAAQK,mBAAmBJ,EAAeI,2BAE1F,CACA,SAASC,EAASrD,GAChB,OAAOA,EAAGsD,QAAUtD,EAAGuD,UACzB,CACAlF,eAAemF,EAAmBxH,SAC1BA,EAAUyH,yBACVzH,EAAU0H,cAClB,4GCfA,MAAMC,EAA+B,CAAEC,IAAK,SACtCC,EAA8B,CAAED,IAAK,SACrCE,EAA8B,CAAEF,IAAK,SACrCG,EAA8B,CAAEH,IAAK,UACrCI,EAAwB,MACxBC,EAAwB,OACxBC,EAAwB,OACxBC,EAAqB,MACrBC,EAAoB,UACpBC,EAAmB,2ECPzB,SAASC,IACP,MAAM,SAAEC,GAAajH,KAChBiH,GACHC,YAAYC,UAAUC,MAAM3E,KAAKzC,KAErC,CACA,SAASqH,EAAcC,GACMA,EAAMC,OACVN,UACrBK,EAAME,gBAEV,CACA,MAAMC,EAAqC,CAAC,YAAa,UAAW,SACpE,SAASC,EAAoCJ,GAChBA,EAAMC,OACVN,WACrBK,EAAMK,2BACNL,EAAME,iBAEV,CACA,MAAMI,EAAqB,CAAEC,SAAS,GACtC,SAASC,EAAsBpJ,GAC7B,GAAIA,EAAUuI,SAMZ,OALAvI,EAAUgE,GAAGqF,aAAa,gBAAiB,QACvCrJ,EAAUgE,GAAGsF,SAASC,SAASC,gBACjCD,SAASC,cAAcC,YAQ7B,SAA0BzJ,GACxBA,EAAUgE,GAAG0E,MAAQJ,EAGUoB,EAFP1J,EAAUgE,GAGlC0F,EAAQC,iBAAiB,cAAehB,EAAeO,GACvDH,EAAmCpF,SAASiF,GAAUc,EAAQC,iBAAiBf,EAAOI,EAAqCE,KAF7H,IAAiCQ,CADjC,CATIE,CAAiB5J,IAcrB,SAA4BA,UACnBA,EAAUgE,GAAG0E,MAGcgB,EAFP1J,EAAUgE,GAGrC0F,EAAQG,oBAAoB,cAAelB,EAAeO,GAC1DH,EAAmCpF,SAASiF,GAAUc,EAAQG,oBAAoBjB,EAAOI,EAAqCE,KAFhI,IAAoCQ,CADpC,CAdEI,CAAmB9J,GACnBA,EAAUgE,GAAG+F,gBAAgB,gBAC/B,CAiBA,MAAMC,EACO,wBAEPC,EAAuBA,EAAGC,WAAU3B,cAAe4B,EAAAA,EAAI,eAAcC,EAAAA,EAAAA,IAAaJ,aAAyBzB,KAAY2B,2DCrD7H,MAAMG,EAAqC,IAAIC,IACzCC,EAAY,CAChBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNxD,KAAM,EACNlF,MAAO,EACP2I,IAAK,IAKP,SAASC,EAAiBC,KAAUC,GAClC,IAJF,SAAiBD,GACf,OAAON,EAAUM,IAAUN,EAAUQ,EAAAA,EACvC,CAEOC,CAAQH,GACX,OAIF1I,QAAQ0I,GAAO9G,KAAKzC,KAFE,YACH,6EACqCwJ,EAC1D,CACA,IAAIG,EACJ,MAAMhE,EAAS,CACbwD,MAAQS,GAAYN,EAAiB,QAASM,GAC9CR,KAAOQ,GAAYN,EAAiB,OAAQM,GAC5ChE,KAAOgE,GAAYN,EAAiB,OAAQM,GAC5ClJ,MAAQkJ,GAAYN,EAAiB,QAASM,GAC9CV,MAAQU,GAAYN,EAAiB,QAASM,GAC9CC,WAEF,SAAoBC,GAAS,UAAEpL,EAAS,KAAE6F,EAAI,UAAEwF,EAAS,eAAEC,IACzD,MAAM/L,EAAM,GAAG6L,KAAuB,cAAZA,EAA0B,GAAKpL,IAAY6F,IACrE,GAAIwE,EAAmBhK,IAAId,GACzB,OAEF8K,EAAmBkB,IAAIhM,GACvB,MAAMiM,EAAmBC,MAAMC,QAAQL,GACnCG,IAAqBP,IACvBA,EAAgB,IAAIU,KAAKC,WAAW,KAAM,CAAEC,MAAO,OAAQC,KAAM,iBAGnElB,EAAiB,OADD,IAAI/E,MAASuF,0CAAmE,WAAnBE,EAA8B,mBAAqB,IAAIA,OAAoBD,EAAY,QAAQG,EAAmBP,EAAcc,OAAOV,EAAUW,KAAKC,GAAe,IAAIA,QAAkB,IAAIZ,gBAA0B,KAExS,oDCzCA,SAASa,EAAeJ,EAAMxI,EAAUwB,GACtC,GAAItB,EAAAA,GACF,OAEF,MAAM2I,EAGR,SAAqBL,GACnB,MAAMM,UAAiCC,OAAO5I,iBAC5ChD,WAAAA,CAAY6C,GACVlC,MAAMkC,GACNhC,KAAKgL,cAAgB,GACrBhL,KAAKgC,SAAWA,CAClB,CACAgB,OAAAA,CAAQuE,EAAQ/D,GAEd,OADAxD,KAAKgL,cAAcC,KAAK,CAAE1D,SAAQ/D,YAC3B1D,MAAMkD,QAAQuE,EAAQ/D,EAC/B,CACA0H,SAAAA,CAAU3D,GACR,MAAM4D,EAAqBnL,KAAKgL,cAAcI,QAAQC,GAAaA,EAAS9D,SAAWA,IACvFvH,KAAKgL,cAAgB,GACrBhL,KAAKgC,SAASlC,MAAMwL,cAAetL,MACnCA,KAAKoD,aACL+H,EAAmB9I,SAASgJ,GAAarL,KAAKgD,QAAQqI,EAAS9D,OAAQ8D,EAAS7H,UAClF,EAEF,MACkB,iBAATgH,EAA0BO,OAAOQ,qBAAgC,aAATf,EAAsBM,EAA2BC,OAAOS,cAE3H,CAzBmBC,CAAYjB,GAC7B,OAAO,IAAIK,EAAS7I,EAAUwB,EAChC,mDCNA,MAAMkI,EAAc,CAClBC,MAAO,CACLC,OAAQC,EAAkBpF,EAAAA,EAA4BH,KACtDwF,MAAOD,EAAkBrF,EAAAA,EAA4BF,KACrDyF,OAAQF,EAAkBtF,EAAAA,EAA4BD,KACtD0F,QAASH,EAAkBxF,EAAAA,EAA6BC,OAG5D,SAASuF,EAAkBI,GACzB,OAAOC,SAASD,EAClB,8DCTA,MAAME,GAAS7I,EAAAA,EAAAA,IAAkBC,EAAAA,8MCYjC,MACMmF,EACO,YADPA,EAEe,sBAFfA,EAGY,mBAHZA,EAIW,iBAJXA,EAKkB,0BALlBA,EAMmB,2BANnBA,EAOQ,aAPRA,EAQa,mBARbA,EASY,kBATZA,EAUsB,8BAVtBA,EAWmB,2BAXnBA,EAYsB,gCAZtBA,EAaoB,4BAbpBA,EAcqB,8BAdrBA,EAeM,YAfNA,EAgBU,gBAhBVA,EAiBa,mBAjBbA,EAkBc,oBAEd0D,EACS,eADTA,EAEU,gBAFVA,EAGM,eAHNA,EAII,qBAJJA,EAKG,UALHA,EAME,SAEFC,EACI,EADJA,EAEG,EAFHA,EAGI,EAHJA,EAIK,EAELC,EAASC,EAAAA,EAAG,w4OAClB,MAAMC,UAAiBC,EAAAA,GACrBtN,WAAAA,GACEW,SAAS4M,WACT1M,KAAK2M,gBAAkB,KACrB3M,KAAK4M,iBACL5M,KAAK6M,sBAAwBC,YAAY9M,KAAK+M,MAAO/M,KAAKgN,iBAAmB,IAAI,EAEnFhN,KAAKiN,YAAc,+BAA8BC,EAAAA,EAAAA,OACjDlN,KAAKmN,cAAgB,EAAGC,aAAezB,aACrC3L,KAAKqN,wBAAwB1B,EAAM,EAErC3L,KAAKsN,gBAAiB1C,EAAAA,EAAAA,GAAe,UAAW1F,GAAYA,EAAQ7C,QAAQrC,KAAKmN,iBACjFnN,KAAK6M,sBAAwB,KAC7B7M,KAAKuN,cAAgB,KACrBvN,KAAK+M,MAAQ,KACX,IAAIS,EAAOxN,KAAKyN,yBACMzN,KAAK0N,sBAAwB1N,KAAK2N,qBAAuB3N,KAAK4N,uBAE9EJ,GAAQ,KACVA,EAAO,EACPxN,KAAK6N,UAAY,UACjB7N,KAAK8N,UAAS,IAEdN,GAAc,KAGdA,EAAO,IACTxN,KAAKyN,uBAAyBD,EAChC,EAEFxN,KAAK+N,UAAW5B,EAAAA,EAAAA,KAChBnM,KAAK6N,UAAY,UACjB7N,KAAKgO,MAAQ,GACbhO,KAAKiO,SAAW5B,EAChBrM,KAAKkO,SAAU,EACflO,KAAKyN,uBAAyB,EAC9BzN,KAAK0N,qBAAsB,EAC3B1N,KAAK2N,qBAAsB,EAC3B3N,KAAKmO,gCAAkC,EACvCnO,KAAK4N,qBAAsB,EAC3B5N,KAAKoO,UAAY,SACjBpO,KAAKqO,UAAW,EAChBrO,KAAKgN,iBA9EQ,IA+EbhN,KAAKsO,gBAAiB,EACtBtO,KAAKiH,UAAW,EAChBjH,KAAKuO,uBAAwBC,EAAAA,EAAAA,IAAY,CAAEC,YAAY,IACvDzO,KAAK0O,sBAAuBF,EAAAA,EAAAA,IAAY,CAAEC,YAAY,IACtDzO,KAAK2O,qBAAsBH,EAAAA,EAAAA,IAAY,CAAEC,YAAY,IACrDzO,KAAK4O,uBAAwBJ,EAAAA,EAAAA,IAAY,CAAEC,YAAY,IACvDzO,KAAK6O,qBAAsBL,EAAAA,EAAAA,IAAY,CAAEC,YAAY,GACvD,QAEEzO,KAAK8O,WAAa,CAAEjB,UAAW,CAAC,GAAI,CAAC,EAAG,CAAEkB,OAAO,IAASf,MAAO,CAAC,GAAI,CAAC,EAAG,CAAEe,OAAO,IAASd,SAAU,CAAC,GAAI,CAAC,EAAG,CAAEc,OAAO,IAASb,QAAS,CAAC,GAAI,CAAC,EAAG,CAAEa,OAAO,IAASC,cAAe,CAAC,GAAI,CAAC,EAAG,CAAED,OAAO,IAAStB,uBAAwB,CAAC,GAAI,CAAC,EAAG,CAAEsB,OAAO,IAASrB,oBAAqB,CAAC,GAAI,CAAC,EAAG,CAAEqB,OAAO,IAASpB,oBAAqB,CAAC,GAAI,CAAC,EAAG,CAAEoB,OAAO,IAASZ,gCAAiC,CAAC,GAAI,CAAC,EAAG,CAAEY,OAAO,IAASnB,oBAAqB,CAAC,GAAI,CAAC,EAAG,CAAEmB,OAAO,IAASX,UAAW,CAAC,EAAG,CAAC,EAAG,CAAEa,SAAS,IAASZ,SAAU,CAAC,EAAG,CAAC,EAAG,CAAEY,SAAS,IAASjC,iBAAkB,CAAC,GAAI,CAAC,EAAG,CAAExC,KAAM0E,OAAQD,SAAS,IAASX,eAAgB,CAAC,EAAG,CAAC,EAAG,CAAEW,SAAS,EAAMzE,KAAM2E,UAAYlI,SAAU,CAAC,EAAG,CAAC,EAAG,CAAEgI,SAAS,EAAMzE,KAAM2E,UAAYhL,MAAO,EAAGG,iBAAkB,CAAC,EAAG,CAAC,EAAG,CAAExB,WAAW,IAAUsM,OAAQ,CAAC,EAAG,CAAC,EAAG,CAAE5E,KAAM2E,UAAYE,aAAc,CAAC,EAAG,CAAC,EAAG,CAAEvM,WAAW,IAC50B,QAEE9C,KAAKsM,OAASA,CAChB,CACA,UAAMgD,GACAtP,KAAKkO,SAA6B,KAAlBlO,KAAKqO,WAAoBrO,KAAKqO,UAA8B,WAAlBrO,KAAKqO,UAGnErO,KAAKuP,YAAW,EAClB,CACA,cAAMC,SACEtJ,EAAAA,EAAAA,GAAmBlG,MACzBA,KAAKyP,WAAWC,OAClB,CACA,UAAMC,GACC3P,KAAKkO,SAGVlO,KAAK4P,aAAY,EACnB,CACAC,iBAAAA,GACE/P,MAAM+P,oBACN7P,KAAKsN,gBAAgBtK,QAAQhD,KAAK0C,GACpC,CACA,UAAMoN,GACmB,KAAlB9P,KAAKqO,WAAmBrO,KAAKqO,UAA+B,WAAlBrO,KAAKqO,SAEvB,WAAlBrO,KAAKqO,WACdrO,KAAKoP,QAAS,GAFdpP,KAAKuP,YAAW,EAIpB,CACAQ,UAAAA,CAAWjR,GACLA,EAAQC,IAAI,aAAeiB,KAAKgQ,YAClChQ,KAAKiQ,gBAAgBjQ,KAAKqO,UAExBvP,EAAQC,IAAI,eAAiBiB,KAAKgQ,YAAiC,YAAnBhQ,KAAK6N,YACvD7N,KAAKkQ,iBAAiBlQ,KAAK6N,WAEzB/O,EAAQC,IAAI,aAAeiB,KAAKgQ,aAA+B,IAAjBhQ,KAAKkO,WACrDlO,KAAKoP,QAAUpP,KAAKkO,UAElBpP,EAAQC,IAAI,yBAA2BiB,KAAKgQ,aAA2C,IAA7BhQ,KAAK0N,sBAAkC5O,EAAQC,IAAI,yBAA2BiB,KAAKgQ,aAA2C,IAA7BhQ,KAAK2N,uBAClK3N,KAAKmQ,gBAET,CACAzL,OAAAA,IACEoD,EAAAA,EAAAA,GAAsB9H,KACxB,CACAoQ,oBAAAA,GACEtQ,MAAMsQ,uBACNpQ,KAAK4M,iBACL5M,KAAKsN,gBAAgBlK,YACvB,CACA6M,eAAAA,CAAgB5B,GACTA,GACHrO,KAAK4P,aAAY,EAErB,CACA,sBAAMM,CAAiBrC,GACH,YAAdA,UAGEwC,EAAAA,EAAAA,GAAkBrQ,KAAKsQ,cAA6B,YAAdzC,EAA0B,eAAiB,iBACvF7N,KAAK6N,UAAY,UACnB,CACAsC,cAAAA,GACOnQ,KAAK0N,qBAAwB1N,KAAK2N,oBAGrC3N,KAAKuQ,eAFLvQ,KAAKwQ,YAIT,CACAnD,uBAAAA,CAAwB1B,GACjBA,IAGDA,GAASD,EAAAA,EAAYC,MAAMG,MAC7B9L,KAAKiO,SAAW5B,EAGdV,GAASD,EAAAA,EAAYC,MAAMI,OAC7B/L,KAAKiO,SAAW5B,EAGdV,GAASD,EAAAA,EAAYC,MAAMK,QAC7BhM,KAAKiO,SAAW5B,EAGlBrM,KAAKiO,SAAW5B,EAClB,CACAO,cAAAA,GACE6D,cAAczQ,KAAK6M,uBACnB4D,cAAczQ,KAAKuN,cACrB,CACAO,QAAAA,CAAS4C,GACH1Q,KAAKkO,SAAWwC,IAClB1Q,KAAKkO,SAAU,GAEjB,MAAMyC,GAAYxL,EAAAA,EAAAA,GAAmBnF,KAAKgP,cAAgB,EAAGhP,KAAKgO,MAAM/B,QACxEjM,KAAK4Q,gBAAgBD,EAAWD,EAClC,CACAG,YAAAA,GACE7Q,KAAKkO,SAAU,EACf,MAAM4C,GAAY3L,EAAAA,EAAAA,GAAmB4L,KAAKzK,IAAItG,KAAKgP,cAAgB,GAAI,GAAIhP,KAAKgO,MAAM/B,QACtFjM,KAAK4Q,gBAAgBE,GAAW,EAClC,CACAvB,UAAAA,CAAWmB,GACT1Q,KAAKkO,SAAU,EACflO,KAAK2M,kBACL3M,KAAKuN,cAAgBT,YAAY9M,KAAK2M,gBAAiB3M,KAAKgN,kBACxD0D,GACF1Q,KAAK2O,oBAAoB+B,MAE7B,CACAd,WAAAA,CAAYc,GACV1Q,KAAKkO,SAAU,EACflO,KAAK4M,iBACL5M,KAAKyN,uBAAyB,EAC9BzN,KAAKmO,gCAAkC,EACnCuC,GACF1Q,KAAK6O,oBAAoB6B,MAE7B,CACAH,YAAAA,GACEvQ,KAAKmO,gCAAkCnO,KAAKyN,sBAC9C,CACA+C,UAAAA,GACExQ,KAAKyN,uBAAyBzN,KAAKmO,+BACrC,CACA6C,gBAAAA,CAAiB1J,GACf,MAAM0G,GAAQiD,EAAAA,EAAAA,GAA8B3J,GAC5C,GAAI0G,EAAM/B,OAAS,EACjB,OAEF,MAAMiF,EAAkBlD,EAAMmD,WAAWC,GAASA,EAAKC,WACjDC,EAAyBJ,GAAmB,EAAIA,EAAkB,EACxElR,KAAKgO,MAAQA,EACbhO,KAAK4Q,gBAAgBU,GAAwB,EAC/C,CACAV,eAAAA,CAAgBW,EAAgBb,GAC9B,MAAMc,EAAmBxR,KAAKgP,cAC9BhP,KAAKgO,MAAM3L,SAAQ,CAACK,EAAI0C,KACtB,MAAMqM,EAAQF,IAAmBnM,EACjC1C,EAAG2O,SAAWI,EACVA,IACFzR,KAAKqP,aAAe3M,EACpB1C,KAAKgP,cAAgB5J,EACvB,IAEEsL,IACF1Q,KAAKkO,SAAU,EACXsD,IAAqBxR,KAAKgP,eAC5BhP,KAAKuO,sBAAsBmC,OAGjC,CACAgB,gBAAAA,CAAiBpK,GACf,MAAMuG,EAAYvG,EAAMC,OAAOoK,QAAQ9D,UACnC7N,KAAKkO,SACPlO,KAAK4P,aAAY,GAED,SAAd/B,GACF7N,KAAK6N,UAAY,UACjB7N,KAAK8N,UAAS,IACS,aAAdD,IACT7N,KAAK6N,UAAY,WACjB7N,KAAK6Q,eAET,CACAe,mBAAAA,CAAoBtK,GAClB,MAAM8J,EAAO9J,EAAMC,OACbsK,EAAoB3F,SAASkF,EAAKO,QAAQvM,OAC5CyM,IAAsB7R,KAAKgP,gBAG3BhP,KAAKkO,SACPlO,KAAK4P,aAAY,GAEnB5P,KAAK6N,UAAYgE,EAAoB7R,KAAKgP,cAAgB,UAAY,WACtEhP,KAAK4Q,gBAAgBiB,GAAmB,GAC1C,CACAC,cAAAA,GACE9R,KAAK4N,qBAAsB,EACvB5N,KAAKkO,QACPlO,KAAK4P,aAAY,GAEjB5P,KAAKuP,YAAW,EAEpB,CACAwC,aAAAA,GACE,MAAMC,EAAYhS,KAAKkO,QACnB8D,IACFhS,KAAK0N,qBAAsB,GAEvB1N,KAAK0N,qBAAwB1N,KAAK2N,sBAAwBqE,GAC9DhS,KAAK0O,qBAAqBgC,MAE9B,CACAuB,aAAAA,GACE,MAAMD,EAAYhS,KAAKkO,QACnB8D,IACFhS,KAAK2N,qBAAsB,GAEvB3N,KAAK0N,qBAAwB1N,KAAK2N,sBAAwBqE,GAC9DhS,KAAK0O,qBAAqBgC,MAE9B,CACAwB,cAAAA,CAAe5K,GACb,MAAM6K,GAAoBnS,KAAK0C,GAAGsF,SAASV,EAAM8K,eAC3CJ,EAAYhS,KAAKkO,QACnBiE,GAAoBH,IACtBhS,KAAK2N,qBAAsB,GAEzBwE,GAAoBH,IAAchS,KAAK0N,sBACzC1N,KAAK4N,qBAAsB,EAC3B5N,KAAK4O,sBAAsB8B,OAE/B,CACA2B,cAAAA,CAAe/K,GACb,MAAM6K,GAAoB7K,EAAMgL,eAAe/P,SAAS+E,EAAM8K,eACxDJ,EAAYhS,KAAKkO,QACnBiE,GAAoBH,IACtBhS,KAAK0N,qBAAsB,GAEzByE,GAAoBH,IAAchS,KAAK2N,sBACzC3N,KAAK4N,qBAAsB,EAC3B5N,KAAK4O,sBAAsB8B,OAE/B,CACA6B,uBAAAA,CAAwBjL,GACtB,GAAIA,EAAMC,SAAWvH,KAAKyP,UACxB,OAEF,MAAM+C,EAAWxS,KAAKgO,MAAM/B,OAAS,EACrC,OAAQ3E,EAAMrJ,KACZ,IAAK,IACL,IAAK,QACHqJ,EAAME,kBACgB,KAAlBxH,KAAKqO,UAAmBrO,KAAKqO,UAA8B,WAAlBrO,KAAKqO,WAChDrO,KAAK8R,iBAEP,MACF,IAAK,aACHxK,EAAME,iBACNxH,KAAK6N,UAAY,UACjB7N,KAAK8N,UAAS,GACd,MACF,IAAK,YACHxG,EAAME,iBACNxH,KAAK6N,UAAY,WACjB7N,KAAK6Q,eACL,MACF,IAAK,OAEH,GADAvJ,EAAME,iBACqB,IAAvBxH,KAAKgP,cACP,OAEFhP,KAAK6N,UAAY,WACjB7N,KAAK4Q,gBAAgB,GAAG,GACxB,MACF,IAAK,MAEH,GADAtJ,EAAME,iBACFxH,KAAKgP,gBAAkBwD,EACzB,OAEFxS,KAAK6N,UAAY,UACjB7N,KAAK4Q,gBAAgB4B,GAAU,GAGrC,CACAC,qBAAAA,CAAsBnL,GACpB,MAAMoL,EAAuBvI,SAASnK,KAAK2S,QAAQC,iBAAiB,eAAelK,OAC7EmK,EAAYvL,EAAMC,OACxB,OAAQD,EAAMrJ,KACZ,IAAK,cACH6U,EAAAA,EAAAA,GAAoBJ,EAAsBG,EAAW,QACrD,MACF,IAAK,aACHC,EAAAA,EAAAA,GAAoBJ,EAAsBG,EAAW,YACrD,MACF,IAAK,OACHvL,EAAME,kBACNsL,EAAAA,EAAAA,GAAoBJ,EAAsBG,EAAW,SACrD,MACF,IAAK,MACHvL,EAAME,kBACNsL,EAAAA,EAAAA,GAAoBJ,EAAsBG,EAAW,QAG3D,CACAE,eAAAA,CAAgBrQ,GACd1C,KAAK2S,QAAUjQ,CACjB,CACAsQ,iBAAAA,CAAkBtQ,GAChB1C,KAAKyP,UAAY/M,CACnB,CACAuQ,qBAAAA,CAAsBvQ,GACpB1C,KAAKsQ,cAAgB5N,CACvB,CACAwQ,qBAAAA,GACE,MAAMC,EAAOnT,KAAKkO,QAAUlO,KAAK+N,SAASqF,MAAQpT,KAAK+N,SAASuB,KAC1D+D,EAA+C,IAA9BrT,KAAKyN,uBAC5B,OAAO5E,EAAAA,EAAI,sBAAsBsK,YAAcrK,EAAAA,EAAAA,IAAa,CAC1D,CAACJ,IAAqB,EACtB,CAACA,IAAsB,cACZ1I,KAAK8R,wBAAwBqB,GAAQG,EAAAA,0BAA+BtT,KAAKkO,QAAU9B,EAAcA,4BAAqCpM,KAAKkO,SAAWrF,EAAAA,EAAI,4BAA2BC,EAAAA,EAAAA,IAAaJ,aAAgC1I,KAAK+N,SAASwF,+BAA+BF,yBAAwC,aACtU,CACAG,oBAAAA,GACE,OAAO3K,EAAAA,EAAI,eAAcC,EAAAA,EAAAA,IAAa,CACpC,CAACJ,IAAiB,EAClB,CAACA,GAAwB1I,KAAKsO,6BACjBtO,KAAKyS,0BAAyBgB,EAAAA,EAAAA,GAAIzT,KAAK+S,qBAAqB/S,KAAKkO,SAA6B,KAAlBlO,KAAKqO,UAAmBrO,KAAKqO,UAA8B,WAAlBrO,KAAKqO,WAA0BrO,KAAKkT,yBAA2B,KAAwB,WAAnBlT,KAAKoO,WAA0BpO,KAAK0T,YAAY,aAAe,KAAK1T,KAAK2T,0BAA6C,WAAnB3T,KAAKoO,WAA0BpO,KAAK0T,YAAY,SAAW,UACxW,CACAC,qBAAAA,GACE,MAAM,cAAE3E,EAAa,SAAEf,EAAQ,MAAED,EAAK,MAAE7J,EAAK,oBAAEyN,GAAwB5R,KACvE,OAAO6I,EAAAA,EAAI,mBAAmB1E,YAAe2E,EAAAA,EAAAA,IAAaJ,oBAAqCkL,EAAAA,EAAAA,GAAO5F,GAAQoD,GAASA,EAAKyC,KAAI,CAACzC,EAAMhM,KACrI,MAAM0O,EAAY9F,EAAM/B,OAClBwF,EAAQrM,IAAU4J,EAClB+E,EAAkB,IAAV3O,EACR4O,EAAO5O,IAAU0O,EAAY,EAC7BG,EAAgBH,EAAY7F,EAAW,EACvCiG,EAAelF,EAAgBf,EAC/BkG,EAAanF,GAAiBiF,EAC9BG,EAAaF,EAAe,EAAIlF,EAAgB+B,KAAKsD,MAAMpG,EAAW,GAEtEqG,EAAMJ,EAAe,EAAIC,EAAaF,EAAgBG,EACtDG,EAAOL,EAAejG,EAAW,EAFtBkG,EAAaL,EAAYM,EAAanG,EAGjDuG,GAAUT,IAAUC,IAASvC,IAAUrM,IAAUkP,EAAM,GAAKlP,IAAUmP,GACtEE,EAAUhD,GAASrM,GAASmP,GAAQnP,GAASkP,EAAM,EACnDI,EAAiBZ,EAAY,GAAK7F,EAClC0G,EAAOlD,EAAQrF,EAAeA,EACpC,OAAOvD,EAAAA,EAAI,0BAA2B4I,OAAkB,EAAVL,EAAKyC,KAAgBP,EAAAA,oBAAyB7B,YAAe3I,EAAAA,EAAAA,IAAa,CACtH,CAACJ,IAAqB,EACtB,CAACA,IAA+B,EAChC,CAACA,GAA6B+I,EAC9B,CAAC/I,GAA8BoL,EAAY,EAAI7F,GAAYuG,EAC3D,CAAC9L,KAAiCgM,GAAkBD,GACpD,CAAC/L,GAA4BgM,GAAkBD,kBAChCrP,GAASkO,EAAAA,aAAkB1B,oBAAsCR,EAAKjN,OAASmP,EAAAA,0BAA+BqB,oCAAuC,WAE1K,CACAjB,WAAAA,CAAY7F,GACV,MAAM+G,EAAuB,aAAd/G,EACTgH,GAAMC,EAAAA,EAAAA,GAAc9U,KAAK0C,IACzBqS,EAA2B,SAAnB/U,KAAKoO,UAAuB,IAAM,IAC1C4G,EAAOJ,EAASlM,EAAmBA,EACnCuM,EAAQL,EAAS5U,KAAK+N,SAASmH,SAAWlV,KAAK+N,SAASoH,KACxDR,EAAOC,EAASxI,EAAoBA,EAC1C,OAAOvD,EAAAA,EAAI,yBAAyB7I,KAAKiN,aAAeqG,EAAAA,aAAiBxK,EAAAA,EAAAA,IAAa,CAAE,CAACJ,IAAqB,EAAM,CAACsM,IAAO,sBAA0BnH,GAAayF,EAAAA,aAAkBtT,KAAK0R,0BAA0BuD,GAAS3B,EAAAA,6BAA0C,QAARuB,WAAuBF,YAAeI,4BACvS,CACAK,MAAAA,GACE,MAAM,UAAEvH,GAAc7N,KACtB,OAAO2I,EAAAA,EAAAA,GAAqB,CAAE1B,SAAUjH,KAAKiH,SAAU2B,SAAUC,EAAAA,EAAI,mBAAmB7I,KAAKmE,mBAAmBnE,KAAKkO,QAAU,MAAQ,iCAAiClO,KAAK+N,SAASsH,mBAAkBvM,EAAAA,EAAAA,IAAa,CACnN,CAACJ,IAAgB,EACjB,CAACA,GAAwB1I,KAAKsO,eAC9B,CAAC5F,GAAwC,SAAnB1I,KAAKoO,wBACdpO,KAAK+R,2BAA2B/R,KAAKqS,2BAA2BrS,KAAKuS,uCAAuCvS,KAAKiS,6BAA6BjS,KAAKkS,yCAAwCuB,EAAAA,EAAAA,GAAIzT,KAAKgT,sCAAqClK,EAAAA,EAAAA,IAAa,CACnQ,CAACJ,IAAoB,EACrB,CAACA,GAAyC,YAAdmF,EAC5B,CAACnF,GAA0C,aAAdmF,UACtB7N,KAAKiN,aAAeqG,EAAAA,OAAWG,EAAAA,EAAAA,GAAIzT,KAAKiT,4CAA4CjT,KAAKgR,qCAAqChR,KAAKgO,MAAM/B,OAAS,GAAKjM,KAAKwT,wBAA0B,KAAwB,SAAnBxT,KAAKoO,WAAwBpO,KAAK0T,YAAY,aAAe,KAAwB,SAAnB1T,KAAKoO,WAAwBpO,KAAK0T,YAAY,SAAW,YACjU,GAEF4B,EAAAA,EAAAA,GAAc,mBAAoB9I,kFC/UlC,MAAM+I,EAAiCC,CACrCC,EACAC,KAEA,MAAMC,EAAWF,EAAOG,KACxB,QAAI,IAAAD,EACF,OAAO,EAET,IAAK,MAAMF,KAAOE,EASfF,EAA2DI,OAC1DH,GAAA,GAIFH,EAA+BE,EAAKC,GAEtC,OAAO,CAAI,EASPI,EAAkCL,IACtC,IAAIC,EAAQC,EACZ,EAAG,CACD,QAAI,KAACD,EAASD,EAAIM,MAChB,MAEFJ,EAAWD,EAAOE,KAClBD,EAASK,OAAOP,GAChBA,EAAMC,CACR,OAA4B,IAAnBC,GAAUM,KAAA,EAGfC,EAA6BT,IAGjC,IAAK,IAAIC,EAASA,EAASD,EAAIM,KAAWN,EAAMC,EAAQ,CACtD,IAAIC,EAAWD,EAAOE,KACtB,QAAI,IAAAD,EACFD,EAAOE,KAA2BD,EAAW,IAAI3M,SAC5C,GAAI2M,EAAS5W,IAAI0W,GAGtB,MAEFE,EAAS1L,IAAIwL,GACbU,EAAqBT,EACtB,GAUH,SAASU,EAAyCX,QAAA,IAC5CzV,KAAK4V,MACPE,EAA+B9V,MAC/BA,KAAK+V,KAAWN,EAChBS,EAA0BlW,OAE1BA,KAAK+V,KAAWN,CAEpB,CAuBA,SAASY,EAEPZ,EACAC,GAAA,EACAC,EAAgB,GAEhB,MAAMO,EAAQlW,KAAKsW,KACbF,EAAWpW,KAAK4V,KACtB,QAAI,IAAAQ,GAA4C,IAAlBA,EAASH,KAGvC,GAAIP,EACF,GAAIvL,MAAMC,QAAQ8L,GAIhB,IAAK,IAAIT,EAAIE,EAAeF,EAAIS,EAAMjK,OAAQwJ,IAC5CF,EAA+BW,EAAMT,IAAA,GACrCK,EAA+BI,EAAMT,SAErB,MAATS,IAITX,EAA+BW,GAAA,GAC/BJ,EAA+BI,SAGjCX,EAA+BvV,KAAMyV,EAEzC,CAKA,MAAMU,EAAwBV,IACvBA,EAAkBjL,MAAQmL,EAAAA,GAASY,QACrCd,EAAkBe,OACjBH,EACDZ,EAAkBgB,OAA8BL,EAClD,EAoBG,MAAgBM,UAAuBhB,EAAAA,GAA7CvW,WAAAA,GAAA,SAAAuN,WAYW,KAAwBkJ,UAAA,CAgFlC,CAzEUe,IAAAA,CACPlB,EACAC,EACAC,GAEA7V,MAAM6W,KAAalB,EAAMC,EAAQC,GACjCO,EAA0BlW,MAC1BA,KAAK4W,YAAcnB,EAAKoB,IACzB,CAcQhB,IAAAA,CACPJ,EACAC,GAAA,GAEID,IAAgBzV,KAAK4W,cACvB5W,KAAK4W,YAAcnB,EACfA,EACFzV,KAAK8W,gBAEL9W,KAAK+W,kBAGLrB,IACFH,EAA+BvV,KAAMyV,GACrCK,EAA+B9V,MAElC,CAYDgX,QAAAA,CAAStB,GACP,IAAID,EAAAA,EAAAA,IAAmBzV,KAAKiX,MAC1BjX,KAAKiX,KAAOC,KAAWxB,EAAO1V,UACzB,CAML,MAAMyV,EAAY,IAAKzV,KAAKiX,KAAOX,MACnCb,EAAUzV,KAAKmX,MAAqBzB,EACnC1V,KAAKiX,KAAyBC,KAAWzB,EAAWzV,KAAM,EAC5D,CACF,CAQS+W,YAAAA,GAAiB,CACjBD,WAAAA,GAAgB,ECtXf,MAAAnB,EAAYyB,IAAmB,IAAIhB,EAKhD,MAAMA,GAmBN,MAAMN,EAAmC,IAAIuB,QAqHhChB,GAAMd,EAAAA,EAAAA,IA9GnB,cAA2BE,EAKzBL,MAAAA,CAAOK,GACL,OAAOC,EAAAA,EACR,CAEQ4B,MAAAA,CAAO7B,GAAoBF,IAClC,MAAMI,EAAaJ,IAAQvV,KAAKuX,EAahC,OAZI5B,QAAA,IAAc3V,KAAKuX,GAGrBvX,KAAKwX,QAAA,IAEH7B,GAAc3V,KAAKyX,KAAuBzX,KAAK0X,MAGjD1X,KAAKuX,EAAOhC,EACZvV,KAAK2X,GAAWlC,EAAKjS,SAASxF,KAC9BgC,KAAKwX,GAAiBxX,KAAK0X,GAAWjC,EAAKrN,UAEtCsN,EAAAA,EACR,CAEO8B,EAAAA,CAAgB9B,GAItB,GAHK1V,KAAK4W,cACRlB,OAAA,GAEuB,mBAAd1V,KAAKuX,EAAqB,CAUnC,MAAM9B,EAAUzV,KAAK2X,IAAYC,WACjC,IAAIrC,EACFO,EAAiCzW,IAAIoW,QAAA,IACnCF,IACFA,EAAyB,IAAI8B,QAC7BvB,EAAiC+B,IAAIpC,EAASF,SAAA,IAE5CA,EAAuBlW,IAAIW,KAAKuX,IAClCvX,KAAKuX,EAAK9U,KAAKzC,KAAK2X,QAAA,GAEtBpC,EAAuBsC,IAAI7X,KAAKuX,EAAM7B,QAAA,IAElCA,GACF1V,KAAKuX,EAAK9U,KAAKzC,KAAK2X,GAAUjC,EAEjC,MACE1V,KAAKuX,EAAsBvY,MAAQ0W,CAEvC,CAED,MAAA+B,GACE,MAA4B,mBAAdzX,KAAKuX,EACfzB,EACGzW,IAAIW,KAAK2X,IAAYC,aACpBvY,IAAIW,KAAKuX,GACbvX,KAAKuX,GAAMvY,KAChB,CAEQ+X,YAAAA,GAKH/W,KAAKyX,KAAuBzX,KAAK0X,IACnC1X,KAAKwX,QAAA,EAER,CAEQV,WAAAA,GAGP9W,KAAKwX,GAAgBxX,KAAK0X,GAC3B,2ECtGH,MAAMI,EAAcC,CAACpC,EAAiBJ,EAAeG,KACnD,MAAMQ,EAAM,IAAI8B,IAChB,IAAK,IAAIC,EAAI1C,EAAO0C,GAAKvC,EAAKuC,IAC5B/B,EAAI2B,IAAIlC,EAAKsC,GAAIA,GAEnB,OAAO/B,CAAG,EAqcCC,GAASZ,EAAAA,EAAAA,IAlctB,cAA8BG,EAAAA,GAG5BvW,WAAAA,CAAYwW,GAEV,GADA7V,MAAM6V,GACFA,EAASnL,OAAS0L,EAAAA,GAASK,MAC7B,MAAU2B,MAAM,gDAEnB,CAEOC,EAAAA,CACNxC,EACAJ,EACAG,GAEA,IAAIQ,OAAA,IACAR,EACFA,EAAWH,OAAA,IACFA,IACTW,EAAQX,GAEV,MAAM0C,EAAO,GACPnC,EAAS,GACf,IAAIL,EAAQ,EACZ,IAAK,MAAMF,KAAQI,EACjBsC,EAAKxC,GAASS,EAAQA,EAAMX,EAAME,GAASA,EAC3CK,EAAOL,GAASC,EAAUH,EAAME,GAChCA,IAEF,MAAO,CACL2C,OAAAtC,EACAuC,KAAAJ,EAEH,CAQD7C,MAAAA,CACEO,EACAJ,EACAG,GAEA,OAAO1V,KAAKmY,GAAkBxC,EAAOJ,EAAiBG,GAAU0C,MACjE,CAEQd,MAAAA,CACP/B,GACCG,EAAOQ,EAAiBC,IAQzB,MAAMmC,GAAWL,EAAAA,EAAAA,IACf1C,IAEK6C,OAAQG,EAAWF,KAAMG,GAAWxY,KAAKmY,GAC9CzC,EACAQ,EACAC,GAQF,IAAKhM,MAAMC,QAAQkO,GAEjB,OADAtY,KAAKyY,GAAYD,EACVD,EAQT,MAAMnC,EAAWpW,KAAKyY,KAAc,GAK9BC,EAAwB,GAM9B,IAAIC,EACAC,EAGAC,EAAU,EACVC,EAAUR,EAASrM,OAAS,EAC5B8M,EAAU,EACVC,EAAUT,EAAUtM,OAAS,EAsMjC,KAAO4M,GAAWC,GAAWC,GAAWC,GACtC,GAA0B,OAAtBV,EAASO,GAGXA,SACK,GAA0B,OAAtBP,EAASQ,GAGlBA,SACK,GAAI1C,EAAQyC,KAAaL,EAAQO,GAEtCL,EAASK,IAAWjD,EAAAA,EAAAA,IAClBwC,EAASO,GACTN,EAAUQ,IAEZF,IACAE,SACK,GAAI3C,EAAQ0C,KAAaN,EAAQQ,GAEtCN,EAASM,IAAWlD,EAAAA,EAAAA,IAClBwC,EAASQ,GACTP,EAAUS,IAEZF,IACAE,SACK,GAAI5C,EAAQyC,KAAaL,EAAQQ,GAEtCN,EAASM,IAAWlD,EAAAA,EAAAA,IAClBwC,EAASO,GACTN,EAAUS,KAEZvD,EAAAA,EAAAA,IAAWF,EAAemD,EAASM,EAAU,GAAIV,EAASO,IAC1DA,IACAG,SACK,GAAI5C,EAAQ0C,KAAaN,EAAQO,GAEtCL,EAASK,IAAWjD,EAAAA,EAAAA,IAClBwC,EAASQ,GACTP,EAAUQ,KAEZtD,EAAAA,EAAAA,IAAWF,EAAe+C,EAASO,GAAWP,EAASQ,IACvDA,IACAC,SAQA,QAAI,IANAJ,IAGFA,EAAmBb,EAAYU,EAASO,EAASC,GACjDJ,EAAmBd,EAAY1B,EAASyC,EAASC,IAE9CH,EAAiB5Z,IAAIqX,EAAQyC,IAI3B,GAAKF,EAAiB5Z,IAAIqX,EAAQ0C,IAIlC,CAIL,MAAMnD,EAAWiD,EAAiBvZ,IAAImZ,EAAQO,IACxCrD,OAAA,IAAUC,EAAyB2C,EAAS3C,GAAY,KAC9D,GAAgB,OAAZD,EAAkB,CAGpB,MAAMC,GAAUF,EAAAA,EAAAA,IAAWF,EAAe+C,EAASO,KACnD/C,EAAAA,EAAAA,IAAkBH,EAAS4C,EAAUQ,IACrCL,EAASK,GAAWpD,CACrB,MAEC+C,EAASK,IAAWjD,EAAAA,EAAAA,IAAkBJ,EAAS6C,EAAUQ,KACzDtD,EAAAA,EAAAA,IAAWF,EAAe+C,EAASO,GAAWnD,GAG9C4C,EAAS3C,GAAsB,KAEjCoD,GACD,MAvBC1C,EAAAA,EAAAA,IAAWiC,EAASQ,IACpBA,SALAzC,EAAAA,EAAAA,IAAWiC,EAASO,IACpBA,IA8BN,KAAOE,GAAWC,GAAS,CAGzB,MAAMrD,GAAUF,EAAAA,EAAAA,IAAWF,EAAemD,EAASM,EAAU,KAC7DlD,EAAAA,EAAAA,IAAkBH,EAAS4C,EAAUQ,IACrCL,EAASK,KAAapD,CACvB,CAED,KAAOkD,GAAWC,GAAS,CACzB,MAAMnD,EAAU2C,EAASO,KACT,OAAZlD,IACFU,EAAAA,EAAAA,IAAWV,EAEd,CAMD,OAHA3V,KAAKyY,GAAYD,GAEjB9B,EAAAA,EAAAA,IAAkBnB,EAAemD,GAC1B/C,EAAAA,EACR","sources":["../node_modules/@arcgis/lumina/dist/proxyExports-Cdzj7WL_.js","../node_modules/@arcgis/lumina/dist/controllers/index.js","../node_modules/@esri/calcite-components/dist/chunks/array.js","../node_modules/@esri/calcite-components/dist/chunks/component.js","../node_modules/@esri/calcite-components/dist/chunks/global.js","../node_modules/@esri/calcite-components/dist/chunks/interactive.js","../node_modules/@esri/calcite-components/dist/chunks/logger.js","../node_modules/@esri/calcite-components/dist/chunks/observers.js","../node_modules/@esri/calcite-components/dist/chunks/responsive.js","../node_modules/@esri/calcite-components/dist/chunks/useT9n.js","../node_modules/@esri/calcite-components/dist/components/calcite-carousel/customElement.js","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts","../node_modules/lit-html/src/directives/repeat.ts"],"sourcesContent":["import { d as setParentController, e as retrieveParentControllers, o as setAmbientChildController, t as trackKey, h as bypassReadOnly } from \"./Controller-BQOv8BAL.js\";\nconst proxyExports = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  const initialExports = instance.exports;\n  setParentController(ambientControllers.at(-1));\n  const manager = instance.component.manager;\n  manager.W(instance, initialExports);\n  instance.watchExports(manager.W.bind(manager, instance));\n  setAmbientChildController(instance);\n  const hostCandidates = [instance.component, ...ambientControllers].reverse();\n  return trackKey(\n    hostCandidates,\n    (resolution) => resolution === void 0 ? void 0 : setProxy(instance, resolution, initialExports),\n    initialExports\n  );\n};\nconst setProxy = (controller, { host, key, isReactive: assignedToProp }, initialExports) => {\n  const genericHost = host;\n  const controllerValueChanged = genericHost[key] !== controller.exports;\n  const hostValueChanged = genericHost[key] !== initialExports;\n  const controllerUpdatedExports = initialExports !== controller.exports;\n  if (controllerValueChanged && !hostValueChanged && controllerUpdatedExports) {\n    genericHost[key] = controller.exports;\n  }\n  const isProxyExportsOnComponent = host === controller.component;\n  if (isProxyExportsOnComponent) {\n    if (assignedToProp) {\n      const manager = controller.component.manager;\n      if (hostValueChanged) {\n        manager.W(controller, genericHost[key]);\n      }\n      controller.onUpdate((changes) => {\n        if (changes.has(key)) {\n          const value = genericHost[key];\n          if (value !== controller.exports) {\n            manager.W(controller, value);\n          }\n        }\n      });\n    }\n    controller.O = assignedToProp ? void 0 : key;\n  }\n  const isReadOnly = controller.component.constructor.elementProperties.get(key)?.readOnly;\n  controller.watchExports(() => {\n    if (genericHost[key] === controller.exports) {\n      return;\n    }\n    if (isReadOnly) {\n      bypassReadOnly(() => {\n        genericHost[key] = controller.exports;\n      });\n    } else {\n      genericHost[key] = controller.exports;\n    }\n  });\n};\nexport {\n  proxyExports as p\n};\n","import { C as Controller, s as setAmbientComponent, i as isPromise, d as setParentController, e as retrieveParentControllers, t as trackKey, r as retrieveComponent, f as createEventFactory } from \"../Controller-BQOv8BAL.js\";\nimport { G, h, g, c, n, m, k, l, j } from \"../Controller-BQOv8BAL.js\";\nimport { p as proxyExports } from \"../proxyExports-Cdzj7WL_.js\";\nimport { isServer } from \"lit\";\nimport { observeAncestorsMutation, isEsriInternalEnv, getElementAttribute, getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nconst makeController = (constructor) => proxy(void 0, constructor);\nconst makeGenericController = (constructor) => (component) => proxy(\n  component,\n  /**\n   * GenericController is identical to Controller, in all except for typing.\n   * So dying a type-cast here so as not to needlessly add one more object\n   * to the prototype chain\n   */\n  constructor\n);\nclass FunctionalController extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (isPromise(value)) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then((result) => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch((error) => {\n          this.P.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this.P.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n}\nconst proxy = proxyExports(FunctionalController);\nconst useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nclass AttributeWatchController extends Controller {\n  #observer;\n  #attributes;\n  #callback;\n  constructor(attributes, callback) {\n    super();\n    if (isServer) {\n      return;\n    }\n    this.#attributes = attributes;\n    this.#callback = callback;\n    this.#observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (attributes.includes(mutation.attributeName)) {\n          callback.call(\n            this.component,\n            this.component.el.getAttribute(mutation.attributeName),\n            mutation.oldValue,\n            mutation.attributeName\n          );\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this.#attributes.forEach((attribute) => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this.#callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this.#observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this.#attributes\n    });\n  }\n  hostDisconnected() {\n    this.#observer.disconnect();\n  }\n}\nconst load = makeController;\nconst toFunction = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\nconst useMedia = (query) => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  const changed = () => {\n    controller.exports = media.matches;\n  };\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\nconst defaultDirection = \"ltr\";\nconst useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    const callback = () => {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    };\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolved) => {\n        if (resolved?.key === \"dir\") {\n          throw new Error(\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\n          );\n        }\n      },\n      controller.exports\n    );\n  }\n  return void 0;\n});\nconst makeT9nController = (getAssetPath) => (options = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    const locale = getElementLocales(component.el);\n    const pending = { [\"_lang\"]: locale.lang, [\"_t9nLocale\"]: locale.t9nLocale, [\"_loading\"]: true };\n    const componentWithOverrides = component;\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        () => getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          const withoutOverrides = {\n            ...t9nStrings,\n            [\"_lang\"]: lang,\n            [\"_t9nLocale\"]: t9nLocale,\n            [\"_loading\"]: false\n          };\n          controller.exports = withoutOverrides;\n          const label = t9nStrings.componentLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ??= label;\n          }\n          applyOverrides(componentWithOverrides.messageOverrides);\n        },\n        options.name\n      )\n    );\n    const applyOverrides = (messageOverrides) => {\n      const currentValue = controller.exports;\n      const rawMessages = currentValue[\"_original\"] ?? currentValue;\n      const updated = deepMerge(rawMessages, messageOverrides);\n      if (messageOverrides) {\n        updated[\"_original\"] = rawMessages;\n      }\n      controller.exports = updated;\n    };\n    if (\"messageOverrides\" in componentWithOverrides) {\n      controller.onUpdate((changes) => {\n        if (changes.has(\"messageOverrides\")) {\n          applyOverrides(componentWithOverrides.messageOverrides);\n        }\n      });\n    }\n    if (options.blocking) {\n      controller.setProvisionalExports(pending, false);\n      return controller.ready;\n    } else {\n      return pending;\n    }\n  })\n);\nconst deepMerge = (original, overwrites) => {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = { ...original };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n};\nconst usePropertyChange = (_component) => propertyChangeController;\nconst eventName = \"arcgisPropertyChange\";\nconst propertyChangeController = (...toWatch) => {\n  const component = retrieveComponent();\n  const eventEmitter = createEventFactory(eventName, void 0, component);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    toWatch.forEach((prop) => {\n      const descriptor = component.constructor.elementProperties.get(prop);\n      const isProp = descriptor !== void 0 && descriptor.state !== true;\n      if (!isProp) {\n        throw new Error(\n          `For usePropertyChange to emit event on \"${prop}\" property change, you should add @property() to ${prop} in ${component.el.localName}`\n        );\n      }\n    });\n  }\n  let isFirst = true;\n  component.manager.onUpdated((changes) => {\n    if (isFirst || !component.el.isConnected) {\n      isFirst = false;\n      return;\n    }\n    for (const name of toWatch) {\n      if (changes.has(name)) {\n        eventEmitter.emit({ name });\n      }\n    }\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolution) => {\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n          throw new Error(\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\n          );\n        }\n      },\n      eventEmitter\n    );\n  }\n  return eventEmitter;\n};\nexport {\n  Controller,\n  G as GenericController,\n  h as bypassReadOnly,\n  g as bypassSetter,\n  c as controllerSymbol,\n  n as getControllersCount,\n  m as isController,\n  k as keyTrackResolve,\n  load,\n  makeController,\n  makeGenericController,\n  makeT9nController,\n  proxyExports,\n  retrieveComponent,\n  toFunction,\n  trackKey,\n  l as trackPropKey,\n  j as trackPropertyKey,\n  useDirection,\n  useMedia,\n  usePropertyChange,\n  useWatchAttributes\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nfunction getRoundRobinIndex(index, total) {\n  return (index + total) % total;\n}\nexport {\n  getRoundRobinIndex as g\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logger } from \"./logger.js\";\nfunction getIconScale(componentScale) {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\nfunction warnIfMissingRequiredProp(component, newProp, deprecatedProp) {\n  if (!component[newProp] && !component[deprecatedProp]) {\n    logger.warn(`[${component.el.localName}] \"${newProp.toString()}\" or \"${deprecatedProp.toString()}\" is required.`);\n  }\n}\nfunction isHidden(el) {\n  return el.hidden || el.itemHidden;\n}\nasync function componentFocusable(component) {\n  await component.componentOnReady();\n  await component.updateComplete;\n}\nexport {\n  componentFocusable as c,\n  getIconScale as g,\n  isHidden as i,\n  warnIfMissingRequiredProp as w\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nconst calciteContainerSizeWidthXxs = { max: \"320px\" };\nconst calciteContainerSizeWidthXs = { max: \"476px\" };\nconst calciteContainerSizeWidthSm = { max: \"768px\" };\nconst calciteContainerSizeWidthMd = { max: \"1152px\" };\nconst calciteSpacingFixedSm = \"8px\";\nconst calciteSpacingFixedMd = \"12px\";\nconst calciteSpacingFixedXl = \"16px\";\nconst calciteSpacingBase = \"2px\";\nconst calciteSpacingXxs = \"0.25rem\";\nconst calciteSpacingSm = \"0.5rem\";\nexport {\n  calciteContainerSizeWidthXs as a,\n  calciteContainerSizeWidthSm as b,\n  calciteContainerSizeWidthXxs as c,\n  calciteContainerSizeWidthMd as d,\n  calciteSpacingXxs as e,\n  calciteSpacingBase as f,\n  calciteSpacingSm as g,\n  calciteSpacingFixedXl as h,\n  calciteSpacingFixedMd as i,\n  calciteSpacingFixedSm as j\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html } from \"lit-html\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nfunction interceptedClick() {\n  const { disabled } = this;\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\nfunction onPointerDown(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.preventDefault();\n  }\n}\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\nfunction onNonBubblingWhenDisabledMouseEvent(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\nconst captureOnlyOptions = { capture: true };\nfunction updateHostInteraction(component) {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    blockInteraction(component);\n    return;\n  }\n  restoreInteraction(component);\n  component.el.removeAttribute(\"aria-disabled\");\n}\nfunction blockInteraction(component) {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\nfunction addInteractionListeners(element) {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nfunction restoreInteraction(component) {\n  delete component.el.click;\n  removeInteractionListeners(component.el);\n}\nfunction removeInteractionListeners(element) {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nconst CSS = {\n  container: \"interaction-container\"\n};\nconst InteractiveContainer = ({ children, disabled }) => html`<div class=${safeClassMap(CSS.container)} .inert=${disabled}>${children}</div>`;\nexport {\n  InteractiveContainer as I,\n  updateHostInteraction as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logLevel } from \"./runtime.js\";\nconst loggedDeprecations = /* @__PURE__ */ new Set();\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10\n};\nfunction willLog(level) {\n  return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n  if (!willLog(level)) {\n    return;\n  }\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n  debug: (message) => forwardToConsole(\"debug\", message),\n  info: (message) => forwardToConsole(\"info\", message),\n  warn: (message) => forwardToConsole(\"warn\", message),\n  error: (message) => forwardToConsole(\"error\", message),\n  trace: (message) => forwardToConsole(\"trace\", message),\n  deprecated\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n  loggedDeprecations.add(key);\n  const multiSuggestions = Array.isArray(suggested);\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n  forwardToConsole(\"warn\", message);\n}\nexport {\n  logger as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { isServer } from \"lit\";\nfunction createObserver(type, callback, options) {\n  if (isServer) {\n    return void 0;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return function() {\n    return type === \"intersection\" ? window.IntersectionObserver : type === \"mutation\" ? ExtendedMutationObserver : window.ResizeObserver;\n  }();\n}\nexport {\n  createObserver as c\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as calciteContainerSizeWidthXxs, a as calciteContainerSizeWidthXs, b as calciteContainerSizeWidthSm, d as calciteContainerSizeWidthMd } from \"./global.js\";\nconst breakpoints = {\n  width: {\n    medium: cssLengthToNumber(calciteContainerSizeWidthMd.max),\n    small: cssLengthToNumber(calciteContainerSizeWidthSm.max),\n    xsmall: cssLengthToNumber(calciteContainerSizeWidthXs.max),\n    xxsmall: cssLengthToNumber(calciteContainerSizeWidthXxs.max)\n  }\n};\nfunction cssLengthToNumber(length) {\n  return parseInt(length);\n}\nexport {\n  breakpoints as b\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeT9nController } from \"@arcgis/lumina/controllers\";\nimport { g as getAssetPath } from \"./runtime.js\";\nconst useT9n = makeT9nController(getAssetPath);\nexport {\n  useT9n as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { repeat } from \"lit-html/directives/repeat.js\";\nimport { nothing, html } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { z as whenAnimationDone, s as slotChangeGetAssignedElements, d as focusElementInGroup, g as getElementDir } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { b as breakpoints } from \"../../chunks/responsive.js\";\nimport { g as getRoundRobinIndex } from \"../../chunks/array.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst DURATION = 6e3;\nconst CSS = {\n  container: \"container\",\n  containerOverlaid: \"container--overlaid\",\n  containerEdged: \"container--edged\",\n  itemContainer: \"item-container\",\n  itemContainerForward: \"item-container--forward\",\n  itemContainerBackward: \"item-container--backward\",\n  pagination: \"pagination\",\n  paginationItems: \"pagination-items\",\n  paginationItem: \"pagination-item\",\n  paginationItemIndividual: \"pagination-item--individual\",\n  paginationItemVisible: \"pagination-item--visible\",\n  paginationItemOutOfRange: \"pagination-item--out-of-range\",\n  paginationItemSelected: \"pagination-item--selected\",\n  paginationItemRangeEdge: \"pagination-item--range-edge\",\n  pageNext: \"page-next\",\n  pagePrevious: \"page-previous\",\n  autoplayControl: \"autoplay-control\",\n  autoplayProgress: \"autoplay-progress\"\n};\nconst ICONS = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n  inactive: \"bullet-point\",\n  active: \"bullet-point-large\",\n  pause: \"pause-f\",\n  play: \"play-f\"\n};\nconst centerItemsByBreakpoint = {\n  medium: 7,\n  small: 5,\n  xsmall: 3,\n  xxsmall: 1\n};\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex;inline-size:100%;--calcite-internal-internal-carousel-item-space: 1.5rem;--calcite-internal-internal-carousel-item-space-wide: 3.5rem;--calcite-internal-internal-carousel-item-background-color: var( --calcite-internal-carousel-item-background-color, var(--calcite-color-foreground-1) );--calcite-internal-internal-carousel-item-background-color-hover: var( --calcite-internal-carousel-item-background-color-hover, var(--calcite-color-foreground-2) );--calcite-internal-internal-carousel-item-background-color-active: var( --calcite-internal-carousel-item-background-color-active, var(--calcite-color-foreground-2) );--calcite-internal-internal-carousel-item-background-color-selected: var( --calcite-internal-carousel-item-background-color-selected, var(--calcite-color-foreground-1) );--calcite-internal-internal-carousel-item-icon-color-hover: var( --calcite-internal-carousel-item-icon-color-hover, var(--calcite-color-text-1) );--calcite-internal-internal-carousel-item-icon-color: var( --calcite-internal-carousel-item-icon-color, var(--calcite-color-border-1) );--calcite-internal-internal-carousel-item-icon-color-selected: var( --calcite-internal-carousel-item-icon-color-selected, var(--calcite-color-brand) );--calcite-internal-internal-carousel-control-color-hover: var( --calcite-internal-carousel-control-color-hover, var(--calcite-color-text-1) );--calcite-internal-internal-carousel-control-color: var( --calcite-internal-carousel-item-icon-color, var(--calcite-color-text-3) );--calcite-internal-internal-carousel-autoplay-progress-background-color: var( --calcite-internal-carousel-autoplay-progress-background-color, var(--calcite-color-border-3) );--calcite-internal-internal-carousel-autoplay-progress-fill-color: var( --calcite-internal-carousel-autoplay-progress-fill-color, var(--calcite-color-brand) )}.container{position:relative;display:flex;inline-size:100%;flex-direction:column;overflow:hidden;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2);outline-color:transparent}.container:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.container--edged:not(.container--overlaid){padding-inline:var(--calcite-internal-internal-carousel-item-space-wide);inline-size:calc(100% - var(--calcite-internal-internal-carousel-item-space-wide) * 2)}.item-container{display:flex;flex:1 1 auto;align-items:flex-start;justify-content:center;overflow:auto;padding:.25rem;animation-name:none;animation-duration:var(--calcite-animation-timing)}.container--overlaid .item-container{padding:0}.item-container--forward{animation-name:item-forward}.item-container--backward{animation-name:item-backward}calcite-carousel-item:not([selected]){opacity:0}.pagination{margin:.75rem;display:flex;flex-direction:row;align-items:center;justify-content:center;inline-size:auto}.pagination-items{display:flex;flex-direction:row;align-items:center}.container--overlaid .pagination{position:absolute}.pagination-item.page-next,.pagination-item.page-previous{color:var(--calcite-internal-internal-carousel-control-color)}.pagination-item.page-next:hover,.pagination-item.page-previous:hover{color:var(--calcite-internal-internal-carousel-control-color-hover)}.container--edged .page-next,.container--edged .page-previous{block-size:3rem;inline-size:3rem;position:absolute;inset-block-start:50%;transform:translateY(-50%)}.container--edged .page-next{inset-inline-end:0}.container--edged .page-previous{inset-inline-start:0}.container--overlaid .pagination{inset-block-start:unset;inset-block-end:0;inset-inline:0}.pagination-item.autoplay-control{position:relative;color:var(--calcite-internal-internal-carousel-control-color);--calcite-progress-fill-color: var(--calcite-internal-internal-carousel-autoplay-progress-fill-color);--calcite-progress-background-color: var(--calcite-internal-internal-carousel-autoplay-progress-background-color)}.autoplay-control:focus .autoplay-progress{inset-block-end:4px;inset-inline:2px;inline-size:calc(100% - 4px)}.autoplay-progress{position:absolute;inset-block-end:2px;inset-inline:0;inline-size:100%}.pagination-item{margin:0;block-size:2rem;inline-size:2rem;cursor:pointer;align-items:center;border-style:none;background-color:transparent;outline-color:transparent;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;-webkit-appearance:none;display:flex;align-content:center;justify-content:center;--calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color);color:var(--calcite-internal-internal-carousel-item-icon-color)}.pagination-item:hover{background-color:var(--calcite-internal-internal-carousel-item-background-color-hover);color:var(--calcite-internal-internal-carousel-item-icon-color-hover)}.pagination-item:focus{background-color:var(--calcite-internal-internal-carousel-item-background-color-active);outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.pagination-item:active{background-color:var(--calcite-internal-internal-carousel-item-background-color-active);color:var(--calcite-internal-internal-carousel-item-icon-color-hover)}.pagination-item calcite-icon{color:inherit;pointer-events:none}.pagination-item.pagination-item--selected{--calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color-selected);--calcite-color-foreground-3: var(--calcite-internal-internal-carousel-item-background-color-selected);color:var(--calcite-internal-internal-carousel-item-icon-color-selected)}.pagination-item--individual{pointer-events:none;inline-size:0px;padding:0;opacity:0;visibility:hidden;transition:var(--calcite-animation-timing) ease-in-out inline-size,var(--calcite-animation-timing) ease-in-out padding,var(--calcite-animation-timing) ease-in-out opacity}.pagination-item--individual.pagination-item--visible{pointer-events:auto;inline-size:2rem;opacity:1;visibility:visible}.pagination-item--range-edge calcite-icon{scale:.75;transition:var(--calcite-animation-timing) ease-in-out scale}.container--overlaid .pagination-item{background-color:var(--calcite-internal-internal-carousel-item-background-color)}.container--overlaid .pagination-item:hover{background-color:var(--calcite-internal-internal-carousel-item-background-color-hover)}.container--overlaid .pagination-item:focus{background-color:var(--calcite-internal-internal-carousel-item-background-color-active)}.container--overlaid .pagination-item:active{background-color:var(--calcite-internal-internal-carousel-item-background-color-active)}@keyframes item-forward{0%{transform:translate3d(100px,0,0)}to{transform:translateZ(0)}}@keyframes item-backward{0%{transform:translate3d(-100px,0,0)}to{transform:translateZ(0)}}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Carousel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.autoplayHandler = () => {\n      this.clearIntervals();\n      this.slideDurationInterval = setInterval(this.timer, this.autoplayDuration / 100);\n    };\n    this.containerId = `calcite-carousel-container-${guid()}`;\n    this.resizeHandler = ({ contentRect: { width } }) => {\n      this.setMaxItemsToBreakpoint(width);\n    };\n    this.resizeObserver = createObserver(\"resize\", (entries) => entries.forEach(this.resizeHandler));\n    this.slideDurationInterval = null;\n    this.slideInterval = null;\n    this.timer = () => {\n      let time = this.slideDurationRemaining;\n      const notSuspended = !this.suspendedDueToFocus && !this.suspendedDueToHover || this.userPreventsSuspend;\n      if (notSuspended) {\n        if (time <= 0.01) {\n          time = 1;\n          this.direction = \"forward\";\n          this.nextItem(false);\n        } else {\n          time = time - 0.01;\n        }\n      }\n      if (time > 0) {\n        this.slideDurationRemaining = time;\n      }\n    };\n    this.messages = useT9n();\n    this.direction = \"standby\";\n    this.items = [];\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\n    this.playing = false;\n    this.slideDurationRemaining = 1;\n    this.suspendedDueToFocus = false;\n    this.suspendedDueToHover = false;\n    this.suspendedSlideDurationRemaining = 1;\n    this.userPreventsSuspend = false;\n    this.arrowType = \"inline\";\n    this.autoplay = false;\n    this.autoplayDuration = DURATION;\n    this.controlOverlay = false;\n    this.disabled = false;\n    this.calciteCarouselChange = createEvent({ cancelable: false });\n    this.calciteCarouselPause = createEvent({ cancelable: false });\n    this.calciteCarouselPlay = createEvent({ cancelable: false });\n    this.calciteCarouselResume = createEvent({ cancelable: false });\n    this.calciteCarouselStop = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { direction: [16, {}, { state: true }], items: [16, {}, { state: true }], maxItems: [16, {}, { state: true }], playing: [16, {}, { state: true }], selectedIndex: [16, {}, { state: true }], slideDurationRemaining: [16, {}, { state: true }], suspendedDueToFocus: [16, {}, { state: true }], suspendedDueToHover: [16, {}, { state: true }], suspendedSlideDurationRemaining: [16, {}, { state: true }], userPreventsSuspend: [16, {}, { state: true }], arrowType: [3, {}, { reflect: true }], autoplay: [3, {}, { reflect: true }], autoplayDuration: [11, {}, { type: Number, reflect: true }], controlOverlay: [7, {}, { reflect: true, type: Boolean }], disabled: [7, {}, { reflect: true, type: Boolean }], label: 1, messageOverrides: [0, {}, { attribute: false }], paused: [5, {}, { type: Boolean }], selectedItem: [0, {}, { attribute: false }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async play() {\n    if (this.playing || this.autoplay !== \"\" && !this.autoplay && this.autoplay !== \"paused\") {\n      return;\n    }\n    this.handlePlay(true);\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    this.container?.focus();\n  }\n  async stop() {\n    if (!this.playing) {\n      return;\n    }\n    this.handlePause(true);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.resizeObserver?.observe(this.el);\n  }\n  async load() {\n    if ((this.autoplay === \"\" || this.autoplay) && this.autoplay !== \"paused\") {\n      this.handlePlay(false);\n    } else if (this.autoplay === \"paused\") {\n      this.paused = true;\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"autoplay\") && this.hasUpdated) {\n      this.autoplayWatcher(this.autoplay);\n    }\n    if (changes.has(\"direction\") && (this.hasUpdated || this.direction !== \"standby\")) {\n      this.directionWatcher(this.direction);\n    }\n    if (changes.has(\"playing\") && (this.hasUpdated || this.playing !== false)) {\n      this.paused = !this.playing;\n    }\n    if (changes.has(\"suspendedDueToFocus\") && (this.hasUpdated || this.suspendedDueToFocus !== false) || changes.has(\"suspendedDueToHover\") && (this.hasUpdated || this.suspendedDueToHover !== false)) {\n      this.suspendWatcher();\n    }\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearIntervals();\n    this.resizeObserver?.disconnect();\n  }\n  autoplayWatcher(autoplay) {\n    if (!autoplay) {\n      this.handlePause(false);\n    }\n  }\n  async directionWatcher(direction) {\n    if (direction === \"standby\") {\n      return;\n    }\n    await whenAnimationDone(this.itemContainer, direction === \"forward\" ? \"item-forward\" : \"item-backward\");\n    this.direction = \"standby\";\n  }\n  suspendWatcher() {\n    if (!this.suspendedDueToFocus && !this.suspendedDueToHover) {\n      this.suspendEnd();\n    } else {\n      this.suspendStart();\n    }\n  }\n  setMaxItemsToBreakpoint(width) {\n    if (!width) {\n      return;\n    }\n    if (width >= breakpoints.width.small) {\n      this.maxItems = centerItemsByBreakpoint.medium;\n      return;\n    }\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = centerItemsByBreakpoint.small;\n      return;\n    }\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = centerItemsByBreakpoint.xsmall;\n      return;\n    }\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\n  }\n  clearIntervals() {\n    clearInterval(this.slideDurationInterval);\n    clearInterval(this.slideInterval);\n  }\n  nextItem(emit) {\n    if (this.playing && emit) {\n      this.playing = false;\n    }\n    const nextIndex = getRoundRobinIndex(this.selectedIndex + 1, this.items.length);\n    this.setSelectedItem(nextIndex, emit);\n  }\n  previousItem() {\n    this.playing = false;\n    const prevIndex = getRoundRobinIndex(Math.max(this.selectedIndex - 1, -1), this.items.length);\n    this.setSelectedItem(prevIndex, true);\n  }\n  handlePlay(emit) {\n    this.playing = true;\n    this.autoplayHandler();\n    this.slideInterval = setInterval(this.autoplayHandler, this.autoplayDuration);\n    if (emit) {\n      this.calciteCarouselPlay.emit();\n    }\n  }\n  handlePause(emit) {\n    this.playing = false;\n    this.clearIntervals();\n    this.slideDurationRemaining = 1;\n    this.suspendedSlideDurationRemaining = 1;\n    if (emit) {\n      this.calciteCarouselStop.emit();\n    }\n  }\n  suspendStart() {\n    this.suspendedSlideDurationRemaining = this.slideDurationRemaining;\n  }\n  suspendEnd() {\n    this.slideDurationRemaining = this.suspendedSlideDurationRemaining;\n  }\n  handleSlotChange(event) {\n    const items = slotChangeGetAssignedElements(event);\n    if (items.length < 1) {\n      return;\n    }\n    const activeItemIndex = items.findIndex((item) => item.selected);\n    const requestedSelectedIndex = activeItemIndex > -1 ? activeItemIndex : 0;\n    this.items = items;\n    this.setSelectedItem(requestedSelectedIndex, false);\n  }\n  setSelectedItem(requestedIndex, emit) {\n    const previousSelected = this.selectedIndex;\n    this.items.forEach((el, index) => {\n      const match = requestedIndex === index;\n      el.selected = match;\n      if (match) {\n        this.selectedItem = el;\n        this.selectedIndex = index;\n      }\n    });\n    if (emit) {\n      this.playing = false;\n      if (previousSelected !== this.selectedIndex) {\n        this.calciteCarouselChange.emit();\n      }\n    }\n  }\n  handleArrowClick(event) {\n    const direction = event.target.dataset.direction;\n    if (this.playing) {\n      this.handlePause(true);\n    }\n    if (direction === \"next\") {\n      this.direction = \"forward\";\n      this.nextItem(true);\n    } else if (direction === \"previous\") {\n      this.direction = \"backward\";\n      this.previousItem();\n    }\n  }\n  handleItemSelection(event) {\n    const item = event.target;\n    const requestedPosition = parseInt(item.dataset.index);\n    if (requestedPosition === this.selectedIndex) {\n      return;\n    }\n    if (this.playing) {\n      this.handlePause(true);\n    }\n    this.direction = requestedPosition > this.selectedIndex ? \"forward\" : \"backward\";\n    this.setSelectedItem(requestedPosition, true);\n  }\n  toggleRotation() {\n    this.userPreventsSuspend = true;\n    if (this.playing) {\n      this.handlePause(true);\n    } else {\n      this.handlePlay(true);\n    }\n  }\n  handleFocusIn() {\n    const isPlaying = this.playing;\n    if (isPlaying) {\n      this.suspendedDueToFocus = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  }\n  handleMouseIn() {\n    const isPlaying = this.playing;\n    if (isPlaying) {\n      this.suspendedDueToHover = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  }\n  handleMouseOut(event) {\n    const leavingComponent = !this.el.contains(event.relatedTarget);\n    const isPlaying = this.playing;\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToHover = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToFocus) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  }\n  handleFocusOut(event) {\n    const leavingComponent = !event.composedPath().includes(event.relatedTarget);\n    const isPlaying = this.playing;\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToFocus = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToHover) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  }\n  containerKeyDownHandler(event) {\n    if (event.target !== this.container) {\n      return;\n    }\n    const lastItem = this.items.length - 1;\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        event.preventDefault();\n        if (this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") {\n          this.toggleRotation();\n        }\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.direction = \"forward\";\n        this.nextItem(true);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.direction = \"backward\";\n        this.previousItem();\n        break;\n      case \"Home\":\n        event.preventDefault();\n        if (this.selectedIndex === 0) {\n          return;\n        }\n        this.direction = \"backward\";\n        this.setSelectedItem(0, true);\n        break;\n      case \"End\":\n        event.preventDefault();\n        if (this.selectedIndex === lastItem) {\n          return;\n        }\n        this.direction = \"forward\";\n        this.setSelectedItem(lastItem, true);\n        break;\n    }\n  }\n  tabListKeyDownHandler(event) {\n    const visiblePaginationEls = Array(...this.tabList.querySelectorAll(`button:not(.${CSS.paginationItemOutOfRange})`));\n    const currentEl = event.target;\n    switch (event.key) {\n      case \"ArrowRight\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"next\");\n        break;\n      case \"ArrowLeft\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"previous\");\n        break;\n      case \"Home\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"first\");\n        break;\n      case \"End\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"last\");\n        break;\n    }\n  }\n  storeTabListRef(el) {\n    this.tabList = el;\n  }\n  storeContainerRef(el) {\n    this.container = el;\n  }\n  storeItemContainerRef(el) {\n    this.itemContainer = el;\n  }\n  renderRotationControl() {\n    const text = this.playing ? this.messages.pause : this.messages.play;\n    const formattedValue = this.slideDurationRemaining * 100;\n    return html`<button .ariaLabel=${text} class=${safeClassMap({\n      [CSS.paginationItem]: true,\n      [CSS.autoplayControl]: true\n    })} @click=${this.toggleRotation} title=${text ?? nothing}><calcite-icon .icon=${this.playing ? ICONS.pause : ICONS.play} scale=s></calcite-icon>${this.playing && html`<calcite-progress class=${safeClassMap(CSS.autoplayProgress)} .label=${this.messages.carouselItemProgress} .value=${formattedValue}></calcite-progress>` || \"\"}</button>`;\n  }\n  renderPaginationArea() {\n    return html`<div class=${safeClassMap({\n      [CSS.pagination]: true,\n      [CSS.containerOverlaid]: this.controlOverlay\n    })} @keydown=${this.tabListKeyDownHandler} ${ref(this.storeTabListRef)}>${(this.playing || this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") && this.renderRotationControl() || \"\"}${this.arrowType === \"inline\" && this.renderArrow(\"previous\") || \"\"}${this.renderPaginationItems()}${this.arrowType === \"inline\" && this.renderArrow(\"next\") || \"\"}</div>`;\n  }\n  renderPaginationItems() {\n    const { selectedIndex, maxItems, items, label, handleItemSelection } = this;\n    return html`<div .ariaLabel=${label} class=${safeClassMap(CSS.paginationItems)} role=tablist>${repeat(items, (item) => item.id, (item, index) => {\n      const itemCount = items.length;\n      const match = index === selectedIndex;\n      const first = index === 0;\n      const last = index === itemCount - 1;\n      const endRangeStart = itemCount - maxItems - 1;\n      const inStartRange = selectedIndex < maxItems;\n      const inEndRange = selectedIndex >= endRangeStart;\n      const rangeStart = inStartRange ? 0 : selectedIndex - Math.floor(maxItems / 2);\n      const rangeEnd = inEndRange ? itemCount : rangeStart + maxItems;\n      const low = inStartRange ? 0 : inEndRange ? endRangeStart : rangeStart;\n      const high = inStartRange ? maxItems + 1 : rangeEnd;\n      const isEdge = !first && !last && !match && (index === low - 1 || index === high);\n      const visible = match || index <= high && index >= low - 1;\n      const overflowActive = itemCount - 1 <= maxItems;\n      const icon = match ? ICONS.active : ICONS.inactive;\n      return html`<button aria-controls=${(!match ? item.id : void 0) ?? nothing} .ariaSelected=${match} class=${safeClassMap({\n        [CSS.paginationItem]: true,\n        [CSS.paginationItemIndividual]: true,\n        [CSS.paginationItemSelected]: match,\n        [CSS.paginationItemRangeEdge]: itemCount - 1 > maxItems && isEdge,\n        [CSS.paginationItemOutOfRange]: !(overflowActive || visible),\n        [CSS.paginationItemVisible]: overflowActive || visible\n      })} data-index=${index ?? nothing} @click=${handleItemSelection} role=tab title=${item.label ?? nothing}><calcite-icon .icon=${icon} scale=l></calcite-icon></button>`;\n    })}</div>`;\n  }\n  renderArrow(direction) {\n    const isPrev = direction === \"previous\";\n    const dir = getElementDir(this.el);\n    const scale = this.arrowType === \"edge\" ? \"m\" : \"s\";\n    const css2 = isPrev ? CSS.pagePrevious : CSS.pageNext;\n    const title = isPrev ? this.messages.previous : this.messages.next;\n    const icon = isPrev ? ICONS.chevronLeft : ICONS.chevronRight;\n    return html`<button aria-controls=${this.containerId ?? nothing} class=${safeClassMap({ [CSS.paginationItem]: true, [css2]: true })} data-direction=${direction ?? nothing} @click=${this.handleArrowClick} title=${title ?? nothing}><calcite-icon .flipRtl=${dir === \"rtl\"} .icon=${icon} .scale=${scale}></calcite-icon></button>`;\n  }\n  render() {\n    const { direction } = this;\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div .ariaLabel=${this.label} .ariaLive=${this.playing ? \"off\" : \"polite\"} .ariaRoleDescription=${this.messages.carousel} class=${safeClassMap({\n      [CSS.container]: true,\n      [CSS.containerOverlaid]: this.controlOverlay,\n      [CSS.containerEdged]: this.arrowType === \"edge\"\n    })} @focusin=${this.handleFocusIn} @focusout=${this.handleFocusOut} @keydown=${this.containerKeyDownHandler} @mouseenter=${this.handleMouseIn} @mouseleave=${this.handleMouseOut} role=group tabindex=0 ${ref(this.storeContainerRef)}><section class=${safeClassMap({\n      [CSS.itemContainer]: true,\n      [CSS.itemContainerForward]: direction === \"forward\",\n      [CSS.itemContainerBackward]: direction === \"backward\"\n    })} id=${this.containerId ?? nothing} ${ref(this.storeItemContainerRef)}><slot @slotchange=${this.handleSlotChange}></slot></section>${this.items.length > 1 && this.renderPaginationArea() || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"previous\") || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"next\") || \"\"}</div>` });\n  }\n}\ncustomElement(\"calcite-carousel\", Carousel);\nexport {\n  Carousel\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n"],"names":["setProxy","controller","host","key","isReactive","assignedToProp","initialExports","genericHost","controllerValueChanged","exports","hostValueChanged","controllerUpdatedExports","component","manager","W","onUpdate","changes","has","value","O","isReadOnly","constructor","elementProperties","get","readOnly","watchExports","bypassReadOnly","makeController","proxy","makeGenericController","FunctionalController","Controller","super","originalExports","this","setAmbientComponent","constructorChangedExports","isPromise","setProvisionalExports","resolved","then","result","catchUpLifecycle","catch","error","P","reject","console","onLoad","async","queueMicrotask","Class","args","ambientControllers","retrieveParentControllers","instance","setParentController","at","bind","setAmbientChildController","hostCandidates","reverse","trackKey","resolution","useWatchAttributes","attributes","callback","AttributeWatchController","isServer","MutationObserver","mutations","forEach","mutation","includes","attributeName","call","el","getAttribute","oldValue","hostConnected","attribute","hasAttribute","observe","attributeOldValue","attributeFilter","hostDisconnected","disconnect","toFunction","makeT9nController","getAssetPath","options","locale","getElementLocales","pending","lang","t9nLocale","componentWithOverrides","onLifecycle","startLocaleObserver","t9nStrings","withoutOverrides","label","componentLabel","applyOverrides","messageOverrides","name","currentValue","rawMessages","updated","deepMerge","blocking","ready","original","overwrites","merged","Object","entries","getRoundRobinIndex","index","total","getIconScale","componentScale","warnIfMissingRequiredProp","newProp","deprecatedProp","logger","warn","localName","toString","isHidden","hidden","itemHidden","componentFocusable","componentOnReady","updateComplete","calciteContainerSizeWidthXxs","max","calciteContainerSizeWidthXs","calciteContainerSizeWidthSm","calciteContainerSizeWidthMd","calciteSpacingFixedSm","calciteSpacingFixedMd","calciteSpacingFixedXl","calciteSpacingBase","calciteSpacingXxs","calciteSpacingSm","interceptedClick","disabled","HTMLElement","prototype","click","onPointerDown","event","target","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","setAttribute","contains","document","activeElement","blur","element","addEventListener","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","CSS","InteractiveContainer","children","html","safeClassMap","loggedDeprecations","Set","logLevels","trace","debug","info","off","forwardToConsole","level","data","logLevel","willLog","listFormatter","message","deprecated","context","suggested","removalVersion","add","multiSuggestions","Array","isArray","Intl","ListFormat","style","type","format","map","suggestion","createObserver","Observer","ExtendedMutationObserver","window","observedEntry","push","unobserve","newObservedEntries","filter","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver","breakpoints","width","medium","cssLengthToNumber","small","xsmall","xxsmall","length","parseInt","useT9n","ICONS","centerItemsByBreakpoint","styles","css","Carousel","LitElement","arguments","autoplayHandler","clearIntervals","slideDurationInterval","setInterval","timer","autoplayDuration","containerId","guid","resizeHandler","contentRect","setMaxItemsToBreakpoint","resizeObserver","slideInterval","time","slideDurationRemaining","suspendedDueToFocus","suspendedDueToHover","userPreventsSuspend","direction","nextItem","messages","items","maxItems","playing","suspendedSlideDurationRemaining","arrowType","autoplay","controlOverlay","calciteCarouselChange","createEvent","cancelable","calciteCarouselPause","calciteCarouselPlay","calciteCarouselResume","calciteCarouselStop","properties","state","selectedIndex","reflect","Number","Boolean","paused","selectedItem","play","handlePlay","setFocus","container","focus","stop","handlePause","connectedCallback","load","willUpdate","hasUpdated","autoplayWatcher","directionWatcher","suspendWatcher","disconnectedCallback","whenAnimationDone","itemContainer","suspendStart","suspendEnd","clearInterval","emit","nextIndex","setSelectedItem","previousItem","prevIndex","Math","handleSlotChange","slotChangeGetAssignedElements","activeItemIndex","findIndex","item","selected","requestedSelectedIndex","requestedIndex","previousSelected","match","handleArrowClick","dataset","handleItemSelection","requestedPosition","toggleRotation","handleFocusIn","isPlaying","handleMouseIn","handleMouseOut","leavingComponent","relatedTarget","handleFocusOut","composedPath","containerKeyDownHandler","lastItem","tabListKeyDownHandler","visiblePaginationEls","tabList","querySelectorAll","currentEl","focusElementInGroup","storeTabListRef","storeContainerRef","storeItemContainerRef","renderRotationControl","text","pause","formattedValue","nothing","carouselItemProgress","renderPaginationArea","ref","renderArrow","renderPaginationItems","repeat","id","itemCount","first","last","endRangeStart","inStartRange","inEndRange","rangeStart","floor","low","high","isEdge","visible","overflowActive","icon","isPrev","dir","getElementDir","scale","css2","title","previous","next","render","carousel","customElement","s","notifyChildrenConnectedChanged","i","t","e","_$AN","_$AO","o","_$AM","delete","size","r","c","h","n","_$AH","CHILD","_$AP","_$AQ","f","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","createRef","WeakMap","update","G","rt","lt","ct","ht","globalThis","set","u","generateMap","Map","l","Error","dt","values","keys","d","p","a","ut","v","m","y","x","j","k","w"],"sourceRoot":""}