{"version":3,"file":"static/js/64983.2cb26ae4.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-tree.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client/index.js';\nimport { k as focusElement, o as nodeListToArray } from './dom.js';\n\nfunction isTreeItem(element) {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\nfunction getTraversableItems(root) {\n  return Array.from(root.querySelectorAll(\"calcite-tree-item:not([disabled])\")).filter((item) => {\n    let currentItem = item;\n    while (currentItem !== root && currentItem !== undefined) {\n      const parent = currentItem.parentElement;\n      const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n      if (!traversable) {\n        return false;\n      }\n      currentItem = currentItem.parentElement;\n    }\n    return true;\n  });\n}\n\nconst treeCss = \":host{display:block}:host(:focus){outline:2px solid transparent;outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst Tree = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.calciteTreeSelect = createEvent(this, \"calciteTreeSelect\", 6);\n    this.keyDownHandler = (event) => {\n      if (this.child) {\n        return;\n      }\n      const root = this.el;\n      const target = event.target;\n      const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n      if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n        return;\n      }\n      const traversableItems = getTraversableItems(root);\n      if (event.key === \"Tab\") {\n        // root tabindex will be restored when blurred/focused\n        traversableItems.forEach((item) => (item.tabIndex = -1));\n        return;\n      }\n      if (event.key === \"ArrowDown\") {\n        const currentItemIndex = traversableItems.indexOf(target);\n        const nextItem = traversableItems[currentItemIndex + 1];\n        nextItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowUp\") {\n        const currentItemIndex = traversableItems.indexOf(target);\n        const previousItem = traversableItems[currentItemIndex - 1];\n        previousItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowLeft\") {\n        if (target.hasChildren && target.expanded) {\n          target.expanded = false;\n          event.preventDefault();\n          return;\n        }\n        const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n        const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n        parentItem?.focus();\n        event.preventDefault();\n        return;\n      }\n      if (event.key === \"ArrowRight\") {\n        if (!target.disabled && target.hasChildren) {\n          if (!target.expanded) {\n            target.expanded = true;\n            event.preventDefault();\n          }\n          else {\n            const currentItemIndex = traversableItems.indexOf(target);\n            const nextItem = traversableItems[currentItemIndex + 1];\n            nextItem?.focus();\n            event.preventDefault();\n          }\n        }\n        return;\n      }\n      if (event.key === \"Home\") {\n        const firstNode = traversableItems.shift();\n        if (firstNode) {\n          firstNode.focus();\n          event.preventDefault();\n        }\n        return;\n      }\n      if (event.key === \"End\") {\n        const lastNode = traversableItems.pop();\n        if (lastNode) {\n          lastNode.focus();\n          event.preventDefault();\n        }\n        return;\n      }\n    };\n    this.lines = false;\n    this.child = undefined;\n    this.scale = \"m\";\n    this.selectionMode = \"single\";\n    this.selectedItems = [];\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentWillRender() {\n    const parent = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n  render() {\n    return (h(Host, { \"aria-multiselectable\": this.child\n        ? undefined\n        : (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\").toString(), onKeyDown: this.keyDownHandler, role: !this.child ? \"tree\" : undefined, tabIndex: this.getRootTabIndex() }, h(\"slot\", null)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  onFocus() {\n    if (!this.child) {\n      const focusTarget = this.el.querySelector(\"calcite-tree-item[selected]:not([disabled])\") || this.el.querySelector(\"calcite-tree-item:not([disabled])\");\n      focusElement(focusTarget);\n    }\n  }\n  onFocusIn(event) {\n    const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n  onFocusOut(event) {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget);\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n  onInternalTreeItemSelect(event) {\n    if (this.child) {\n      return;\n    }\n    const target = event.target;\n    const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n    const shouldSelect = this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n    const shouldModifyToCurrentSelection = !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n    const shouldClearCurrentSelection = !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\");\n    const shouldUpdateExpand = [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n      target.hasChildren;\n    const targetItems = [];\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item[selected]\"));\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n    if (shouldUpdateExpand &&\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)) {\n      target.expanded = !target.expanded;\n    }\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    }\n    else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = true;\n        }\n      });\n    }\n    this.selectedItems = isNoneSelectionMode\n      ? []\n      : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    this.calciteTreeSelect.emit();\n    event.stopPropagation();\n  }\n  updateAncestorTree(event) {\n    const item = event.target;\n    const updateItem = event.detail.updateItem;\n    if (item.disabled || (item.indeterminate && !updateItem)) {\n      return;\n    }\n    const ancestors = [];\n    let parent = item.parentElement.closest(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest(\"calcite-tree-item\");\n    }\n    const childItems = Array.from(item.querySelectorAll(\"calcite-tree-item:not([disabled])\"));\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    }\n    else {\n      futureSelected = item.selected;\n    }\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n    function updateItemState(childItems, item) {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(el.querySelectorAll(\":scope > calcite-tree > calcite-tree-item\"));\n      updateItemState(directChildItems, el);\n    });\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      }\n      else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n    this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  getRootTabIndex() {\n    return !this.child ? 0 : -1;\n  }\n  get el() { return this; }\n  static get style() { return treeCss; }\n}, [1, \"calcite-tree\", {\n    \"lines\": [1540],\n    \"child\": [1540],\n    \"scale\": [1537],\n    \"selectionMode\": [1537, \"selection-mode\"],\n    \"selectedItems\": [1040]\n  }, [[0, \"focus\", \"onFocus\"], [0, \"focusin\", \"onFocusIn\"], [0, \"focusout\", \"onFocusOut\"], [0, \"calciteInternalTreeItemSelect\", \"onInternalTreeItemSelect\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-tree\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-tree\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Tree);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteTree = Tree;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteTree, defineCustomElement };\n"],"names":["isTreeItem","element","tagName","Tree","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","calciteTreeSelect","createEvent","keyDownHandler","event","child","root","el","target","contains","includes","key","traversableItems","Array","from","querySelectorAll","filter","item","currentItem","undefined","parent","parentElement","hasChildren","expanded","getTraversableItems","currentItemIndex","indexOf","focus","preventDefault","slice","reverse","find","depth","lastNode","pop","firstNode","shift","disabled","forEach","tabIndex","lines","scale","selectionMode","selectedItems","componentWillRender","closest","render","h","Host","toString","onKeyDown","role","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","relatedTarget","removeAttribute","onFocusOut","onInternalTreeItemSelect","childItems","nodeListToArray","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","targetItems","push","treeItem","selected","window","getSelection","removeAllRanges","i","emit","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","unselected","ancestor","descendants","activeDescendants","style","defineCustomElement$1","customElements","get","define","CalciteTree","defineCustomElement"],"sourceRoot":""}