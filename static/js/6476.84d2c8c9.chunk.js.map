{"version":3,"file":"static/js/6476.84d2c8c9.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/chip/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/chip/chip.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/chip/chip.scss?tag=calcite-chip&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  title: \"title\",\n  close: \"close\",\n  imageContainer: \"image-container\",\n  chipIcon: \"chip-icon\",\n  textSlotted: \"text--slotted\",\n  container: \"container\",\n  imageSlotted: \"image--slotted\",\n  closable: \"closable\",\n  multiple: \"multiple\",\n  single: \"single\",\n  selectable: \"selectable\",\n  selectIcon: \"select-icon\",\n  selectIconActive: \"select-icon--active\",\n  nonInteractive: \"non-interactive\",\n  isCircle: \"is-circle\",\n  selected: \"selected\",\n};\n\nexport const SLOTS = {\n  image: \"image\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  checkedSingle: \"circle-f\",\n  uncheckedMultiple: \"square\",\n  checkedMultiple: \"check-square-f\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Appearance, Kind, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ChipMessages } from \"./assets/chip/t9n\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\n@Component({\n  tag: \"calcite-chip\",\n  styleUrl: \"chip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Chip\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"inverse\" | \"neutral\", Kind> = \"neutral\";\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * This internal property, managed by a containing `calcite-chip-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  watchSelected(selected: boolean): void {\n    if (this.selectionMode === \"none\") {\n      return;\n    }\n    this.handleSelectionPropertyChange(selected);\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ChipMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ChipMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\n   * This is set to `true` by a parent Chip Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  /**\n   * @internal\n   */\n  @Prop() parentChipGroup: HTMLCalciteChipGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipElement;\n\n  @State() defaultMessages: ChipMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() private hasText = false;\n\n  @State() private hasImage = false;\n\n  private containerEl: HTMLDivElement;\n\n  private closeButtonEl: HTMLButtonElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's close button is selected.\n   */\n  @Event({ cancelable: false }) calciteChipClose: EventEmitter<void>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipKeyEvent: EventEmitter<KeyboardEvent>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalSyncSelectedChips: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.selectionMode !== \"none\" && this.interactive && this.selected) {\n      this.handleSelectionPropertyChange(this.selected);\n    }\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      await setUpMessages(this);\n      this.updateHasText();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleEmittingEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalChipKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\")\n  clickHandler(): void {\n    if (!this.interactive && this.closable) {\n      this.closeButtonEl.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    } else if (!this.disabled && this.closable) {\n      this.closeButtonEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.updateHasText();\n  };\n\n  private close = (): void => {\n    this.calciteChipClose.emit();\n    this.selected = false;\n    this.closed = true;\n  };\n\n  private closeButtonKeyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.close();\n    }\n  };\n\n  private updateHasText() {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  private handleSlotImageChange = (event: Event): void => {\n    this.hasImage = slotChangeHasAssignedElement(event);\n  };\n\n  private handleEmittingEvent = (): void => {\n    if (this.interactive) {\n      this.calciteChipSelect.emit();\n    }\n  };\n\n  private handleSelectionPropertyChange(selected: boolean): void {\n    if (this.selectionMode === \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n    const selectedInParent = this.parentChipGroup.selectedItems.includes(this.el);\n\n    if (!selectedInParent && selected && this.selectionMode !== \"multiple\") {\n      this.calciteInternalChipSelect.emit();\n    }\n    if (this.selectionMode !== \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChipImage(): VNode {\n    return (\n      <div class={CSS.imageContainer}>\n        <slot name={SLOTS.image} onSlotchange={this.handleSlotImageChange} />\n      </div>\n    );\n  }\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\"\n        ? this.selected\n          ? ICONS.checkedMultiple\n          : ICONS.uncheckedMultiple\n        : this.selected\n          ? ICONS.checkedSingle\n          : undefined;\n\n    return (\n      <div\n        class={{\n          [CSS.selectIcon]: true,\n          [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n        }}\n      >\n        {icon ? <calcite-icon icon={icon} scale={getIconScale(this.scale)} /> : null}\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.dismissLabel}\n        class={CSS.close}\n        onClick={this.close}\n        onKeyDown={this.closeButtonKeyDownHandler}\n        ref={(el) => (this.closeButtonEl = el)}\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderIcon(): VNode {\n    return (\n      <calcite-icon\n        class={CSS.chipIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const disableInteraction = disabled || (!disabled && !this.interactive);\n    const role =\n      this.selectionMode === \"multiple\" && this.interactive\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\" && this.interactive\n          ? \"radio\"\n          : this.interactive\n            ? \"button\"\n            : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            aria-checked={\n              this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined\n            }\n            aria-label={this.label}\n            class={{\n              [CSS.container]: true,\n              [CSS.textSlotted]: this.hasText,\n              [CSS.imageSlotted]: this.hasImage,\n              [CSS.selectable]: this.selectionMode !== \"none\",\n              [CSS.multiple]: this.selectionMode === \"multiple\",\n              [CSS.single]:\n                this.selectionMode === \"single\" || this.selectionMode === \"single-persist\",\n              [CSS.selected]: this.selected,\n              [CSS.closable]: this.closable,\n              [CSS.nonInteractive]: !this.interactive,\n              [CSS.isCircle]:\n                !this.closable &&\n                !this.hasText &&\n                (!this.icon || !this.hasImage) &&\n                (this.selectionMode === \"none\" ||\n                  (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }}\n            onClick={this.handleEmittingEvent}\n            ref={(el) => (this.containerEl = el)}\n            role={role}\n            tabIndex={disableInteraction ? -1 : 0}\n          >\n            {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n            {this.renderChipImage()}\n            {this.icon && this.renderIcon()}\n            <span class={CSS.title}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </span>\n            {this.closable && this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-chip-background-color: Specifies the component's background color.\n * @prop --calcite-chip-border-color: Specifies the component's border color.\n * @prop --calcite-chip-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-chip-text-color: Specifies the component's text color.\n * @prop --calcite-chip-icon-color: Specifies the component's icon color.\n * @prop --calcite-chip-close-icon-color: Specifies the component's close element icon color.\n * @prop --calcite-chip-select-icon-color: Specifies the component's selection element icon color.\n * @prop --calcite-chip-select-icon-color-pressed: Specifies the component's selection element icon color when active.\n *\n */\n\n:host {\n  @apply inline-flex\n    cursor-default;\n  border-radius: var(--calcite-chip-corner-radius, 9999px);\n}\n\n/* Host Prop Variant styles */\n:host([closed]) {\n  display: none;\n}\n\n:host([appearance=\"outline\"]),\n:host([appearance=\"outline-fill\"]) {\n  .container {\n    --calcite-internal-chip-close-icon-color: var(--calcite-color-text-3);\n    color: var(--calcite-chip-text-color, var(--calcite-color-text-1));\n  }\n\n  &:host([kind=\"brand\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-brand));\n  }\n\n  &:host([kind=\"inverse\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-border-inverse));\n  }\n\n  &:host([kind=\"neutral\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-border-1));\n  }\n}\n:host([appearance=\"outline\"]) .container {\n  @apply bg-transparent;\n}\n:host([appearance=\"outline-fill\"]) .container {\n  background-color: var(--calcite-chip-background-color, var(--calcite-color-foreground-1));\n}\n:host([appearance=\"solid\"]) {\n  .container {\n    border-color: transparent;\n  }\n\n  &:host([kind=\"brand\"]),\n  &:host([kind=\"inverse\"]) {\n    .container {\n      color: var(--calcite-chip-text-color, var(--calcite-color-text-inverse));\n    }\n\n    .close {\n      outline-color: var(--calcite-color-text-inverse);\n    }\n  }\n\n  &:host([kind=\"brand\"]) {\n    .container {\n      background-color: var(--calcite-chip-background-color, var(--calcite-color-brand));\n    }\n  }\n\n  &:host([kind=\"inverse\"]) {\n    .container {\n      background-color: var(--calcite-chip-background-color, var(--calcite-color-inverse));\n    }\n  }\n\n  &:host([kind=\"neutral\"]) .container {\n    background-color: var(--calcite-chip-background-color, var(--calcite-color-foreground-2));\n  }\n}\n:host([kind=\"neutral\"]) .container {\n  --calcite-internal-chip-close-icon-color: var(--calcite-color-text-3);\n\n  color: var(--calcite-chip-text-color, var(--calcite-color-text-1));\n}\n\n:host([selected]) .select-icon {\n  opacity: 1;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n    --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size--2);\n    --calcite-internal-chip-icon-size: 1rem /* 16px */;\n    --calcite-internal-chip-icon-space: 0.25rem /* 4px */;\n    --calcite-internal-chip-image-size: 1.25rem /* 20px */;\n    --calcite-internal-chip-title-space: 0.25rem /* 4px */;\n    --calcite-internal-close-size: 1rem /* 16px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n        --calcite-internal-chip-container-space-x-end: var(--calcite-spacing-px);\n      }\n    }\n\n    &.image--slotted {\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.25rem /* 4px */;\n      }\n      &:not(.text--slotted, :has(.chip-icon)),\n      &:not(.selectable) {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: 0.375rem /* 6px */;\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n          --calcite-internal-chip-select-space-x-start: 0.125rem /* 2px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n        --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n\n        &:not(.text--slotted) {\n          --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        }\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 2rem /* 32px */;\n    --calcite-internal-chip-container-space-x-end: 0.375rem /* 6px */;\n    --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size--1);\n    --calcite-internal-chip-icon-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-icon-space: 0.375rem /* 6px */;\n    --calcite-internal-chip-image-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-title-space: 0.375rem /* 6px */;\n    --calcite-internal-close-size: 1.5rem /* 24px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-end: var(--calcite-spacing-px);\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n    }\n\n    &.image--slotted {\n      &:not(.is-circle) {\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.375rem /* 6px */;\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: var(--calcite-spacing-px);\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n          --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-select-space-x-end: 0.125rem /* 2px */;\n      --calcite-internal-chip-select-space-x-start: 0.125rem /* 2px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n        --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n      }\n    }\n\n    &.closable:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 2.75rem /* 44px */;\n    --calcite-internal-chip-container-space-x-end: 0.5rem /* 8px */;\n    --calcite-internal-chip-container-space-x-start: 0.5rem /* 8px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size-0);\n    --calcite-internal-chip-icon-size: 2rem /* 32px */;\n    --calcite-internal-chip-icon-space: 0.5rem /* 8px */;\n    --calcite-internal-chip-image-size: 2rem /* 32px */;\n    --calcite-internal-chip-title-space: 0.5rem /* 8px */;\n    --calcite-internal-close-size: 2rem /* 32px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n    }\n\n    &.image--slotted {\n      &:not(.is-circle) {\n        --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n      }\n\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.5rem /* 8px */;\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.375rem /* 6px */;\n          --calcite-internal-chip-select-space-x-start: 0.5rem /* 8px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-start: 0.5rem /* 8px */;\n\n      --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.75rem /* 12px */;\n      }\n    }\n\n    &.closable:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-end: 0.375rem /* 6px */;\n    }\n  }\n}\n\n// Sub-element styles\n.container {\n  @apply inline-flex\n  h-full\n  max-w-full\n  items-center\n  focus-base\n  justify-center\n  box-border\n  font-medium;\n\n  border-radius: var(--calcite-chip-corner-radius, 9999px);\n  border-width: var(--calcite-border-width-sm);\n  border-style: solid;\n  font-size: var(--calcite-internal-chip-font-size, var(--calcite-font-size));\n  padding-inline-start: var(--calcite-internal-chip-container-space-x-start);\n  padding-inline-end: var(--calcite-internal-chip-container-space-x-end);\n  block-size: var(--calcite-internal-chip-block-size, auto);\n  inline-size: var(--calcite-internal-chip-inline-size, auto);\n  min-inline-size: var(--calcite-internal-chip-block-size, auto);\n\n  &:hover .select-icon--active {\n    opacity: 1;\n  }\n\n  &.selectable {\n    @apply cursor-pointer;\n  }\n  &:not(.non-interactive):focus {\n    @apply focus-outset;\n  }\n\n  &.text--slotted .title {\n    @apply truncate;\n  }\n\n  &:not(.text--slotted) .title,\n  &:not(.image--slotted) .image-container {\n    display: none;\n  }\n\n  &.is-circle {\n    .chip-icon,\n    .image-container {\n      padding: 0;\n    }\n  }\n}\n\n.title {\n  padding-inline: var(--calcite-internal-chip-title-space);\n}\n\n.image-container {\n  @apply inline-flex overflow-hidden;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  block-size: var(--calcite-internal-chip-image-size, 1.5rem /* 24px */);\n  inline-size: var(--calcite-internal-chip-image-size, 1.5rem /* 24px */);\n  padding-inline-start: 0;\n  padding-inline-end: var(--calcite-internal-chip-image-space-x-end, 0);\n}\n\n.chip-icon {\n  @apply relative my-0 inline-flex duration-150 ease-in-out;\n  color: var(--calcite-chip-icon-color, var(--calcite-chip-text-color, var(--calcite-icon-color, currentColor)));\n  padding-inline: var(--calcite-internal-chip-icon-space, 0.375rem /* 6px */);\n}\n\n.select-icon {\n  align-self: center;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  inset-block-start: -1px;\n  position: absolute;\n  visibility: hidden;\n  inline-size: auto;\n  opacity: 0;\n  transition:\n    opacity 0.15s ease-in-out,\n    inline-size 0.15s ease-in-out;\n  color: var(--calcite-chip-select-icon-color, currentColor);\n\n  &.select-icon--active {\n    position: relative;\n    visibility: visible;\n    opacity: 0.5;\n    color: var(--calcite-chip-select-icon-color-pressed, var(--calcite-chip-select-icon-color, currentColor));\n  }\n}\n\n.multiple .select-icon {\n  @apply flex justify-center items-center;\n}\n\n.multiple .select-icon,\n.single .select-icon--active {\n  padding-inline-start: var(--calcite-internal-chip-select-space-x-start);\n  padding-inline-end: var(--calcite-internal-chip-select-space-x-end);\n  block-size: var(--calcite-internal-chip-icon-size, 1.5rem /* 24px */);\n  inline-size: var(--calcite-internal-chip-icon-size, 1.5rem /* 24px */);\n}\n\nslot[name=\"image\"]::slotted(*) {\n  @apply rounded-half flex h-full w-full overflow-hidden;\n}\n\n@include close-button(\n  var(--calcite-internal-close-size, 1.5rem),\n  0,\n  var(\n    --calcite-chip-close-icon-color,\n    var(--calcite-close-icon-color, var(--calcite-internal-chip-close-icon-color, var(--calcite-color-text-1)))\n  )\n);\n@include disabled();\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use `--calcite-icon-color`. Specifies the component's color. Defaults to current color.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to current color.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","SLOTS","ICONS","Chip","proxyCustomElement","HTMLElement","handleDefaultSlotChange","this","updateHasText","close","calciteChipClose","emit","selected","closed","closeButtonKeyDownHandler","event","isActivationKey","key","preventDefault","handleSlotImageChange","hasImage","slotChangeHasAssignedElement","handleEmittingEvent","interactive","calciteChipSelect","watchSelected","selectionMode","handleSelectionPropertyChange","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","componentWillLoad","setUpLoadableComponent","isBrowser","setUpMessages","keyDownHandler","target","el","calciteInternalChipKeyEvent","clickHandler","closable","closeButtonEl","focus","setFocus","componentFocusable","disabled","containerEl","hasText","textContent","trim","length","calciteInternalSyncSelectedChips","parentChipGroup","selectedItems","includes","calciteInternalChipSelect","renderChipImage","h","class","name","onSlotchange","renderSelectionIcon","icon","undefined","scale","getIconScale","renderCloseButton","messages","dismissLabel","onClick","onKeyDown","ref","tabIndex","renderIcon","flipRtl","iconFlipRtl","render","disableInteraction","role","Host","InteractiveContainer","toAriaBoolean","label","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","substring","getCachedIconDataByKey","id","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","disconnect","pathData","textLabel","dir","getElementDir","semantic","paths","concat","svg","fill","height","viewBox","width","xmlns","path","d","opacity","fetchIconProps","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","console","error","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","interceptedClick","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","get","componentLoaded","forceUpdate","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","tagName","toLowerCase","ok","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}