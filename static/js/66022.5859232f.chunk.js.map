{"version":3,"file":"static/js/66022.5859232f.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/lumina/dist/proxyExports-Cdzj7WL_.js","../node_modules/@arcgis/lumina/dist/controllers/index.js","../node_modules/@esri/calcite-components/dist/chunks/component.js","../node_modules/@esri/calcite-components/dist/chunks/logger.js","../node_modules/@esri/calcite-components/dist/chunks/useT9n.js","../node_modules/@esri/calcite-components/dist/components/calcite-menu-item/customElement.js","../node_modules/lit-html/src/directives/keyed.ts","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts"],"sourcesContent":["import { d as setParentController, e as retrieveParentControllers, o as setAmbientChildController, t as trackKey, h as bypassReadOnly } from \"./Controller-BQOv8BAL.js\";\nconst proxyExports = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  const initialExports = instance.exports;\n  setParentController(ambientControllers.at(-1));\n  const manager = instance.component.manager;\n  manager.W(instance, initialExports);\n  instance.watchExports(manager.W.bind(manager, instance));\n  setAmbientChildController(instance);\n  const hostCandidates = [instance.component, ...ambientControllers].reverse();\n  return trackKey(\n    hostCandidates,\n    (resolution) => resolution === void 0 ? void 0 : setProxy(instance, resolution, initialExports),\n    initialExports\n  );\n};\nconst setProxy = (controller, { host, key, isReactive: assignedToProp }, initialExports) => {\n  const genericHost = host;\n  const controllerValueChanged = genericHost[key] !== controller.exports;\n  const hostValueChanged = genericHost[key] !== initialExports;\n  const controllerUpdatedExports = initialExports !== controller.exports;\n  if (controllerValueChanged && !hostValueChanged && controllerUpdatedExports) {\n    genericHost[key] = controller.exports;\n  }\n  const isProxyExportsOnComponent = host === controller.component;\n  if (isProxyExportsOnComponent) {\n    if (assignedToProp) {\n      const manager = controller.component.manager;\n      if (hostValueChanged) {\n        manager.W(controller, genericHost[key]);\n      }\n      controller.onUpdate((changes) => {\n        if (changes.has(key)) {\n          const value = genericHost[key];\n          if (value !== controller.exports) {\n            manager.W(controller, value);\n          }\n        }\n      });\n    }\n    controller.O = assignedToProp ? void 0 : key;\n  }\n  const isReadOnly = controller.component.constructor.elementProperties.get(key)?.readOnly;\n  controller.watchExports(() => {\n    if (genericHost[key] === controller.exports) {\n      return;\n    }\n    if (isReadOnly) {\n      bypassReadOnly(() => {\n        genericHost[key] = controller.exports;\n      });\n    } else {\n      genericHost[key] = controller.exports;\n    }\n  });\n};\nexport {\n  proxyExports as p\n};\n","import { C as Controller, s as setAmbientComponent, i as isPromise, d as setParentController, e as retrieveParentControllers, t as trackKey, r as retrieveComponent, f as createEventFactory } from \"../Controller-BQOv8BAL.js\";\nimport { G, h, g, c, n, m, k, l, j } from \"../Controller-BQOv8BAL.js\";\nimport { p as proxyExports } from \"../proxyExports-Cdzj7WL_.js\";\nimport { isServer } from \"lit\";\nimport { observeAncestorsMutation, isEsriInternalEnv, getElementAttribute, getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nconst makeController = (constructor) => proxy(void 0, constructor);\nconst makeGenericController = (constructor) => (component) => proxy(\n  component,\n  /**\n   * GenericController is identical to Controller, in all except for typing.\n   * So dying a type-cast here so as not to needlessly add one more object\n   * to the prototype chain\n   */\n  constructor\n);\nclass FunctionalController extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (isPromise(value)) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then((result) => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch((error) => {\n          this.P.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this.P.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n}\nconst proxy = proxyExports(FunctionalController);\nconst useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nclass AttributeWatchController extends Controller {\n  #observer;\n  #attributes;\n  #callback;\n  constructor(attributes, callback) {\n    super();\n    if (isServer) {\n      return;\n    }\n    this.#attributes = attributes;\n    this.#callback = callback;\n    this.#observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (attributes.includes(mutation.attributeName)) {\n          callback.call(\n            this.component,\n            this.component.el.getAttribute(mutation.attributeName),\n            mutation.oldValue,\n            mutation.attributeName\n          );\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this.#attributes.forEach((attribute) => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this.#callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this.#observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this.#attributes\n    });\n  }\n  hostDisconnected() {\n    this.#observer.disconnect();\n  }\n}\nconst load = makeController;\nconst toFunction = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\nconst useMedia = (query) => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  const changed = () => {\n    controller.exports = media.matches;\n  };\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\nconst defaultDirection = \"ltr\";\nconst useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    const callback = () => {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    };\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolved) => {\n        if (resolved?.key === \"dir\") {\n          throw new Error(\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\n          );\n        }\n      },\n      controller.exports\n    );\n  }\n  return void 0;\n});\nconst makeT9nController = (getAssetPath) => (options = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    const locale = getElementLocales(component.el);\n    const pending = { [\"_lang\"]: locale.lang, [\"_t9nLocale\"]: locale.t9nLocale, [\"_loading\"]: true };\n    const componentWithOverrides = component;\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        () => getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          const withoutOverrides = {\n            ...t9nStrings,\n            [\"_lang\"]: lang,\n            [\"_t9nLocale\"]: t9nLocale,\n            [\"_loading\"]: false\n          };\n          controller.exports = withoutOverrides;\n          const label = t9nStrings.componentLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ??= label;\n          }\n          applyOverrides(componentWithOverrides.messageOverrides);\n        },\n        options.name\n      )\n    );\n    const applyOverrides = (messageOverrides) => {\n      const currentValue = controller.exports;\n      const rawMessages = currentValue[\"_original\"] ?? currentValue;\n      const updated = deepMerge(rawMessages, messageOverrides);\n      if (messageOverrides) {\n        updated[\"_original\"] = rawMessages;\n      }\n      controller.exports = updated;\n    };\n    if (\"messageOverrides\" in componentWithOverrides) {\n      controller.onUpdate((changes) => {\n        if (changes.has(\"messageOverrides\")) {\n          applyOverrides(componentWithOverrides.messageOverrides);\n        }\n      });\n    }\n    if (options.blocking) {\n      controller.setProvisionalExports(pending, false);\n      return controller.ready;\n    } else {\n      return pending;\n    }\n  })\n);\nconst deepMerge = (original, overwrites) => {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = { ...original };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n};\nconst usePropertyChange = (_component) => propertyChangeController;\nconst eventName = \"arcgisPropertyChange\";\nconst propertyChangeController = (...toWatch) => {\n  const component = retrieveComponent();\n  const eventEmitter = createEventFactory(eventName, void 0, component);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    toWatch.forEach((prop) => {\n      const descriptor = component.constructor.elementProperties.get(prop);\n      const isProp = descriptor !== void 0 && descriptor.state !== true;\n      if (!isProp) {\n        throw new Error(\n          `For usePropertyChange to emit event on \"${prop}\" property change, you should add @property() to ${prop} in ${component.el.localName}`\n        );\n      }\n    });\n  }\n  let isFirst = true;\n  component.manager.onUpdated((changes) => {\n    if (isFirst || !component.el.isConnected) {\n      isFirst = false;\n      return;\n    }\n    for (const name of toWatch) {\n      if (changes.has(name)) {\n        eventEmitter.emit({ name });\n      }\n    }\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolution) => {\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n          throw new Error(\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\n          );\n        }\n      },\n      eventEmitter\n    );\n  }\n  return eventEmitter;\n};\nexport {\n  Controller,\n  G as GenericController,\n  h as bypassReadOnly,\n  g as bypassSetter,\n  c as controllerSymbol,\n  n as getControllersCount,\n  m as isController,\n  k as keyTrackResolve,\n  load,\n  makeController,\n  makeGenericController,\n  makeT9nController,\n  proxyExports,\n  retrieveComponent,\n  toFunction,\n  trackKey,\n  l as trackPropKey,\n  j as trackPropertyKey,\n  useDirection,\n  useMedia,\n  usePropertyChange,\n  useWatchAttributes\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logger } from \"./logger.js\";\nfunction getIconScale(componentScale) {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\nfunction warnIfMissingRequiredProp(component, newProp, deprecatedProp) {\n  if (!component[newProp] && !component[deprecatedProp]) {\n    logger.warn(`[${component.el.localName}] \"${newProp.toString()}\" or \"${deprecatedProp.toString()}\" is required.`);\n  }\n}\nfunction isHidden(el) {\n  return el.hidden || el.itemHidden;\n}\nasync function componentFocusable(component) {\n  await component.componentOnReady();\n  await component.updateComplete;\n}\nexport {\n  componentFocusable as c,\n  getIconScale as g,\n  isHidden as i,\n  warnIfMissingRequiredProp as w\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logLevel } from \"./runtime.js\";\nconst loggedDeprecations = /* @__PURE__ */ new Set();\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10\n};\nfunction willLog(level) {\n  return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n  if (!willLog(level)) {\n    return;\n  }\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n  debug: (message) => forwardToConsole(\"debug\", message),\n  info: (message) => forwardToConsole(\"info\", message),\n  warn: (message) => forwardToConsole(\"warn\", message),\n  error: (message) => forwardToConsole(\"error\", message),\n  trace: (message) => forwardToConsole(\"trace\", message),\n  deprecated\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n  loggedDeprecations.add(key);\n  const multiSuggestions = Array.isArray(suggested);\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n  forwardToConsole(\"warn\", message);\n}\nexport {\n  logger as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeT9nController } from \"@arcgis/lumina/controllers\";\nimport { g as getAssetPath } from \"./runtime.js\";\nconst useT9n = makeT9nController(getAssetPath);\nexport {\n  useT9n as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { C as CSS_UTILITY, c as customElement } from \"../../chunks/runtime.js\";\nimport { html } from \"lit-html\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { LitElement, createEvent, safeClassMap, nothing } from \"@arcgis/lumina\";\nimport { s as slotChangeGetAssignedElements, g as getElementDir } from \"../../chunks/dom.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  container: \"container\",\n  content: \"content\",\n  dropdownVertical: \"dropdown--vertical\",\n  dropdownMenuItems: \"dropdown-menu-items\",\n  dropdownAction: \"dropdown-action\",\n  layoutVertical: \"layout--vertical\",\n  hoverHrefIcon: \"hover-href-icon\",\n  icon: \"icon\",\n  iconBreadcrumb: \"icon--breadcrumb\",\n  iconDropdown: \"icon--dropdown\",\n  iconEnd: \"icon--end\",\n  iconStart: \"icon--start\",\n  isParentVertical: \"parent--vertical\",\n  itemContent: \"item-content\",\n  open: \"open\",\n  nested: \"nested\",\n  textContainer: \"text-container\"\n};\nconst styles = css`:host{position:relative;box-sizing:border-box;display:flex;align-items:center;flex-shrink:0}:host .container,:host .item-content,:host .content{min-block-size:3rem}:host([layout=vertical]){inline-size:100%}:host(:not([layout=vertical])){block-size:100%}.container,.item-content{display:flex;block-size:100%;inline-size:100%;flex-direction:row;align-items:stretch}.content{position:relative;box-sizing:border-box;display:flex;block-size:100%;inline-size:100%;cursor:pointer;align-items:center;justify-content:center;padding-inline:1rem;font-size:var(--calcite-font-size-0);outline:2px solid transparent;outline-offset:2px;text-decoration:none;padding-block-start:.125rem;border-block-end:.125rem solid var(--calcite-color-transparent);background-color:var(--calcite-menu-background-color, var(--calcite-internal-menu-background-color, var(--calcite-color-foreground-1)));color:var(--calcite-menu-text-color, var(--calcite-internal-menu-text-color, var(--calcite-color-text-2)))}.content:hover{--calcite-internal-menu-background-color: var(--calcite-color-foreground-2)}.content:focus{border-block-end-width:4px;outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))));padding-block-start:.25rem;border-block-end-width:.25rem}.content:active{--calcite-internal-menu-background-color: var(--calcite-color-foreground-3);--calcite-internal-menu-text-color: var(--calcite-color-text-1)}.content span{display:inline-flex}.content.layout--vertical{display:flex;inline-size:100%;justify-content:flex-start;padding-block:1rem;border-block-end:0;border-inline-end:.25rem solid var(--calcite-color-transparent)}:host([layout=vertical]) .content{padding-inline:.75rem}:host([active]) .content{--calcite-internal-menu-text-color: var(--calcite-color-text-1);border-color:var(--calcite-menu-item-accent-color, var(--calcite-color-brand))}:host([active]) .icon{--calcite-internal-menu-item-icon-color: var(--calcite-color-brand)}.icon{color:var(--calcite-menu-text-color, var(--calcite-icon-color, var(--calcite-internal-menu-item-icon-color, var(--calcite-color-text-3))))}.icon--start{margin-inline-end:.75rem}.icon--end{margin-inline-start:.75rem}:host([layout=vertical]) .icon--end{margin-inline-start:auto;padding-inline-start:.75rem}.icon--dropdown{position:relative;margin-inline-start:auto;margin-inline-end:0px;padding-inline-start:.5rem}:host([layout=vertical]) .icon--end~.icon--dropdown{margin-inline-start:.75rem}:host([layout=vertical]) .hover-href-icon{padding-inline-start:.5rem}:host([layout=vertical]) .hover-href-icon~.icon--end{margin-inline-start:.5rem}:host([layout=vertical]) .hover-href-icon~.icon--breadcrumb{margin-inline-start:.75rem}.icon--breadcrumb{margin-inline-end:0px;padding-inline-start:.5rem}:host([layout=vertical]) .icon--breadcrumb{margin-inline-start:auto}:host([layout=vertical]) .icon--breadcrumb~.icon--dropdown{margin-inline-start:.5rem}:host([layout=vertical]) .icon--end~.icon--breadcrumb{margin-inline-start:.5rem}:host([breadcrumb]) .content{padding-inline-end:.75rem}calcite-action{position:relative;block-size:auto;border-inline-start:1px solid var(--calcite-color-foreground-1);--calcite-action-background-color: var(--calcite-menu-background-color);--calcite-action-text-color: var(--calcite-menu-text-color)}calcite-action:after{position:absolute;inset-inline-start:-1px;display:block;inline-size:1px;content:\"\";inset-block:.75rem;background-color:var(--calcite-color-border-3)}calcite-action:hover:after{block-size:100%;inset-block:0}calcite-action:active{--calcite-action-background-color-press: var(--calcite-menu-background-color)}.content:focus~calcite-action,.content:hover~calcite-action{--calcite-action-text-color: var(--calcite-menu-text-color, var(--calcite-color-text-1))}.content:focus~calcite-action:after,.content:hover~calcite-action:after{block-size:100%;inset-block:0}.dropdown-menu-items{position:absolute;display:none;block-size:auto;min-inline-size:100%;flex-direction:column;overflow:visible;border:1px solid var(--calcite-menu-item-sub-menu-border-color, var(--calcite-color-border-3));border-radius:var(--calcite-menu-item-sub-menu-corner-radius, var(--calcite-corner-radius));inset-block-start:100%;z-index:var(--calcite-z-index-dropdown)}.dropdown-menu-items.open{display:block}.dropdown-menu-items.nested{position:absolute;inset-block-start:-1px;transform:translate(calc(100% - 2px))}.parent--vertical{flex-direction:column}.dropdown--vertical.dropdown-menu-items{position:relative;box-shadow:none;inset-block-start:0;transform:none}.dropdown--vertical.dropdown-menu-items:last-of-type{border-inline:0}:host([layout=vertical]:last-of-type) .dropdown-menu-items{border-block-end:0}:host([slot=submenu-item]) .parent--vertical{padding-inline-start:1.5rem}.dropdown-menu-items.nested.calcite--rtl{transform:translate(calc(-100% + 2px))}.dropdown--vertical.dropdown-menu-items.nested.calcite--rtl{transform:none}.hover-href-icon{position:relative;inset-inline-end:.25rem;margin-inline-start:auto;opacity:0;transition:all var(--calcite-internal-animation-timing-medium) ease-in-out}.content:focus .hover-href-icon,.content:hover .hover-href-icon{inset-inline-end:-.25rem;opacity:1}:host([hidden]){display:none}[hidden]{display:none}`;\nclass MenuItem extends LitElement {\n  constructor() {\n    super();\n    this.anchorEl = createRef();\n    this.dropdownActionEl = createRef();\n    this.messages = useT9n();\n    this.hasSubmenu = false;\n    this.isTopLevelItem = false;\n    this.open = false;\n    this.calciteInternalMenuItemKeyEvent = createEvent();\n    this.calciteMenuItemSelect = createEvent();\n    this.listenOn(window, \"click\", this.handleClickOut);\n    this.listen(\"focusout\", this.handleFocusOut);\n    this.listen(\"blur\", this.blurHandler);\n    this.listen(\"focus\", this.focusHandler);\n  }\n  static {\n    this.properties = { hasSubmenu: [16, {}, { state: true }], submenuItems: [16, {}, { state: true }], active: [7, {}, { reflect: true, type: Boolean }], breadcrumb: [7, {}, { reflect: true, type: Boolean }], href: 1, iconEnd: [3, {}, { reflect: true }], iconFlipRtl: [3, {}, { reflect: true }], iconStart: [3, {}, { reflect: true }], isTopLevelItem: [5, {}, { type: Boolean }], label: 1, layout: [3, {}, { reflect: true }], messageOverrides: [0, {}, { attribute: false }], open: [7, {}, { reflect: true, type: Boolean }], rel: [3, {}, { reflect: true }], target: [3, {}, { reflect: true }], text: 1, topLevelMenuLayout: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    this.anchorEl.value.focus();\n  }\n  handleClickOut(event) {\n    if (this.topLevelMenuLayout !== \"vertical\" && this.hasSubmenu && this.open && !event.composedPath().includes(this.el)) {\n      this.open = false;\n    }\n  }\n  handleFocusOut(event) {\n    if (this.topLevelMenuLayout !== \"vertical\" && !this.el.contains(event.relatedTarget)) {\n      this.open = false;\n    }\n  }\n  blurHandler() {\n    this.isFocused = false;\n  }\n  clickHandler(event) {\n    if (this.href && event.target === this.dropdownActionEl.value || !this.href && this.hasSubmenu) {\n      this.open = !this.open;\n    }\n    this.selectMenuItem(event);\n  }\n  focusHandler(event) {\n    const target = event.target;\n    this.isFocused = true;\n    if (target.open && !this.open) {\n      target.open = false;\n    }\n  }\n  handleMenuItemSlotChange(event) {\n    this.submenuItems = slotChangeGetAssignedElements(event);\n    this.submenuItems.forEach((item) => {\n      if (!item.topLevelMenuLayout) {\n        item.topLevelMenuLayout = this.topLevelMenuLayout;\n      }\n    });\n    this.hasSubmenu = this.submenuItems.length > 0;\n  }\n  async keyDownHandler(event) {\n    const { hasSubmenu, href, layout, open, submenuItems } = this;\n    const key = event.key;\n    const targetIsDropdown = event.target === this.dropdownActionEl.value;\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (key === \" \" || key === \"Enter\") {\n      if (hasSubmenu && (!href || href && targetIsDropdown)) {\n        this.open = !open;\n      }\n      if (!(href && targetIsDropdown) && key !== \"Enter\") {\n        this.selectMenuItem(event);\n      }\n      if (key === \" \" || href && targetIsDropdown) {\n        event.preventDefault();\n      }\n    } else if (key === \"Escape\") {\n      if (open) {\n        this.open = false;\n        return;\n      }\n      this.calciteInternalMenuItemKeyEvent.emit({ event });\n      event.preventDefault();\n    } else if (key === \"ArrowDown\" || key === \"ArrowUp\") {\n      event.preventDefault();\n      if ((targetIsDropdown || !href) && hasSubmenu && !open && layout === \"horizontal\") {\n        this.open = true;\n        return;\n      }\n      this.calciteInternalMenuItemKeyEvent.emit({\n        event,\n        children: submenuItems,\n        isSubmenuOpen: open && hasSubmenu\n      });\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.calciteInternalMenuItemKeyEvent.emit({\n        event,\n        children: submenuItems,\n        isSubmenuOpen: true\n      });\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      if ((targetIsDropdown || !href) && hasSubmenu && !open && layout === \"vertical\") {\n        this.open = true;\n        return;\n      }\n      this.calciteInternalMenuItemKeyEvent.emit({\n        event,\n        children: submenuItems,\n        isSubmenuOpen: open && hasSubmenu\n      });\n    }\n  }\n  selectMenuItem(event) {\n    if (event.target !== this.dropdownActionEl.value) {\n      this.calciteMenuItemSelect.emit();\n    }\n  }\n  renderIconStart() {\n    return keyed(CSS.iconStart, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconStart}`} .flipRtl=${this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"} .icon=${this.iconStart} scale=s></calcite-icon>`);\n  }\n  renderIconEnd() {\n    return keyed(CSS.iconEnd, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconEnd}`} .flipRtl=${this.iconFlipRtl === \"end\" || this.iconFlipRtl === \"both\"} .icon=${this.iconEnd} scale=s></calcite-icon>`);\n  }\n  renderBreadcrumbIcon(dir) {\n    return keyed(CSS.iconBreadcrumb, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconBreadcrumb}`} .icon=${dir === \"rtl\" ? \"chevron-left\" : \"chevron-right\"} scale=s></calcite-icon>`);\n  }\n  renderDropdownIcon(dir) {\n    const dirChevron = dir === \"rtl\" ? \"chevron-left\" : \"chevron-right\";\n    return keyed(CSS.iconDropdown, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconDropdown}`} .icon=${this.topLevelMenuLayout === \"vertical\" || this.isTopLevelItem ? this.open ? \"chevron-up\" : \"chevron-down\" : dirChevron} scale=s></calcite-icon>`);\n  }\n  renderDropdownAction(dir) {\n    const dirChevron = dir === \"rtl\" ? \"chevron-left\" : \"chevron-right\";\n    return keyed(CSS.dropdownAction, html`<calcite-action class=${safeClassMap(CSS.dropdownAction)} .icon=${this.topLevelMenuLayout === \"vertical\" || this.isTopLevelItem ? this.open ? \"chevron-up\" : \"chevron-down\" : dirChevron} @click=${this.clickHandler} @keydown=${this.keyDownHandler} .text=${this.messages.open} ${ref(this.dropdownActionEl)}></calcite-action>`);\n  }\n  renderSubmenuItems(dir) {\n    return html`<calcite-menu class=${safeClassMap({\n      [CSS.dropdownMenuItems]: true,\n      [CSS.open]: this.open,\n      [CSS.nested]: !this.isTopLevelItem,\n      [CSS_UTILITY.rtl]: dir === \"rtl\",\n      [CSS.dropdownVertical]: this.topLevelMenuLayout === \"vertical\"\n    })} .label=${this.messages.submenu} layout=vertical role=menu><slot name=submenu-item @slotchange=${this.handleMenuItemSlotChange}></slot></calcite-menu>`;\n  }\n  renderHrefIcon(dir) {\n    return keyed(CSS.hoverHrefIcon, html`<calcite-icon class=${safeClassMap(CSS.hoverHrefIcon)} .icon=${dir === \"rtl\" ? \"arrow-left\" : \"arrow-right\"} scale=s></calcite-icon>`);\n  }\n  renderItemContent(dir) {\n    const hasHref = this.href && (this.topLevelMenuLayout === \"vertical\" || !this.isTopLevelItem);\n    return html`${this.iconStart && this.renderIconStart() || \"\"}<div class=${safeClassMap(CSS.textContainer)}><span>${this.text}</span></div>${hasHref && this.renderHrefIcon(dir) || \"\"}${this.iconEnd && this.renderIconEnd() || \"\"}${this.breadcrumb ? this.renderBreadcrumbIcon(dir) : null}${!this.href && this.hasSubmenu ? this.renderDropdownIcon(dir) : null}`;\n  }\n  render() {\n    const dir = getElementDir(this.el);\n    return html`<li class=${safeClassMap({\n      [CSS.container]: true,\n      [CSS.isParentVertical]: this.topLevelMenuLayout === \"vertical\"\n    })} role=none><div class=${safeClassMap(CSS.itemContent)}><a .ariaCurrent=${this.isFocused ? \"page\" : false} .ariaExpanded=${this.open} .ariaHasPopup=${this.hasSubmenu} .ariaLabel=${this.label} class=${safeClassMap({ [CSS.layoutVertical]: this.layout === \"vertical\", [CSS.content]: true })} href=${this.href ?? nothing} @click=${this.clickHandler} @keydown=${this.keyDownHandler} rel=${this.rel ?? nothing} role=menuitem .tabIndex=${this.isTopLevelItem ? 0 : -1} target=${this.target ?? nothing} ${ref(this.anchorEl)}>${this.renderItemContent(dir)}</a>${this.href && this.hasSubmenu ? this.renderDropdownAction(dir) : null}</div>${this.renderSubmenuItems(dir)}</li>`;\n  }\n}\ncustomElement(\"calcite-menu-item\", MenuItem);\nexport {\n  MenuItem\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["setProxy","controller","host","key","isReactive","assignedToProp","initialExports","genericHost","controllerValueChanged","exports","hostValueChanged","controllerUpdatedExports","component","manager","W","onUpdate","changes","has","value","O","isReadOnly","constructor","elementProperties","get","readOnly","watchExports","bypassReadOnly","makeController","proxy","makeGenericController","FunctionalController","Controller","super","originalExports","this","setAmbientComponent","constructorChangedExports","isPromise","setProvisionalExports","resolved","then","result","catchUpLifecycle","catch","error","P","reject","console","onLoad","async","queueMicrotask","Class","args","ambientControllers","retrieveParentControllers","instance","setParentController","at","bind","setAmbientChildController","hostCandidates","reverse","trackKey","resolution","useWatchAttributes","attributes","callback","AttributeWatchController","isServer","MutationObserver","mutations","forEach","mutation","includes","attributeName","call","el","getAttribute","oldValue","hostConnected","attribute","hasAttribute","observe","attributeOldValue","attributeFilter","hostDisconnected","disconnect","toFunction","makeT9nController","getAssetPath","options","locale","getElementLocales","pending","lang","t9nLocale","componentWithOverrides","onLifecycle","startLocaleObserver","t9nStrings","withoutOverrides","label","componentLabel","applyOverrides","messageOverrides","name","currentValue","rawMessages","updated","deepMerge","blocking","ready","original","overwrites","merged","Object","entries","getIconScale","componentScale","warnIfMissingRequiredProp","newProp","deprecatedProp","logger","warn","localName","toString","isHidden","hidden","itemHidden","componentFocusable","componentOnReady","updateComplete","loggedDeprecations","Set","logLevels","trace","debug","info","off","forwardToConsole","level","data","logLevel","willLog","listFormatter","message","deprecated","context","suggested","removalVersion","add","multiSuggestions","Array","isArray","Intl","ListFormat","style","type","format","map","suggestion","useT9n","CSS","styles","css","MenuItem","LitElement","anchorEl","createRef","dropdownActionEl","messages","hasSubmenu","isTopLevelItem","open","calciteInternalMenuItemKeyEvent","createEvent","calciteMenuItemSelect","listenOn","window","handleClickOut","listen","handleFocusOut","blurHandler","focusHandler","properties","state","submenuItems","active","reflect","Boolean","breadcrumb","href","iconEnd","iconFlipRtl","iconStart","layout","rel","target","text","topLevelMenuLayout","setFocus","focus","event","composedPath","contains","relatedTarget","isFocused","clickHandler","selectMenuItem","handleMenuItemSlotChange","slotChangeGetAssignedElements","item","length","keyDownHandler","targetIsDropdown","defaultPrevented","preventDefault","emit","children","isSubmenuOpen","renderIconStart","keyed","html","renderIconEnd","renderBreadcrumbIcon","dir","renderDropdownIcon","dirChevron","renderDropdownAction","safeClassMap","ref","renderSubmenuItems","CSS_UTILITY","rtl","submenu","renderHrefIcon","renderItemContent","hasHref","render","getElementDir","nothing","customElement","i","t","e","arguments","r","update","s","notifyChildrenConnectedChanged","_$AN","_$AO","o","_$AM","delete","size","c","h","n","_$AH","CHILD","_$AP","_$AQ","f","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","WeakMap","G","rt","lt","ct","ht","element","globalThis","set"],"sourceRoot":""}