"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[3938],{83938:(e,t,i)=>{i.r(t),i.d(t,{default:()=>tt});var r=i(27366),n=i(44055),s=i(45918),a=i(10064),o=i(32718),l=i(92026),c=i(97642),h=i(66978),u=i(94172),f=i(49861),d=i(25243),p=(i(63780),i(27135)),m=i(38511),y=i(69912),g=i(30651),x=i(11936),b=i(6693),w=i(46671),v=(i(59486),i(76200)),I=i(92975),_=i(25899),S=i(45948),R=i(86591),C=i(22678),T=i(1650),k=i(79586),F=i(22824),P=i(46784),M=i(67426),O=i(59068),D=i(32014),B=i(21969),z=i(55635),E=i(92089),N=i(45502),A=i(17314),J=i(80394),Z=i(64145),L=i(53866),H=i(585);let W=class extends((0,M.v)(P.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,J.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:F.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,J.ut)(e.spatialReference);return(0,l.pC)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,_.Nm)(e,o.Z.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=r.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,n);return this.fetchPixels(s,n.size[0],n.size[1],r)}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e=(0,d.TJ)(H.Z,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:r}=t,{rasterInfo:n}=this,{hasMultidimensionalTranspose:s,multidimensionalInfo:a}=n;let{transposedVariableName:o}=t;const c=(0,l.pC)(a)&&s&&(null!=r||(0,B.WU)(i));c&&!o&&(o=(0,l.pC)(i)&&i.length>0?i[0].variableName??void 0:a.variables[0].name,t={...t,transposedVariableName:o}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:h,extent:u}=n,{datumTransformation:f}=t;let p=(0,J.nF)(e,h,f);if(!u.intersects(p))return{location:p,value:null};if((0,l.pC)(n.transform)){const e=n.transform.inverseTransform(p);if(!n.nativeExtent.intersects(e))return{location:e,value:null};p=e}let m=0;const y=(0,l.pC)(o)&&(0,l.pC)(a)&&n.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(y)return e.identify(p,t);const{pixelSize:i}=n,r=3,s=i.x*r/2,a=i.y*r/2,o=new L.Z({xmin:p.x-s,xmax:p.x+s,ymin:p.y-a,ymax:p.y+a,spatialReference:h}),c={interpolation:"nearest"},{pixelBlock:u}=await e.fetchPixels(o,r,r,c),{pixelBlock:f}=await this.fetchPixels(o,r,r,c);if((0,l.Wi)(u))return{location:p,value:null};const d=Math.floor(r*r*.5),m=!u.mask||u.mask[d]?u.pixels.map((e=>e[d])):null;let g;return(0,l.pC)(f)&&(g=!f.mask||f.mask[d]?f.pixels.map((e=>e[d])):void 0),{location:p,value:m,processedValue:g,pyramidLevel:0}}if(!y)if(t.srcResolution)m=(0,J.kr)(t.srcResolution,n,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(e,t),null==m)return{location:p,value:null};const g=this.identifyPixelLocation(p,m,null,y);if(null===g)return{location:p,value:null};const{row:x,col:b,rowOffset:w,colOffset:v,blockWidth:I}=g,_=o??(0,l.Wg)(t.sliceId),S=(0,z.Rq)(this.url,_),R=`${m}/${x}/${b}`;let C=(0,z.Qg)(S,null,R);(0,l.Wi)(C)&&(C=this.fetchRawTile(m,x,b,t),(0,z.gX)(S,null,R,C));const T=await C;if((0,l.Wi)(T)||!T.pixels?.length)return{location:p,value:null};const k=w*I+v;return this._processIdentifyResult(T,{srcLocation:p,position:k,pyramidLevel:m,useTransposedTile:!!y,requestSomeSlices:c,identifyOptions:t})}async fetchPixels(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e=(0,J.kZ)(e),(r=this._getRequestOptionsWithSliceId(r)).requestRawData)return this._fetchPixels(e,t,i,r);const n=(0,J.ut)(e.spatialReference),s=(0,J.Hq)(e);if((0,l.Wi)(n)||0===s||1===s&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,r);if(s>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:o,xmax:c}=e,h=Math.round(n/(c-o)*t),u=h-Math.round((n/2-o)/(c-o)*t);let f=0;const d=[];for(let l=0;l<=s;l++){const p=new L.Z({xmin:0===l?o:-n/2,xmax:l===s?c-n*l:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===l?h-u:l===s?t-f:h;f+=m,d.push(m);const y=r.disableWrapAround&&l>0?null:this._fetchPixels(p,m,i,r);a.push(y)}const p=(await Promise.all(a)).map((e=>e?.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},r)).pixelBlock:(0,A.us)(p,y,{blockWidths:d}),{extent:e,srcExtent:(0,J.tB)(e,this.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,i,r),{nativeExtent:s,nativePixelSize:a,storageInfo:o}=this.rasterInfo,c=2**e,h=a.x*c,u=a.y*c,f=new L.Z({xmin:s.xmin+h*t.x,xmax:s.xmin+h*(t.x+i.width-1),ymin:s.ymax-u*(t.y+i.height-1),ymax:s.ymax-u*t.y,spatialReference:s.spatialReference});if(!n)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:p}=n;if(1===d.length&&(0,l.pC)(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:n.pixelBlocks[0]};const m=e>0?o.pyramidBlockWidth:o.blockWidth,y=e>0?o.pyramidBlockHeight:o.blockHeight,g={x:t.x%m,y:t.y%y};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:(0,A.us)(d,p,{clipOffset:g,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:x}}fetchRawTile(e,t,i,r){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,J.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,N.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=t;i=i??t.retryCount??this.ioConfig.retryCount;const o=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await(0,v.default)(e,{...t,query:{...s,...r},headers:{...a,...o}})}catch($){if(i>0)return i--,this.request(e,t,i);throw $}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return(0,l.Wi)(t)||(0,l.Wi)(e)||0===e.length?null:(0,B.gk)(e,t)}getTileExtentFromTileInfo(e,t,i,r){const n=(0,l.s3)(r.lodAt(e));return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,r.origin,r.spatialReference,r.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)n.push(new O.Z({level:s-e,resolution:a,scale:o})),a*=2,o*=2;const l=new H.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new F.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,r=arguments.length>3?arguments[3]:void 0;const{width:n,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new H.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const h=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],r);e.storageInfo=new D.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:h})}async computeBestPyramidLevelForLocation(e){return 0}computeBlockBoundary(e,t,i,r,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;if(1===n.length&&s>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<s;i++)e*=a,t*=a,n.push({x:e,y:t})}const o=[],{x:l,y:c}=r;for(let h=0;h<n.length;h++){const{x:r,y:s}=n[h];o.push({minCol:Math.floor((e.xmin-l+.1*r)/t/r),maxCol:Math.floor((e.xmax-l-.1*r)/t/r),minRow:Math.floor((c-e.ymax+.1*s)/i/s),maxRow:Math.floor((c-e.ymin-.1*s)/i/s)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,l.pC)(i)&&i.length)return i[e-1];const n=r**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i,r){const{spatialReference:n,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:c,transposeInfo:h}=a,u=r&&(0,l.pC)(h)?h.tileSize[0]:a.blockWidth,f=r&&(0,l.pC)(h)?h.tileSize[1]:a.blockHeight,d=(0,J.nF)(e,n,i);if(!s.intersects(d))return null;if(t<0||t>o)return null;const p=this.getPyramidPixelSize(t),{x:m,y:y}=p,g=(c.y-d.y)/y/f,x=(d.x-c.x)/m/u,b=Math.min(f-1,Math.floor((g-Math.floor(g))*f)),w=Math.min(u-1,Math.floor((x-Math.floor(x))*u));return{pyramidLevel:t,row:Math.floor(g),col:Math.floor(x),rowOffset:b,colOffset:w,blockWidth:u,srcLocation:d}}getTileExtent(e,t,i,r,n,s){const[a,o]=s,l=r.x+i*a*e.x,c=l+a*e.x,h=r.y-t*o*e.y,u=h-o*e.y;return new L.Z({xmin:l,xmax:c,ymin:u,ymax:h,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}async _fetchPixels(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=(0,J.Hq)(e);if(n>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,r),{pyramidLevel:a,pyramidResolution:o,srcResolution:c,srcExtent:h,srcWidth:u,srcHeight:f}=s;if(0===u||0===f)return{extent:e,srcExtent:h,pixelBlock:null};const d=(0,l.Wg)(this.rasterInfo.transform),p="gcs-shift"===d?.type,m=(0,l.pC)((0,J.ut)(e.spatialReference));!p&&m||(n=(0,J.Hq)(s.srcExtent,p));const y=this.rasterInfo.storageInfo,g={x:Math.floor((h.xmin-y.origin.x)/o.x+.1),y:Math.floor((y.origin.y-h.ymax)/o.y+.1)},x=await this._fetchRawTiles(a,g,{width:u,height:f,wrapCount:n},r);if(!x)return{extent:e,srcExtent:h,pixelBlock:null};const b=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight,v=b===u&&w===f&&g.x%b==0&&g.y%w==0,I=new H.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=r;if(!_&&v&&1===x.pixelBlocks.length&&b===t&&w===i&&c.x===I.x&&c.y===I.y)return{extent:e,srcExtent:h,pixelBlock:x.pixelBlocks[0]};const R=m&&(0,l.pC)((0,J.ut)(h.spatialReference)),C=r.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");C&&!this.rasterJobHandler&&await(0,J.zD)();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I.toJSON(),datumTransformation:S,rasterTransform:d,hasWrapAround:n>0||R,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:C},r):(0,J.Qp)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I,datumTransformation:S,rasterTransform:d,hasWrapAround:n>0||R,isAdaptive:!1,includeGCSGrid:C});let k;const F=!r.requestRawData,P={rows:T.spacing[0],cols:T.spacing[1]},M=(0,l.Wg)(this._getRasterTileAlignmentInfo(a,x.extent.xmin)),{pixelBlocks:O,mosaicSize:D,isPartiallyFilled:B}=x;let z=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:D,destDimension:F?{width:t,height:i}:null,coefs:F?T.coefficients:null,sampleSpacing:F?P:null,projectDirections:C,gcsGrid:C?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:r.interpolation,alignmentInfo:M,blockWidths:null},r);({pixelBlock:k,localNorthDirections:z}=e)}else{const e=(0,A.us)(O,D,{alignmentInfo:M});k=F?(0,A.Uk)(e,{width:t,height:i},T.coefficients,P,r.interpolation):e,C&&T.gcsGrid&&(z=(0,A.Qh)({width:t,height:i},T.gcsGrid),k=(0,Z.xQ)(k,this.rasterInfo.dataType,z))}return r.requestRawData||C?{srcExtent:h,pixelBlock:k,transformGrid:T,localNorthDirections:z,extent:e,isPartiallyFilled:B}:{srcExtent:h,extent:e,pixelBlock:k}}async _fetchRawTiles(e,t,i,r){const{origin:n,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:c,y:h}=t,{width:u,height:f,wrapCount:d}=i;const p=this._getRasterTileAlignmentInfo(e,0);r.buffer&&(c-=r.buffer.cols,h-=r.buffer.rows,u+=2*r.buffer.cols,f+=2*r.buffer.rows);let m=0,y=0,g=0;d&&(0,l.pC)(p)&&(({worldColumnCountFromOrigin:y,originColumnOffset:g,rightPadding:m}=p),y*p.blockWidth-m>=c+u&&(m=0));const x=Math.floor(c/a),b=Math.floor(h/o),w=Math.floor((c+u+m-1)/a),v=Math.floor((h+f+m-1)/o),I=s[e];if(!I)return null;const{minRow:_,minCol:S,maxCol:R,maxRow:C}=I;if(0===d&&(v<_||w<S||b>C||x>R))return null;const T=new Array;let k=!1;const F=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let E=b;E<=v;E++)for(let t=x;t<=w;t++){let i=t;if(!r.disableWrapAround&&d&&(0,l.pC)(p)&&y<=t&&(i=t-y-g),E>=_&&i>=S&&C>=E&&R>=i){const t=this._fetchRawTile(e,E,i,r);F?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{k=!0,e(null)}))}))):T.push(t)}else T.push(Promise.resolve(null))}if(0===T.length)return null;const P=await Promise.all(T),M={height:(v-b+1)*o,width:(w-x+1)*a},{spatialReference:O}=this.rasterInfo,D=this.getPyramidPixelSize(e),{x:B,y:z}=D;return{extent:new L.Z({xmin:n.x+x*a*B,xmax:n.x+(w+1)*a*B,ymin:n.y-(v+1)*o*z,ymax:n.y-b*o*z,spatialReference:O}),pixelBlocks:P,mosaicSize:M,isPartiallyFilled:k}}_fetchRawTile(e,t,i,r){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:o,maxRow:c}=n;if(t<s||i<a||t>c||i>o)return Promise.resolve(null);const u=(0,z.Rq)(this.url,r.sliceId),f=`${e}/${t}/${i}`;let d=(0,z.Qg)(u,r.registryId,f);if((0,l.Wi)(d)){const n=new AbortController;d=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),(0,z.gX)(u,r.registryId,f,d,n),d.catch((()=>(0,z.Gc)(u,r.registryId,f)))}return r.signal&&(0,h.fu)(r,(()=>{(0,z.OE)(u,r.registryId,f)})),d}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if((2!==t||"vector-magdir"!==i)&&"vector-uv"!==i||2!==e?.length||!e[0]?.length)return null;const r=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[n,s]=e,a=[],o=[];for(let l=0;l<r;l++){const[e,t]=(0,Z.Tg)([n[l],s[l]]);a.push(e),o.push(t)}return[a,o]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,J.P_)(this.rasterInfo)),(0,l.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};r.srcResolution&&(n.srcResolution=r.srcResolution,this._updateSourceDataInfo(e,n));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=n,c=a/t,h=o/i,u=l<s&&c*h>=16,f=l===s&&this._requireTooManySrcTiles(a,o,t,i);if(u||f||0===a||0===o){const a=new H.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,J.VO)(a,this.rasterInfo.spatialReference,e,n.datumTransformation);const f=!o||r.srcResolution&&o.x+o.y<r.srcResolution.x+r.srcResolution.y;if(u&&r.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,h))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:r.srcResolution.x*t,y:r.srcResolution.y*t}}}o&&(n.srcResolution=o,this._updateSourceDataInfo(e,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,t,i)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(e,t,i,r){const{tileInfo:n}=this.rasterInfo.storageInfo;return Math.ceil(e/n.size[0])*Math.ceil(t/n.size[1])>=256||e/i>8||t/r>8}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:r,datumTransformation:n}=t,{pyramidLevel:s,pyramidResolution:a,excessiveReading:o}=(0,J.kr)(r,this.rasterInfo,this.ioConfig.sampling);if(o)return;let c=t.srcExtent||(0,J.tB)(e,i,n);if(null==c)return;const h=(0,l.Wg)(this.rasterInfo.transform);h&&(c=h.inverseTransform(c)),t.srcExtent=c;const u=Math.ceil((c.xmax-c.xmin)/a.x-.1),f=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=s,t.pyramidResolution=a,t.srcWidth=u,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return(0,l.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:r,pyramidLevel:n,useTransposedTile:s}=t,a=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[r])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if((0,l.Wi)(o)||!s){const t=e.pixels.map((e=>e[r])),s={location:i,value:t,pyramidLevel:n},a=this._computeMagDirValues(t.map((e=>[e])));return a?.length&&(s.magdirValue=a.map((e=>e[0]))),s}let c=e.pixels.map((e=>e.slice(r*a,r*a+a))),h=this._computeMagDirValues(c);const{requestSomeSlices:u,identifyOptions:f}=t;let d=(0,B.MO)(o,f.transposedVariableName);if(u){const e=(0,B.Ur)(d,(0,l.Wg)(f.multidimensionalDefinition),(0,l.Wg)(f.timeExtent));c=c.map((t=>e.map((e=>t[e])))),h=h?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const p=e.noDataValues||this.rasterInfo.noDataValue,m={pixels:c,pixelType:e.pixelType};let y;return(0,l.pC)(p)&&((0,E.A)(m,p),y=m.mask),{location:i,value:null,dataSeries:d.map(((e,t)=>{const i={value:0===y?.[t]?null:c.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new R.Z({...e,isSlice:!0})))};return h?.length&&(i.magdirValue=[h[0][t],h[1][t]]),i})),pyramidLevel:n}}};(0,r._)([(0,f.Cb)()],W.prototype,"_rasterTileAlighmentInfo",void 0),(0,r._)([(0,f.Cb)({readOnly:!0})],W.prototype,"_isGlobalWrappableSource",null),(0,r._)([(0,f.Cb)(S.HQ)],W.prototype,"url",null),(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],W.prototype,"datasetName",void 0),(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],W.prototype,"datasetFormat",void 0),(0,r._)([(0,f.Cb)()],W.prototype,"hasUniqueSourceStorageInfo",void 0),(0,r._)([(0,f.Cb)()],W.prototype,"rasterInfo",void 0),(0,r._)([(0,f.Cb)()],W.prototype,"ioConfig",void 0),(0,r._)([(0,f.Cb)()],W.prototype,"sourceJSON",void 0),W=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.BaseRaster")],W);const q=W;let j=class extends q{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){await this.init();const{rasterFunction:t}=this;this.primaryRasters?.rasters?.length?t.sourceRasters=this.primaryRasters.rasters:this.primaryRasters=t.getPrimaryRasters();const{rasters:i,rasterIds:r}=this.primaryRasters,n=i.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(n);const s=i.map((e=>{let{rasterInfo:t}=e;return t})),o=t.bind({rasterInfos:s,rasterIds:r});if(!o.success||0===s.length)throw new a.Z("raster-function:open",`cannot bind the function: ${o.error??""}`);await this.syncJobHandler();const l=s[0];this.hasUniqueSourceStorageInfo=1===s.length||s.slice(1).every((e=>this._hasSameStorageInfo(e,l))),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",t.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{rasters:n,rasterIds:s}=this.primaryRasters,a=n.map((n=>n.fetchPixels(e,t,i,r))),o=await Promise.all(a),c=o.map((e=>e.pixelBlock));if(r.skipRasterFunction||c.every((e=>(0,l.Wi)(e))))return o[0];const h=o.find((e=>(0,l.pC)(e.pixelBlock)))?.extent??e,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:h,primaryPixelBlocks:c,primaryRasterIds:s}):this.rasterFunction.process({extent:h,primaryPixelBlocks:c,primaryRasterIds:s});return{...o[0],pixelBlock:u}}_hasSameStorageInfo(e,t){const{storageInfo:i,pixelSize:r,spatialReference:n,extent:s}=e,{storageInfo:a,pixelSize:o,spatialReference:l,extent:c}=t;return r.x===o.x&&r.y===o.y&&n.equals(l)&&s.equals(c)&&i.blockHeight===a.blockHeight&&i.blockWidth===a.blockWidth&&i.maximumPyramidLevel===a.maximumPyramidLevel}};(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],j.prototype,"datasetFormat",void 0),(0,r._)([(0,f.Cb)()],j.prototype,"tileType",void 0),(0,r._)([(0,f.Cb)()],j.prototype,"rasterFunction",void 0),(0,r._)([(0,f.Cb)()],j.prototype,"primaryRasters",void 0),j=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.FunctionRaster")],j);const $=j;var U=i(68312),G=i(73425),V=i(43238),Y=i(55185),X=i(78952);const K=o.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),Q=e=>{let t=class extends e{constructor(){super(...arguments),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===(arguments.length<=0?void 0:arguments[0])?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(e){this._set("url",(0,_.Nm)(e,K))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,l.Wi)(e)||!this.rasterInfo)return null;const i=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:r},t):(0,Z.KC)(e,r)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,Y.GE)(e.meshType,e.simulationSettings,e.flowData,(0,l.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if((0,l.Wi)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,l.Wi)(i)&&i.length||(i=(0,B.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const r=e.timeExtent||this.timeExtent;if((0,l.pC)(i)&&(0,l.pC)(r)&&((0,l.pC)(r.start)||(0,l.pC)(r.end))){i=i.map((e=>e.clone()));const n=t.variables.find((e=>{let{name:t}=e;return t===i[0].variableName}))?.dimensions?.find((e=>{let{name:t}=e;return"StdTime"===t})),s=i.find((e=>{let{dimensionName:t}=e;return"StdTime"===t}));if(!n||!s)return{...e,multidimensionalDefinition:null};const{start:a,end:o}=r,c=(0,l.Wi)(a)?null:a.getTime(),h=(0,l.Wi)(o)?null:o.getTime(),u=c??h,f=h??c;if((0,l.pC)(n.values)){const e=n.values.filter((e=>{if(Array.isArray(e)){if(u===f)return e[0]<=u&&e[1]>=u;const t=e[0]<=u&&e[1]>u||e[0]<f&&e[1]>=f,i=e[0]>=u&&e[1]<=f||e[0]<u&&e[1]>f;return t||i}return u===f?e===u:e>=u&&e<=f}));if(e.length){const t=e.sort(((e,t)=>u===f?(e[0]??e)-(t[0]??t):Math.abs((e[1]??e)-f)-Math.abs((t[1]??t)-f)))[0];s.values=[t]}else i=null}else if(n.hasRegularIntervals&&n.extent){const[e,t]=n.extent;u>t||f<e?i=null:s.values=u===f?[u]:[Math.max(e,u),Math.min(t,f)]}}return(0,l.pC)(i)&&(0,B.nb)(i,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:i}}async updateRasterFunction(){if("imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",T.Z.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,i=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],i=!0):e=[t];const{rasterFunction:r}=this;if(r){const i={raster:t};e.length>1&&e.forEach((e=>i[e.url]=e));const n=(0,U.Ue)(r.rasterFunctionDefinition??r.toJSON(),i),s=new $({rasterFunction:n});s.rasterJobHandler=this._rasterJobHandler.instance,await s.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=s}else this.raster=t,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!i&&!r)return;const{bandIds:n}=this,{bandCount:s}=this.raster.rasterInfo,a=n?.length?n.some((e=>e>=s)):s>=3;n&&(a||"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;const{rasterInfo:i}=this.raster,r=(0,B.WY)(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,n=(0,G.ol)({...this.renderer.toJSON(),variableName:r});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(n))return;const s=this._rasterJobHandler.instance;s&&(t.rasterInfo=(0,G.FI)(i,r),t.rendererJSON=n,t.bind(),await s.updateSymbolizer(t),this._cachedRendererJson=n)}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,l.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let r;await this.updateRenderer();const n=this._rasterJobHandler.instance,s=this.bandIds??[];return r=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.loaded||(0,l.Wi)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=(0,I.C5)(e);return F.Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(i(this),n.requestAsImageElement){const i=this.getTileUrl(e,t,r);return(0,v.default)(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}const{rasterInfo:s}=this;if((0,l.pC)(s.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,l.Wi)(n.multidimensionalDefinition))){const i=n.tileInfo||s.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,i),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,n)}async fetchPixels(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(0,l.pC)(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),(0,l.Wi)(r.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(e,t,i,r))}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{raster:i,rasterInfo:r}=this;if((0,l.pC)(r.multidimensionalInfo)&&(!r.hasMultidimensionalTranspose||!((0,B.WU)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&(t=this.normalizeRasterFetchOptions(t),(0,l.Wi)(t.multidimensionalDefinition)))return{location:e,value:null};const n=this.multidimensionalSubset?.areaOfInterest;if(n&&!n.contains(e))throw new a.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return i.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo?.multidimensionalInfo;if((0,l.Wi)(e)||"standard-time"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,i=t?.[0]?.variableName;return e.variables.some((e=>e.name===i&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.rasterInfo?.multidimensionalInfo;return(0,B.jj)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,B.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new k.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:e}=this,t=(0,G.In)(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"no";i(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=(0,G.YD)(t));const r=(0,B.WY)(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===e){const e=(0,G.Ob)(t,{bandIds:this.bandIds,variableName:r});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&((t.statistics?.[0].max??0)>1e24||(t.statistics?.[0].min??0)<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}const n=(0,G.ol)({...this.renderer.toJSON(),variableName:r}),s=(0,G.FI)(t,r);this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=s):this.symbolizer=new V.Z({rendererJSON:n,rasterInfo:s});const a=this.symbolizer.bind();if(a.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if((0,l.pC)(e))if("raster-colormap"!==t.type)this._configDefaultRenderer("override");else{const e=(0,G.Ob)(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){const e=this.bandIds?.length,i=t.statistics?.length;!t.dynamicRangeAdjustment&&i&&e&&i!==e&&this._configDefaultRenderer("override")}}}else K.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")}};function i(e){if(!e.raster||!e.rasterInfo)throw new a.Z("imagery-tile","no raster")}return(0,r._)([(0,f.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"_cachedRasterFunctionJson",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"bandIds",void 0),(0,r._)([(0,f.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,r._)([(0,f.Cb)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,r._)([(0,f.Cb)()],t.prototype,"interpolation",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"ioConfig",void 0),(0,r._)([(0,f.Cb)({type:[R.Z],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,r._)([(0,f.Cb)({type:C.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"raster",void 0),(0,r._)([(0,f.Cb)({type:T.Z})],t.prototype,"rasterFunction",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"rasterInfo",void 0),(0,r._)([(0,f.Cb)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,f.Cb)({readOnly:!0,type:X.Z,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,r._)([(0,f.Cb)({json:{read:!1}})],t.prototype,"tileInfo",null),(0,r._)([(0,f.Cb)(S.HQ)],t.prototype,"url",null),(0,r._)([(0,f.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,r._)([(0,f.Cb)()],t.prototype,"symbolizer",void 0),t=(0,r._)([(0,y.j)("esri.layers.ImageryTileMixin")],t),t};var ee=i(6061),te=i(29598),ie=i(71684),re=i(56811),ne=i(99063),se=i(83040),ae=i(60117),oe=i(86200),le=i(17061);function ce(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=n.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[r]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}class he{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),n=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:r,headerByteCount:n,recordByteCount:s};let o=32;const l=[],c=[];let h;if(3===i){for(;13!==t.getUint8(o);)h=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,le.f)(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<r&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,le.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:ce({fields:l,records:c})}}}var ue=i(77960),fe=i(49818);const de=new Map;de.set("int16","esriFieldTypeSmallInteger"),de.set("int32","esriFieldTypeInteger"),de.set("int64","esriFieldTypeInteger"),de.set("float32","esriFieldTypeSingle"),de.set("float64","esriFieldTypeDouble"),de.set("text","esriFieldTypeString");let pe=class extends q{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:s}=r,a=!(!n||!s),o=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const l=this._buildCacheFilePath(o,t,i,r.multidimensionalDefinition,s),c=this._getIndexRecordFromBundle(t,i,a),h=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!h)return null;const u=new Uint8Array(h.data),f=this._getTileEndAndContentType(u,c);if(0===f.recordSize)return null;const d=await this.request(l,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:r.signal});if(!d)return null;const[p,m]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:p,height:m,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:r,colormap:n,blockWidth:s,blockHeight:a,firstPyramidLevel:o,maximumPyramidLevel:l}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=e.extent.spatialReference,u=e.geodataXform?.spatialReference,f=new X.Z(h?.wkid||h?.wkt?h:u);let d=new L.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:f});const p=new H.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:f}),m=Math.round((d.xmax-d.xmin)/p.x),y=Math.round((d.ymax-d.ymin)/p.y),g=this._parseTransform(e.geodataXform),x=g?d:null;g&&(d=g.forwardTransform(d),p.x=(d.xmax-d.xmin)/m,p.y=(d.ymax-d.ymin)/y);const b=e.properties??{},w=e.format.toLowerCase().replace("cache/",""),v=new H.Z(e.origin.x,e.origin.y,f);let I,_,S,R;if(n&&n.colors)for(I=[],_=0;_<n.colors.length;_++)S=n.colors[_],R=n.values?n.values[_]:_,I.push([R,255&S,S<<16>>>24,S<<8>>>24,S>>>24]);const C=e.LODInfos,T=[];for(_=0;_<C.levels.length;_++)T.push(new O.Z({level:C.levels[_],resolution:C.resolutions[_],scale:96/.0254*C.resolutions[_]}));const k=new F.Z({dpi:96,lods:T,format:w,origin:v,size:[s,a],spatialReference:f}),P={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},M=[{maxCol:Math.ceil(m/s)-1,maxRow:Math.ceil(y/a)-1,minCol:0,minRow:0}];let B=2;if(l>0)for(_=0;_<l;_++)M.push({maxCol:Math.ceil(m/B/s)-1,maxRow:Math.ceil(y/B/a)-1,minCol:0,minRow:0}),B*=2;const z=e.mdInfo;let E=null;if(z&&b._yxs){const e=b._yxs;E={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:P,rasterInfo:new oe.Z({width:m,height:y,pixelType:t,bandCount:i,extent:d,nativeExtent:x,transform:g,spatialReference:f,pixelSize:p,keyProperties:b,statistics:c,histograms:r,multidimensionalInfo:z,colormap:I,storageInfo:new D.Z({blockWidth:s,blockHeight:a,pyramidBlockWidth:s,pyramidBlockHeight:a,origin:v,tileInfo:k,transposeInfo:E,firstPyramidLevel:o,maximumPyramidLevel:l,blockBoundary:M})})}}_parseTransform(e){if(!(0,ue.j)(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,ue.c)(e);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,i]);let n;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":de.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:i})}}return!n&&r[1]&&(n=he.parse(r[1]).recordSet),fe.Z.fromJSON(n)}_buildCacheFilePath(e,t,i,r,n){const s=this._getPackageSize(!!n),a=Math.floor(t/s)*s,o=Math.floor(i/s)*s,c="R"+this._toHexString4(a)+"C"+this._toHexString4(o);let h="L";h+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=r?.[0];if((0,l.Wi)(u)||!f)return`${this.url}/_alllayers/${h}/${c}.bundle`;let d="_yxs";if(!n){d=u.variables.find((e=>e.name===f.variableName)).dimensions[0].values.indexOf(f.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const p=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${p}/${d}/${h}/${c}.bundle`}_getPackageSize(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&(0,l.pC)(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&(0,l.pC)(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=this._getPackageSize(i),n=r*(e%r)+t%r;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,n=0;for(r=0;r<5;r++)n|=(255&i[r])<<8*r;const s=0xffffffffff&n;for(n=0,r=5;r<8;r++)n|=(255&i[r])<<8*(r-5);return{position:s,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,r._)([(0,f.Cb)({readOnly:!0})],pe.prototype,"storageInfo",void 0),(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.CloudRaster")],pe);const me=pe;var ye=i(93169),ge=i(21449);let xe=class extends q{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const t=this.data,{pixelBlock:i,statistics:r,histograms:n,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:h,pixelType:u}=i,f=t.extent??new L.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:h-.5,spatialReference:new X.Z({wkid:3857})}),d=t.isPseudoSpatialReference??!t.extent,p={x:f.width/c,y:f.height/h},m=new oe.Z({width:c,height:h,pixelType:u,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:i.pixels.length,keyProperties:a||{},statistics:r,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,i){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve((0,A.Vl)(e,t,r)),s=(0,l.pC)(this.rasterInfo.statistics),o=(0,l.pC)(this.rasterInfo.histograms),c=s?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,ge.Hv)(e)),u=await(0,h.as)([n,c]);if(!u[0].value&&u[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,s||(this.rasterInfo.statistics=u[1].value?.statistics),o||(this.rasterInfo.histograms=u[1].value?.histograms)}};(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),(0,r._)([(0,f.Cb)()],xe.prototype,"data",void 0),xe=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],xe);const be=xe;function we(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=we(e,i);for(let e=0;e<n.length;e++)we(n[e],t).forEach((e=>r.push(e)));return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let s=0;s<n.length;s++)r.push(n[s]||n.item[s]);return r}function ve(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=we(e,i);return r.length>0?t?ve(r[0],t):r[0]:null}function Ie(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=t?ve(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function _e(e,t){return function(e,t){const i=we(e,t),r=[];let n;for(let s=0;s<i.length;s++)n=i[s].textContent||i[s].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}(e,t).map((e=>Number(e)))}function Se(e,t){const i=Ie(e,t);return Number(i)}function Re(e,t){const i=e?.nodeName?.toLowerCase(),r=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===r}var Ce=i(69405);function Te(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function ke(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new X.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),n=r>-1?r:e.indexOf("GEOGCS");if(-1===n)return null;const s=e.slice(n,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=Fe(s);const o=new X.Z(t?{wkid:t}:{wkt:s}),l=Fe(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Fe(e),new X.Z(0!==t?{wkid:t}:{wkt:e})):null}function Fe(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(","),r=i[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Pe(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Re(e,"SRS")){if(!t.spatialReference){const i=Ie(e);t.spatialReference=ke(i)}}else if(Re(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:i,transform:r}=function(e){const t=ve(e,"GeodataXform"),i=ke(Se(t,"SpatialReference/WKID")||Ie(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const r=Se(t,"PolynomialOrder")??1,n=_e(t,"CoeffX/Double"),s=_e(t,"CoeffY/Double"),a=_e(t,"InverseCoeffX/Double"),o=_e(t,"InverseCoeffY/Double"),l=Te(n,s),c=Te(a,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Ce.Z({spatialReference:i,polynomialOrder:r,forwardCoefficients:l,inverseCoefficients:c}):null}}(e);t.transform=r,t.spatialReference||(t.spatialReference=i)}else we(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=Ie(e)));else if(Re(e,"PAMRasterBand")){const i=function(e){const t=Se(e,"NoDataValue"),i=ve(e,"Histograms/HistItem"),r=Se(i,"HistMin"),n=Se(i,"HistMax"),s=Se(i,"BucketCount"),a=Ie(i,"HistCounts")?.split("|").map((e=>Number(e)));let o,l,c,h;we(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":h=t}}));const u=Se(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:a?.length&&null!=r&&null!=n?{min:r,max:n,size:s||a.length,counts:a}:null,sourceBandIndex:u,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:h}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}));const i=t.rasterBands;if(i.length){const e=!!i[0].statistics;t.statistics=e?i.map((e=>e.statistics)).filter(l.pC):null;const r=!!i[0].histogram;t.histograms=r?i.map((e=>e.histogram)).filter(l.pC):null}return t}let Me=class extends q{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:n,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new X.Z({wkid:3857})),n?.length&&null==r&&(r=(0,ge.Oh)(n));const{width:o,height:l}=t;let c=new L.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const h=s?s.forwardTransform(c):c;let u=!0;if(s){const e=s.forwardCoefficients;u=e&&0===e[1]&&0===e[2],u&&(s=null,c=h)}const f=new be({data:{extent:h,nativeExtent:c,transform:s,pixelBlock:t,statistics:r,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,N.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const r=i.toLowerCase(),n="gif"===r||"bmp"===r||!(0,ye.Z)("ios"),s=await this.decodePixelBlock(t,{format:r,useCanvas:n,hasNoZlibMask:!0});if(null==s)throw new a.Z("image-aux-raster:open","the data cannot be decoded");return s}async _fetchAuxiliaryData(e){const t=(0,l.Wg)(e?.signal),i=this.ioConfig.skipExtensions??[],r=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),n=this.datasetFormat,s="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,a=s&&i.includes(s)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:t}),o=await(0,h.as)([r,a]);if(t?.aborted)throw(0,h.zE)();const c=Pe(o[0].value?.data);if(!c.transform){const e=o[1].value?o[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;c.transform=6===e?.length?new Ce.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],Me.prototype,"datasetFormat",void 0),Me=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Me);const Oe=Me;var De=i(35995),Be=i(71466),ze=i(23638),Ee=i(3089),Ne=i(38045);let Ae=class extends q{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(r.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name?.slice(r.name.indexOf("/")+1)??"";const n=await this._fetchRasterInfo({signal:t});if((0,l.Wi)(n))throw new a.Z("image-server-raster:open","cannot initialize image service");const s="Map"===this.tileType?(0,Be.d)(r.tileInfo,r):F.Z.fromJSON(r.tileInfo);(0,l.O3)(s);const[o,c]=this._computeMinMaxLOD(n,s),{extent:h,pixelSize:u}=n,f=.5/n.width*u.x,d=Math.max(u.x,u.y),{lods:p}=s;("Map"!==this.tileType&&0!==r.maxScale||Math.abs(u.x-u.y)>f||!p.some((e=>Math.abs(e.resolution-d)<f)))&&(u.x=u.y=o.resolution,n.width=Math.ceil((h.xmax-h.xmin)/u.x-.1),n.height=Math.ceil((h.ymax-h.ymin)/u.y-.1));const m=o.level-c.level,[y,g]=s.size,x=[],b=[];p.forEach(((e,t)=>{e.level>=c.level&&e.level<=o.level&&x.push({x:e.resolution,y:e.resolution}),t<p.length-1&&b.push(Math.round(10*e.resolution/p[t+1].resolution)/10)})),x.sort(((e,t)=>e.x-t.x));const w=this.computeBlockBoundary(h,y,g,s.origin,x,m),v=x.length>1?x.slice(1):null;let I;r.transposeInfo&&(I={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});const _=b.length<=1||b.length>=3&&b.slice(0,b.length-1).every((e=>e===b[0]))?b[0]??2:Math.round(10/(c.resolution/o.resolution)**(-1/m))/10;if(n.storageInfo=new D.Z({blockWidth:s.size[0],blockHeight:s.size[1],pyramidBlockWidth:s.size[0],pyramidBlockHeight:s.size[1],pyramidResolutions:v,pyramidScalingFactor:_,compression:s.format,origin:s.origin,firstPyramidLevel:1,maximumPyramidLevel:m,tileInfo:s,transposeInfo:I,blockBoundary:w}),this._fixGCSShift(n),this._set("rasterInfo",n),r.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,De.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new ze.y({layer:e})}}async fetchRawTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:n,extent:s}=this.rasterInfo,{transposeInfo:a}=n,o=(0,l.pC)(a)&&!!r.transposedVariableName;if(this._slices&&!o&&null==r.sliceId)return null;const c=o?0:n.maximumPyramidLevel-e+this._levelOffset,h=`${this.url}/tile/${c}/${t}/${i}`,u=this._slices?o?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:f}=await this.request(h,{query:u,responseType:"array-buffer",signal:r.signal});if(!f)return null;const d=o?a.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:(0,l.Wg)(this.rasterInfo.noDataValue)});if(null==p)return null;const m=n.blockBoundary[e];if("jpg"!==n.compression||i>m.minCol&&i<m.maxCol&&t>m.minRow&&t<m.maxRow)return p;const{origin:y,blockWidth:g,blockHeight:x}=n,{x:b,y:w}=this.getPyramidPixelSize(e),v=Math.round((s.xmin-y.x)/b)%g,I=Math.round((s.xmax-y.x)/b)%g||g,_=Math.round((y.y-s.ymax)/w)%x,S=Math.round((y.y-s.ymin)/w)%x||x,R=i===m.minCol?v:0,C=t===m.minRow?_:0,T=i===m.maxCol?I:g,k=t===m.maxRow?S:x;return(0,A.pW)(p,{x:R,y:C},{width:T-R,height:k-C}),p}getSliceIndex(e){if(!this._slices||(0,l.Wi)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([i,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,l.Wg)(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-r+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,r++,i=this.identifyPixelLocation(a,r,(0,l.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),r=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),n=X.Z.fromJSON(t.spatialReference||e.spatialReference),s=new H.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new oe.Z({width:i,height:r,bandCount:3,extent:L.Z.fromJSON(e),spatialReference:n,pixelSize:s,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,r=(0,Ne.g)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,s=await Promise.all([r,n]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ee.Z,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,r=.5/e.width*i.x,{lods:n}=t,s=t.lodAt(Math.max.apply(null,n.map((e=>e.level)))),a=t.lodAt(Math.min.apply(null,n.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=n[0].level,[s,a];if("Raster"===o)return[n.find((e=>e.resolution===i.x))??s,a];const{minScale:l,maxScale:c}=this.sourceJSON;let h=s;c>0&&(h=n.find((e=>Math.abs(e.scale-c)<r)),h||(h=n.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??s));let u=a;return l>0&&(u=n.find((e=>Math.abs(e.scale-l)<r))??a,this._levelOffset=u.level-a.level),[h,u]}};(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],Ae.prototype,"datasetFormat",void 0),(0,r._)([(0,f.Cb)()],Ae.prototype,"tileType",void 0),Ae=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ae);const Je=Ae;var Ze=i(96212),Le=i(60263);const He=new Map;He.set("Int8","s8"),He.set("UInt8","u8"),He.set("Int16","s16"),He.set("UInt16","u16"),He.set("Int32","s32"),He.set("UInt32","u32"),He.set("Float32","f32"),He.set("Float64","f32"),He.set("Double64","f32");const We=new Map;We.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),We.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),We.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),We.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let qe=class extends q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?(0,l.Wg)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:r,files:n}=this._parseHeader(i.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const t=await this._fetchAuxiliaryData(e);null!=t&&(r.statistics=t.statistics??r.statistics,r.histograms=t.histograms,t.histograms&&(0,l.Wi)(r.statistics)&&(r.statistics=(0,ge.Oh)(t.histograms)))}this._set("rasterInfo",r),this._files=n;const s=await this.request(n.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(s.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:u}=this.rasterInfo,f=[],d=this._getBandSegmentCount();let p=0,m=-1;for(;p<this._storageIndex.length;){m++;const e=Math.ceil(h/a/c**m)-1,t=Math.ceil(u/o/c**m)-1;p+=(e+1)*(t+1)*d*4,f.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,m>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m),this.updateTileInfo()}async fetchRawTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:n,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:c,pixelType:h}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(n*s);return new Ze.Z({width:n,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:u[g].from,to:u[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),b=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(b);let v=0;for(g=0;g<m;g++)w.set(new Uint8Array(x[g].data),v),v+=x[g].data.byteLength;const I=We.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:n,height:s,format:I,planes:p?.length||c,pixelType:h});if(null==_)return null;if((0,l.pC)(this.rasterInfo.noDataValue)&&"lerc"!==I&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((_.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)_.pixels[0][g]!==e&&(i[g]=1);_.mask=i}}let S=0,R=0;if(f!==n||d!==s){let e=_.mask;if(e)for(g=0;g<s;g++)if(R=g*n,g<d)for(S=f;S<n;S++)e[R+S]=0;else for(S=0;S<n;S++)e[R+S]=0;else for(e=new Uint8Array(n*s),_.mask=e,g=0;g<d;g++)for(R=g*n,S=0;S<f;S++)e[R+S]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,r,n,s,a;if(Le.f){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),r=new Uint8Array(n),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)r[4*s+a]=i[4*s+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return We.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:n,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,h,u,f=0,d=0;for(u=0;u<e;u++)d=s**u,c=Math.ceil(a/r/d),h=Math.ceil(o/n/d),f+=c*h;d=s**e,c=Math.ceil(a/r/d),h=Math.ceil(o/n/d),f+=t*c+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const g=[];for(let x=0;x<l;x++)m=p[4*x+0]*2**32+p[4*x+1],y=m+p[4*x+2]*2**32+p[4*x+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?r:Math.ceil(a/d)-r*(c-1),actualTileHeight:t<h-1?n:Math.ceil(o/d)-n*(h-1)}}_parseHeader(e){const t=ve(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=ve(t,"Size"),r=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(Ie(t,"Compression")||"none").toLowerCase();if(!We.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=Ie(t,"DataType")||"UInt8",c=He.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const h=ve(t,"PageSize"),u=parseInt(h.getAttribute("x"),10),f=parseInt(h.getAttribute("y"),10),d=ve(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),ve(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=ve(e,"MRF_META/GeoTags"),g=ve(y,"BoundingBox");let x,b=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),r=parseFloat(g.getAttribute("maxy")),n=Ie(y,"Projection")||"";let s=X.Z.WGS84;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(s=new X.Z({wkid:e}))}else s=ke(n)??X.Z.WGS84;else b=!0,s=new X.Z({wkid:3857});x=new L.Z(e,t,i,r),x.spatialReference=s}else b=!0,x=new L.Z({xmin:-.5,ymin:.5-n,xmax:r-.5,ymax:.5,spatialReference:new X.Z({wkid:3857})});const w=ve(e,"MRF_META/Rsets"),v=parseInt(w&&w.getAttribute("scale")||"2",10),I=x.spatialReference,_=new D.Z({origin:new H.Z({x:x.xmin,y:x.ymax,spatialReference:I}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:v}),S=new H.Z({x:x.width/r,y:x.height/n,spatialReference:I}),R=new oe.Z({width:r,height:n,extent:x,isPseudoSpatialReference:b,spatialReference:I,bandCount:s,pixelType:c,pixelSize:S,noDataValue:p,storageInfo:_}),C=Ie(e,"datafile"),T=Ie(e,"IndexFile");return{rasterInfo:R,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",We.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Pe(t)}catch{return null}}};(0,r._)([(0,f.Cb)()],qe.prototype,"_files",void 0),(0,r._)([(0,f.Cb)()],qe.prototype,"_storageIndex",void 0),(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],qe.prototype,"datasetFormat",void 0),qe=(0,r._)([(0,y.j)("esri.layers.support.rasterIO.MRFRaster")],qe);const je=qe;var $e=i(58424),Ue=i(92217);const Ge=(e,t)=>e.get(t)?.values,Ve=(e,t)=>e.get(t)?.values?.[0];let Ye=class extends q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?(0,l.Wg)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:n,isBigTiff:s}=(0,$e.cK)(i),o=[];await this._readIFDs(o,i,r,n,0,s?8:4,t);const{imageInfo:c,rasterInfo:h}=this._parseIFDs(o),u=(0,$e.ee)(o),f=(0,$e.I7)(o);if(this._headerInfo={littleEndian:r,isBigTiff:s,ifds:o,pyramidIFDs:u,maskIFDs:f,...c},this._set("rasterInfo",h),!c.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+c.message);if(!c.tileWidth)throw new a.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:d=[]}=this.ioConfig;if(!d.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,h)}d.includes("vat.dbf")||1!==h.bandCount||"u8"!==h.pixelType||(h.attributeTable=await this._fetchAuxiliaryTable(e),(0,l.pC)(h.attributeTable)&&(h.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;const n=await this._fetchRawTiffTile(e,t,i,!1,r);if((0,l.pC)(n)&&this._headerInfo.hasMaskBand){const s=await this._fetchRawTiffTile(e,t,i,!0,r);(0,l.pC)(s)&&s.pixels[0]instanceof Uint8Array&&(n.mask=s.pixels[0])}return n}_parseIFDs(e){const t=(0,$e.FI)(e),{width:i,height:r,tileWidth:n,tileHeight:s,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:h,pyramidBlockWidth:u,pyramidBlockHeight:f,tileBoundary:d,affine:p,metadata:m}=t;let y=ke(t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid),g=!!t.isPseudoGeographic;null==y&&(g=!0,y=new X.Z({wkid:3857}));const x=new L.Z({...t.extent,spatialReference:y}),b=new H.Z(x?{x:x.xmin,y:x.ymax,spatialReference:y}:{x:0,y:0}),w=new D.Z({blockWidth:n,blockHeight:s,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:h,blockBoundary:d}),v=new H.Z({x:(x.xmax-x.xmin)/i,y:(x.ymax-x.ymin)/r,spatialReference:y}),I=m?{BandProperties:m.bandProperties,DataType:m.dataType}:{};let _=null;const S=Ve(e[0],"PHOTOMETRICINTERPRETATION"),R=Ge(e[0],"COLORMAP");if(S<=3&&R?.length>3&&R.length%3==0){_=[];const e=R.length/3;for(let t=0;t<e;t++)_.push([t,R[t]>>>8,R[t+e]>>>8,R[t+2*e]>>>8])}const C=new oe.Z({width:i,height:r,bandCount:a,pixelType:o,pixelSize:v,storageInfo:w,spatialReference:y,isPseudoSpatialReference:g,keyProperties:I,extent:x,colormap:_,statistics:m?m.statistics:null});return p?.length&&(C.nativeExtent=new L.Z({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:y}),C.transform=new Ce.Z({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new H.Z({x:(x.xmax-x.xmin)/i,y:(x.ymax-x.ymin)/r,spatialReference:y}),w.origin.x=-.5,w.origin.y=.5),{imageInfo:t,rasterInfo:C}}_processPAMInfo(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&(0,l.Wi)(t.statistics)&&(t.statistics=(0,ge.Oh)(e.histograms)),e.transform&&(0,l.Wi)(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new H.Z({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference)}async _readIFDs(e,t,i,r,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+n,to:r+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=r+n,r=0);const o=await this._readIFD(t,i,r,n,Ue.Z.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-n,n,s,a)}async _readIFD(e,t,i,r){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ue.Z.TIFF_TAGS,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!e)return null;const o=(0,$e.vr)(e,t,i,r,n,s);if(o.success){const i=[];if(o.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)).filter(l.pC),s=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=n,r=s,i.forEach((i=>(0,$e.Dq)(e,t,i,r)))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i?.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],o=await this._readIFD(e,t,i.valueOffset+6-r,r,Ue.Z.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,r,Ue.Z.TIFF_TAGS,4,a)}}async _fetchRawTiffTile(e,t,i,r){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const s=this._getTileLocation(e,t,i,r);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,h=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),u=await Promise.all(h),f=u.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===u.length?u[0].data:new ArrayBuffer(f),p=[0],m=[0];if(u.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<u.length;t++){const r=u[t].data;e.set(new Uint8Array(r),i),p[t]=i,i+=r.byteLength,m[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let b,w,v;if(o!==y||l!==g){let e=x.mask;if(e)for(b=0;b<g;b++)if(v=b*y,b<l)for(w=o;w<y;w++)e[v+w]=0;else for(w=0;w<y;w++)e[v+w]=0;else for(e=new Uint8Array(y*g),x.mask=e,b=0;b<l;b++)for(v=b*y,w=0;w<o;w++)e[v+w]=1}return x}_getTileLocation(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:n,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=r?o.maskIFDs[a]:0===a?o?.ifds[0]:o?.pyramidIFDs[a-1];if(!l)return null;const c=(0,$e.If)(l,o),h=Ge(l,"TILEOFFSETS");if(void 0===h)return null;const u=Ge(l,"TILEBYTECOUNTS"),{minRow:f,minCol:d,maxRow:p,maxCol:m}=s[a];if(t>p||i>m||t<f||i<d)return null;const y=Ve(l,"IMAGEWIDTH"),g=Ve(l,"IMAGELENGTH"),x=Ve(l,"TILEWIDTH"),b=Ve(l,"TILELENGTH"),w=c?this.rasterInfo.bandCount:1,v=w*t*(m+1)+i,I=[{from:h[v],to:h[v+w-1]+u[v+w-1]-1}];if(c){let e=!0;for(let t=0;t<w;t++)if(h[v+t]+u[v+t]!==h[v+t+1]){e=!1;break}if(!e)for(let t=0;t<w;t++)I[t]={from:h[v+t],to:h[v+t]+u[v+t]-1}}const _=h[v],S=u[v];return null==_||null==S?null:{ranges:I,ifd:l,actualTileWidth:i===m&&y%x||x,actualTileHeight:t===p&&g%b||b}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Pe(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),i=he.parse(t);return i?.recordSet?fe.Z.fromJSON(i.recordSet):null}catch{return null}}};(0,r._)([(0,f.Cb)()],Ye.prototype,"_files",void 0),(0,r._)([(0,f.Cb)()],Ye.prototype,"_headerInfo",void 0),(0,r._)([(0,f.Cb)()],Ye.prototype,"_bufferSize",void 0),(0,r._)([(0,f.Cb)({type:String,json:{write:!0}})],Ye.prototype,"datasetFormat",void 0),Ye=(0,r._)([(0,y.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Ye);const Xe=Ye,Ke=new Map;Ke.set("CRF",{desc:"Cloud Raster Format",constructor:me}),Ke.set("MRF",{desc:"Meta Raster Format",constructor:je}),Ke.set("TIFF",{desc:"GeoTIFF",constructor:Xe}),Ke.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Je}),Ke.set("JPG",{desc:"JPG Raster Format",constructor:Oe}),Ke.set("PNG",{desc:"PNG Raster Format",constructor:Oe}),Ke.set("GIF",{desc:"GIF Raster Format",constructor:Oe}),Ke.set("BMP",{desc:"BMP Raster Format",constructor:Oe});var Qe=i(81085);let et=class extends((0,b.h)((0,re.M)((0,ee.q)((0,te.I)((0,w.N)(Q((0,ne.n)((0,x.Y)((0,ie.Q)((0,c.R)(g.Z))))))))))){constructor(){super(...arguments),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,l.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(h.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new se.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:t}=this,i=t?.attributeTable,r=(0,l.pC)(i)?i.fields:null;if(r){const t=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e=e.concat(t)}const n=t?.dataType,s=t?.multidimensionalInfo;if(("vector-magdir"===n||"vector-uv"===n)&&(0,l.pC)(s)){const t=s.variables[0].unit?.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new se.Z({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new se.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,s.ij)(r,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return(0,Qe.eZ)({fields:this.rasterFields,title:this.title},e)}async generateRasterInfo(e,t){if(!(e=(0,d.TJ)(T.Z,e)))return this._primaryRasters[0].rasterInfo;try{const i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>i[e.url]=e));const r=(0,U.Ue)(e.toJSON(),i),n=new $({rasterFunction:r});return await n.open(t),n.rasterInfo}catch{return null}}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),"Function"===this.raster.datasetFormat?(t=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,i=[this.url];t&&(0,U.G8)(t.toJSON(),i);const n=await Promise.all(i.map((t=>class{static get supportedFormats(){const e=new Set;return Ke.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const s={url:t,sourceJSON:r,datasetFormat:n,ioConfig:i??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if("CRF"===n&&!i?.enableCRF)throw new a.Z("rasterfactory:open",`cannot open raster: ${t}`);return o=Ke.get(n).constructor,l=new o(s),await l.open({signal:e.signal}),l}if(n)throw new a.Z("rasterfactory:open","not a supported format "+n);const c=Array.from(Ke.keys());let h=0;const u=()=>(n=c[h++],n&&("CRF"!==n||i?.enableCRF)?(o=Ke.get(n).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>u()))):null);return u()}static register(e,t,i){Ke.has(e.toUpperCase())||Ke.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e})))),s=n.findIndex((e=>null==e));if(s>-1)throw new a.Z("imagery-tile-layer:open",`cannot open raster: ${i[s]}`);if(this._primaryRasters=n,t){const e={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((t=>e[t.url]=t));const i=(0,U.Ue)(t.rasterFunctionDefinition??t.toJSON(),e),s=new $({rasterFunction:i});try{await s.open(),this.raster=s}catch(r){const e=o.Z.getLogger(this.declaredClass);r instanceof a.Z&&e.error("imagery-tile-layer:open",r.message),e.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const i=this.raster.rasterInfo;if(!i)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",t?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,u.YP)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}};(0,r._)([(0,f.Cb)()],et.prototype,"_primaryRasters",void 0),(0,r._)([(0,f.Cb)({type:[d.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],et.prototype,"bandIds",void 0),(0,r._)([(0,f.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,p.J)(ae.c)],et.prototype,"interpolation",void 0),(0,r._)([(0,f.Cb)(S.rn)],et.prototype,"legendEnabled",void 0),(0,r._)([(0,f.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],et.prototype,"isReference",void 0),(0,r._)([(0,f.Cb)({type:["show","hide"]})],et.prototype,"listMode",void 0),(0,r._)([(0,f.Cb)({json:{read:!0,write:!0}})],et.prototype,"blendMode",void 0),(0,r._)([(0,f.Cb)()],et.prototype,"sourceJSON",void 0),(0,r._)([(0,f.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],et.prototype,"version",void 0),(0,r._)([(0,f.Cb)({readOnly:!0,json:{read:!1}})],et.prototype,"type",void 0),(0,r._)([(0,f.Cb)({type:["ArcGISTiledImageServiceLayer"]})],et.prototype,"operationalLayerType",void 0),(0,r._)([(0,f.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],et.prototype,"popupEnabled",void 0),(0,r._)([(0,f.Cb)({type:n.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],et.prototype,"popupTemplate",void 0),(0,r._)([(0,f.Cb)({readOnly:!0})],et.prototype,"defaultPopupTemplate",null),(0,r._)([(0,f.Cb)({readOnly:!0,type:[se.Z]})],et.prototype,"fields",void 0),(0,r._)([(0,f.Cb)({readOnly:!0,type:[se.Z]})],et.prototype,"rasterFields",null),(0,r._)([(0,f.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],et.prototype,"renderer",null),(0,r._)([(0,m.r)("renderer")],et.prototype,"readRenderer",null),et=(0,r._)([(0,y.j)("esri.layers.ImageryTileLayer")],et);const tt=et},23638:(e,t,i)=>{i.d(t,{y:()=>R});var r,n=i(27366),s=i(76200),a=i(85015),o=i(59896),l=i(10064),c=i(41691),h=i(32718),u=i(16054),f=i(27546),d=i(66978),p=i(94172),m=i(99346),y=i(35995),g=i(49861),x=i(89125),b=i(63780),w=i(69912),v=i(87960),I=i(84652);class _{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,n=i>>3,s=this._tileAvailabilityBitSet;return n<0||n>s.length?"unknown":s[n]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,n=!0;const s=Math.ceil(t*i/8),a=new Uint8Array(s);let o=0;for(let l=0;l<e.length;l++){const t=l%8;e[l]?(n=!1,a[o]|=1<<t):r=!1,7===t&&++o}n?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=a,this.byteSize+=a.length)}static fromDefinition(e,t){const i=e.service.request||s.default,{row:r,col:n,width:a,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:n,width:a,height:o},valid:!0,data:(0,b.a9)(a*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==r||e.location.left!==n||e.location.width!==a||e.location.height!==o))throw new l.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:n,width:a,height:o}});return _.fromJSON(e)}))}static fromJSON(e){_._validateJSON(e);const t=new _;return t.location=Object.freeze((0,I.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new l.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}let R=r=class extends((0,c.p)(a.Z)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.Y8.MEGABYTES,this.request=s.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.Z(this.cacheByteSize),this.addHandles([(0,p.YP)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,p.YP)((()=>this.layer?.tileInfo?.lods),(e=>this._initializeAvailableLevels(e)),p.tX)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(h.Z.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,n);if(s)return Promise.resolve(s);const a=r&&r.signal;return r={...r,signal:null},new Promise(((e,t)=>{(0,d.fu)(a,(()=>t((0,d.zE)())));const i=S(n);let s=this._pendingTilemapRequests[i];if(!s){s=_.fromDefinition(n,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=s,s.then(e,e)}s.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof _){const n=r.getAvailability(t,i);if("unavailable"===n)throw new l.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return n}if((0,d.D_)(r))throw r;return"unknown"})):Promise.reject(new l.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,n){r.level=e,r.row=t,r.col=i;const s=this.layer.tileInfo;s.updateTileInfo(r);const a=this.fetchAvailability(e,t,i,n).catch((e=>{if((0,d.D_)(e))throw e;if(s.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,n,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,s,a){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.handles.has(o))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let c=!1;const h={remove(){c||(c=!0,l.abort())}};if(this.handles.add(h,o),await(0,m.MU)(10,l.signal).catch((()=>{})),c||(c=!0,this.handles.remove(o)),(0,d.Hc)(l))return;const u=new v.f(e,t,i,n),f={...s,signal:l.signal},p=this.layer.tileInfo;for(let d=0;r._prefetches.length<r._maxPrefetch&&p.upsampleTile(u);++d){const e=this.fetchAvailability(u.level,u.row,u.col,f);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,y.B7)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const n=S(r);return this._tilemapCache.get(n)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};R._maxPrefetch=4,R._prefetches=new f.Z({initialSize:r._maxPrefetch}),(0,n._)([(0,g.Cb)({constructOnly:!0,type:Number})],R.prototype,"levels",void 0),(0,n._)([(0,x.p)("levels")],R.prototype,"castLevels",null),(0,n._)([(0,g.Cb)({readOnly:!0,type:Number})],R.prototype,"size",null),(0,n._)([(0,g.Cb)({constructOnly:!0,type:Number})],R.prototype,"cacheByteSize",void 0),(0,n._)([(0,g.Cb)({constructOnly:!0})],R.prototype,"layer",void 0),(0,n._)([(0,g.Cb)({constructOnly:!0})],R.prototype,"request",void 0),R=r=(0,n._)([(0,w.j)("esri.layers.support.TilemapCache")],R)},55635:(e,t,i)=>{i.d(t,{OE:()=>u,Gc:()=>p,Qg:()=>f,Rq:()=>l,gX:()=>d,z2:()=>c,ET:()=>h,Vx:()=>y});i(59486);var r=i(92026);var n=i(80394),s=i(585);const a=new Map,o=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:15e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.refCount--,e.refCount<=0&&(r.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){const e=r.get(i);return e.ts=Date.now(),e.refCount++,r.delete(i),r.set(i,e),e.block}return null}putBlock(e,t,i,r){const n=this._cachedBlocks,s=e+"/"+t;if(n.has(s)){const e=n.get(s);e.ts=Date.now(),e.refCount++}else n.set(s,{block:i,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,r=e+"/"+t;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=i-this._duration;r++)e.delete(t[r][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map},r=a.get(e);return r?(r.push(i),r.length-1):(a.set(e,[i]),0)}function h(e,t){const i=a.get(e);i&&(i[t]=null,i.some((e=>null!=e))||a.delete(e))}function u(e,t,i){const r=a.get(e);if(!r)return null==t?o.decreaseRefCount(e,i):0;if(null==t||null==r[t])return o.decreaseRefCount(e,i);const n=r[t]?.cache,s=n?.get(i);if(n&&s){if(s.refCount--,0===s.refCount){n.delete(i);for(let e=0;e<r.length;e++)r[e]?.cache.delete(i);s.controller&&s.controller.abort()}return s.refCount}return 0}function f(e,t,i){const r=a.get(e);if(!r)return null==t?o.getBlock(e,i):null;if(null==t||null==r[t]){for(let e=0;e<r.length;e++){const t=r[e]?.cache.get(i);if(t)return t.refCount++,t.block}return o.getBlock(e,i)}const n=r[t]?.cache.get(i);if(n)return n.refCount++,n.block;for(let s=0;s<r.length;s++){if(s===t||!r[s])continue;const e=r[s]?.cache,n=e?.get(i);if(e&&n)return n.refCount++,e.set(i,n),n.block}return null}function d(e,t,i,r){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const s=a.get(e);if(!s)return void(null==t&&o.putBlock(e,i,r,n));if(null==t||null==s[t])return void o.putBlock(e,i,r,n);const l={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:n};r.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),s[t]?.cache.set(i,l)}function p(e,t,i){const r=a.get(e);r?null!=t&&null!=r[t]?r[t]?.cache.delete(i):o.deleteBlock(e,i):null==t&&o.deleteBlock(e,i)}function m(e,t){const i=a.get(e);return i?i[t]??null:null}function y(e,t,i,a,o,l){let c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const h=m(e,t);if(!h)return;const u=h.extent,{cache:f,rasterInfo:d}=h;if(u&&u.xmin===i.xmin&&u.xmax===i.xmax&&u.ymin===i.ymin&&u.ymax===i.ymax)return;a=a??0;const p=i.clone().normalize(),{spatialReference:y,transform:g}=d,x=new Set;for(let m=0;m<p.length;m++){const e=p[m];if(e.xmax-e.xmin<=a||e.ymax-e.ymin<=a)continue;let t=(0,n.tB)(e,y,c);(0,r.pC)(g)&&(t=g.inverseTransform(t));const i=new s.Z({x:a,y:a,spatialReference:e.spatialReference});if(null==o&&!(o=(0,n.VO)(i,y,e,c)))return;const{pyramidLevel:h,pyramidResolution:u,excessiveReading:f}=(0,n.kr)(o,d,l||"closest");if(f)return;const{storageInfo:b}=d,{origin:w}=b,v={x:Math.max(0,Math.floor((t.xmin-w.x)/u.x)),y:Math.max(0,Math.floor((w.y-t.ymax)/u.y))},I=Math.ceil((t.xmax-t.xmin)/u.x-.1),_=Math.ceil((t.ymax-t.ymin)/u.y-.1),S=h>0?b.pyramidBlockWidth:b.blockWidth,R=h>0?b.pyramidBlockHeight:b.blockHeight,C=1,T=Math.max(0,Math.floor(v.x/S)-C),k=Math.max(0,Math.floor(v.y/R)-C),F=Math.floor((v.x+I-1)/S)+C,P=Math.floor((v.y+_-1)/R)+C;for(let r=k;r<=P;r++)for(let e=T;e<=F;e++)x.add(`${h}/${r}/${e}`)}f.forEach(((e,t)=>{if(!x.has(t)){const e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}})),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},71466:(e,t,i)=>{i.d(t,{d:()=>s,h:()=>n});var r=i(22824);const n={type:r.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:s}}}}};function s(e,t,i,n){if(!e)return null;const{minScale:s,maxScale:a,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return n&&n.ignoreMinMaxLOD?r.Z.fromJSON(e):r.Z.fromJSON({...e,lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=o&&t<=l}))});if(0!==s&&0!==a){const t=e=>Math.round(1e4*e)/1e4,i=s?t(s):1/0,n=a?t(a):-1/0;return r.Z.fromJSON({...e,lods:e.lods.filter((e=>{const r=t(e.scale);return r<=i&&r>=n}))})}return r.Z.fromJSON(e)}}}]);
//# sourceMappingURL=3938.fbdb7bbb.chunk.js.map