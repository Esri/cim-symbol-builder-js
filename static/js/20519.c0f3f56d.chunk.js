"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[20519,43139],{28458:(e,a,r)=>{r.d(a,{L:()=>n});var t=r(41226);class n{constructor(){this._serviceMetadatas=new Map}async fetchServiceMetadata(e,a){const r=this._serviceMetadatas.get(e);if(r)return r;const n=await(0,t.T)(e,a);return this._serviceMetadatas.set(e,n),n}}},84076:(e,a,r)=>{r.d(a,{w:()=>o});var t=r(19545),n=r(76200),i=r(10064),s=r(66978),l=r(25899),y=r(7575),c=r(98995);async function o(e,a){const r=(0,l.Qc)(e);if(!r)throw new i.Z("invalid-url","Invalid scene service url");const o={...a,sceneServerUrl:r.url.path,layerId:r.sublayer??void 0};if(o.sceneLayerItem??=await async function(e){const a=(await u(e)).serviceItemId;if(!a)return null;const r=new c.default({id:a,apiKey:e.apiKey}),i=await async function(e){const a=t.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const r=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.Z)(r,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(L){(0,s.r9)(L)}return null}(e);null!=i&&(r.portal=new y.Z({url:i}));try{return r.load({signal:e.signal})}catch(f){return(0,s.r9)(f),null}}(o),null==o.sceneLayerItem)return d(o.sceneServerUrl.replace("/SceneServer","/FeatureServer"),o);const L=await async function(e){let{sceneLayerItem:a,signal:r}=e;if(!a)return null;try{const e=(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:r})).find((e=>"Feature Service"===e.type))||null;if(!e)return null;const t=new c.default({portal:e.portal,id:e.id});return await t.load(),t}catch(t){return(0,s.r9)(t),null}}(o);if(!L?.url)throw new i.Z("related-service-not-found","Could not find feature service through portal item relationship");const f=await d(L.url,o);return f.portalItem=L,f}async function u(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",token:e.apiKey},responseType:"json",signal:e.signal};try{const r=await(0,n.Z)(e.sceneServerUrl,a);e.rootDocument=r.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,a){const r=(0,l.Qc)(e);if(!r)throw new i.Z("invalid-feature-service-url","Invalid feature service url");const t=r.url.path,s=a.layerId;if(null==s)return{serverUrl:t};const y=u(a),c=e=>{const r={query:{f:"json"},responseType:"json",authMode:e,signal:a.signal};return(0,n.Z)(t,r)},o=c("anonymous").catch((()=>c("no-prompt"))),[d,L]=await Promise.all([o,y]),f=L?.layers,p=d.data&&d.data.layers;if(!Array.isArray(p))throw new Error("expected layers array");if(Array.isArray(f)){for(let n=0;n<Math.min(f.length,p.length);n++)if(f[n].id===s)return{serverUrl:t,layerId:p[n].id}}else if(null!=s&&s<p.length)return{serverUrl:t,layerId:p[s].id};throw new Error("could not find matching associated sublayer")}},20519:(e,a,r)=>{r.r(a),r.d(a,{populateGroupLayer:()=>G,populateOperationalLayers:()=>o});var t=r(40281),n=(r(93169),r(28458)),i=r(19610),s=r(98995);function l(e,a){return!(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)&&e.featureCollectionType===a}var y=r(43139),c=r(21371);async function o(e,a,r){if(!a)return;const t=[];for(const i of a)t.push(b(i,r));const n=await Promise.allSettled(t);for(const i of n)"rejected"===i.status||i.value&&e.add(i.value)}const u={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",OGCFeatureLayer:"OGCFeatureLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",GeoJSON:"GeoJSONLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer",Voxel:"VoxelLayer",LineOfSightLayer:"LineOfSightLayer"},d={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},L={ArcGISFeatureLayer:"FeatureLayer"},f={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",ArcGISSceneServiceLayer:"SceneLayer",DefaultTileLayer:"TileLayer"},p={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoRSS:"GeoRSSLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},S={ArcGISFeatureLayer:"FeatureLayer"},m={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"},w={...p,LinkChartLayer:"LinkChartLayer"},h={...S},I={...m};async function b(e,a){return async function(e,a,r){const t=new e;return t.read(a,r.context),"group"===t.type&&("GroupLayer"===a.layerType?await G(t,a,r):T(a)?function(e,a,r){a.itemId&&(e.portalItem=new s.default({id:a.itemId,portal:r?.portal}),e.when((()=>{const t=t=>{const n=t.layerId;A(t,e,a,n,r);const i=a.featureCollection?.layers?.[n];i&&t.read(i,r)};e.layers?.forEach(t),e.tables?.forEach(t)})))}(t,a,r.context):v(a)&&await async function(e,a,r){const t=i.T.FeatureLayer,n=await t(),s=a.featureCollection,l=s?.showLegend,y=s?.layers?.map(((t,i)=>{const s=new n;s.read(t,r);const y={...r,ignoreDefaults:!0};return A(s,e,a,i,y),null!=l&&s.read({showLegend:l},y),s}));e.layers.addMany(y??[])}(t,a,r.context)),await(0,c.y)(t,r.context),t}(await g(e,a),e,a)}async function g(e,a){const r=a.context,t=M(r);let c=e.layerType||e.type;!c&&a?.defaultLayerType&&(c=a.defaultLayerType);const o=t[c];let u=o?i.T[o]:i.T.UnknownLayer;if(T(e)){const a=r?.portal;if(e.itemId){const r=new s.default({id:e.itemId,portal:a});await r.load();const t=(await(0,y.selectLayerClassPath)(r,new n.L)).className||"UnknownLayer";u=i.T[t]}}else"ArcGISFeatureLayer"===c?function(e){return l(e,"notes")}(e)||function(e){return l(e,"markup")}(e)?u=i.T.MapNotesLayer:function(e){return l(e,"route")}(e)?u=i.T.RouteLayer:v(e)&&(u=i.T.GroupLayer):e.wmtsInfo?.url&&e.wmtsInfo.layerIdentifier?u=i.T.WMTSLayer:"WFS"===c&&"2.0.0"!==e.wfsInfo?.version&&(u=i.T.UnsupportedLayer);return u()}function v(e){return"ArcGISFeatureLayer"===e.layerType&&!T(e)&&(e.featureCollection?.layers?.length??0)>1}function T(e){return"Feature Collection"===e.type}function M(e){let a;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":a=f;break;case"ground":a=d;break;case"tables":a=L;break;default:a=u}break;case"link-chart":switch(e.layerContainerType){case"basemap":a=I;break;case"tables":a=h;break;default:a=w}break;default:switch(e.layerContainerType){case"basemap":a=m;break;case"tables":a=S;break;default:a=p}}return a}async function G(e,a,r){const n=new t.Z,i=o(n,Array.isArray(a.layers)?a.layers:[],r);try{try{if(await i,"group"===e.type)return e.layers.addMany(n),e}catch(s){e.destroy();for(const e of n)e.destroy();throw s}}catch(s){throw s}}function A(e,a,r,t,n){e.read({id:`${a.id}-sublayer-${t}`,visibility:r.visibleLayers?.includes(t)??!0},n)}},19610:(e,a,r)=>{r.d(a,{T:()=>t});const t={BingMapsLayer:async()=>(await r.e(60165).then(r.bind(r,60165))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(42846),r.e(81118),r.e(67066),r.e(29615),r.e(66505)]).then(r.bind(r,66505))).default,CSVLayer:async()=>(await r.e(98435).then(r.bind(r,98435))).default,DimensionLayer:async()=>(await r.e(47406).then(r.bind(r,47406))).default,ElevationLayer:async()=>(await r.e(46816).then(r.bind(r,46816))).default,FeatureLayer:async()=>(await Promise.resolve().then(r.bind(r,64326))).default,GeoJSONLayer:async()=>(await r.e(5064).then(r.bind(r,5064))).default,GeoRSSLayer:async()=>(await r.e(70054).then(r.bind(r,70054))).default,GroupLayer:async()=>(await r.e(18048).then(r.bind(r,18048))).default,ImageryLayer:async()=>(await Promise.all([r.e(83406),r.e(27607),r.e(35345),r.e(99672),r.e(89108),r.e(39652)]).then(r.bind(r,39652))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(35345),r.e(80394),r.e(99672),r.e(40527),r.e(89108),r.e(43064)]).then(r.bind(r,43064))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(81118),r.e(56251)]).then(r.bind(r,56251))).default,KMLLayer:async()=>(await r.e(13838).then(r.bind(r,13838))).default,LineOfSightLayer:async()=>(await r.e(33724).then(r.bind(r,33724))).default,LinkChartLayer:async()=>(await Promise.all([r.e(83406),r.e(45026),r.e(54054),r.e(95281),r.e(76143),r.e(66395),r.e(46326)]).then(r.bind(r,46326))).default,MapImageLayer:async()=>(await Promise.all([r.e(83406),r.e(27607),r.e(89623),r.e(20680),r.e(19583)]).then(r.bind(r,19583))).default,MapNotesLayer:async()=>(await r.e(33513).then(r.bind(r,33513))).default,MediaLayer:async()=>(await r.e(88839).then(r.bind(r,88839))).default,OGCFeatureLayer:async()=>(await Promise.all([r.e(83406),r.e(67213),r.e(96741)]).then(r.bind(r,98701))).default,OpenStreetMapLayer:async()=>(await r.e(31656).then(r.bind(r,31656))).default,OrientedImageryLayer:async()=>(await r.e(60706).then(r.bind(r,60706))).default,PointCloudLayer:async()=>(await Promise.all([r.e(81118),r.e(9532)]).then(r.bind(r,9532))).default,RouteLayer:async()=>(await Promise.all([r.e(729),r.e(88257)]).then(r.bind(r,88257))).default,SceneLayer:async()=>(await Promise.all([r.e(42846),r.e(81118),r.e(67066),r.e(29615),r.e(5838)]).then(r.bind(r,5838))).default,StreamLayer:async()=>(await r.e(2668).then(r.bind(r,2668))).default,SubtypeGroupLayer:async()=>(await r.e(60150).then(r.bind(r,60150))).default,TileLayer:async()=>(await Promise.all([r.e(83406),r.e(27607),r.e(89623),r.e(20680),r.e(42977)]).then(r.bind(r,42977))).default,UnknownLayer:async()=>(await r.e(74917).then(r.bind(r,74917))).default,UnsupportedLayer:async()=>(await r.e(88101).then(r.bind(r,88101))).default,VectorTileLayer:async()=>(await Promise.all([r.e(30969),r.e(56045)]).then(r.bind(r,47409))).default,VoxelLayer:async()=>(await Promise.all([r.e(81118),r.e(11080)]).then(r.bind(r,11080))).default,WFSLayer:async()=>(await Promise.all([r.e(45927),r.e(98585)]).then(r.bind(r,38566))).default,WMSLayer:async()=>(await r.e(84227).then(r.bind(r,84227))).default,WMTSLayer:async()=>(await r.e(3154).then(r.bind(r,3154))).default,WebTileLayer:async()=>(await r.e(89200).then(r.bind(r,89200))).default}},97827:(e,a,r)=>{r.d(a,{$O:()=>i,CD:()=>o,Ok:()=>s,Q4:()=>l,XX:()=>y,_Y:()=>c,bS:()=>n});var t=r(84076);function n(e){const a={id:e.id,name:e.name};return"Oriented Imagery Layer"===e.type&&(a.layerType="OrientedImageryLayer"),a}async function i(e,a,r){if(null==e?.layers||null==e?.tables){const t=await r.fetchServiceMetadata(a);(e=e||{}).layers=e.layers||t?.layers?.map(n),e.tables=e.tables||t?.tables?.map(n)}return e}function s(e){const a=e.layers;if(a?.length)return a[0].id;const r=e.tables;return r?.length?r[0].id:null}function l(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function y(e){const a=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}function c(e){return e?.layers?.filter((e=>{let{layerType:a}=e;return"OrientedImageryLayer"===a})).map((e=>{let{id:a}=e;return a}))}async function o(e,a,r){if(!e?.url)return a??{};if(a??={},!a.layers){const t=await r.fetchServiceMetadata(e.url);a.layers=t.layers?.map(n)}const{serverUrl:i,portalItem:s}=await(0,t.w)(e.url,{sceneLayerItem:e}).catch((()=>({serverUrl:null,portalItem:null})));if(null==i)return a.tables=[],a;if(!a.tables&&s){const e=await s.fetchData();if(e?.tables)a.tables=e.tables.map(n);else{const e=await r.fetchServiceMetadata(i);a.tables=e?.tables?.map(n)}}if(a.tables)for(const t of a.tables)t.url=`${i}/${t.id}`;return a}},43139:(e,a,r)=>{r.r(a),r.d(a,{fromItem:()=>u,selectLayerClassPath:()=>d});var t=r(10064),n=r(84076),i=r(28458),s=r(37933),l=r(19610),y=r(98995),c=r(97827),o=r(73117);async function u(e){!e.portalItem||e.portalItem instanceof y.default||(e={...e,portalItem:new y.default(e.portalItem)});const a=await async function(e){await e.load();const a=new i.L;return async function(e){const a=e.className,r=l.T[a];return{constructor:await r(),properties:e.properties}}(await d(e,a))}(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})}async function d(e,a){switch(e.type){case"Map Service":return async function(e,a){return await async function(e,a){return(await a.fetchServiceMetadata(e.url)).tileInfo}(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Feature Service":return async function(e,a){const r=await L(e,a);if("object"==typeof r){const e={};return null!=r.id&&(e.layerId=r.id),{className:r.className||"FeatureLayer",properties:e}}return{className:"GroupLayer"}}(e,a);case"Feature Collection":return async function(e){await e.load();const a=(0,o._$)(e,"Map Notes"),r=(0,o._$)(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if((0,o._$)(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return 1===(0,c.Q4)(t)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return async function(e,a){const r=await L(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:r}=await(0,n.w)(e.url,{sceneLayerItem:e});return(await a.fetchServiceMetadata(r))?.tables??[]}catch{return[]}}));if("object"==typeof r){const t={};let n;if(null!=r.id?(t.layerId=r.id,n=`${e.url}/layers/${r.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(s.fb))if(e.typeKeywords.includes(a))return{className:s.fb[a]};const i=await a.fetchServiceMetadata(n);return{className:s.fb[i?.layerType]||"SceneLayer",properties:t}}if(!1===r){if("Voxel"===(await a.fetchServiceMetadata(e.url))?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"Image Service":return async function(e,a){await e.load();const r=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=(await e.fetchData())?.layerType;if("ArcGISTiledImageServiceLayer"===t)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===t)return{className:"ImageryLayer"};const n=await a.fetchServiceMetadata(e.url),i=n.cacheType?.toLowerCase(),s=n.capabilities?.toLowerCase().includes("tilesonly");return"map"===i||s?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};case"Group Layer":return{className:"GroupLayer"};default:throw new t.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function L(e,a,r){const t=e.url;if(!t||/\/\d+$/.test(t))return{};await e.load();let n=await e.fetchData();if("Feature Service"===e.type){const e=await(0,c.$O)(n,t,a),r=f(e);if("object"==typeof r){const a=(0,c.XX)(e),t=(0,c._Y)(e);r.className=null!=r.id&&a.includes(r.id)?"SubtypeGroupLayer":null!=r.id&&t?.includes(r.id)?"OrientedImageryLayer":"FeatureLayer"}return r}if("Scene Service"===e.type&&(n=await(0,c.CD)(e,n,a)),(0,c.Q4)(n)>0)return f(n);const i=await a.fetchServiceMetadata(t);return r&&(i.tables=await r()),f(i)}function f(e){return 1===(0,c.Q4)(e)&&{id:(0,c.Ok)(e)}}},41226:(e,a,r)=>{r.d(a,{T:()=>n});var t=r(76200);async function n(e,a){const{data:r}=await(0,t.Z)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return r}}}]);
//# sourceMappingURL=20519.c0f3f56d.chunk.js.map