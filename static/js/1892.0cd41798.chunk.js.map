{"version":3,"file":"static/js/1892.0cd41798.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list/pick-list.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list/pick-list.scss?tag=calcite-pick-list&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list-group/pick-list-group.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list-group/pick-list-group.scss?tag=calcite-pick-list-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list-item/pick-list-item.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/pick-list-item/pick-list-item.scss?tag=calcite-pick-list-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport { InteractiveComponent, updateHostInteraction } from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport type { ValueUnion } from \"../types\";\nimport { logger } from \"../../utils/logger\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { ICON_TYPES } from \"./resources\";\nimport {\n  calciteInternalListItemValueChangeHandler,\n  calciteListFocusOutHandler,\n  calciteListItemChangeHandler,\n  cleanUpObserver,\n  deselectRemovedItems,\n  deselectSiblingItems,\n  getItemData,\n  handleFilter,\n  handleFilterEvent,\n  handleInitialFilter,\n  initialize,\n  initializeObserver,\n  ItemData,\n  keyDownHandler,\n  ListFocusId,\n  mutationObserverCallback,\n  removeItem,\n  selectSiblings,\n  setFocus,\n  setUpItems,\n} from \"./shared-list-logic\";\nimport List from \"./shared-list-render\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list\",\n  removalVersion: 3,\n  suggested: \"list\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` or `calcite-pick-list-group` elements. Items are displayed as a vertical list.\n * @slot menu-actions - A slot for adding a button and menu combination for performing actions, such as sorting.\n */\n@Component({\n  tag: \"calcite-pick-list\",\n  styleUrl: \"pick-list.scss\",\n  shadow: true,\n})\nexport class PickList<\n    ItemElement extends HTMLCalcitePickListItemElement = HTMLCalcitePickListItemElement,\n  >\n  implements InteractiveComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's filtered items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalcitePickListItemElement[] = [];\n\n  /**\n   * The component's filtered data.\n   *\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by shared-list-logic\n  @Prop({ mutable: true }) filteredData: ItemData = [];\n\n  /**\n   * When `true`, an input appears at the top of the list that can be used by end users to filter items in the list.\n   */\n  @Prop({ reflect: true }) filterEnabled = false;\n\n  /**\n   * Placeholder text for the filter input field.\n   */\n  @Prop({ reflect: true }) filterPlaceholder: string;\n\n  /**\n   * Text for the filter input field.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by shared-list-logic\n  @Prop({ reflect: true, mutable: true }) filterText: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Similar to standard radio buttons and checkboxes.\n   * When `true`, a user can select multiple `calcite-pick-list-item`s at a time.\n   * When `false`, only a single `calcite-pick-list-item` can be selected at a time,\n   * and a new selection will deselect previous selections.\n   */\n  @Prop({ reflect: true }) multiple = false;\n\n  /**\n   * When `true` and single selection is enabled, the selection changes when navigating `calcite-pick-list-item`s via keyboard.\n   */\n  @Prop({ reflect: true }) selectionFollowsFocus = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListElement;\n\n  @State() selectedValues: Map<string, ItemElement> = new Map();\n\n  @State() dataForFilter: ItemData = [];\n\n  items: ItemElement[];\n\n  lastSelectedItem: ItemElement = null;\n\n  mutationObserver = createObserver(\"mutation\", mutationObserverCallback.bind(this));\n\n  emitCalciteListChange: () => void;\n\n  emitCalciteListFilter: () => void;\n\n  filterEl: HTMLCalciteFilterElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    initialize.call(this);\n    initializeObserver.call(this);\n  }\n\n  disconnectedCallback(): void {\n    cleanUpObserver.call(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    handleInitialFilter.call(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when any of the `calcite-pick-list-item` selections have changed.\n   */\n  @Event({ cancelable: false }) calciteListChange: EventEmitter<\n    Map<string, HTMLCalcitePickListItemElement>\n  >;\n\n  /**\n   * Emits when a filter has changed.\n   */\n  @Event({ cancelable: false }) calciteListFilter: EventEmitter<void>;\n\n  @Listen(\"calciteListItemRemove\")\n  calciteListItemRemoveHandler(event: CustomEvent<void>): void {\n    removeItem.call(this, event);\n  }\n\n  @Listen(\"calciteListItemChange\")\n  calciteListItemChangeHandler(event: CustomEvent): void {\n    calciteListItemChangeHandler.call(this, event);\n  }\n\n  @Listen(\"calciteInternalListItemPropsChange\")\n  calciteInternalListItemPropsChangeHandler(event: CustomEvent): void {\n    event.stopPropagation();\n    this.setUpFilter();\n  }\n\n  @Listen(\"calciteInternalListItemValueChange\")\n  calciteInternalListItemValueChangeHandler(event: CustomEvent): void {\n    calciteInternalListItemValueChangeHandler.call(this, event);\n    event.stopPropagation();\n  }\n\n  @Listen(\"focusout\")\n  calciteListFocusOutHandler(event: FocusEvent): void {\n    calciteListFocusOutHandler.call(this, event);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setUpItems(): void {\n    setUpItems.call(this, \"calcite-pick-list-item\");\n  }\n\n  setUpFilter(): void {\n    if (this.filterEnabled) {\n      this.dataForFilter = this.getItemData();\n    }\n  }\n\n  setFilterEl = (el: HTMLCalciteFilterElement): void => {\n    this.filterEl = el;\n  };\n\n  setFilteredItems = (filteredItems: any[]): void => {\n    this.filteredItems = filteredItems;\n  };\n\n  deselectRemovedItems = deselectRemovedItems.bind(this);\n\n  deselectSiblingItems = deselectSiblingItems.bind(this);\n\n  selectSiblings = selectSiblings.bind(this);\n\n  handleFilter = handleFilter.bind(this);\n\n  handleFilterEvent = handleFilterEvent.bind(this);\n\n  getItemData = getItemData.bind(this);\n\n  keyDownHandler = keyDownHandler.bind(this);\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Returns the component's selected `calcite-pick-list-item`s. */\n  @Method()\n  async getSelectedItems(): Promise<Map<string, HTMLCalcitePickListItemElement>> {\n    return this.selectedValues;\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   *\n   * @param focusId\n   */\n  @Method()\n  async setFocus(focusId?: ListFocusId): Promise<void> {\n    await componentFocusable(this);\n\n    return setFocus.call(this, focusId);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  getIconType(): ValueUnion<typeof ICON_TYPES> {\n    return this.multiple ? ICON_TYPES.square : ICON_TYPES.circle;\n  }\n\n  render(): VNode {\n    return (\n      <Host aria-busy={toAriaBoolean(this.loading)} onKeyDown={this.keyDownHandler} role=\"menu\">\n        <List props={this} />\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply text-color-2\n    text-n1h\n    relative\n    box-border\n    flex\n    flex-shrink-0\n    flex-grow\n    flex-col\n    items-stretch\n    bg-transparent;\n\n  * {\n    @apply box-border;\n  }\n}\n\n@include disabled();\n\n:host([filter-enabled]) header {\n  @apply bg-foreground-1\n    mb-1\n    flex\n    items-stretch\n    justify-end;\n  &.sticky-pos {\n    @apply sticky top-0 z-default;\n  }\n  @apply shadow-border-bottom;\n}\n\ncalcite-filter {\n  @apply mb-0;\n}\n\n:host([loading][disabled]) {\n  min-block-size: 2rem;\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { constrainHeadingLevel, Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { CSS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list-group\",\n  removalVersion: 3,\n  suggested: \"list-item-group\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` elements.\n */\n@Component({\n  tag: \"calcite-pick-list-group\",\n  styleUrl: \"pick-list-group.scss\",\n  shadow: true,\n})\nexport class PickListGroup implements ConditionalSlotComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the title for all nested `calcite-pick-list-item`s.\n   *\n   */\n  @Prop({ reflect: true }) groupTitle: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListGroupElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, groupTitle, headingLevel } = this;\n    const hasParentItem = getSlotted(el, SLOTS.parentItem) !== null;\n    const sectionClasses = {\n      [CSS.container]: true,\n      [CSS.indented]: hasParentItem,\n    };\n\n    const title = groupTitle;\n    const parentLevel = el.closest(\"calcite-pick-list\")?.headingLevel;\n    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;\n    const level = headingLevel || relativeLevel;\n\n    return (\n      <Fragment>\n        {title ? (\n          <Heading class={CSS.heading} level={level}>\n            {title}\n          </Heading>\n        ) : null}\n        <slot name={SLOTS.parentItem} />\n        <section class={sectionClasses}>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply text-color-2\n    text-n1\n    mb-1\n    box-border\n    block\n    bg-transparent;\n\n  * {\n    @apply box-border;\n  }\n}\n\n:host(:last-child) {\n  @apply mb-0;\n}\n\n@import \"../../assets/styles/header\";\n\n.heading {\n  @apply text-0h text-n1-wrap\n    text-color-3\n    my-2\n    mx-4;\n}\n\n.container--indented {\n  margin-inline-start: theme(\"margin.6\");\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ICON_TYPES } from \"../pick-list/resources\";\nimport { logger } from \"../../utils/logger\";\nimport { PickListItemMessages } from \"./assets/pick-list-item/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list-item\",\n  removalVersion: 3,\n  suggested: \"list-item\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component.\n */\n@Component({\n  tag: \"calcite-pick-list-item\",\n  styleUrl: \"pick-list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class PickListItem\n  implements ConditionalSlotComponent, InteractiveComponent, LoadableComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * A description for the component that displays below the label text.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  @Watch(\"description\")\n  descriptionWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `false`, the component cannot be deselected by user interaction.\n   */\n  @Prop({ reflect: true }) deselectDisabled = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true }) nonInteractive = false;\n\n  /**\n   * Determines the icon SVG symbol that will be shown. Options are `\"circle\"`, `\"square\"`, `\"grip\"` or `null`.\n   *\n   * @see [ICON_TYPES](https://github.com/Esri/calcite-design-system/blob/dev/src/components/pick-list/resources.ts#L5)\n   */\n  @Prop({ reflect: true }) icon: ICON_TYPES | null = null;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Label and accessible name for the component. Appears next to the icon.\n   */\n  @Prop({ reflect: true }) label!: string;\n\n  @Watch(\"label\")\n  labelWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PickListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PickListItemMessages;\n\n  @Watch(\"defaultMessages\")\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent list.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  @Watch(\"metadata\")\n  metadataWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, displays a remove action that removes the item from the list.\n   */\n  @Prop({ reflect: true }) removable = false;\n\n  /**\n   * When `true`, selects an item. Toggles when an item is checked/unchecked.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteListItemChange.emit({\n      item: this.el,\n      value: this.value,\n      selected: this.selected,\n      shiftPressed: this.shiftPressed,\n    });\n\n    this.shiftPressed = false;\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value!: any;\n\n  @Watch(\"value\")\n  valueWatchHandler(newValue: any, oldValue: any): void {\n    this.calciteInternalListItemValueChange.emit({ oldValue, newValue });\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListItemElement;\n\n  private focusEl: HTMLLabelElement;\n\n  shiftPressed: boolean;\n\n  @State() defaultMessages: PickListItemMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected or unselected.\n   */\n  @Event({ cancelable: false }) calciteListItemChange: EventEmitter<{\n    item: HTMLCalcitePickListItemElement;\n    value: any;\n    selected: boolean;\n    shiftPressed: boolean;\n  }>;\n\n  /**\n   * Fires when the remove button is pressed.\n   */\n  @Event({ cancelable: true }) calciteListItemRemove: EventEmitter<void>;\n\n  /**\n   * Emits when the component's label, description, value, or metadata properties are modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemPropsChange: EventEmitter<void>;\n\n  /**\n   * Emits when the component's value property is modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemValueChange: EventEmitter<{\n    oldValue: any;\n    newValue: any;\n  }>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Toggles the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  @Method()\n  async toggleSelected(coerce?: boolean): Promise<void> {\n    this.selected = typeof coerce === \"boolean\" ? coerce : !this.selected;\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.focusEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  pickListClickHandler = (event: MouseEvent): void => {\n    if (this.disabled || (this.deselectDisabled && this.selected) || this.nonInteractive) {\n      return;\n    }\n\n    this.shiftPressed = event.shiftKey;\n    this.selected = !this.selected;\n  };\n\n  pickListKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \" \") {\n      event.preventDefault();\n      if ((this.deselectDisabled && this.selected) || this.nonInteractive) {\n        return;\n      }\n      this.selected = !this.selected;\n    }\n  };\n\n  removeClickHandler = (): void => {\n    this.calciteListItemRemove.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(): VNode {\n    const { icon, iconFlipRtl } = this;\n\n    if (!icon) {\n      return null;\n    }\n\n    return (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconDot]: icon === ICON_TYPES.circle,\n        }}\n        onClick={this.pickListClickHandler}\n      >\n        {icon === ICON_TYPES.square ? (\n          <calcite-icon flipRtl={iconFlipRtl} icon={ICONS.checked} scale=\"s\" />\n        ) : null}\n      </span>\n    );\n  }\n\n  renderRemoveAction(): VNode {\n    return this.removable ? (\n      <calcite-action\n        class={CSS.remove}\n        icon={ICONS.remove}\n        onClick={this.removeClickHandler}\n        slot={SLOTS.actionsEnd}\n        text={this.messages.remove}\n      />\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n\n    return hasActionsStart ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsStart]: true }}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el, removable } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n\n    return hasActionsEnd || removable ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsEnd]: true }}>\n        <slot name={SLOTS.actionsEnd} />\n        {this.renderRemoveAction()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { description, label } = this;\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        {this.renderIcon()}\n        {this.renderActionsStart()}\n        <label\n          aria-label={label}\n          class={CSS.label}\n          onClick={this.pickListClickHandler}\n          onKeyDown={this.pickListKeyDownHandler}\n          ref={(focusEl): HTMLLabelElement => (this.focusEl = focusEl)}\n          tabIndex={0}\n        >\n          <div\n            aria-checked={toAriaBoolean(this.selected)}\n            class={CSS.textContainer}\n            role=\"menuitemcheckbox\"\n          >\n            <span class={CSS.title}>{label}</span>\n            {description ? <span class={CSS.description}>{description}</span> : null}\n          </div>\n        </label>\n        {this.renderActionsEnd()}\n      </InteractiveContainer>\n    );\n  }\n}\n",":host {\n  @apply bg-foreground-1\n    text-n1\n    text-color-1\n    shadow-border-bottom\n    bg-foreground-1\n    text-n1h\n    m-0\n    mb-px\n    box-border\n    flex\n    items-stretch;\n  transition: background-color var(--calcite-animation-timing);\n  animation: calcite-fade-in var(--calcite-animation-timing);\n\n  * {\n    @apply box-border;\n  }\n}\n\n.label {\n  @apply focus-base\n    flex\n    flex-auto\n    cursor-pointer\n    items-center\n    bg-transparent;\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n:host([non-interactive]:hover) {\n  @apply bg-foreground-1;\n}\n\n:host([non-interactive]) .label,\n:host([non-interactive]) .icon {\n  @apply pointer-events-none;\n}\n\n.icon {\n  @apply my-0 flex cursor-pointer items-center p-1;\n  color: theme(\"colors.brand\");\n  flex: 0 0 auto;\n  line-height: 0;\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n.icon-dot {\n  @apply flex w-6 items-center p-2;\n  &::before {\n    @apply opacity-0;\n    content: \"\\2022\";\n  }\n}\n\n.icon calcite-icon {\n  @apply opacity-0;\n}\n\n:host([selected]) .icon-dot::before,\n:host([selected]) .icon calcite-icon {\n  transition: opacity var(--calcite-animation-timing);\n  @apply opacity-100;\n}\n\n.text-container {\n  @apply text-n2-wrap\n    word-break\n    pointer-events-none\n    flex\n    flex-col\n    flex-nowrap\n    overflow-hidden\n    py-2\n    px-3;\n}\n\n.title {\n  @apply text-color-1 font-normal;\n}\n\n.description {\n  @apply text-color-3 mt-0.5 font-normal;\n}\n\n.actions {\n  @apply m-0 flex flex-initial items-stretch justify-end;\n}\n\n.actions--start ~ .label {\n  padding-inline-start: theme(\"padding.1\");\n}\n\n@include disabled();\n@include base-component();\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n"],"names":["constrainHeadingLevel","level","Math","min","max","ceil","Heading","props","children","HeadingTag","h","class","key","logger","deprecated","name","removalVersion","suggested","PickList","lastSelectedItem","mutationObserver","createObserver","mutationObserverCallback","bind","this","setFilterEl","el","filterEl","setFilteredItems","filteredItems","deselectRemovedItems","deselectSiblingItems","selectSiblings","handleFilter","handleFilterEvent","getItemData","keyDownHandler","Map","connectedCallback","initialize","call","initializeObserver","disconnectedCallback","cleanUpObserver","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","handleInitialFilter","componentDidRender","updateHostInteraction","calciteListItemRemoveHandler","event","removeItem","calciteListItemChangeHandler","calciteInternalListItemPropsChangeHandler","stopPropagation","setUpFilter","calciteInternalListItemValueChangeHandler","calciteListFocusOutHandler","setUpItems","filterEnabled","dataForFilter","getSelectedItems","selectedValues","setFocus","focusId","componentFocusable","getIconType","multiple","ICON_TYPES","square","circle","render","Host","toAriaBoolean","loading","onKeyDown","role","List","PickListGroup","connectConditionalSlotComponent","disconnectConditionalSlotComponent","groupTitle","headingLevel","hasParentItem","getSlotted","SLOTS","parentItem","sectionClasses","CSS","container","indented","title","parentLevel","closest","relativeLevel","Fragment","heading","PickListItem","pickListClickHandler","disabled","deselectDisabled","selected","nonInteractive","shiftPressed","shiftKey","pickListKeyDownHandler","preventDefault","removeClickHandler","calciteListItemRemove","emit","descriptionWatchHandler","calciteInternalListItemPropsChange","labelWatchHandler","onMessagesChange","metadataWatchHandler","selectedWatchHandler","calciteListItemChange","item","value","valueWatchHandler","newValue","oldValue","calciteInternalListItemValueChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectLocalized","connectMessages","setUpMessages","disconnectLocalized","disconnectMessages","toggleSelected","coerce","focusEl","focus","renderIcon","icon","iconFlipRtl","CSS$1","iconDot","onClick","flipRtl","ICONS","checked","scale","renderRemoveAction","removable","remove","slot","SLOTS$1","actionsEnd","text","messages","renderActionsStart","actionsStart","actions","renderActionsEnd","description","label","InteractiveContainer","ref","tabIndex","textContainer","interceptedClick","HTMLElement","prototype","click","onPointerDown","target","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","inert"],"sourceRoot":""}