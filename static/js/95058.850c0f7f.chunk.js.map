{"version":3,"file":"static/js/95058.850c0f7f.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/lumina/dist/proxyExports-Cdzj7WL_.js","../node_modules/@arcgis/lumina/dist/controllers/index.js","../node_modules/@esri/calcite-components/dist/chunks/observers.js","../node_modules/@esri/calcite-components/dist/chunks/usePreventDocumentScroll.js","../node_modules/@esri/calcite-components/dist/chunks/useT9n.js","../node_modules/@esri/calcite-components/dist/components/calcite-modal/customElement.js","../node_modules/lit-html/src/directives/keyed.ts","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts"],"sourcesContent":["import { d as setParentController, e as retrieveParentControllers, o as setAmbientChildController, t as trackKey, h as bypassReadOnly } from \"./Controller-BQOv8BAL.js\";\nconst proxyExports = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  const initialExports = instance.exports;\n  setParentController(ambientControllers.at(-1));\n  const manager = instance.component.manager;\n  manager.W(instance, initialExports);\n  instance.watchExports(manager.W.bind(manager, instance));\n  setAmbientChildController(instance);\n  const hostCandidates = [instance.component, ...ambientControllers].reverse();\n  return trackKey(\n    hostCandidates,\n    (resolution) => resolution === void 0 ? void 0 : setProxy(instance, resolution, initialExports),\n    initialExports\n  );\n};\nconst setProxy = (controller, { host, key, isReactive: assignedToProp }, initialExports) => {\n  const genericHost = host;\n  const controllerValueChanged = genericHost[key] !== controller.exports;\n  const hostValueChanged = genericHost[key] !== initialExports;\n  const controllerUpdatedExports = initialExports !== controller.exports;\n  if (controllerValueChanged && !hostValueChanged && controllerUpdatedExports) {\n    genericHost[key] = controller.exports;\n  }\n  const isProxyExportsOnComponent = host === controller.component;\n  if (isProxyExportsOnComponent) {\n    if (assignedToProp) {\n      const manager = controller.component.manager;\n      if (hostValueChanged) {\n        manager.W(controller, genericHost[key]);\n      }\n      controller.onUpdate((changes) => {\n        if (changes.has(key)) {\n          const value = genericHost[key];\n          if (value !== controller.exports) {\n            manager.W(controller, value);\n          }\n        }\n      });\n    }\n    controller.O = assignedToProp ? void 0 : key;\n  }\n  const isReadOnly = controller.component.constructor.elementProperties.get(key)?.readOnly;\n  controller.watchExports(() => {\n    if (genericHost[key] === controller.exports) {\n      return;\n    }\n    if (isReadOnly) {\n      bypassReadOnly(() => {\n        genericHost[key] = controller.exports;\n      });\n    } else {\n      genericHost[key] = controller.exports;\n    }\n  });\n};\nexport {\n  proxyExports as p\n};\n","import { C as Controller, s as setAmbientComponent, i as isPromise, d as setParentController, e as retrieveParentControllers, t as trackKey, r as retrieveComponent, f as createEventFactory } from \"../Controller-BQOv8BAL.js\";\nimport { G, h, g, c, n, m, k, l, j } from \"../Controller-BQOv8BAL.js\";\nimport { p as proxyExports } from \"../proxyExports-Cdzj7WL_.js\";\nimport { isServer } from \"lit\";\nimport { observeAncestorsMutation, isEsriInternalEnv, getElementAttribute, getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nconst makeController = (constructor) => proxy(void 0, constructor);\nconst makeGenericController = (constructor) => (component) => proxy(\n  component,\n  /**\n   * GenericController is identical to Controller, in all except for typing.\n   * So dying a type-cast here so as not to needlessly add one more object\n   * to the prototype chain\n   */\n  constructor\n);\nclass FunctionalController extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (isPromise(value)) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then((result) => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch((error) => {\n          this.P.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this.P.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n}\nconst proxy = proxyExports(FunctionalController);\nconst useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nclass AttributeWatchController extends Controller {\n  #observer;\n  #attributes;\n  #callback;\n  constructor(attributes, callback) {\n    super();\n    if (isServer) {\n      return;\n    }\n    this.#attributes = attributes;\n    this.#callback = callback;\n    this.#observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (attributes.includes(mutation.attributeName)) {\n          callback.call(\n            this.component,\n            this.component.el.getAttribute(mutation.attributeName),\n            mutation.oldValue,\n            mutation.attributeName\n          );\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this.#attributes.forEach((attribute) => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this.#callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this.#observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this.#attributes\n    });\n  }\n  hostDisconnected() {\n    this.#observer.disconnect();\n  }\n}\nconst load = makeController;\nconst toFunction = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\nconst useMedia = (query) => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  const changed = () => {\n    controller.exports = media.matches;\n  };\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\nconst defaultDirection = \"ltr\";\nconst useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    const callback = () => {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    };\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolved) => {\n        if (resolved?.key === \"dir\") {\n          throw new Error(\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\n          );\n        }\n      },\n      controller.exports\n    );\n  }\n  return void 0;\n});\nconst makeT9nController = (getAssetPath) => (options = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    const locale = getElementLocales(component.el);\n    const pending = { [\"_lang\"]: locale.lang, [\"_t9nLocale\"]: locale.t9nLocale, [\"_loading\"]: true };\n    const componentWithOverrides = component;\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        () => getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          const withoutOverrides = {\n            ...t9nStrings,\n            [\"_lang\"]: lang,\n            [\"_t9nLocale\"]: t9nLocale,\n            [\"_loading\"]: false\n          };\n          controller.exports = withoutOverrides;\n          const label = t9nStrings.componentLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ??= label;\n          }\n          applyOverrides(componentWithOverrides.messageOverrides);\n        },\n        options.name\n      )\n    );\n    const applyOverrides = (messageOverrides) => {\n      const currentValue = controller.exports;\n      const rawMessages = currentValue[\"_original\"] ?? currentValue;\n      const updated = deepMerge(rawMessages, messageOverrides);\n      if (messageOverrides) {\n        updated[\"_original\"] = rawMessages;\n      }\n      controller.exports = updated;\n    };\n    if (\"messageOverrides\" in componentWithOverrides) {\n      controller.onUpdate((changes) => {\n        if (changes.has(\"messageOverrides\")) {\n          applyOverrides(componentWithOverrides.messageOverrides);\n        }\n      });\n    }\n    if (options.blocking) {\n      controller.setProvisionalExports(pending, false);\n      return controller.ready;\n    } else {\n      return pending;\n    }\n  })\n);\nconst deepMerge = (original, overwrites) => {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = { ...original };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n};\nconst usePropertyChange = (_component) => propertyChangeController;\nconst eventName = \"arcgisPropertyChange\";\nconst propertyChangeController = (...toWatch) => {\n  const component = retrieveComponent();\n  const eventEmitter = createEventFactory(eventName, void 0, component);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    toWatch.forEach((prop) => {\n      const descriptor = component.constructor.elementProperties.get(prop);\n      const isProp = descriptor !== void 0 && descriptor.state !== true;\n      if (!isProp) {\n        throw new Error(\n          `For usePropertyChange to emit event on \"${prop}\" property change, you should add @property() to ${prop} in ${component.el.localName}`\n        );\n      }\n    });\n  }\n  let isFirst = true;\n  component.manager.onUpdated((changes) => {\n    if (isFirst || !component.el.isConnected) {\n      isFirst = false;\n      return;\n    }\n    for (const name of toWatch) {\n      if (changes.has(name)) {\n        eventEmitter.emit({ name });\n      }\n    }\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolution) => {\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n          throw new Error(\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\n          );\n        }\n      },\n      eventEmitter\n    );\n  }\n  return eventEmitter;\n};\nexport {\n  Controller,\n  G as GenericController,\n  h as bypassReadOnly,\n  g as bypassSetter,\n  c as controllerSymbol,\n  n as getControllersCount,\n  m as isController,\n  k as keyTrackResolve,\n  load,\n  makeController,\n  makeGenericController,\n  makeT9nController,\n  proxyExports,\n  retrieveComponent,\n  toFunction,\n  trackKey,\n  l as trackPropKey,\n  j as trackPropertyKey,\n  useDirection,\n  useMedia,\n  usePropertyChange,\n  useWatchAttributes\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { isServer } from \"lit\";\nfunction createObserver(type, callback, options) {\n  if (isServer) {\n    return void 0;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return function() {\n    return type === \"intersection\" ? window.IntersectionObserver : type === \"mutation\" ? ExtendedMutationObserver : window.ResizeObserver;\n  }();\n}\nexport {\n  createObserver as c\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeGenericController } from \"@arcgis/lumina/controllers\";\nlet openedComponentCount = 0;\nlet initialDocumentOverflowStyle = \"\";\nconst usePreventDocumentScroll = () => {\n  function addOpenedComponent() {\n    openedComponentCount++;\n    if (openedComponentCount === 1) {\n      initialDocumentOverflowStyle = document.documentElement.style.overflow;\n      document.documentElement.style.overflow = \"hidden\";\n    }\n  }\n  function removeOpenedComponent() {\n    openedComponentCount--;\n    if (openedComponentCount === 0) {\n      document.documentElement.style.overflow = initialDocumentOverflowStyle;\n    }\n  }\n  return makeGenericController((component, controller) => {\n    controller.onConnected(() => {\n      if (component.opened && component.preventDocumentScroll) {\n        addOpenedComponent();\n      }\n    });\n    controller.onUpdate((changes) => {\n      if (!component.hasUpdated) {\n        return;\n      }\n      if (changes.has(\"opened\") && component.preventDocumentScroll) {\n        if (component.opened) {\n          addOpenedComponent();\n        } else {\n          removeOpenedComponent();\n        }\n      } else if (changes.has(\"preventDocumentScroll\") && component.opened) {\n        if (component.preventDocumentScroll) {\n          addOpenedComponent();\n        } else {\n          removeOpenedComponent();\n        }\n      }\n    });\n    controller.onDisconnected(() => {\n      if (component.opened && component.preventDocumentScroll) {\n        removeOpenedComponent();\n      }\n    });\n  });\n};\nexport {\n  usePreventDocumentScroll as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeT9nController } from \"@arcgis/lumina/controllers\";\nimport { g as getAssetPath } from \"./runtime.js\";\nconst useT9n = makeT9nController(getAssetPath);\nexport {\n  useT9n as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { html, nothing } from \"lit\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { LitElement, createEvent, setAttribute, safeClassMap } from \"@arcgis/lumina\";\nimport { h as focusFirstTabbable, s as slotChangeGetAssignedElements, a as slotChangeHasAssignedElement, o as ensureId } from \"../../chunks/dom.js\";\nimport { c as componentFocusable, g as getIconScale } from \"../../chunks/component.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { o as onToggleOpenCloseComponent } from \"../../chunks/openCloseComponent.js\";\nimport { l as logger } from \"../../chunks/logger.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { u as usePreventDocumentScroll } from \"../../chunks/usePreventDocumentScroll.js\";\nimport { u as useFocusTrap } from \"../../chunks/useFocusTrap.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  modal: \"modal\",\n  title: \"title\",\n  header: \"header\",\n  footer: \"footer\",\n  scrim: \"scrim\",\n  back: \"back\",\n  close: \"close\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  content: \"content\",\n  contentNoFooter: \"content--no-footer\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"modal--opening-idle\",\n  openingActive: \"modal--opening-active\",\n  closingIdle: \"modal--closing-idle\",\n  closingActive: \"modal--closing-active\"\n};\nconst ICONS = {\n  close: \"x\"\n};\nconst SLOTS = {\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  back: \"back\",\n  secondary: \"secondary\",\n  primary: \"primary\"\n};\nconst styles = css`:host{--calcite-modal-scrim-background: rgba(0, 0, 0, .85);position:fixed;inset:0;z-index:var(--calcite-z-index-overlay);display:flex;opacity:0;visibility:hidden!important;transition:visibility 0ms linear var(--calcite-internal-animation-timing-slow),opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88);--calcite-modal-scrim-background-internal: rgba(0, 0, 0, .85)}.content-top[hidden],.content-bottom[hidden]{display:none}.container{position:absolute;inset:0;display:flex;align-items:center;justify-content:center;overflow-y:hidden;color:var(--calcite-color-text-2);opacity:0;visibility:hidden!important;transition:visibility 0ms linear var(--calcite-internal-animation-timing-slow),opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88)}:host([scale=s]){--calcite-modal-padding-internal: .75rem;--calcite-modal-padding-large-internal: 1rem;--calcite-modal-title-text-internal: var(--calcite-font-size-1);--calcite-modal-content-text-internal: var(--calcite-font-size--1)}:host([scale=m]){--calcite-modal-padding-internal: 1rem;--calcite-modal-padding-large-internal: 1.25rem;--calcite-modal-title-text-internal: var(--calcite-font-size-2);--calcite-modal-content-text-internal: var(--calcite-font-size-0)}:host([scale=l]){--calcite-modal-padding-internal: 1.25rem;--calcite-modal-padding-large-internal: 1.5rem;--calcite-modal-title-text-internal: var(--calcite-font-size-3);--calcite-modal-content-text-internal: var(--calcite-font-size-1)}.scrim{--calcite-scrim-background: var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));position:absolute;inset:0;display:flex;overflow-y:hidden}.modal{pointer-events:none;z-index:var(--calcite-z-index-modal);float:none;margin:1.5rem;box-sizing:border-box;display:flex;inline-size:100%;flex-direction:column;overflow:hidden;border-radius:.25rem;background-color:var(--calcite-color-foreground-1);opacity:0;--tw-shadow: 0 2px 12px -4px rgba(0, 0, 0, .2), 0 2px 4px -2px rgba(0, 0, 0, .16);--tw-shadow-colored: 0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);-webkit-overflow-scrolling:touch;visibility:hidden;transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88),visibility 0ms linear var(--calcite-internal-animation-timing-slow),opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88);--calcite-modal-hidden-position: translate3d(0, 20px, 0);--calcite-modal-shown-position: translate3d(0, 0, 0)}.modal--opening-idle{transform:var(--calcite-modal-hidden-position)}.modal--opening-active,.modal--closing-idle{transform:var(--calcite-modal-shown-position)}.modal--closing-active{transform:var(--calcite-modal-hidden-position)}:host([opened]){opacity:1;visibility:visible!important;transition-delay:0ms}.container--open{opacity:1;visibility:visible!important;transition-delay:0ms}.container--open .modal{pointer-events:auto;visibility:visible;opacity:1;transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88),visibility 0ms linear,opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88),max-inline-size var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88),max-block-size var(--calcite-internal-animation-timing-slow) cubic-bezier(.215,.44,.42,.88);transition-delay:0ms}.header{z-index:var(--calcite-z-index-header);display:flex;min-inline-size:0px;max-inline-size:100%;border-start-start-radius:.25rem;border-start-end-radius:.25rem;border-width:0px;border-block-end-width:1px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto}.close{order:2;margin:0;cursor:pointer;appearance:none;border-style:none;background-color:transparent;color:var(--calcite-color-text-3);outline-color:transparent;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-internal);flex:0 0 auto}.close calcite-icon{vertical-align:-2px}.close:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.close:hover,.close:focus,.close:active{background-color:var(--calcite-color-foreground-2);color:var(--calcite-color-text-1)}.title{order:1;display:flex;min-inline-size:0px;align-items:center;flex:1 1 auto;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-large-internal)}slot[name=header]::slotted(*),*::slotted([slot=header]){margin:0;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-color-text-1);font-size:var(--calcite-modal-title-text-internal)}.content{position:relative;box-sizing:border-box;display:block;block-size:100%;overflow:auto;padding:0;background-color:var(--calcite-modal-content-background, var(--calcite-color-foreground-1));max-block-size:100%;padding:var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal))}.content-top,.content-bottom{z-index:var(--calcite-z-index-header);display:flex;border-width:0px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto;padding:var(--calcite-modal-padding-internal)}.content-top{min-inline-size:0px;max-inline-size:100%;border-block-end-width:1px}.content-bottom{margin-block-start:auto;box-sizing:border-box;inline-size:100%;justify-content:space-between;border-block-start-width:1px}.content-top:not(.header~.content-top){border-start-start-radius:.25rem;border-start-end-radius:.25rem}.content-bottom:not(.content-bottom~.footer),.content--no-footer{border-end-end-radius:.25rem;border-end-start-radius:.25rem}slot[name=content]::slotted(*),*::slotted([slot=content]){font-size:var(--calcite-modal-context-text-internal)}.footer{z-index:var(--calcite-z-index-header);margin-block-start:auto;box-sizing:border-box;display:flex;inline-size:100%;justify-content:space-between;border-end-end-radius:.25rem;border-end-start-radius:.25rem;border-width:0px;border-block-start-width:1px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-large-internal)}.footer--hide-back .back,.footer--hide-secondary .secondary{display:none}.back{display:block;margin-inline-end:auto}.secondary{margin-inline:.25rem;display:block}slot[name=primary]{display:block}:host([width=small]) .modal{inline-size:auto}:host([width-scale=s]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 32rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 35rem){:host([width-scale=s]) .modal{margin:0;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=s]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=s][docked]) .container{align-items:flex-end}}:host([width-scale=m]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 48rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 51rem){:host([width-scale=m]) .modal{margin:0;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=m]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=m][docked]) .container{align-items:flex-end}}:host([width-scale=l]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 94rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 97rem){:host([width-scale=l]) .modal{margin:0;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=l]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=l][docked]) .container{align-items:flex-end}}:host([fullscreen]) .modal{margin:0;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%;border-radius:0;--calcite-modal-hidden-position: translate3D(0, 20px, 0) scale(.95);--calcite-modal-shown-position: translate3D(0, 0, 0) scale(1)}:host([fullscreen]) .content{max-block-size:100%;flex:1 1 auto}:host([opened][fullscreen]) .header,:host([opened][fullscreen]) .footer,:host([opened][fullscreen]) .content-top,:host([opened][fullscreen]) .content-bottom{border-radius:0}:host([docked]) .modal{block-size:var(--calcite-modal-height, auto)}:host([docked]) .content{block-size:auto;flex:1 1 auto}:host([kind=brand]) .modal{border-color:var(--calcite-color-brand)}:host([kind=danger]) .modal{border-color:var(--calcite-color-status-danger)}:host([kind=info]) .modal{border-color:var(--calcite-color-status-info)}:host([kind=success]) .modal{border-color:var(--calcite-color-status-success)}:host([kind=warning]) .modal{border-color:var(--calcite-color-status-warning)}:host([kind=brand]) .modal,:host([kind=danger]) .modal,:host([kind=info]) .modal,:host([kind=success]) .modal,:host([kind=warning]) .modal{border-width:0px;border-block-start-width:4px;border-style:solid}:host([kind=brand]) .header,:host([kind=brand]) .content-top,:host([kind=danger]) .header,:host([kind=danger]) .content-top,:host([kind=info]) .header,:host([kind=info]) .content-top,:host([kind=success]) .header,:host([kind=success]) .content-top,:host([kind=warning]) .header,:host([kind=warning]) .content-top{border-radius:.25rem;border-end-end-radius:0px;border-end-start-radius:0px}@media screen and (max-width: 860px){* slot[name=header]::slotted(content-top),* content-top::slotted([slot=header]){font-size:var(--calcite-font-size-1)}.footer,.content-bottom{position:sticky;inset-block-end:0px}}@media screen and (max-width: 480px){.footer,.content-bottom{flex-direction:column}.back,.secondary{margin:0;margin-block-end:.25rem}}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Modal extends LitElement {\n  constructor() {\n    super();\n    this.closeButtonEl = createRef();\n    this.cssVarObserver = createObserver(\"mutation\", () => {\n      this.updateSizeCssVars();\n    });\n    this.focusTrap = useFocusTrap({\n      triggerProp: \"open\",\n      focusTrapOptions: {\n        // scrim closes on click, so we let it take over\n        clickOutsideDeactivates: () => this.embedded,\n        escapeDeactivates: (event) => {\n          if (!event.defaultPrevented && !this.escapeDisabled) {\n            this.open = false;\n            event.preventDefault();\n          }\n          return false;\n        }\n      }\n    })(this);\n    this.usePreventDocumentScroll = usePreventDocumentScroll()(this);\n    this.ignoreOpenChange = false;\n    this.modalContent = createRef();\n    this.mutationObserver = createObserver(\"mutation\", () => this.focusTrap.updateContainerElements());\n    this._open = false;\n    this.openProp = \"opened\";\n    this.transitionProp = \"opacity\";\n    this.messages = useT9n();\n    this.keyDownHandler = (event) => {\n      const { defaultPrevented, key } = event;\n      if (!defaultPrevented && this.focusTrapDisabled && this.open && !this.escapeDisabled && key === \"Escape\") {\n        event.preventDefault();\n        this.open = false;\n      }\n    };\n    this.hasBack = false;\n    this.hasContentBottom = false;\n    this.hasContentTop = false;\n    this.hasFooter = false;\n    this.hasPrimary = false;\n    this.hasSecondary = false;\n    this.closeButtonDisabled = false;\n    this.embedded = false;\n    this.escapeDisabled = false;\n    this.focusTrapDisabled = false;\n    this.opened = false;\n    this.outsideCloseDisabled = false;\n    this.scale = \"m\";\n    this.widthScale = \"m\";\n    this.calciteModalBeforeClose = createEvent({ cancelable: false });\n    this.calciteModalBeforeOpen = createEvent({ cancelable: false });\n    this.calciteModalClose = createEvent({ cancelable: false });\n    this.calciteModalOpen = createEvent({ cancelable: false });\n    this.listen(\"keydown\", this.keyDownHandler);\n  }\n  static {\n    this.properties = { contentEl: [16, {}, { state: true }], cssHeight: [16, {}, { state: true }], cssWidth: [16, {}, { state: true }], hasBack: [16, {}, { state: true }], hasContentBottom: [16, {}, { state: true }], hasContentTop: [16, {}, { state: true }], hasFooter: [16, {}, { state: true }], hasPrimary: [16, {}, { state: true }], hasSecondary: [16, {}, { state: true }], titleEl: [16, {}, { state: true }], preventDocumentScroll: [16, {}, { state: true }], beforeClose: [0, {}, { attribute: false }], closeButtonDisabled: [7, {}, { reflect: true, type: Boolean }], docked: [7, {}, { reflect: true, type: Boolean }], embedded: [5, {}, { type: Boolean }], escapeDisabled: [7, {}, { reflect: true, type: Boolean }], focusTrapDisabled: [7, {}, { reflect: true, type: Boolean }], focusTrapOptions: [0, {}, { attribute: false }], fullscreen: [7, {}, { reflect: true, type: Boolean }], kind: [3, {}, { reflect: true }], messageOverrides: [0, {}, { attribute: false }], open: [7, {}, { reflect: true, type: Boolean }], opened: [7, {}, { reflect: true, type: Boolean }], outsideCloseDisabled: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], widthScale: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  get preventDocumentScroll() {\n    return !this.embedded;\n  }\n  get open() {\n    return this._open;\n  }\n  set open(open) {\n    const oldOpen = this._open;\n    if (open !== oldOpen) {\n      this._open = open;\n      this.toggleModal(open);\n    }\n  }\n  async scrollContent(top = 0, left = 0) {\n    if (this.modalContent.value) {\n      if (this.modalContent.value.scrollTo) {\n        this.modalContent.value.scrollTo({ top, left, behavior: \"smooth\" });\n      } else {\n        this.modalContent.value.scrollTop = top;\n        this.modalContent.value.scrollLeft = left;\n      }\n    }\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n  async updateFocusTrapElements(extraContainers) {\n    this.focusTrap.setExtraContainers(extraContainers);\n    this.focusTrap.updateContainerElements();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.cssVarObserver?.observe(this.el, { attributeFilter: [\"style\"] });\n    this.updateSizeCssVars();\n  }\n  async load() {\n    logger.deprecated(\"component\", {\n      name: \"modal\",\n      removalVersion: 4,\n      suggested: \"dialog\"\n    });\n    if (this.open) {\n      this.openModal();\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"hasBack\") && (this.hasUpdated || this.hasBack !== false) || changes.has(\"hasPrimary\") && (this.hasUpdated || this.hasPrimary !== false) || changes.has(\"hasSecondary\") && (this.hasUpdated || this.hasSecondary !== false)) {\n      this.hasFooter = this.hasBack || this.hasPrimary || this.hasSecondary;\n    }\n    if (changes.has(\"opened\") && (this.hasUpdated || this.opened !== false)) {\n      this.handleOpenedChange(this.opened);\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mutationObserver?.disconnect();\n    this.cssVarObserver?.disconnect();\n    this.embedded = false;\n  }\n  handleHeaderSlotChange(event) {\n    this.titleEl = slotChangeGetAssignedElements(event)[0];\n  }\n  handleContentSlotChange(event) {\n    this.contentEl = slotChangeGetAssignedElements(event)[0];\n  }\n  handleBackSlotChange(event) {\n    this.hasBack = slotChangeHasAssignedElement(event);\n  }\n  handlePrimarySlotChange(event) {\n    this.hasPrimary = slotChangeHasAssignedElement(event);\n  }\n  handleSecondarySlotChange(event) {\n    this.hasSecondary = slotChangeHasAssignedElement(event);\n  }\n  setTransitionEl(el) {\n    if (!el) {\n      return;\n    }\n    this.transitionEl = el;\n  }\n  onBeforeOpen() {\n    this.transitionEl?.classList.add(CSS.openingActive);\n    this.calciteModalBeforeOpen.emit();\n  }\n  onOpen() {\n    this.transitionEl?.classList.remove(CSS.openingIdle, CSS.openingActive);\n    if (this.focusTrapDisabled) {\n      this.setFocus();\n    }\n    this.focusTrap.activate();\n    this.calciteModalOpen.emit();\n  }\n  onBeforeClose() {\n    this.transitionEl?.classList.add(CSS.closingActive);\n    this.calciteModalBeforeClose.emit();\n  }\n  onClose() {\n    this.transitionEl?.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteModalClose.emit();\n    this.focusTrap.deactivate();\n  }\n  toggleModal(value) {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n    if (value) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n  handleOpenedChange(value) {\n    const { transitionEl } = this;\n    if (!transitionEl) {\n      return;\n    }\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n  handleCloseClick() {\n    this.open = false;\n  }\n  async openModal() {\n    await this.componentOnReady();\n    this.opened = true;\n    this.titleId = ensureId(this.titleEl);\n    this.contentId = ensureId(this.contentEl);\n  }\n  handleOutsideClose() {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n    this.open = false;\n  }\n  async closeModal() {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch {\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n    this.opened = false;\n  }\n  updateSizeCssVars() {\n    this.cssWidth = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-width\");\n    this.cssHeight = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-height\");\n  }\n  contentTopSlotChangeHandler(event) {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  }\n  contentBottomSlotChangeHandler(event) {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  }\n  render() {\n    setAttribute(this.el, \"aria-describedby\", this.contentId);\n    setAttribute(this.el, \"aria-labelledby\", this.titleId);\n    this.el.ariaModal = \"true\";\n    this.el.role = \"dialog\";\n    return html`<div class=${safeClassMap({\n      [CSS.container]: true,\n      [CSS.containerOpen]: this.opened\n    })}><calcite-scrim class=${safeClassMap(CSS.scrim)} @click=${this.handleOutsideClose}></calcite-scrim>${this.renderStyle()}<div class=${safeClassMap({\n      [CSS.modal]: true\n    })} ${ref(this.setTransitionEl)}><div class=${safeClassMap(CSS.header)}>${this.renderCloseButton()}<header class=${safeClassMap(CSS.title)}><slot name=${CSS.header} @slotchange=${this.handleHeaderSlotChange}></slot></header></div>${this.renderContentTop()}<div class=${safeClassMap({\n      [CSS.content]: true,\n      [CSS.contentNoFooter]: !this.hasFooter\n    })} ${ref(this.modalContent)}><slot name=${SLOTS.content} @slotchange=${this.handleContentSlotChange}></slot></div>${this.renderContentBottom()}${this.renderFooter()}</div></div>`;\n  }\n  renderFooter() {\n    return keyed(\"footer\", html`<div class=${safeClassMap(CSS.footer)} .hidden=${!this.hasFooter}><span class=${safeClassMap(CSS.back)}><slot name=${SLOTS.back} @slotchange=${this.handleBackSlotChange}></slot></span><span class=${safeClassMap(CSS.secondary)}><slot name=${SLOTS.secondary} @slotchange=${this.handleSecondarySlotChange}></slot></span><span class=${safeClassMap(CSS.primary)}><slot name=${SLOTS.primary} @slotchange=${this.handlePrimarySlotChange}></slot></span></div>`);\n  }\n  renderContentTop() {\n    return html`<div class=${safeClassMap(CSS.contentTop)} .hidden=${!this.hasContentTop}><slot name=${SLOTS.contentTop} @slotchange=${this.contentTopSlotChangeHandler}></slot></div>`;\n  }\n  renderContentBottom() {\n    return html`<div class=${safeClassMap(CSS.contentBottom)} .hidden=${!this.hasContentBottom}><slot name=${SLOTS.contentBottom} @slotchange=${this.contentBottomSlotChangeHandler}></slot></div>`;\n  }\n  renderCloseButton() {\n    return !this.closeButtonDisabled ? keyed(\"button\", html`<button .ariaLabel=${this.messages.close} class=${safeClassMap(CSS.close)} @click=${this.handleCloseClick} title=${this.messages.close ?? nothing} ${ref(this.closeButtonEl)}><calcite-icon .icon=${ICONS.close} .scale=${getIconScale(this.scale)}></calcite-icon></button>`) : null;\n  }\n  renderStyle() {\n    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {\n      return html`<style>${`.${CSS.container} {\n              ${this.docked && this.cssWidth ? `align-items: center !important;` : \"\"}\n            }\n            .${CSS.modal} {\n              block-size: ${this.cssHeight ? this.cssHeight : \"auto\"} !important;\n              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : \"\"}\n            }\n            @media screen and (max-width: ${this.cssWidth}) {\n              .${CSS.container} {\n                ${this.docked ? `align-items: flex-end !important;` : \"\"}\n              }\n              .${CSS.modal} {\n                max-block-size: 100% !important;\n                inline-size: 100% !important;\n                max-inline-size: 100% !important;\n                min-inline-size: 100% !important;\n                margin: 0 !important;\n                ${!this.docked ? `block-size: 100% !important;` : \"\"}\n                ${!this.docked ? `border-radius: 0 !important;` : \"\"}\n                ${this.docked ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;` : \"\"}\n              }\n            }\n          `}</style>`;\n    }\n  }\n}\ncustomElement(\"calcite-modal\", Modal);\nexport {\n  Modal\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["setProxy","controller","host","key","isReactive","assignedToProp","initialExports","genericHost","controllerValueChanged","exports","hostValueChanged","controllerUpdatedExports","component","manager","W","onUpdate","changes","has","value","O","isReadOnly","constructor","elementProperties","get","readOnly","watchExports","bypassReadOnly","makeController","proxy","makeGenericController","FunctionalController","Controller","super","originalExports","this","setAmbientComponent","constructorChangedExports","isPromise","setProvisionalExports","resolved","then","result","catchUpLifecycle","catch","error","P","reject","console","onLoad","async","queueMicrotask","Class","args","ambientControllers","retrieveParentControllers","instance","setParentController","at","bind","setAmbientChildController","hostCandidates","reverse","trackKey","resolution","useWatchAttributes","attributes","callback","AttributeWatchController","isServer","MutationObserver","mutations","forEach","mutation","includes","attributeName","call","el","getAttribute","oldValue","hostConnected","attribute","hasAttribute","observe","attributeOldValue","attributeFilter","hostDisconnected","disconnect","toFunction","makeT9nController","getAssetPath","options","locale","getElementLocales","pending","lang","t9nLocale","componentWithOverrides","onLifecycle","startLocaleObserver","t9nStrings","withoutOverrides","label","componentLabel","applyOverrides","messageOverrides","name","currentValue","rawMessages","updated","deepMerge","blocking","ready","original","overwrites","merged","Object","entries","createObserver","type","Observer","ExtendedMutationObserver","window","observedEntry","target","push","unobserve","newObservedEntries","filter","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver","openedComponentCount","initialDocumentOverflowStyle","usePreventDocumentScroll","addOpenedComponent","document","documentElement","style","overflow","removeOpenedComponent","onConnected","opened","preventDocumentScroll","hasUpdated","onDisconnected","useT9n","CSS","ICONS","SLOTS","styles","css","Modal","LitElement","closeButtonEl","createRef","cssVarObserver","updateSizeCssVars","focusTrap","useFocusTrap","triggerProp","focusTrapOptions","clickOutsideDeactivates","embedded","escapeDeactivates","event","defaultPrevented","escapeDisabled","open","preventDefault","ignoreOpenChange","modalContent","mutationObserver","updateContainerElements","_open","openProp","transitionProp","messages","keyDownHandler","focusTrapDisabled","hasBack","hasContentBottom","hasContentTop","hasFooter","hasPrimary","hasSecondary","closeButtonDisabled","outsideCloseDisabled","scale","widthScale","calciteModalBeforeClose","createEvent","cancelable","calciteModalBeforeOpen","calciteModalClose","calciteModalOpen","listen","properties","contentEl","state","cssHeight","cssWidth","titleEl","beforeClose","reflect","Boolean","docked","fullscreen","kind","toggleModal","scrollContent","top","left","scrollTo","behavior","scrollTop","scrollLeft","setFocus","componentFocusable","focusFirstTabbable","updateFocusTrapElements","extraContainers","setExtraContainers","connectedCallback","childList","subtree","load","logger","deprecated","removalVersion","suggested","openModal","willUpdate","handleOpenedChange","disconnectedCallback","handleHeaderSlotChange","slotChangeGetAssignedElements","handleContentSlotChange","handleBackSlotChange","slotChangeHasAssignedElement","handlePrimarySlotChange","handleSecondarySlotChange","setTransitionEl","transitionEl","onBeforeOpen","classList","add","emit","onOpen","remove","activate","onBeforeClose","onClose","deactivate","closeModal","idleClass","onToggleOpenCloseComponent","handleCloseClick","componentOnReady","titleId","ensureId","contentId","handleOutsideClose","requestAnimationFrame","getComputedStyle","getPropertyValue","contentTopSlotChangeHandler","contentBottomSlotChangeHandler","render","setAttribute","ariaModal","role","html","safeClassMap","renderStyle","ref","renderCloseButton","renderContentTop","renderContentBottom","renderFooter","keyed","close","nothing","getIconScale","customElement","i","t","e","arguments","r","update","s","notifyChildrenConnectedChanged","_$AN","_$AO","o","_$AM","delete","size","Set","c","h","n","_$AH","Array","isArray","length","CHILD","_$AP","_$AQ","f","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","WeakMap","G","rt","lt","ct","ht","element","globalThis","set"],"sourceRoot":""}