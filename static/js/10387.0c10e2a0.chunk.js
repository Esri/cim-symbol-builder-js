"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[10387],{85981:(t,e,n)=>{n.d(e,{Ue:()=>d,nF:()=>c,zk:()=>a});var o=n(16889),i=n(21530),s=n(11186),r=n(71353),h=n(51378);function d(t){return t?{origin:(0,r.g)(t.origin),vector:(0,r.g)(t.vector)}:{origin:(0,r.c)(),vector:(0,r.c)()}}function a(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d();return(0,s.c)(n.origin,t),(0,s.f)(n.vector,e,t),n}function c(t,e,n){return function(t,e,n,i,r){const{vector:d,origin:a}=t,c=(0,s.f)(h.WM.get(),e,a),u=(0,s.j)(d,c)/(0,s.m)(d);return(0,s.i)(r,d,(0,o.uZ)(u,n,i)),(0,s.g)(r,r,t.origin)}(t,e,0,1,n)}(0,r.c)(),(0,r.c)(),new i.x((()=>d()))},10387:(t,e,n)=>{n.r(e),n.d(e,{default:()=>X});var o=n(27366),i=n(66978),s=(n(32718),n(25243),n(63780),n(93169),n(10064),n(69912)),r=n(11186),h=n(71353),d=n(85981),a=n(23470),c=n(13005),u=n(27546),l=n(21530),_=(n(14226),n(90045),n(67077)),f=n(40885);function m(t){return t?{ray:(0,f.Ue)(t.ray),c0:t.c0,c1:t.c1}:{ray:(0,f.Ue)(),c0:0,c1:Number.MAX_VALUE}}new l.x((()=>m()));var T,g;n(76146),n(51378);function p(t,e){for(let n=0;n<O;n++){const o=t[n];if(o[0]*e[0]+o[1]*e[1]+o[2]*e[2]+o[3]>=e[3])return!1}return!0}!function(t){t[t.LEFT=0]="LEFT",t[t.RIGHT=1]="RIGHT",t[t.BOTTOM=2]="BOTTOM",t[t.TOP=3]="TOP",t[t.NEAR=4]="NEAR",t[t.FAR=5]="FAR"}(T||(T={})),function(t){t[t.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",t[t.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",t[t.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",t[t.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",t[t.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",t[t.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",t[t.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",t[t.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(g||(g={}));g.FAR_BOTTOM_RIGHT,g.NEAR_BOTTOM_RIGHT,g.NEAR_BOTTOM_LEFT,g.FAR_BOTTOM_LEFT,g.NEAR_BOTTOM_LEFT,g.NEAR_BOTTOM_RIGHT,g.NEAR_TOP_RIGHT,g.NEAR_TOP_LEFT,g.FAR_BOTTOM_RIGHT,g.FAR_BOTTOM_LEFT,g.FAR_TOP_LEFT,g.FAR_TOP_RIGHT,g.NEAR_BOTTOM_RIGHT,g.FAR_BOTTOM_RIGHT,g.FAR_TOP_RIGHT,g.NEAR_TOP_RIGHT,g.FAR_BOTTOM_LEFT,g.NEAR_BOTTOM_LEFT,g.NEAR_TOP_LEFT,g.FAR_TOP_LEFT,g.FAR_TOP_LEFT,g.NEAR_TOP_LEFT,g.NEAR_TOP_RIGHT,g.FAR_TOP_RIGHT;const O=6;(0,_.f)(-1,-1,-1,1),(0,_.f)(1,-1,-1,1),(0,_.f)(1,1,-1,1),(0,_.f)(-1,1,-1,1),(0,_.f)(-1,-1,1,1),(0,_.f)(1,-1,1,1),(0,_.f)(1,1,1,1),(0,_.f)(-1,1,1,1),new l.x(m),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)(),(0,h.c)();var b=n(97731);class R{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new E,this._objectCount=0,e&&(void 0!==e.maximumObjectsPerNode&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),void 0!==e.maximumDepth&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),E.clearPool(),L[0]=null,D.prune(),V.prune()}add(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;this._objectCount+=e,this._grow(t,e);const n=E.acquire();for(let o=0;o<e;o++){const e=t[o];this._isDegenerate(e)?this._degenerateObjects.add(e):(n.init(this._root),this._add(e,n))}E.release(n)}remove(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._objectCount-=t.length;const n=E.acquire();for(const o of t){const t=null!=e?e:(0,a.h)(this.objectToBoundingSphere(o),H);M(t[3])?(n.init(this._root),this._remove(o,t,n)):this._degenerateObjects.delete(o)}E.release(n),this._shrink()}update(t,e){if(!M(e[3])&&this._isDegenerate(t))return;const n=function(t){return L[0]=t,L}(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const o=(0,f.re)(t,e);this._forEachNode(this._root,(t=>{if(!this._intersectsNode(o,t))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),!0}))}forEachAlongRayWithVerticalOffset(t,e,n,o){const i=(0,f.re)(t,e);this._forEachNode(this._root,(t=>{if(!this._intersectsNodeWithOffset(i,t,o))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),!0}))}forEach(t){this._forEachNode(this._root,(e=>{const n=e.node;return n.terminals.forAll(t),null!==n.residents&&n.residents.forAll(t),!0})),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,s=1/0,h=1/0,d=null;const c=x(t,e),u=r=>{if(--i,!o(r))return;const c=this.objectToBoundingSphere(r);if(!p(n,c))return;const u=j(t,e,(0,a.g)(c)),l=u-c[3],_=u+c[3];l<s&&(s=l,h=_,d=r)};return this._forEachNodeDepthOrdered(this._root,(o=>{if(i<=0||!p(n,o.bounds))return!1;if((0,r.i)(I,c,o.halfSize),(0,r.g)(I,I,o.bounds),j(t,e,I)>h)return!1;const s=o.node;return s.terminals.forAll((t=>u(t))),null!==s.residents&&s.residents.forAll((t=>u(t))),!0}),t,e),d}forEachInDepthRange(t,e,n,o,i,s,h){let d=-1/0,c=1/0;const u={setRange:t=>{n===R.DepthOrder.FRONT_TO_BACK?(d=Math.max(d,t.near),c=Math.min(c,t.far)):(d=Math.max(d,-t.far),c=Math.min(c,-t.near))}};u.setRange(o);const l=j(e,n,t),_=x(e,n),f=x(e,-n),m=t=>{if(!h(t))return;const o=this.objectToBoundingSphere(t),r=(0,a.g)(o),_=j(e,n,r)-l,f=_-o[3],m=_+o[3];f>c||m<d||!p(s,o)||i(t,u)};this._forEachNodeDepthOrdered(this._root,(t=>{if(!p(s,t.bounds))return!1;if((0,r.i)(I,_,t.halfSize),(0,r.g)(I,I,t.bounds),j(e,n,I)-l>c)return!1;if((0,r.i)(I,f,t.halfSize),(0,r.g)(I,I,t.bounds),j(e,n,I)-l<d)return!1;const o=t.node;return o.terminals.forAll((t=>m(t))),null!==o.residents&&o.residents.forAll((t=>m(t))),!0}),e,n)}forEachNode(t){this._forEachNode(this._root,(e=>t(e.node,e.bounds,e.halfSize,e.depth)))}forEachNeighbor(t,e){const n=(0,a.a)(e),o=(0,a.g)(e),i=e=>{const i=this.objectToBoundingSphere(e),s=(0,a.a)(i),h=n+s;return!((0,r.a)((0,a.g)(i),o)-h*h<=0)||t(e)};let s=!0;const h=t=>{s&&(s=i(t))};this._forEachNode(this._root,(t=>{const e=(0,a.a)(t.bounds),i=n+e;if((0,r.a)((0,a.g)(t.bounds),o)-i*i>0)return!1;const d=t.node;return d.terminals.forAll(h),s&&null!==d.residents&&d.residents.forAll(h),s})),s&&this.forEachDegenerateObject(h)}_intersectsNode(t,e){return F(e.bounds,2*-e.halfSize,C),F(e.bounds,2*e.halfSize,w),(0,b.yK)(t.origin,t.direction,C,w)}_intersectsNodeWithOffset(t,e,n){return F(e.bounds,2*-e.halfSize,C),F(e.bounds,2*e.halfSize,w),n.applyToMinMax(C,w),(0,b.yK)(t.origin,t.direction,C,w)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||(0,a.j)(n,t)}_intersectsObjectWithOffset(t,e,n){const o=this.objectToBoundingSphere(e);return!(o[3]>0)||(0,a.j)(n.applyToBoundingSphere(o),t)}_forEachNode(t,e){let n=E.acquire().init(t);const o=[n];for(;0!==o.length;){if(n=o.pop(),e(n)&&!n.isLeaf())for(let t=0;t<n.node.children.length;t++)n.node.children[t]&&o.push(E.acquire().init(n).advance(t));E.release(n)}}_forEachNodeDepthOrdered(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:R.DepthOrder.FRONT_TO_BACK,i=E.acquire().init(t);const s=[i];for(function(t,e,n){if(!V.length)for(let o=0;o<8;++o)V.push({index:0,distance:0});for(let o=0;o<8;++o){const n=B[o];V.data[o].index=o,V.data[o].distance=j(t,e,n)}V.sort(((t,e)=>t.distance-e.distance));for(let o=0;o<8;++o)n[o]=V.data[o].index}(n,o,K);0!==s.length;){if(i=s.pop(),e(i)&&!i.isLeaf())for(let t=7;t>=0;--t){const e=K[t];i.node.children[e]&&s.push(E.acquire().init(i).advance(e))}E.release(i)}}_remove(t,e,n){D.clear();const o=n.advanceTo(e,((t,e)=>{D.push(t.node),D.push(e)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(t),0===o.length)for(let i=D.length-2;i>=0;i-=2){const t=D.data[i],e=D.data[i+1];if(!this._purge(t,e))break}}_nodeIsEmpty(t){if(0!==t.terminals.length)return!1;if(null!==t.residents)return 0===t.residents.length;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}_purge(t,e){return e>=0&&(t.children[e]=null),!!this._nodeIsEmpty(t)&&(null===t.residents&&(t.residents=new u.Z({shrink:!0})),!0)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const o=E.acquire().init(t);this._add(e.at(n),o),E.release(o)}}_grow(t,e){if(0!==e&&(S(t,e,(t=>this.objectToBoundingSphere(t)),y),M(y[3])&&!this._fitsInsideTree(y)))if(this._nodeIsEmpty(this._root.node))(0,a.h)(y,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const t=this._rootBoundsForRootAsSubNode(y);this._placingRootViolatesMaxDepth(t)?this._rebuildTree(y,t):this._growRootAsSubNode(t),E.release(t)}}_rebuildTree(t,e){(0,r.c)(G,e.bounds),G[3]=e.halfSize,S([t,G],2,(t=>t),k);const n=E.acquire().init(this._root);this._root.initFrom(null,k,k[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,(t=>(this.add(t.node.terminals.data,t.node.terminals.length),null!==t.node.residents&&this.add(t.node.residents.data,t.node.residents.length),!0))),E.release(n)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(t=>(n=Math.max(n,t.depth),n+e<=this._maximumDepth))),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let o=-1/0;const i=this._root.bounds,s=this._root.halfSize;for(let h=0;h<3;h++){const t=i[h]-s-(n[h]-e),r=n[h]+e-(i[h]+s),d=Math.max(0,Math.ceil(t/(2*s))),a=Math.max(0,Math.ceil(r/(2*s)))+1,c=2**Math.ceil(Math.log(d+a)*Math.LOG2E);o=Math.max(o,c),q[h].min=d,q[h].max=a}for(let h=0;h<3;h++){let t=q[h].min,e=q[h].max;const n=(o-(t+e))/2;t+=Math.ceil(n),e+=Math.floor(n);const r=i[h]-s-t*s*2;z[h]=r+(e+t)*s}const r=o*s;return z[3]=r*P,E.acquire().initFrom(null,z,r,0)}_growRootAsSubNode(t){const e=this._root.node;(0,r.c)(y,this._root.bounds),y[3]=this._root.halfSize,this._root.init(t),t.advanceTo(y,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(-1===t)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,o=0;for(;o<e.length&&null==t;)n=o++,t=e[n];for(;o<e.length;)if(e[o++])return-1;return n}_isDegenerate(t){return!M(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(t){const e=t.children.map((t=>t?this._nodeToJSON(t):null)),n=t.residents?.map((t=>this.objectToBoundingSphere(t))),o=t.terminals?.map((t=>this.objectToBoundingSphere(t)));return{children:e,residents:n,terminals:o}}static fromJSON(t){const e=new R((t=>t),{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class E{constructor(){this.bounds=(0,a.c)(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.depth;return this.node=null!=t?t:E.createEmptyNode(),null!=e&&(0,a.h)(e,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*P}advance(t){let e=this.node.children[t];e||(e=E.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=B[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const o=this._childIndex(t);e&&e(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new u.Z({shrink:!0}),residents:new u.Z({shrink:!0})}}static acquire(){return E._pool.acquire()}static release(t){E._pool.release(t)}static clearPool(){E._pool.prune()}}function N(t,e){t[0]=Math.min(t[0],e[0]-e[3]),t[1]=Math.min(t[1],e[1]-e[3]),t[2]=Math.min(t[2],e[2]-e[3])}function A(t,e){t[0]=Math.max(t[0],e[0]+e[3]),t[1]=Math.max(t[1],e[1]+e[3]),t[2]=Math.max(t[2],e[2]+e[3])}function F(t,e,n){n[0]=t[0]+e,n[1]=t[1]+e,n[2]=t[2]+e}function S(t,e,n,o){if(1===e){const e=n(t[0]);(0,a.h)(e,o)}else{C[0]=1/0,C[1]=1/0,C[2]=1/0,w[0]=-1/0,w[1]=-1/0,w[2]=-1/0;for(let o=0;o<e;o++){const e=n(t[o]);M(e[3])&&(N(C,e),A(w,e))}(0,r.p)(o,C,w,.5),o[3]=Math.max(w[0]-C[0],w[1]-C[1],w[2]-C[2])/2}}function x(t,e){let n,o=1/0;for(let i=0;i<8;++i){const s=j(t,e,v[i]);s<o&&(o=s,n=v[i])}return n}function j(t,e,n){return e*(t[0]*n[0]+t[1]*n[1]+t[2]*n[2])}function M(t){return!isNaN(t)&&t!==-1/0&&t!==1/0&&t>0}E._pool=new c.Z(E),function(t){var e;(e=t.DepthOrder||(t.DepthOrder={}))[e.FRONT_TO_BACK=1]="FRONT_TO_BACK",e[e.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(R||(R={}));const B=[(0,h.f)(-1,-1,-1),(0,h.f)(1,-1,-1),(0,h.f)(-1,1,-1),(0,h.f)(1,1,-1),(0,h.f)(-1,-1,1),(0,h.f)(1,-1,1),(0,h.f)(-1,1,1),(0,h.f)(1,1,1)],v=[(0,h.f)(-1,-1,-1),(0,h.f)(-1,-1,1),(0,h.f)(-1,1,-1),(0,h.f)(-1,1,1),(0,h.f)(1,-1,-1),(0,h.f)(1,-1,1),(0,h.f)(1,1,-1),(0,h.f)(1,1,1)],P=Math.sqrt(3),L=[null];const z=(0,a.c)(),I=(0,h.c)(),C=(0,h.c)(),w=(0,h.c)(),D=new u.Z,H=(0,a.c)(),y=(0,a.c)(),G=(0,a.c)(),k=(0,a.c)(),q=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],V=new u.Z,K=[0,0,0,0,0,0,0,0],W=R;var Z=n(83715);function U(t,e,n){const o=(0,a.c)(),i=(0,a.g)(o);return(0,r.q)(i,i,t,.5),(0,r.q)(i,i,e,.5),o[3]=(0,r.o)(i,t),(0,r.g)(i,i,n),o}let J=class{constructor(){this._idToComponent=new Map,this._components=new W((t=>t.bounds)),this._edges=new W((t=>t.bounds)),this._tmpLineSegment=(0,d.Ue)(),this._tmpP1=(0,h.c)(),this._tmpP2=(0,h.c)(),this._tmpP3=(0,h.c)(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),(0,i.k_)(e),await this._ensureEdgeLocations(t,e);const n=[];return this._edges.forEachNeighbor((e=>(this._addCandidates(t,e,n),n.length<1e3)),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,e){const n=[];if(this._components.forEachNeighbor((t=>{if(null==t.info){const{id:e,uid:o}=t;n.push({id:e,uid:o})}return!0}),t.bounds),!n.length)return;const o={components:n},i=await this.remoteClient.invoke("fetchAllEdgeLocations",o,e??{});for(const s of i.components)this._setFetchEdgeLocations(s)}async add(t){const e=new Q(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const t=[];this._edges.forEachNeighbor((n=>(n.component===e&&t.push(n),!0)),e.bounds),this._edges.remove(t),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(null==e||t.uid!==e.uid)return;const n=Z.n_.createView(t.locations),o=new Array(n.count),i=(0,h.c)(),s=(0,h.c)();for(let h=0;h<n.count;h++){n.position0.getVec(h,i),n.position1.getVec(h,s);const r=U(i,s,t.origin),d=new Y(e,h,r);o[h]=d}this._edges.add(o);const{objectIds:r,origin:d}=t;e.info={locations:n,objectIds:r,origin:d}}_addCandidates(t,e,n){const{info:o}=e.component,{origin:i,objectIds:s}=o,h=o.locations,d=h.position0.getVec(e.index,this._tmpP1),a=h.position1.getVec(e.index,this._tmpP2);(0,r.g)(d,d,i),(0,r.g)(a,a,i);const c=s[h.componentIndex.get(e.index)];this._addEdgeCandidate(t,c,d,a,n),this._addVertexCandidate(t,c,d,n),this._addVertexCandidate(t,c,a,n)}_addEdgeCandidate(t,e,n,o,i){if(!t.returnEdge)return;const s=(0,a.g)(t.bounds),c=(0,d.zk)(n,o,this._tmpLineSegment),u=(0,d.nF)(c,s,this._tmpP3);(0,a.n)(t.bounds,u)&&i.push({type:"edge",objectId:e,target:(0,h.g)(u),distance:(0,r.o)(s,u),start:(0,h.g)(n),end:(0,h.g)(o)})}_addVertexCandidate(t,e,n,o){if(!t.returnVertex)return;const i=(0,a.g)(t.bounds);(0,a.n)(t.bounds,n)&&o.push({type:"vertex",objectId:e,target:(0,h.g)(n),distance:(0,r.o)(i,n)})}};J=(0,o._)([(0,s.j)("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],J);const X=J;class Q{constructor(t,e){this.id=t,this.bounds=e,this.info=null,this.uid=++Q.uid}}Q.uid=0;class Y{constructor(t,e,n){this.component=t,this.index=e,this.bounds=n}}}}]);
//# sourceMappingURL=10387.0c10e2a0.chunk.js.map