"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[4280],{8229:(e,t,i)=>{function s(){return new Float32Array(3)}function r(e,t,i){const s=new Float32Array(3);return s[0]=e,s[1]=t,s[2]=i,s}function n(){return s()}function o(){return r(1,1,1)}function a(){return r(1,0,0)}function l(){return r(0,1,0)}function h(){return r(0,0,1)}i.d(t,{c:()=>s,f:()=>r});const d=n(),c=o(),u=a(),f=l(),p=h();Object.freeze(Object.defineProperty({__proto__:null,create:s,clone:function(e){const t=new Float32Array(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},fromValues:r,createView:function(e,t){return new Float32Array(e,t,3)},zeros:n,ones:o,unitX:a,unitY:l,unitZ:h,ZEROS:d,ONES:c,UNIT_X:u,UNIT_Y:f,UNIT_Z:p},Symbol.toStringTag,{value:"Module"}))},47991:(e,t,i)=>{i.d(t,{SR:()=>c,Ui:()=>d});var s=i(92026),r=i(65156),n=i(376),o=i(69662),a=i(77981),l=i(76335),h=i(92975);function d(e){return u(e,!0)}function c(e){return u(e,!1)}function u(e,t){if((0,s.Wi)(e))return null;const i=e.spatialReference,r=(0,h.C5)(i),o="toJSON"in e?e.toJSON():e;if(!r)return o;const d=(0,h.sS)(i)?102100:4326,c=l.UZ[d].maxX,u=l.UZ[d].minX;if((0,a.wp)(o))return p(o,c,u);if((0,a.aW)(o))return o.points=o.points.map((e=>p(e,c,u))),o;if((0,a.YX)(o))return f(o,r);if((0,a.oU)(o)||(0,a.l9)(o)){const e=(0,n.$P)(v,o),i={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},s=(0,l.XZ)(i.xmin,u)*(2*c),r=0===s?o:(0,l.Sy)(o,s);return i.xmin+=s,i.xmax+=s,i.xmax>c?_(r,c,t):i.xmin<u?_(r,u,t):r}return o}function f(e,t){if(!t)return e;const i=function(e,t){const i=[],{ymin:s,ymax:r,xmin:n,xmax:o}=e,a=e.xmax-e.xmin,[l,h]=t.valid,{x:d,frameId:c}=m(e.xmin,t),{x:u,frameId:f}=m(e.xmax,t),p=d===u&&a>0;if(a>2*h){const e={xmin:n<o?d:u,ymin:s,xmax:h,ymax:r},t={xmin:l,ymin:s,xmax:n<o?u:d,ymax:r},a={xmin:0,ymin:s,xmax:h,ymax:r},p={xmin:l,ymin:s,xmax:0,ymax:r},m=[],g=[];y(e,a)&&m.push(c),y(e,p)&&g.push(c),y(t,a)&&m.push(f),y(t,p)&&g.push(f);for(let i=c+1;i<f;i++)m.push(i),g.push(i);i.push(new x(e,[c]),new x(t,[f]),new x(a,m),new x(p,g))}else d>u||p?i.push(new x({xmin:d,ymin:s,xmax:h,ymax:r},[c]),new x({xmin:l,ymin:s,xmax:u,ymax:r},[f])):i.push(new x({xmin:d,ymin:s,xmax:u,ymax:r},[c]));return i}(e,t).map((e=>e.extent));return i.length<2?i[0]||e:i.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:i.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function p(e,t,i){if(Array.isArray(e)){const s=e[0];if(s>t){const i=(0,l.XZ)(s,t);e[0]=s+i*(-2*t)}else if(s<i){const t=(0,l.XZ)(s,i);e[0]=s+t*(-2*i)}}else{const s=e.x;if(s>t){const i=(0,l.XZ)(s,t);e.x+=i*(-2*t)}else if(s<i){const t=(0,l.XZ)(s,i);e.x+=t*(-2*i)}}return e}function m(e,t){const[i,s]=t.valid,r=2*s;let n,o=0;return e>s?(n=Math.ceil(Math.abs(e-s)/r),e-=n*r,o=n):e<i&&(n=Math.ceil(Math.abs(e-i)/r),e+=n*r,o=-n),{x:e,frameId:o}}function y(e,t){const{xmin:i,ymin:s,xmax:r,ymax:n}=t;return g(e,i,s)&&g(e,i,n)&&g(e,r,n)&&g(e,r,s)}function g(e,t,i){return t>=e.xmin&&t<=e.xmax&&i>=e.ymin&&i<=e.ymax}function _(e,t){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=!(0,a.l9)(e);if(s&&(0,o.Zy)(e),i)return(new b).cut(e,t);const r=s?e.rings:e.paths,n=s?4:2,l=r.length,h=-2*t;for(let o=0;o<l;o++){const e=r[o];if(e&&e.length>=n){const t=[];for(const i of e)t.push([i[0]+h,i[1]]);r.push(t)}}return s?e.rings=r:e.paths=r,e}class x{constructor(e,t){this.extent=e,this.frameIds=t}}const v=(0,r.Ue)();class b{constructor(){this.linesIn=[],this.linesOut=[]}cut(e,t){let i;if(this.xCut=t,e.rings)this.closed=!0,i=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,i=e.paths,this.minPts=2}for(const r of i){if(!r||r.length<this.minPts)continue;let e=!0;for(const t of r)e?(this.moveTo(t),e=!1):this.lineTo(t);this.closed&&this.close()}this._pushLineIn(),this._pushLineOut(),i=[];for(const r of this.linesIn)r&&r.length>=this.minPts&&i.push(r);const s=-2*this.xCut;for(const r of this.linesOut)if(r&&r.length>=this.minPts){for(const e of r)e[0]+=s;i.push(r)}return this.closed?e.rings=i:e.paths=i,e}moveTo(e){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(e[0]),this._moveTo(e[0],e[1],this._prevSide),this._prevPt=e,this._firstPt=e}lineTo(e){const t=this._side(e[0]);if(t*this._prevSide==-1){const i=this._intersect(this._prevPt,e);this._lineTo(this.xCut,i,0),this._prevSide=0,this._lineTo(e[0],e[1],t)}else this._lineTo(e[0],e[1],t);this._prevSide=t,this._prevPt=e}close(){const e=this._firstPt,t=this._prevPt;e[0]===t[0]&&e[1]===t[1]||this.lineTo(e),this._checkClosingPt(this.lineIn),this._checkClosingPt(this.lineOut)}_moveTo(e,t,i){this.closed?(this.lineIn.push([i<=0?e:this.xCut,t]),this.lineOut.push([i>=0?e:this.xCut,t])):(i<=0&&this.lineIn.push([e,t]),i>=0&&this.lineOut.push([e,t]))}_lineTo(e,t,i){this.closed?(this._addPolyVertex(this.lineIn,i<=0?e:this.xCut,t),this._addPolyVertex(this.lineOut,i>=0?e:this.xCut,t)):i<0?(0===this._prevSide&&this._pushLineOut(),this.lineIn.push([e,t])):i>0?(0===this._prevSide&&this._pushLineIn(),this.lineOut.push([e,t])):this._prevSide<0?(this.lineIn.push([e,t]),this.lineOut.push([e,t])):this._prevSide>0&&(this.lineOut.push([e,t]),this.lineIn.push([e,t]))}_addPolyVertex(e,t,i){const s=e.length;s>1&&e[s-1][0]===t&&e[s-2][0]===t?e[s-1][1]=i:e.push([t,i])}_checkClosingPt(e){const t=e.length;t>3&&e[0][0]===this.xCut&&e[t-2][0]===this.xCut&&e[1][0]===this.xCut&&(e[0][1]=e[t-2][1],e.pop())}_side(e){return e<this.xCut?-1:e>this.xCut?1:0}_intersect(e,t){const i=(this.xCut-e[0])/(t[0]-e[0]);return e[1]+i*(t[1]-e[1])}_pushLineIn(){this.lineIn&&this.lineIn.length>=this.minPts&&this.linesIn.push(this.lineIn),this.lineIn=[]}_pushLineOut(){this.lineOut&&this.lineOut.length>=this.minPts&&this.linesOut.push(this.lineOut),this.lineOut=[]}}},82022:(e,t,i)=>{i.d(t,{Z:()=>g});var s=i(80391),r=i(22753),n=i(23588),o=i(15245),a=i(8229),l=i(50689),h=i(87422),d=i(46640),c=i(44070),u=i(8548),f=i(45412);const p=Math.PI/180;class m extends h.s{constructor(e){super(),this._dvsMat3=(0,n.c)(),this._localOrigin={x:0,y:0},this._getBounds=e}destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(e){const{context:t}=e,i=this._getBounds();if(i.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,i),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(u.zi.ONE,u.zi.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const s=this._program;t.bindVAO(this._vao),t.useProgram(s),s.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements(u.MX.LINES,8*i.length,u.g.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{dvs:(0,n.c)()}}_createShaderProgram(e){if(this._program)return;this._program=e.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",y().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:i,size:s,resolution:n,pixelRatio:h,rotation:d,viewpoint:c}=t,u=p*d,{x:f,y:m}=c.targetGeometry,y=(0,l.or)(f,t.spatialReference);this._localOrigin.x=y,this._localOrigin.y=m;const g=h*s[0],_=h*s[1],x=n*g,v=n*_,b=(0,r.b)(this._dvsMat3);(0,r.m)(b,b,i),(0,r.c)(b,b,(0,o.f)(g/2,_/2)),(0,r.d)(b,b,(0,a.f)(s[0]/x,-_/v,1)),(0,r.r)(b,b,-u)}_updateBufferData(e,t){const{x:i,y:s}=this._localOrigin,r=8*t.length,n=new Float32Array(r),o=new Uint32Array(8*t.length);let a=0,l=0;for(const h of t)h&&(n[2*a+0]=h[0]-i,n[2*a+1]=h[1]-s,n[2*a+2]=h[0]-i,n[2*a+3]=h[3]-s,n[2*a+4]=h[2]-i,n[2*a+5]=h[3]-s,n[2*a+6]=h[2]-i,n[2*a+7]=h[1]-s,o[l+0]=a+0,o[l+1]=a+3,o[l+2]=a+3,o[l+3]=a+2,o[l+4]=a+2,o[l+5]=a+1,o[l+6]=a+1,o[l+7]=a+0,a+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(n.buffer):this._vertexBuffer=c.f.createVertex(e,u.l1.DYNAMIC_DRAW,n.buffer),this._indexBuffer?this._indexBuffer.setData(o):this._indexBuffer=c.f.createIndex(e,u.l1.DYNAMIC_DRAW,o),!this._vao){const t=y();this._vao=new f.U(e,t.attributes,t.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const y=()=>(0,d.cM)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:u.g.FLOAT}]});class g extends s.T{constructor(e){super(e),this.hasHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(e){this._boundsRenderer=new m(e),this.requestRender()}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commit(e),e.context.setStencilFunction(u.wb.EQUAL,i.stencilRef,255),i._displayList.replay(e,i,t))}}},34035:(e,t,i)=>{i.d(t,{Z:()=>He});var s=i(27366),r=i(85015),n=i(75746),o=i(41691),a=i(93169),l=i(92026),h=i(66978),d=i(94172),c=i(49861),u=(i(63780),i(25243),i(69912)),f=i(78952),p=i(65156),m=i(69662),y=i(77981),g=i(47991),_=i(92975),x=i(19995),v=i(78915),b=i(61574),C=i(94109),D=i(80613);const w=-1;class T{constructor(){this._dirties=[{vertexFrom:w,vertexCount:w,indexFrom:w,indexCount:w,allDirty:!1},{vertexFrom:w,vertexCount:w,indexFrom:w,indexCount:w,allDirty:!1},{vertexFrom:w,vertexCount:w,indexFrom:w,indexCount:w,allDirty:!1},{vertexFrom:w,vertexCount:w,indexFrom:w,indexCount:w,allDirty:!1},{vertexFrom:w,vertexCount:w,indexFrom:w,indexCount:w,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==w||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=w,e.indexCount=w,e.vertexFrom=w,e.vertexCount=w,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:i,indexFrom:s,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let l,h=!1;(o||n!==w&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},h=!0),(o||s!==w&&i>0)&&(l={count:i,from:s,allDirty:o},h=!0),h&&e({indices:l,vertices:a},t)}}markDirtyIndices(e,t,i){const s=this._dirties[e],r=t,n=i;if(!s.allDirty)if(s.indexCount!==w){const e=Math.min(s.indexFrom,r),t=Math.max(s.indexFrom+s.indexCount,r+n)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=r,s.indexCount=n}markDirtyVertices(e,t,i,s){const r=this._dirties[e],n=i,o=s;if(!r.allDirty)if(r.vertexCount!==w){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}class B{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,s=!1,r=null,n=this._parent._freeHead;for(;i&&!s;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(i=!1,s=!0):null!==n?(r=n,n=n.next):i=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class F{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new B(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const i=t.from,s=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,s),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;F._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,s]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:i,next:s};if(null!==i&&(i.next=r),null!==s&&(s.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==s&&r.from+r.count===s.from){const e=r.from,t=r.count;F._fuse(r,s),F._removeRange(s),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(s,void 0,0)}if(null!==i&&i.from+i.count===r.from){const e=i.from,t=i.count;F._fuse(i,r),F._removeRange(r),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var I=i(46640);const S=["FILL","LINE","MARKER","TEXT","LABEL"];class R{constructor(e,t,i,s){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:s?new F(s):null,idxFreeList:s?new F(s):null,vertexBuffers:{},indexBuffer:s?new Uint32Array(s):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:s?(0,I.C$)(s,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const i=function(e){const t=e.getStrides(),i={};for(let s=0;s<t.length;s++)i[S[s]]=t[s];return i}(e),s=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const a of n)for(const e of a.displayRecords)s[e.geometryType]=Math.max(s[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const o=new R(i,e.tileDisplayData.displayList,t,null);for(let a=0;a<e.tileBufferData.geometries.length;++a){const t=s[a],i=r[a],n=e.tileBufferData.geometries[a],l=S[a],h=o._storageFor(l),d=e.tileBufferData.geometries[a].indexBuffer;let c;h.indexBuffer=d,h.idxFreeList=new F(d.length),h.idxFreeList.allocate(i);for(const s in n.vertexBuffer){const t=e.tileBufferData.geometries[a].vertexBuffer[s];h.vertexBuffers[s].data=t.data,h.vertexBuffers[s].stride=t.stride;const i=(0,I.Y8)(t.stride),r=t.data.length*i/t.stride;c||(c=r)}h.vtxFreeList=new F(c),h.vtxFreeList.allocate(t)}return o}delete(e){const t=S[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,s,r){const n=S[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,h,d,c=!0;if(void 0===e.indexFrom?(l=r,d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(c=!1,h=e.indexFrom,d=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,d=t.indexCount),-1!==o&&-1!==h){const r=this._storageFor(n);if((0,I.wO)(o,h,r.vertexBuffers,r.indexBuffer,t,i,s),e.vertexFrom=o,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==h&&this._freeIndices(n,h,d),e.setMeshDataFromBuffers(t,i,s),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,s=t.indexBuffer,r=S[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,I.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,i,s),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const i=this._storageFor(e),s=i.vtxFreeList.allocate(t);return-1===s||i.vtxFreeList.fragmentation>.5?-1:s}_freeVertices(e,t,i){this._storageFor(e).vtxFreeList.free(t,i)}_freeIndices(e,t,i){this._storageFor(e).idxFreeList.free(t,i)}_allocateIndices(e,t){const i=this._storageFor(e),s=i.idxFreeList.allocate(t);return-1===s||i.idxFreeList.fragmentation>.5?-1:s}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var M=i(44070),L=i(8548),O=i(45412);class A{constructor(e){this.geometryMap=(0,I.Mk)((()=>({indexBuffer:M.f.createIndex(e,L.l1.STATIC_DRAW),vao:null})),((t,i)=>({vertexBuffer:M.f.createVertex(e,I.mR[i])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,i,s){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new O.U(e,s,i,r,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,i)=>{this._upload(t,i,e)}))}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const r=s[e];r.allDirty?this._uploadVertices(i,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(i,t,e,r.from,r.count)}}}_uploadVertices(e,t,i,s,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[i];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[i]&&l.byteLength>0&&(null!=s&&null!=r?n.buffers[i].data.vertexBuffer.setSubData(l,s*a,s*a,(s+r)*a):n.buffers[i].data.vertexBuffer.setData(l))}_uploadIndices(e,t,i,s){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=i&&null!=s?r.data.indexBuffer.setSubData(n,4*i,4*i,4*(i+s)):r.data.indexBuffer.setData(n))}}var z=i(98774);class G extends z.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new T}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,i=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new T,this._dispRecStore=R.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||i.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new A(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=R.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],s=(e.remove||[]).slice();for(const r of i)null!=r.insertAfter&&s.push(r.id);for(const r of s){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const i of e.displayRecords)this._dispRecStore.delete(i);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of i){let i,s=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(s){const e=s.displayRecords;s.set(r),s.displayRecords=e;const t=s.displayRecords.length;for(let i=0;i<t;++i){const e=s.displayRecords[i],t=r.displayRecords[i];(i>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(s.displayRecords[i]),i<r.displayRecords.length&&(s.displayRecords[i]=void 0))}s.displayRecords.length=r.displayRecords.length}else{let e;s=r.copy(),s.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,s);const t=this._data.tileDisplayData.displayObjects;if(null!=s.insertAfter)if(i={},s.insertAfter>=0){const i=this._data.tileDisplayData.displayObjectRegistry.get(s.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(i){const s=r.displayRecords.length>0?1:0;let n=0;for(let r=e-1;r>=0&&n<s;--r)for(let e=t[r].displayRecords.length-1;e>=0&&n<s;--e){const s=t[r].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();i[o]||(i[o]=s,++n)}}}const n=r.displayRecords.length;for(let o=0;o<n;++o){const n=r.displayRecords[o];let a=s.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,s.displayRecords[o]=a);const l=n.geometryType,h=this._data.tileDisplayData.displayList.getDPInfoType(),d=e.addOrUpdate.tileBufferData.geometries[l],c=d.vertexBuffer,u=d.indexBuffer;let f;i&&(f=i[h]?this._data.tileDisplayData.displayList.splitAfter(i[h]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,i&&null!=a.indexFrom&&null!=a.indexFrom&&(i[h]=a)}}return t}}class U{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i}}class P{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new P;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],s=e.geometries[t];s.indexBuffer=i.indexBuffer.slice(),s.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:r}=i.vertexBuffer[e];s.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new P;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const s in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[s]={data:(0,I.e2)(e.geometries[i].vertexBuffer[s].data,e.geometries[i].vertexBuffer[s].stride),stride:e.geometries[i].vertexBuffer[s].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}}var V=i(54815);function k(e,t,i){for(var s=arguments.length,r=new Array(s>3?s-3:0),n=3;n<s;n++)r[n-3]=arguments[n];t<e.length?e.splice(t,i,...r):e.push(...r)}class j{constructor(){this.symbolLevels=[]}replay(e,t,i){for(const s of this.symbolLevels)for(const r of s.zLevels){const s=r.geometryDPInfo.unified;if(s)for(const r of s){const{geometryType:s,materialKey:n,indexFrom:o,indexCount:a}=r,l=V.m2.load(n).symbologyType,h=e.painter.getBrush(s,l),d={geometryType:s,materialKey:n,indexFrom:o,indexCount:a,target:t.getGeometry(s)};h.prepareState(e,t),h.drawGeometry(e,t,d,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new j;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,s=e.indexFrom+e.indexCount;for(let r=0;r<i;++r){const i=t[r];if(i.geometryType===e.geometryType&&s>i.indexFrom&&s<=i.indexFrom+i.indexCount){if(s<i.indexFrom+i.indexCount){const e=new Z;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=s,e.indexCount=i.indexFrom+i.indexCount-s,t.splice(r+1,0,e),i.indexCount=s-i.indexFrom}return r}}}_addToList(e,t){const i=e.symbolLevel,s=e.zOrder,r=this._getDisplayList(i,s),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new Z;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,k(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,i=e.zOrder,s=this._getDisplayList(t,i),r=s.length;let n;for(let o=0;o<r;++o){const t=s[o];if(e.indexFrom+e.indexCount>t.indexFrom&&e.indexFrom<t.indexFrom+t.indexCount&&t.geometryType===e.geometryType){n=o;break}}if(void 0!==n){const t=s[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&k(s,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(k(s,n,1),n-1):n;{const i=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new Z;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=i+r+o,l.indexCount=a,k(s,n+1,0,l),n}}return null}_getDisplayList(e,t){let i;const s=this.symbolLevels.length;for(let o=0;o<s;o++)if(this.symbolLevels[o].symbolLevel===e){i=this.symbolLevels[o];break}let r;i||(i=new q,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let o=0;o<n;o++)if(i.zLevels[o].zLevel===t){r=i.zLevels[o];break}return r||(r=new E,r.geometryDPInfo=new K,r.zLevel=t,i.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class Z{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new Z;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class K{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new K;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class E{constructor(){this.geometryDPInfo=new K}clone(){const e=new E;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class q{constructor(){this.zLevels=[]}clone(){const e=new q;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class N{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const s in e)this.vertexData.set(s,e[s]);for(const s in this.vertexData)null===e[s]&&this.vertexData.delete(s);this.vertexCount=t,this.indexData=i}}class H{constructor(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=s,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new H(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const s=new N;for(const r in t){const i=t[r].stride,n=t[r].data,o=[],a=(0,I.Y8)(i);for(let t=0;t<i*e.vertexCount/a;++t)o[t]=n[t+i*e.vertexFrom/a];s.vertexData.set(r,o)}s.indexData.length=0;for(let r=0;r<e.indexCount;++r)s.indexData[r]=i[r+e.indexFrom]-e.vertexFrom;s.vertexCount=e.vertexCount,this.meshData=s}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new N;for(const i in e){const t=e[i].stride,s=e[i].data,r=[],n=(0,I.Y8)(t);for(let e=0;e<t*this.vertexCount/n;++e)r[e]=s[e+t*this.vertexFrom/n];this.meshData.vertexData.set(i,r)}this.meshData.indexData.length=0;for(let i=0;i<this.indexCount;++i)this.meshData.indexData[i]=t[i+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,s){for(const r in t){const i=t[r].stride,s=this.meshData.vertexData.get(r),n=t[r].data,o=(0,I.Y8)(i);for(let t=0;t<i*this.meshData.vertexCount/o;++t)n[t+i*e/o]=s[t]}for(let r=0;r<this.meshData.indexData.length;++r)s[r+i]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,i){let s=0,r=0;for(const n of e)n.writeMeshDataToBuffers(s,t,r,i),s+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),s=e.readInt32(),r=new H(t.id,i,s);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function W(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}class X{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new X(this.id);return e.set(this),e}clone(){const e=new X(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),W(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new X(t),s={id:t};return i.displayRecords=function(e,t,i){const s=e.readInt32(),r=new Array(s);for(let n=0;n<r.length;n++)r[n]=t.deserialize(e,i);return r}(e,H,s),i}}class Y{get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new j;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new Y;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return W(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),s=new Map;for(let r=0;r<i.length;++r){const t=X.deserialize(e);i[r]=t,s.set(t.id,t)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=s}static deserialize(e){const t=new Y;return t._deserializeObjects(e),t}}var Q=i(50477);class ${constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,I.e2)(e.data,e.stride),i=e.stride;return new $(t,i)}static fromVertexVector(e){const t=(0,I.e2)(e.data.buffer(),e.stride),i=e.stride;return new $(t,i)}}class J{constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}static decode(e){const t=e.geometryType,i=e.indexBuffer,s={};for(const r in e.namedBuffers)s[r]=$.decode(e.namedBuffers[r]);return new J(t,i,s)}static fromVertexData(e,t){const i=e.indices,s=(0,I.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new $(s,r)};return new J(t,i,n)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),s={};for(const r in e.namedVectors)s[r]=$.fromVertexVector(e.namedVectors[r]);return new J(t,i,s)}}var ee=i(27446);class te{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}}class ie{constructor(e,t,i){this.geometryType=e,this.indexVector=new ee.Z(Uint32Array,6*t),this.namedVectors={};const s=(0,I.$_)(e,i);for(const r in s){const e=s[r];let i;switch(e%4){case 0:case 2:i=new ee.Z(Uint32Array,e*t);break;case 1:case 3:i=new ee.Z(Uint8Array,e*t)}this.namedVectors[r]=new te(i,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),s={};t.push(i);for(const r in this.namedVectors){const e=this.namedVectors[r];s[r]={},e.transfer(s[r],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=s,this.destroy()}intoBuffers(){const e=J.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const se=new U,re=new U;function ne(e,t){const i={};for(const s in e){const r={data:(0,I.C$)(t,e[s]),stride:e[s]};i[s]=r}return i}class oe{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){se.reset();const e=function(e){const t=[[],[],[],[],[]],i=e;for(const s of i)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const s of e)for(const e of s)e&&se.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,i=new P;for(let s=0;s<t;++s){i.geometries[s].indexBuffer=new Uint32Array(Math.round(1.5*se.indicesFor(s)));const e=[];for(const i in this.tileBufferData.geometries[s].vertexBuffer)e.push(this.tileBufferData.geometries[s].vertexBuffer[i].stride);const t=oe._computeVertexAlignment(e),r=Math.round(1.5*se.verticesFor(s)),n=oe._align(r,t);for(const o in this.tileBufferData.geometries[s].vertexBuffer){const e=this.tileBufferData.geometries[s].vertexBuffer[o].stride;i.geometries[s].vertexBuffer[o]={stride:e,data:(0,I.C$)(n,e)}}}re.reset(),this.tileDisplayData.displayList.clear();for(let s=0;s<t;++s){const t=e[s];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(re.verticesFor(s),i.geometries[s].vertexBuffer,re.indicesFor(s),i.geometries[s].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[s].vertexBuffer,r=this.tileBufferData.geometries[s].indexBuffer,n=i.geometries[s].vertexBuffer,o=i.geometries[s].indexBuffer,a=re.verticesFor(s),l=re.indicesFor(s);(0,I.wO)(a,l,n,o,e,t,r),e.vertexFrom=a,e.indexFrom=l}re.needMore(s,e.vertexCount,e.indexCount)}}for(const s of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(s.displayRecords);this.tileBufferData=i}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const i=this.tileBufferData.geometries[t];e[t]={};for(const s in i.vertexBuffer)e[t][s]=i.vertexBuffer[s].stride}return e}clone(){const e=new oe;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let i=0;for(let s=0;s<t;s++)i=Math.max(i,e[s].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new ee.Z(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e,t){const i={},s=new Map;for(const r of t)s.set(r.id,r);return(0,I.Z_)((t=>{const r=e.data[t];if((0,l.pC)(r)){const e=Q.$.from(r.records).getCursor();for(;e.next();){const i=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,h=s.get(i),d=new H(i,t,r);d.indexFrom=n,d.indexCount=o,d.vertexFrom=a,d.vertexCount=l,h.displayRecords.push(d)}i[t]=J.fromVertexData(r,t)}else i[t]=new ie(t,0,D.mD.DEFAULT).intoBuffers()})),oe.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new oe,i=new Y,s=new P;i.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];s.geometries[r].indexBuffer=t.indexBuffer,s.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=s,t}static bind(e,t){const i=new oe;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new oe;i.tileDisplayData=new Y,i.tileDisplayData.displayObjects=e;const s=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)n[e.geometryType].push(e),s[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new P,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let l=0;l<5;l++){const e=new Uint32Array(r[l]),t=ne(a[l],s[l]);H.writeAllMeshDataToBuffers(n[l],t,e),o.geometries[l]={indexBuffer:e,vertexBuffer:t}}return i.tileBufferData=o,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(i=!0);return i?4:t?2:1}}var ae=i(72774),le=i(74017),he=i(61909),de=i(69813),ce=i(69534),ue=i(45367),fe=i(56078),pe=i(83406),me=i(92010),ye=i(28941);class ge extends ye.i{constructor(e,t){super(e,t,null)}static from(e,t){const i=me.s.createInstance(),s=[],r=e.filter((e=>!!e.geometry));for(const n of r){const e=(0,y.Ji)(n.geometry);(0,pe.E7)(s,[n],e,!1,!1,t)}return new ge(i,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ge(this.instance,this._features);return this.copyInto(e),e}}var _e=i(17842),xe=i(31581),ve=i(376),be=i(50689),Ce=i(2146),De=i(4954),we=i(58971),Te=i(80457);const Be=new Te.Z,Fe=new Te.Z,Ie="esriGeometryPolyline";function Se(e){e.coords.length=0,e.lengths.length=0}class Re{constructor(){this.bounds=(0,p.Ue)(),this.graphic=null}static acquire(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1?arguments[1]:void 0,s=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,n=arguments.length>4?arguments[4]:void 0;return 0===Re._pool.length?e=new Re:(e=Re._pool.pop(),this._set.delete(e)),e.acquire(t,i,s,r,n),e}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,y.oU)(e.geometry)){const i=e.symbol;if((0,l.Wi)(i))return null;if(i?.layers.length>0&&i.layers.some((e=>"text"===e.type||"marker"===e.type))){const i=(0,De.tO)(e.geometry);return null!==i?(0,we.RF)(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null}acquire(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;e&&this.set(e,t,i,s,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,s,r){this.graphic=e,this.geometry=i,this.symbolResource=t,this.bounds=s,r&&(this.size=r)}getGeometryQuantized(e,t,i,s){const r=this.geometry;if((0,y.oU)(r)){const t=r.rings;if(1===t.length&&2===t[0].length)return(0,we.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,y.l9)(r))return Se(Be),Se(Fe),(0,pe.u0)(Be,r),(0,pe.zj)(Fe,Be,r.hasZ,r.hasM,Ie,e.scale[0]),(0,pe.Nh)(Be,Fe,r.hasZ,r.hasM,Ie,e),(0,pe.J6)(Be,r.hasZ,r.hasM);if((0,y.aW)(r)){const n=.5*s*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),o=(0,_.C5)(i);let a=r.points;if(o){const[e,i]=o.valid,s=i-e;a=a.filter((r=>{if(r[0]+n>i||r[0]-n<e){const e=[...r];return r[0]+n>i?e[0]-=s:e[0]+=s,(0,p.Zm)(t,r,n)||(0,p.Zm)(t,e,n)}return(0,p.Zm)(t,r,n)}))}return 0===a.length?{points:a}:(0,we.ym)(e,{points:a})}}return(0,we.ym)(e,this.geometry)}}Re._pool=[],Re._set=new Set;var Me=i(95857);const Le={minX:0,minY:0,maxX:0,maxY:0},Oe=(0,p.Ue)(),Ae=1e-5;function ze(e,t,i,s,r){return Le.minX=t,Le.minY=i,Le.maxX=s,Le.maxY=r,e.search(Le)}function Ge(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class Ue{constructor(e,t,i,s,r,n,o){this._graphics=s,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,xe.r)(9,Ge),this._itemByGraphic=new Map,this._inflatedSizeHelper=new v.IV,this._tileInfoView=e,this._uidFieldName=i;const a=e.getClosestInfoForScale(t);a&&(this._resolution=this._tileInfoView.getTileResolution(a.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new Ce.Tu(e)}hitTest(e,t,i,s,r){e=(0,be.or)(e,this._tileInfoView.spatialReference);const n=.5*s*window.devicePixelRatio*i;Oe[0]=e-n,Oe[1]=t-n,Oe[2]=e+n,Oe[3]=t+n;const o=.5*s*(i+Me.y1),a=ze(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const l=[],h=(0,p.Ue)(),d=(0,p.Ue)();for(const f of a){const{geometry:e,symbolResource:t}=f;this._getSymbolBounds(h,t,e,d,r),d[3]=d[2]=d[1]=d[0]=0,(0,p.kK)(h,Oe)&&f.graphic.visible&&l.push(f)}if(0===l.length)return[];const c=this._hittestDrawHelper,u=[];for(const f of l){const{geometry:e,symbolResource:t}=f,{hash:i,textInfo:n}=t,o=this._hashToCIM.get(i);o&&c.hitTest(Oe,o.symbol,e,n,r,s)&&u.push(f)}return u.sort(Pe),u.map((e=>e.graphic))}getGraphicsData(e,t,i){const s=this._searchForItems(t);if(0===s.length||0===i.length)return[];s.sort(((e,t)=>e.zorder-t.zorder)),s[0].insertAfter=-1;for(let d=1;d<s.length;d++)s[d].insertAfter=s[d-1].graphic.uid;s.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=t.resolution,l=[],h={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const d of i){for(o=-2;n<s.length;)if(r=s[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const i=r.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,a),c={...r.graphic.attributes};c[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),l.push({centroid:Re.getCentroidQuantized(r,h),geometry:i,attributes:c,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:s}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[s,s],translate:[i[0],i[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,i){if(!e||(0,l.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const s=[0,0,0,0],r=this._getSymbolBounds(null,t,i,s,0),n=Re.acquire(e,t,i,(0,l.pC)(r)?r:null,s);return this._itemByGraphic.set(e,n),i&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let s=0;s<e.length;s++)i=e[s],t=this._itemByGraphic.get(i),t&&(t.zorder=s)}update(e,t,i){const s=this._itemByGraphic.get(e);s.groupId=null;const r=(0,p.d9)(s.bounds);this._index.remove(s);const n=this._getSymbolBounds(s.bounds,t,i,s.size,0);return(0,l.pC)(n)&&s.set(e,t,i,n,s.size),i&&this._index.insert(s),{oldBounds:r,newBounds:s.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,i=[];for(const[s,r]of t){const e=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,l.pC)(e)&&(r.bounds=e,i.push(r))}this._index.load(i)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,s,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=r;let h,d,c,u;i.sort(((e,t)=>e.zorder-t.zorder));for(let f=0;f<i.length;f++){c=i[f],h=c.graphic,d=c.getGeometryQuantized(s,a,o,l),u=0===f?-1:i[f-1].graphic.uid;const r={...c.graphic.attributes};r[n]=h.uid,null==c.groupId&&(c.groupId=t.createTemplateGroup(c.symbol,null)),e.push({centroid:Re.getCentroidQuantized(c,s),geometry:d,attributes:r,symbol:c.symbol,groupId:c.groupId,insertAfter:u,zorder:c.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[s,r]=(0,_.C5)(t).valid,n=Math.abs(i[2]-r)<Ae,o=Math.abs(i[0]-s)<Ae;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,p.Ue)(n?[s,i[1],s+t*Me.y1,i[3]]:[r-t*Me.y1,i[1],r,i[3]]);const a=ze(this._index,i[0],i[1],i[2],i[3]),l=ze(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return ze(this._index,i[0],i[1],i[2],i[3])}_getSymbolBounds(e,t,i,s,r){if(!t||!t.symbol||!i)return null;if(e||(e=(0,p.Ue)()),(0,ve.$P)(e,i),!s||0===s[0]&&0===s[1]&&0===s[2]&&0===s[3]){const{hash:e,textInfo:i}=t,n=this._hashToCIM.get(e);if(!n)return null;s||(s=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(s,n.symbol,this._cimResourceManager,r,i);s[0]=(0,_e.F2)(o[0]),s[1]=(0,_e.F2)(o[1]),s[2]=(0,_e.F2)(o[2]),s[3]=(0,_e.F2)(o[3])}const n=this._resolution,o=v.IV.safeSize(s);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const Pe=(e,t)=>{const i=(0,Me.eT)(e.graphic),s=(0,Me.eT)(t.graphic);return i===s?t.zorder-e.zorder:i-s};var Ve=i(98125),ke=i(79056);const je=e=>{let t=class extends((0,ke.IG)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,s._)([(0,c.Cb)()],t.prototype,"graphics",void 0),(0,s._)([(0,c.Cb)()],t.prototype,"renderer",void 0),(0,s._)([(0,c.Cb)()],t.prototype,"updating",void 0),(0,s._)([(0,c.Cb)()],t.prototype,"view",void 0),t=(0,s._)([(0,u.j)("esri.views.layers.GraphicsView")],t),t};var Ze=i(90316),Ke=i(85164);const Ee=(0,a.Z)("esri-2d-graphic-debug");function qe(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let Ne=class extends(je((0,o.p)(r.Z))){constructor(e){super(e),this._storage=new fe.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,i){if(e){const s=(0,ce.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,de.fL)(s,t,null,i)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new ue.Z({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Ze.hc)("2d"),(()=>this.notifyChange("updating"))),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new he.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new Ue(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new le.j(null,this.uid,e),this._templateStore=e,this.handles.add([(0,d.YP)((()=>this.renderer),(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",(e=>this._onTileUpdate(e))),this.container.on("attach",(()=>{Ee&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this.renderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore.isUpdating()}hitTest(e){if(!this.view||!this.view.position)return[];const{resolution:t,rotation:i}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,i)}update(e){(0,h.k_)(this._controller.signal);const t=e.state,{resolution:i}=t;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:s}=e;switch(i){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,s),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,p.bf)(t)||0===(0,p.Cb)(t))return[];const i=(0,Me.Zu)(t,this.view.spatialReference);return(0,l.pC)(i)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,h.k_)(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),s=await this._processGraphics(t,i);return(0,h.k_)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0,clear:!1,sort:!1}),s}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,qe(r,e,s).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=i.length;for(let t=0;t<e.length;t++){const i=e[t];o[a+t]=i,this._graphicsSet.add(i),n.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t)r=i.id,qe(r,i,s).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,qe(r,e,s).addedOrModified.push(l)}this._graphicStore.updateZ();const h=[];for(const[e,t]of s)h.push(this._updateTile(t));await Promise.all(h)}catch(n){(0,h.D_)(n)}for(const o of t)try{const e=await this._getSymbolForGraphic(o,null);if(e){const t=e.hash();this._hashToExpandedSymbol.delete(t)}}catch(n){(0,h.D_)(n)}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,l.Wi)(e.geometry)?null:{geometryType:(0,y.Ji)(e.geometry),spatialReference:f.Z.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,h.k_)(this._controller.signal),(0,l.pC)(e.symbol)?Promise.resolve(e.symbol):(0,l.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,signal:(0,l.pC)(t)?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,i){let s=this._hashToCIM.get(t);if(s)return Promise.resolve(s);const r=(0,v.rW)(e);if((0,l.pC)(r)){if("CIMSymbolReference"===r.type)return s=r,this._hashToCIM.set(t,s),Promise.resolve(s);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(i).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,h.r9)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,i,s){const r=this._hashToExpandedSymbol.get(i);if(r)return Promise.resolve(r);let n=this._hashToExpandedSymbolPromise.get(i);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),l=(0,ce.q5)(null),h=(0,Ke.createSymbolSchema)(e,l);return n=(0,Ve.B3)(h,a,o.resourceManager,s),this._hashToExpandedSymbolPromise.set(i,n),n.then((e=>(this._hashToExpandedSymbol.set(i,e),this._hashToExpandedSymbolPromise.delete(i),e))),n}async _getSymbolResources(e,t){return(0,h.k_)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((i=>{const s=i.hash();return this._getCIMSymbol(i,s,t).then((i=>(0,l.Wi)(i)?null:this._expandCIMSymbol(i,e,s,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const i=new Array(t.length);for(let e=0;e<t.length;e++){const s=t[e],r=[],[o]=(0,n.E)(s.text);s.text=o;for(let e=0;e<o.length;e++)r.push(o.charCodeAt(e));i[e]={symbol:s,id:e,glyphIds:r}}const r=new Map;return this.container.getMaterialItems(i).then((i=>{for(let e=0;e<t.length;e++){const s=t[e];r.set(s.cim,{text:s.text,mosaicItem:i[e].mosaicItem})}return{symbol:e,textInfo:r,hash:s}}))}return{symbol:e,hash:s}}))))})).catch((e=>((0,h.r9)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,h.k_)(this._controller.signal),(0,l.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let i=e.geometry;if((0,y.oU)(i)){const e=i.rings;i.rings=e}else if((0,y.l9)(i)){const e=i.paths;i.paths=e}else if((0,y.YX)(i)){const s=await this._getSymbolForGraphic(e,t);(0,h.k_)(this._controller.signal),i=(0,Me.yA)(s.type)||(0,Me.ab)(s.type)?i.center:(0,Me.XA)(i)}await(0,x._W)(i.spatialReference,this.view.spatialReference);const s=(0,g.SR)(i),r=(0,x.iV)(s,i.spatialReference,this.view.spatialReference);return(0,m.pW)(r),r}_onTileUpdate(e){const t=(0,_.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const i of e.removed)this._removeTile(i.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,h.k_)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{await this._addOrUpdateGraphic(e,i),(0,h.k_)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(K){if(this._graphicIdToAbortController.delete(e.uid),!(0,h.D_)(K))throw K}}_updateGraphic(e,t){(0,h.k_)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);return Promise.all([i,s]).then((t=>{let[i,s]=t;(0,h.k_)(this._controller.signal),this._graphicStore.addOrModify(e,s,i)}))}_addOrUpdateGraphic(e,t){(0,h.k_)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);return Promise.all([i,s]).then((t=>{let[i,s]=t;(0,h.k_)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,s,i)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,p.Ue)(),e),i=new G(e,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(0===s.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&((0,y.wp)(e.geometry)||(0,y.aW)(e.geometry))&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,s),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(n){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,h.D_)(n))throw n}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?C.Zd:0))}_getGraphicsData(e,t,i){const s=this.view,r=(0,_.C5)(s.spatialReference),n=this._graphicStore.getGraphicsData(e,t,i);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,y.wp)(t.geometry)||(0,y.aW)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const i=e.geometry;(0,y.aW)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,s=[];let r=0,n=0;for(const[o,a]of i){if(s.push([o+r,a]),r=0,t===Me.I_){const e=5*Me.y1;o+n<e?(s.push([t,0]),r=-t):o+n>Me.I_-e&&(s.push([-t,0]),r=t)}else o+n<-Me.y1?(s.push([t,0]),r=-t):o+n>Me.I_+Me.y1&&(s.push([-t,0]),r=t);n+=o}e.points=s}_wrapPoint(e,t){const i=e.geometry;if(t===Me.I_){const s=5*Me.y1;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Me.I_-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-Me.y1?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Me.I_+Me.y1&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){if(!t||!t.length||!this._meshFactory)return null;const s=ge.from(t,this.uid),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(s,this.container.stage.resourceManager,t,null,null,i).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,s))))))}_processAnalyzedGraphics(e,t){const i=this._meshFactory,s=t.getSize(),r=t.getCursor(),n={features:s,records:s,metrics:0},o=new ae._(e.key.id,n,D.mD.DEFAULT,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const s=new X(t.displayId);s.insertAfter=t.insertAfter,a.push(s),i.writeGraphic(o,r,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,h=o.serialize(l);if(1!==h.length)return new oe;const d=h[0].message;return oe.fromVertexData(d,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,y.l9)(t)?b.mW:(0,y.oU)(t)||(0,y.YX)(t)?b.kD:b.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,s._)([(0,c.Cb)({constructOnly:!0})],Ne.prototype,"requestUpdateCallback",void 0),(0,s._)([(0,c.Cb)()],Ne.prototype,"container",void 0),(0,s._)([(0,c.Cb)({constructOnly:!0})],Ne.prototype,"graphics",void 0),(0,s._)([(0,c.Cb)()],Ne.prototype,"updating",null),(0,s._)([(0,c.Cb)()],Ne.prototype,"view",void 0),(0,s._)([(0,c.Cb)()],Ne.prototype,"updateRequested",void 0),Ne=(0,s._)([(0,u.j)("esri.views.2d.layers.support.GraphicsView2D")],Ne);const He=Ne}}]);
//# sourceMappingURL=4280.eef5477b.chunk.js.map