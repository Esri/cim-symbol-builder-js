"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[92374,7995],{55877:(e,t,r)=>{var i;r.d(t,{u:()=>i}),function(e){e[e.KILOBYTES=1024]="KILOBYTES",e[e.MEGABYTES=1048576]="MEGABYTES",e[e.GIGABYTES=1073741824]="GIGABYTES"}(i||(i={}))},71174:(e,t,r)=>{r.r(t),r.d(t,{default:()=>q});var i,s=r(35143),l=r(3825),a=r(50076),n=r(27741),o=r(77717),c=r(50346),h=r(90534),u=r(46053),p=r(21403),d=(r(81806),r(47249),r(28379)),y=r(85842),f=r(17707),m=r(13312),v=r(25515),b=r(12406),g=r(76328),_=r(36648),w=r(19502),I=r(65624),S=r(31362),T=r(11270),A=r(94729),O=r(21617),M=r(5682),L=r(73907),E=r(13096),N=r(95363),x=r(16852),C=r(39568);const D=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let P=i=class extends((0,I.dM)((0,M.j)((0,L.I)((0,g.f)((0,_.V)((0,T.q)((0,A.A)((0,w.b)((0,o.P)((0,O.J)((0,b.p)((0,S.d)(v.A))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(c.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,t){return(e=e||t.tileInfo?.spatialReference)&&m.A.fromJSON(e)}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const s=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),l=[],a={writeSublayerStructure:!1,...i};s.forEach((e=>{const t=e.write({},a);l.push(t)})),l.some((e=>Object.keys(e).length>1))&&(t.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,h.An)(e).path)):null}fetchTile(e,t,r,i={}){const{signal:s}=i,a=this.getTileUrl(e,t,r),n={responseType:"image",signal:s,query:{...this.refreshParameters}};return(0,l.A)(a,n).then((e=>e.data))}async fetchImageBitmapTile(e,t,r,s={}){const{signal:a}=s;if(this.fetchTile!==i.prototype.fetchTile){const i=await this.fetchTile(e,t,r,s);return(0,x.C)(i,e,t,r,a)}const n=this.getTileUrl(e,t,r),o={responseType:"blob",signal:a,query:{...this.refreshParameters}},{data:c}=await(0,l.A)(n,o);return(0,x.C)(c,e,t,r,a)}getTileUrl(e,t,r){const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,s=(0,h.x0)({...this.parsedUrl?.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[t%l.length]:this.parsedUrl?.path}/tile/${e}/${t}/${r}${s?"?"+s:""}`}loadAll(){return(0,n.g)(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((t,r)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new a.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new a.A("tile-layer:undefined-url","layer's url is not defined");const i=(0,E.qg)(this.parsedUrl.path);if(null!=i&&"ImageServer"===i.serverType)throw new a.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,l.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t,r)})).then((t=>{let r=this.url;if(t.ssl&&(r=this.url=r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,E.Wo)(r))return this._fetchServerVersion(r,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,t){if(!(0,E.Fi)(e))return Promise.reject();const r=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,l.A)(r,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new a.A("tile-layer:version-not-available")}))}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return t?t[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let t;e=e.toLowerCase();for(let r=0,i=D.length;r<i;r++)if(t=D[r],t.toLowerCase().includes(e))return(0,h.s2)("//static.arcgis.com/attribution/"+t);return null}_getDefaultTileServers(e){if(null==e)return[];const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),r=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||r?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[Z]}};(0,s._)([(0,u.MZ)({readOnly:!0})],P.prototype,"attributionDataUrl",null),(0,s._)([(0,u.MZ)({type:["show","hide","hide-children"]})],P.prototype,"listMode",void 0),(0,s._)([(0,u.MZ)({json:{read:!0,write:!0}})],P.prototype,"blendMode",void 0),(0,s._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],P.prototype,"isReference",void 0),(0,s._)([(0,u.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],P.prototype,"operationalLayerType",void 0),(0,s._)([(0,u.MZ)({type:Boolean})],P.prototype,"resampling",void 0),(0,s._)([(0,u.MZ)()],P.prototype,"sourceJSON",void 0),(0,s._)([(0,u.MZ)({type:m.A})],P.prototype,"spatialReference",void 0),(0,s._)([(0,d.w)("spatialReference",["spatialReference","tileInfo"])],P.prototype,"readSpatialReference",null),(0,s._)([(0,u.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],P.prototype,"path",void 0),(0,s._)([(0,u.MZ)({readOnly:!0})],P.prototype,"sublayers",void 0),(0,s._)([(0,f.K)("sublayers",{layers:{type:[C.A]}})],P.prototype,"writeSublayers",null),(0,s._)([(0,u.MZ)({json:{read:!1,write:!1}})],P.prototype,"popupEnabled",void 0),(0,s._)([(0,u.MZ)()],P.prototype,"tileServers",null),(0,s._)([(0,p.w)("tileServers")],P.prototype,"castTileServers",null),(0,s._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],P.prototype,"type",void 0),(0,s._)([(0,u.MZ)(N.OZ)],P.prototype,"url",void 0),P=i=(0,s._)([(0,y.$)("esri.layers.TileLayer")],P);const Z=Symbol("default-fetch-tile");P.prototype.fetchTile[Z]=!0;const q=P},20176:(e,t,r)=>{r.d(t,{N3:()=>n,Om:()=>a});var i=r(97255),s=r(90321),l=r(1484);class a{constructor(e=null,t={},r,i,s=0){this.geometry=e,this.attributes=t,this.centroid=r,this.objectId=i,this.displayId=s}static fromJSON(e){const t=e.geometry?l.A.fromJSON(e.geometry):null,r=e.centroid?l.A.fromJSON(e.centroid):null,i=e.objectId;return new a(t,e.attributes,r,i)}weakClone(){const e=new a(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new a(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=(0,s.Q)(new l.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,i.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function n(e){return!!e.geometry?.coords?.length}},75146:(e,t,r)=>{r.d(t,{A:()=>i});class i{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new i;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},90321:(e,t,r)=>{function i(e,t){return e?t?4:3:t?3:2}function s(e,t,r,s){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const n=e.coords,o=[],c=r?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:h,coords:u}=t,p=i(r,s);let d=0;for(const i of h){const e=l(c,u,d,i,r,s);e&&o.push(e),d+=i*p}if(o.sort(((e,t)=>{let i=e[2]-t[2];return 0===i&&r&&(i=e[4]-t[4]),i})),o.length){let e=6*o[0][2];n[0]=o[0][0]/e,n[1]=o[0][1]/e,r&&(e=6*o[0][4],n[2]=0!==e?o[0][3]/e:0),(n[0]<c[0]||n[0]>c[1]||n[1]<c[2]||n[1]>c[3]||r&&(n[2]<c[4]||n[2]>c[5]))&&(n.length=0)}if(!n.length){const e=t.lengths[0]?a(u,0,h[0],r,s):null;if(!e)return null;n[0]=e[0],n[1]=e[1],r&&e.length>2&&(n[2]=e[2])}return e}function l(e,t,r,s,l,a){const n=i(l,a);let o=r,c=r+n,h=0,u=0,p=0,d=0,y=0;for(let i=0,m=s-1;i<m;i++,o+=n,c+=n){const r=t[o],i=t[o+1],s=t[o+2],a=t[c],n=t[c+1],f=t[c+2];let m=r*n-a*i;d+=m,h+=(r+a)*m,u+=(i+n)*m,l&&(m=r*f-a*s,p+=(s+f)*m,y+=m),r<e[0]&&(e[0]=r),r>e[1]&&(e[1]=r),i<e[2]&&(e[2]=i),i>e[3]&&(e[3]=i),l&&(s<e[4]&&(e[4]=s),s>e[5]&&(e[5]=s))}if(d>0&&(d*=-1),y>0&&(y*=-1),!d)return null;const f=[h,u,.5*d];return l&&(f[3]=p,f[4]=.5*y),f}function a(e,t,r,s,l){const a=i(s,l);let u=t,p=t+a,d=0,y=0,f=0,m=0;for(let i=0,v=r-1;i<v;i++,u+=a,p+=a){const t=e[u],r=e[u+1],i=e[u+2],l=e[p],a=e[p+1],v=e[p+2],b=s?o(t,r,i,l,a,v):n(t,r,l,a);if(b)if(d+=b,s){const e=h(t,r,i,l,a,v);y+=b*e[0],f+=b*e[1],m+=b*e[2]}else{const e=c(t,r,l,a);y+=b*e[0],f+=b*e[1]}}return d>0?s?[y/d,f/d,m/d]:[y/d,f/d]:r>0?s?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function n(e,t,r,i){const s=r-e,l=i-t;return Math.sqrt(s*s+l*l)}function o(e,t,r,i,s,l){const a=i-e,n=s-t,o=l-r;return Math.sqrt(a*a+n*n+o*o)}function c(e,t,r,i){return[e+.5*(r-e),t+.5*(i-t)]}function h(e,t,r,i,s,l){return[e+.5*(i-e),t+.5*(s-t),r+.5*(l-r)]}r.d(t,{Q:()=>s})},76328:(e,t,r)=>{r.d(t,{f:()=>u});var i=r(35143),s=r(46053),l=(r(81806),r(76460),r(47249),r(28379)),a=r(85842),n=r(13312),o=r(88235),c=r(44067),h=r(82356);const u=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}destroy(){this.tilemapCache?.destroy?.()}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t,r){const i=t.capabilities?.includes("Tilemap");let{minLOD:s,maxLOD:l,minScale:a,maxScale:n}=t;if(null==s&&null==l&&(0!==a||0!==n)){const e=e=>Math.round(1e4*e)/1e4;a=e(a||t.tileInfo.lods[0].scale),n=e(n||t.tileInfo.lods[t.tileInfo.lods.length-1].scale);for(const r of t.tileInfo.lods){const t=e(r.scale);s=t>=a?r.level:s,l=t>=n?r.level:l}}if(i)return new h.d({layer:this,minLOD:s,maxLOD:l});if(t.tileInfo){const e=new o.A;return e.read(t.tileInfo,r),new c.A(e,s,l)}return null}};return(0,i._)([(0,s.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,s.MZ)()],t.prototype,"minScale",void 0),(0,i._)([(0,l.w)("service","minScale")],t.prototype,"readMinScale",null),(0,i._)([(0,s.MZ)()],t.prototype,"maxScale",void 0),(0,i._)([(0,l.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,i._)([(0,s.MZ)({type:n.A})],t.prototype,"spatialReference",void 0),(0,i._)([(0,s.MZ)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,i._)([(0,s.MZ)({type:o.A})],t.prototype,"tileInfo",void 0),(0,i._)([(0,s.MZ)()],t.prototype,"tilemapCache",void 0),(0,i._)([(0,l.w)("service","tilemapCache",["capabilities","tileInfo"])],t.prototype,"readTilemapCache",null),(0,i._)([(0,s.MZ)()],t.prototype,"version",void 0),t=(0,i._)([(0,a.$)("esri.layers.mixins.ArcGISCachedService")],t),t}},36648:(e,t,r)=>{r.d(t,{V:()=>b});var i=r(35143),s=r(3825),l=r(87663),a=r(50346),n=r(90534),o=r(19898),c=r(46053),h=(r(81806),r(76460),r(47249),r(28379)),u=r(85842),p=r(49140),d=r(76797),y=r(13312),f=r(13096),m=r(95363),v=r(72945);const b=e=>{let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,s="tile"!==i&&!!t.supportsDynamicLayers,l=r.includes("query"),a=r.includes("map"),n=!!t.exportTilesAllowed,c=r.includes("tilemap"),h=r.includes("data"),u="tile"!==i&&(!t.tileInfo||s),p="tile"!==i&&(!t.tileInfo||s),d="tile"!==i,y="tile"!==i&&s&&t.currentVersion>=11.1,f=t.cimVersion?o.R.parse(t.cimVersion):null,m=f?.greaterEqual(1,4)??!1,v=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:a,supportsExportTiles:n,supportsIdentify:l,supportsQuery:h,supportsTileMap:c},exportMap:a?{supportsArcadeExpressionForLabeling:m,supportsCIMSymbols:v,supportsDynamicLayers:s,supportsSublayerOrderBy:y,supportsSublayerDefinitionExpression:p,supportsSublayerVisibility:u,supportsSublayersChanges:d}:null,exportTiles:n?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchRelatedService(e){const t=this.portalItem;if(!t||!(0,v.bK)(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const r=await this._relatedFeatureServicePromise;return(0,a.Te)(e),r?{itemId:r.id,url:r.url}:null}async fetchSublayerInfo(e,t){const{source:r}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===r?.type&&(0,v.bK)(this.portalItem)&&e.originIdOf("url")<p.Gr.SERVICE){const i=await this.fetchRelatedService(t);i&&(e.url=(0,n.fj)(i.url,r.mapLayerId.toString()),e.layerItemId=i.itemId)}const{url:i}=e;let l;if("data-layer"===r.type)l=(await(0,s.A)(i,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...t})).data;else if(i&&e.originIdOf("url")>p.Gr.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(i),t=(0,f.qg)(i)?.sublayer??r.mapLayerId;l=e.get(t)}catch{}else{let i=e.id;"map-layer"===r?.type&&(i=r.mapLayerId);try{l=(await this.fetchAllLayersAndTables(t)).get(i)}catch{}}return l}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,t){await this.load(t),this._allLayersAndTablesMap||=new Map;const r=(0,f.qg)(e),i=(0,l.tE)(this._allLayersAndTablesMap,r?.url.path,(()=>(0,s.A)((0,n.fj)(r?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const t=new Map,{layers:r,tables:i}=e.data,s=[...r??[],...i??[]];for(const l of s)t.set(l.id,l);return{result:t}}),(e=>({error:e}))))),o=await i;if((0,a.Te)(t),"result"in o)return o.result;throw o.error}};return(0,i._)([(0,c.MZ)({readOnly:!0})],t.prototype,"capabilities",void 0),(0,i._)([(0,h.w)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),(0,i._)([(0,c.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,c.MZ)({type:d.A})],t.prototype,"fullExtent",void 0),(0,i._)([(0,c.MZ)(m.id)],t.prototype,"id",void 0),(0,i._)([(0,c.MZ)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),(0,i._)([(0,c.MZ)(m.M6)],t.prototype,"popupEnabled",void 0),(0,i._)([(0,c.MZ)({type:y.A})],t.prototype,"spatialReference",void 0),(0,i._)([(0,c.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,i._)([(0,h.w)("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=(0,i._)([(0,u.$)("esri.layers.mixins.ArcGISMapService")],t),t}},73907:(e,t,r)=>{r.d(t,{I:()=>v});var i=r(35143),s=r(94643),l=r(73763),a=r(50076),n=r(76460),o=r(68134),c=r(46053),h=(r(81806),r(47249),r(39314)),u=r(85842),p=r(49140),d=r(39568),y=r(65419);const f=s.A.ofType(d.A);function m(e,t){e&&e.forEach((e=>{t(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,t)}))}const v=e=>{let t=class extends e{constructor(...e){super(...e),this.allSublayers=new l.A({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[p.Gr.SERVICE]:{},[p.Gr.PORTAL_ITEM]:{},[p.Gr.WEB_SCENE]:{},[p.Gr.WEB_MAP]:{}},this.subtables=null,this.addHandles([(0,o.wB)((()=>this.sublayers),((e,t)=>this._handleSublayersChange(e,t)),o.OH),(0,o.wB)((()=>this.subtables),((e,t)=>this._handleSublayersChange(e,t)),o.OH)])}destroy(){this.allSublayers.destroy()}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:r}=this,i=(0,p.aB)(t.origin);if(i<p.Gr.SERVICE)return;if(r[i]={context:t,visibleLayers:e.visibleLayers||r[i].visibleLayers,layers:e.layers||r[i].layers},i>p.Gr.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:l}=this.createSublayersForOrigin("web-document"),a=(0,h.oY)(this);a.setDefaultOrigin(l),this._set("sublayers",new f(s)),a.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const t=(0,p.aB)("web-document"===e?"web-map":e);let r=p.Gr.SERVICE,i=this.sublayersSourceJSON[p.Gr.SERVICE].layers,s=this.sublayersSourceJSON[p.Gr.SERVICE].context,l=null;const a=[p.Gr.PORTAL_ITEM,p.Gr.WEB_SCENE,p.Gr.WEB_MAP].filter((e=>e<=t));for(const p of a){const e=this.sublayersSourceJSON[p];(0,y._X)(e.layers)&&(r=p,i=e.layers,s=e.context,e.visibleLayers&&(l={visibleLayers:e.visibleLayers,context:e.context}))}const n=[p.Gr.PORTAL_ITEM,p.Gr.WEB_SCENE,p.Gr.WEB_MAP].filter((e=>e>r&&e<=t));let o=null;for(const p of n){const{layers:e,visibleLayers:t,context:r}=this.sublayersSourceJSON[p];e&&(o={layers:e,context:r}),t&&(l={visibleLayers:t,context:r})}const c=function(e,t){const r=[],i={};return e?(e.forEach((e=>{const s=new d.A;if(s.read(e,t),i[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=i[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(s)}else r.unshift(s)})),r):r}(i,s),h=new Map,u=new Set;if(o)for(const p of o.layers)h.set(p.id,p);if(l?.visibleLayers)for(const p of l.visibleLayers)u.add(p);return m(c,(e=>{o&&e.read(h.get(e.id),o.context),l&&e.read({defaultVisibility:u.has(e.id)},l.context)})),{origin:(0,p.OL)(r),sublayers:new f({items:c})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{n.A.getLogger("esri.layers.TileLayer").error(new a.A("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,i._)([(0,c.MZ)({readOnly:!0})],t.prototype,"allSublayers",void 0),(0,i._)([(0,c.MZ)({readOnly:!0,type:s.A.ofType(d.A)})],t.prototype,"serviceSublayers",void 0),(0,i._)([(0,c.MZ)({value:null,type:f,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),(0,i._)([(0,c.MZ)({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),(0,i._)([(0,c.MZ)({type:f,json:{read:{source:"tables"}}})],t.prototype,"subtables",void 0),t=(0,i._)([(0,u.$)("esri.layers.mixins.SublayersOwner")],t),t}},44067:(e,t,r)=>{r.d(t,{A:()=>l});var i=r(50076),s=r(50346);class l{constructor(e,t=0,r=e.lods[e.lods.length-1].level){this.tileInfo=e,this.minLOD=t,this.maxLOD=r,e.lodAt(t)||(this.minLOD=e.lods[0].level),e.lodAt(r)||(this.maxLOD=e.lods[e.lods.length-1].level)}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(e,t,r){const i=this.tileInfo?.lodAt(e);return!i||e<this.minLOD||e>this.maxLOD?"unavailable":i.cols&&i.rows?r>=i.cols[0]&&r<=i.cols[1]&&t>=i.rows[0]&&t<=i.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(e,t,r,l){await(0,s.NO)(l);const a=this.getAvailability(e,t,r);if("unavailable"===a)throw new i.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r});return a}async fetchAvailabilityUpsample(e,t,r,i,l){await(0,s.NO)(l),i.level=e,i.row=t,i.col=r;const a=this.tileInfo;return a.updateTileInfo(i),this.fetchAvailability(e,t,r,l).catch((e=>{if((0,s.zf)(e))throw e;if(a.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,l);throw e}))}}},82356:(e,t,r)=>{r.d(t,{d:()=>A});var i,s=r(35143),l=r(3825),a=r(91967),n=r(55877),o=r(50076),c=r(54901),h=(r(81806),r(53521)),u=r(30015),p=r(50346),d=r(68134),y=r(52394),f=r(90534),m=r(46053),v=(r(76460),r(47249),r(85842)),b=r(11164),g=r(53084),_=r(97255),w=r(78393);class I{constructor(e){!function(e){if(!e?.location)throw new o.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:r}=e;this.location=Object.freeze((0,g.o8)(t));const i=this.location.width,s=this.location.height;let l=!0,a=!0;const n=function(e,t=!1){return e<=w.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(i*s/32));let c=0;for(let o=0;o<r.length;o++){const e=o%32;r[o]?(a=!1,n[c]|=1<<e):l=!1,31===e&&++c}a?(this._availability="unavailable",this.byteSize=40):l?(this._availability="available",this.byteSize=40):(this._availability=n,this.byteSize=40+(0,_.Qf)(n))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const r=(e-this.location.top)*this.location.width+(t-this.location.left),i=r%32,s=r>>5,l=this._availability;return s<0||s>l.length?"unknown":l[s]&1<<i?"available":"unavailable"}static fromDefinition(e,t){const r=e.service.request||l.A,{row:i,col:s,width:a,height:n}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,r(function(e){let t;if(e.service.tileServers?.length){const r=e.service.tileServers;t=`${r&&r.length?r[e.row%r.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;const r=e.service.query;return r&&(t=`${t}?${r}`),t}(e),t).then((e=>e.data)).catch((e=>{if(422===e?.details?.httpStatus)return{location:{top:i,left:s,width:a,height:n},valid:!0,data:new Array(a*n).fill(0)};throw e})).then((e=>{if(e.location&&(e.location.top!==i||e.location.left!==s||e.location.width!==a||e.location.height!==n))throw new o.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:i,left:s,width:a,height:n}});return I.fromJSON(e)}))}static fromJSON(e){return Object.freeze(new I(e))}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function T(e,t,r){return new o.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r})}let A=i=class extends a.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=l.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h.q(2*n.u.MEGABYTES),this.addHandles((0,d.wB)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),d.Vh))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const i=this._tilemapFromCache(e,t,r,this._tmpTilemapDefinition);return i?i.getAvailability(t,r):"unknown"}fetchAvailability(e,t,r,i){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(T(e,t,r)):this._fetchTilemap(e,t,r,i).catch((e=>e)).then((i=>{if(i instanceof I){const s=i.getAvailability(t,r);if("unavailable"===s)throw T(e,t,r);return s}if((0,p.zf)(i))throw i;return"unknown"}))}fetchAvailabilityUpsample(e,t,r,i,s){i.level=e,i.row=t,i.col=r;const l=this.layer.tileInfo;l.updateTileInfo(i);const a=this.fetchAvailability(e,t,r,s).catch((e=>{if((0,p.zf)(e))throw e;if(l.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,s);throw e}));return this._fetchAvailabilityUpsamplePrefetch(i.id,e,t,r,s,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,r,s,l,a){if(!this._prefetchingEnabled||null==e)return;const n=`prefetch-${e}`;if(this.hasHandles(n))return;const o=new AbortController;a.then((()=>o.abort()),(()=>o.abort()));let h=!1;const u=(0,c.hA)((()=>{h||(h=!0,o.abort())}));if(this.addHandles(u,n),await(0,y.md)(10,o.signal).catch((()=>{})),h||(h=!0,this.removeHandles(n)),(0,p.G4)(o))return;const d=new b.U(e,t,r,s),f={...l,signal:o.signal},m=this.layer.tileInfo;for(let c=0;i._prefetches.length<i._maxPrefetch&&m.upsampleTile(d);++c){const e=this.fetchAvailability(d.level,d.row,d.col,f);i._prefetches.push(e);const t=()=>{i._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,r,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new o.A("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,l=this._tilemapFromCache(e,t,r,s);if(l)return Promise.resolve(l);const a=i?.signal;return i={...i,signal:null},new Promise(((e,t)=>{(0,p.u7)(a,(()=>t((0,p.NK)())));const r=S(s);let l=this._pendingTilemapRequests[r];if(!l){l=I.fromDefinition(s,i).then((e=>(this._tilemapCache.put(r,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[r]};this._pendingTilemapRequests[r]=l,l.then(e,e)}l.then(e,t)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,f.x0)({...e.query,...r,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,r,i){i.level=e,i.row=t-t%this.size,i.col=r-r%this.size;const s=S(i);return this._tilemapCache.get(s)}get test(){}};A._maxPrefetch=4,A._prefetches=new u.A({initialSize:i._maxPrefetch}),(0,s._)([(0,m.MZ)({constructOnly:!0})],A.prototype,"layer",void 0),(0,s._)([(0,m.MZ)({constructOnly:!0})],A.prototype,"minLOD",void 0),(0,s._)([(0,m.MZ)({constructOnly:!0})],A.prototype,"maxLOD",void 0),(0,s._)([(0,m.MZ)({constructOnly:!0})],A.prototype,"request",void 0),(0,s._)([(0,m.MZ)({constructOnly:!0})],A.prototype,"size",void 0),A=i=(0,s._)([(0,v.$)("esri.layers.support.TilemapCache")],A)},16852:(e,t,r)=>{r.d(t,{C:()=>a,m:()=>l});var i=r(50076),s=r(50346);async function l(e,t,r){let l;try{l=await createImageBitmap(e)}catch(a){throw new i.A("request:server",`Unable to load ${t}`,{url:t,error:a})}return(0,s.Te)(r),l}async function a(e,t,r,l,a){let n;try{n=await createImageBitmap(e)}catch(o){throw new i.A("request:server",`Unable to load tile ${t}/${r}/${l}`,{error:o,level:t,row:r,col:l})}return(0,s.Te)(a),n}}}]);
//# sourceMappingURL=92374.229d5012.chunk.js.map