{"version":3,"file":"static/js/1913.07fca29a.chunk.js","mappings":";6GAKA,SAASA,EAAgBC,GAAG,MAAW,UAAJA,GAAiB,MAAJA,0EAAQ,IAAIC,EAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,SAASC,EAAcF,GAAG,SAASA,GAAGG,MAAMC,OAAOJ,KAAK,SAASK,EAAkBL,GAAG,OAAIA,GAAsmC,SAA+BA,GAAG,OAAOC,EAAWK,MAAM,SAASC,GAAG,OAAOP,EAAEQ,SAASD,MAA1rCE,CAAsBT,GAAoBU,EAAgCV,GAAG,SAASA,GAAG,IAAIO,GAAE,EAAUI,EAAEX,EAAEY,MAAM,IAAIC,QAAQ,SAASb,EAAEW,GAAG,OAAGX,EAAEc,MAAM,SAASP,GAAGA,GAAE,GAAY,MAAQP,EAAEc,MAAM,QAAY,IAAJH,IAA0BV,EAAWO,SAASR,MAAMe,QAAQ,SAASf,EAAEO,GAAG,OAAOP,EAAEO,KAAK,OAAOL,EAAcS,GAAGP,OAAOO,GAAGK,WAAW,MAA/S,GAAqT,SAASC,EAAsBjB,GAAsB,OAAOA,EAAEkB,QAAtB,aAAgC,IAAsK,SAASC,EAAqBnB,GAAG,OAAOU,EAAgCV,GAAG,SAASA,GAAG,IAAIO,EAA7P,SAAgCP,GAAoB,OAAOA,EAAEkB,QAApB,WAA8B,IAAwLE,CAAuBH,EAA3M,SAAmCjB,GAA2B,OAAOA,EAAEkB,QAA3B,kBAAqC,MAAgJG,CAA0BrB,KAA2B,OAAOE,EAAcK,GAArC,gBAA0Ce,KAAKf,GAAGA,EAAEH,OAAOG,GAAGS,WAAWhB,KAAK,SAASU,EAAgCV,EAAEO,GAAG,IAAIP,EAAG,OAAOA,EAAE,IAAIW,EAAEX,EAAEuB,cAAcC,QAAQ,KAAK,EAAE,OAAOxB,EAAEkB,QAAQ,UAAU,IAAIO,UAAU,EAAEd,GAAGe,OAAO1B,EAAE2B,MAAMhB,GAAGO,QAAQ,QAAQ,KAAKN,MAAM,QAAQgB,KAAK,SAAS5B,EAAEW,GAAG,OAAaJ,EAAF,IAAJI,EAAQX,EAAEkB,QAAQ,MAAM,IAAOlB,MAAM6B,KAAK,KAAKX,QAAQ,KAAK","sources":["../node_modules/@esri/calcite-components/dist/esm-es5/number-bb265f44.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.83\n */\nfunction isActivationKey(e){return e===\"Enter\"||e===\" \"}var numberKeys=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"];function isValidNumber(e){return!(!e||isNaN(Number(e)))}function parseNumberString(e){if(!e||!stringContainsNumbers(e)){return\"\"}return sanitizeExponentialNumberString(e,(function(e){var n=false;var r=e.split(\"\").filter((function(e,r){if(e.match(/\\./g)&&!n){n=true;return true}if(e.match(/\\-/g)&&r===0){return true}return numberKeys.includes(e)})).reduce((function(e,n){return e+n}));return isValidNumber(r)?Number(r).toString():\"\"}))}function sanitizeDecimalString(e){var n=/(?!^\\.)\\.$/;return e.replace(n,\"\")}function sanitizeNegativeString(e){var n=/(?!^-)-/g;return e.replace(n,\"\")}function sanitizeLeadingZeroString(e){var n=/^([-0])0+(?=\\d)/;return e.replace(n,\"$1\")}function sanitizeNumberString(e){return sanitizeExponentialNumberString(e,(function(e){var n=sanitizeNegativeString(sanitizeDecimalString(sanitizeLeadingZeroString(e)));var r=/^-\\b0\\b\\.?0*$/;return isValidNumber(n)?r.test(n)?n:Number(n).toString():e}))}function sanitizeExponentialNumberString(e,n){if(!e){return e}var r=e.toLowerCase().indexOf(\"e\")+1;return e.replace(/[eE]*$/g,\"\").substring(0,r).concat(e.slice(r).replace(/[eE]/g,\"\")).split(/[eE]/).map((function(e,r){return r===1?n(e.replace(/\\./g,\"\")):n(e)})).join(\"e\").replace(/^e/,\"1e\")}function stringContainsNumbers(e){return numberKeys.some((function(n){return e.includes(n)}))}export{sanitizeExponentialNumberString as a,sanitizeDecimalString as b,isActivationKey as c,isValidNumber as i,numberKeys as n,parseNumberString as p,sanitizeNumberString as s};"],"names":["isActivationKey","e","numberKeys","isValidNumber","isNaN","Number","parseNumberString","some","n","includes","stringContainsNumbers","sanitizeExponentialNumberString","r","split","filter","match","reduce","toString","sanitizeDecimalString","replace","sanitizeNumberString","sanitizeNegativeString","sanitizeLeadingZeroString","test","toLowerCase","indexOf","substring","concat","slice","map","join"],"sourceRoot":""}