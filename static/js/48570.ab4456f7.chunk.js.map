{"version":3,"file":"static/js/48570.ab4456f7.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/index2.js","../node_modules/@esri/calcite-components/dist/components/utils.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar colorName$1 = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\nvar isArrayish = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\nvar simpleSwizzle = createCommonjsModule(function (module) {\n\n\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n});\n\nvar colorString = createCommonjsModule(function (module) {\n/* MIT license */\n\n\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorName$1) {\n\tif (hasOwnProperty.call(colorName$1, name)) {\n\t\treverseNames[colorName$1[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorName$1, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorName$1[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = simpleSwizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = simpleSwizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = simpleSwizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = simpleSwizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = simpleSwizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n});\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n/* eslint-disable no-mixed-operators */\n\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(colorName)) {\n\treverseKeywords[colorName[key]] = key;\n}\n\nconst convert$1 = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nvar conversions = convert$1;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert$1)) {\n\tif (!('channels' in convert$1[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert$1[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert$1[model].labels.length !== convert$1[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert$1[model];\n\tdelete convert$1[model].channels;\n\tdelete convert$1[model].labels;\n\tObject.defineProperty(convert$1[model], 'channels', {value: channels});\n\tObject.defineProperty(convert$1[model], 'labels', {value: labels});\n}\n\nconvert$1.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert$1.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert$1.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert$1.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert$1.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert$1.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(colorName)) {\n\t\tconst value = colorName[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert$1.keyword.rgb = function (keyword) {\n\treturn colorName[keyword];\n};\n\nconvert$1.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert$1.rgb.lab = function (rgb) {\n\tconst xyz = convert$1.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$1.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert$1.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert$1.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert$1.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$1.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$1.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$1.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$1.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$1.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert$1.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert$1.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert$1.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert$1.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert$1.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert$1.rgb.ansi16(convert$1.hsv.rgb(args), args[2]);\n};\n\nconvert$1.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert$1.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$1.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$1.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$1.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert$1.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert$1.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert$1.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert$1.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert$1.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert$1.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert$1.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert$1.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert$1.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert$1.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert$1.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert$1.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert$1.gray.hsv = convert$1.gray.hsl;\n\nconvert$1.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert$1.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert$1.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert$1.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$1.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nvar route = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nvar colorConvert = convert;\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(colorConvert)) {\n\thashedModelKeys[[...colorConvert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in colorConvert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = colorConvert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = colorConvert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = colorConvert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = colorConvert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = colorConvert[this.model];\n\t\tconst {labels} = colorConvert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorConvert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(colorConvert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = colorConvert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(colorConvert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nvar color = Color;\n\nexport { color as c };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nconst hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\nconst alphaToOpacity = (alpha) => Number((alpha * 100).toFixed());\nconst opacityToAlpha = (opacity) => Number((opacity / 100).toFixed(2));\nfunction isValidHex(hex, hasAlpha = false) {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\nfunction evaluateHex(hex, length, pattern) {\n  if (!hex) {\n    return false;\n  }\n  return hex.length === length && pattern.test(hex);\n}\nfunction isShorthandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction isLonghandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction normalizeHex(hex, hasAlpha = false, convertFromHexToHexa = false) {\n  hex = hex.toLowerCase();\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n  return hex;\n}\nfunction hexify(color, hasAlpha = false) {\n  return hasAlpha ? color.hexa() : color.hex();\n}\nfunction rgbToHex(color) {\n  const { r, g, b } = color;\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\nfunction numToHex(num) {\n  return num.toString(16).padStart(2, \"0\");\n}\nfunction normalizeAlpha(colorObject) {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n  return normalized;\n}\nfunction normalizeColor(alphaColorObject) {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n  return normalized;\n}\nfunction hexToRGB(hex, hasAlpha = false) {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n  hex = hex.replace(\"#\", \"\");\n  let r;\n  let g;\n  let b;\n  let a;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  }\n  else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = (x) => x;\nconst CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\nconst ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\nfunction parseMode(colorValue) {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n  return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\nfunction alphaCompatible(mode) {\n  return (mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA);\n}\nfunction toAlphaMode(mode) {\n  const alphaMode = mode === CSSColorMode.HEX\n    ? CSSColorMode.HEXA\n    : mode === CSSColorMode.RGB_CSS\n      ? CSSColorMode.RGBA_CSS\n      : mode === CSSColorMode.HSL_CSS\n        ? CSSColorMode.HSLA_CSS\n        : mode === ObjectColorMode.RGB\n          ? ObjectColorMode.RGBA\n          : mode === ObjectColorMode.HSL\n            ? ObjectColorMode.HSLA\n            : mode === ObjectColorMode.HSV\n              ? ObjectColorMode.HSVA\n              : mode;\n  return alphaMode;\n}\nfunction toNonAlphaMode(mode) {\n  const nonAlphaMode = mode === CSSColorMode.HEXA\n    ? CSSColorMode.HEX\n    : mode === CSSColorMode.RGBA_CSS\n      ? CSSColorMode.RGB_CSS\n      : mode === CSSColorMode.HSLA_CSS\n        ? CSSColorMode.HSL_CSS\n        : mode === ObjectColorMode.RGBA\n          ? ObjectColorMode.RGB\n          : mode === ObjectColorMode.HSLA\n            ? ObjectColorMode.HSL\n            : mode === ObjectColorMode.HSVA\n              ? ObjectColorMode.HSV\n              : mode;\n  return nonAlphaMode;\n}\n\nexport { CSSColorMode as C, alphaCompatible as a, alphaToOpacity as b, colorEqual as c, normalizeAlpha as d, normalizeColor as e, toAlphaMode as f, hexToRGB as g, hexify as h, isValidHex as i, isLonghandHex as j, hexChar as k, normalizeHex as n, opacityToAlpha as o, parseMode as p, rgbToHex as r, toNonAlphaMode as t };\n"],"names":["createCommonjsModule","fn","basedir","module","path","exports","require","base","Error","commonjsRequire","colorName$1","simpleSwizzle","concat","Array","prototype","slice","swizzle","args","obj","results","i","len","length","arg","isArray","splice","Function","Object","getOwnPropertyDescriptor","constructor","name","call","push","wrap","arguments","colorString","hasOwnProperty","reverseNames","create","cs","to","get","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","value","match","hexAlpha","i2","parseInt","parseFloat","alpha","isNaN","hex","rgba","percent","r","g","b","hsla","hwba","a","keyword","colorName","reverseKeywords","key","keys","convert$1","channels","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","gray","conversions","defineProperty","deriveBFS","fromModel","graph","models","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","toModel","cur","conversion","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","y","x","z","t2","t3","t1","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","color","mult","rem","split","map","char","join","integer","chroma","grayscale","hue","pure","mg","convert","forEach","routes","route","wrappedFn","arg0","undefined","result","wrapRounded","raw","wrapRaw","colorConvert","skippedModels","hashedModelKeys","sort","limiters","Color","object","this","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","roundToPlace","red","getset","maxfn","green","blue","saturationl","lightness","saturationv","white","wblack","cyan","magenta","yellow","black","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","assertArray","number","Number","toFixed","roundTo","channel","modifier","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","opacityToAlpha","opacity","isValidHex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","pattern","test","hexLength","hexPattern","normalizeHex","convertFromHexToHexa","startsWith","rgbToHex","hexToRGB","hexify","numToHex","padStart","normalizeAlpha","colorObject","normalized","normalizeColor","alphaColorObject","isShorthand","replace","first","second","third","fourth","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","every","colorEqual","value1","value2","alphaCompatible","mode","toAlphaMode","toNonAlphaMode"],"sourceRoot":""}