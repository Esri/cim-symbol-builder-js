{"version":3,"file":"static/js/972.fd4110c3.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/tile/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tile/tile.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tile/tile.scss?tag=calcite-tile&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  contentContainer: \"content-container\",\n  contentContainerHasContent: \"content-container--has-content\",\n  contentContainerHasOnlyContentTopAndBottom: \"content-container--has-only-content-top-and-bottom\",\n  textContentContainer: \"text-content-container\",\n  description: \"description\",\n  heading: \"heading\",\n  icon: \"icon\",\n  interactive: \"interactive\",\n  largeVisualDeprecated: \"large-visual-deprecated\",\n  row: \"row\",\n  selected: \"selected\",\n  selectionIcon: \"selection-icon\",\n  textContent: \"text-content\",\n};\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"circle-f\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"circle\",\n} as const;\n\nexport const SLOTS = {\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  contentStart: \"content-start\",\n  contentTop: \"content-top\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Alignment, Layout, Scale, SelectionAppearance, SelectionMode } from \"../interfaces\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SelectableComponent } from \"../../utils/selectableComponent\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot content-top - A slot for adding non-actionable elements above the component's content.  Content slotted here will render in place of the `icon` property.\n * @slot content-bottom - A slot for adding non-actionable elements below the component's content.\n * @slot content-start - [Deprecated] use `content-top` slot instead.  A slot for adding non-actionable elements before the component's content.\n * @slot content-end - [Deprecated] use `content-bottom` slot instead. A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-tile\",\n  styleUrl: \"tile.scss\",\n  shadow: true,\n})\nexport class Tile implements InteractiveComponent, SelectableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   *\n   * @deprecated\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the alignment of the Tile's content.\n   */\n  @Prop({ reflect: true }) alignment: Exclude<Alignment, \"end\"> = \"start\";\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's embed mode.\n   *\n   * When `true`, renders without a border and padding for use by other components.\n   *\n   * @deprecated No longer necessary.\n   */\n  @Prop({ reflect: true }) embed = false;\n\n  /** The component header text, which displays between the icon and description. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** When embed is `\"false\"`, the URL for the component. */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When true, enables the tile to be focused, and allows the `calciteTileSelect` to emit.\n   * This is set to `true` by a parent Tile Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Defines the layout of the component.\n   *\n   * Use `\"horizontal\"` for rows, and `\"vertical\"` for a single column.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) layout: Extract<Layout, \"horizontal\" | \"vertical\"> = \"horizontal\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true` and the parent's `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true }) selected = false;\n\n  /**\n   * Specifies the selection appearance, where:\n   *\n   * - `\"icon\"` (displays a checkmark or dot), or\n   * - `\"border\"` (displays a border).\n   *\n   * This property is set by the parent tile-group.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  /**\n   * Specifies the selection mode, where:\n   *\n   * - `\"multiple\"` (allows any number of selected items),\n   * - `\"single\"` (allows only one selected item),\n   * - `\"single-persist\"` (allows only one selected item and prevents de-selection),\n   * - `\"none\"` (allows no selected items).\n   *\n   * This property is set by the parent tile-group.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"none\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileElement;\n\n  private clickHandler = (): void => {\n    if (this.interactive) {\n      this.setFocus();\n      this.handleSelectEvent();\n    }\n  };\n\n  private containerEl: HTMLDivElement;\n\n  @State() hasContentBottom = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentTop = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTileKeyEvent: EventEmitter<KeyboardEvent>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event() calciteTileSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleSelectEvent = (): void => {\n    if (\n      this.disabled ||\n      !this.interactive ||\n      (this.selectionMode === \"single-persist\" && this.selected === true)\n    ) {\n      return;\n    }\n    this.calciteTileSelect.emit();\n  };\n\n  private handleSlotChange = (event: Event): void => {\n    const slotName = (event.target as HTMLSlotElement).dataset.name;\n    this[`has${slotName}`] = slotChangeHasAssignedElement(event);\n  };\n\n  private setContainerEl = (el): void => {\n    this.containerEl = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleSelectEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n        case \"ArrowLeft\":\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalTileKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const { selected, selectionAppearance, selectionMode } = this;\n    if (selectionAppearance === \"icon\" && selectionMode !== \"none\") {\n      return (\n        <calcite-icon\n          class={CSS.selectionIcon}\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      );\n    }\n    return;\n  }\n\n  renderTile(): VNode {\n    const {\n      description,\n      disabled,\n      hasContentBottom,\n      hasContentEnd,\n      hasContentStart,\n      hasContentTop,\n      heading,\n      icon,\n      iconFlipRtl,\n      interactive,\n      selectionMode,\n    } = this;\n    const isLargeVisual = heading && icon && !description;\n    const disableInteraction = Boolean(this.href) || !interactive;\n    const role =\n      selectionMode === \"multiple\" && interactive\n        ? \"checkbox\"\n        : selectionMode !== \"none\" && interactive\n          ? \"radio\"\n          : interactive\n            ? \"button\"\n            : undefined;\n    const hasContent = !!(description || hasContentEnd || hasContentStart || heading || icon);\n    const hasOnlyContentTopAndBottom = !hasContent && hasContentTop && hasContentBottom;\n    return (\n      <div\n        aria-checked={\n          selectionMode !== \"none\" && interactive ? toAriaBoolean(this.selected) : undefined\n        }\n        aria-disabled={disableInteraction ? toAriaBoolean(disabled) : undefined}\n        aria-label={role && this.label}\n        class={{\n          [CSS.container]: true,\n          [CSS.interactive]: interactive,\n          // [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead\n          [CSS.largeVisualDeprecated]: isLargeVisual,\n          [CSS.row]: true,\n          [CSS.selected]: this.selected,\n        }}\n        onClick={this.clickHandler}\n        ref={this.setContainerEl}\n        role={role}\n        tabIndex={disableInteraction ? undefined : 0}\n      >\n        {this.renderSelectionIcon()}\n        <div\n          class={{\n            [CSS.contentContainer]: true,\n            [CSS.contentContainerHasContent]: hasContent,\n            [CSS.contentContainerHasOnlyContentTopAndBottom]: hasOnlyContentTopAndBottom,\n          }}\n        >\n          <slot\n            data-name=\"ContentTop\"\n            name={SLOTS.contentTop}\n            onSlotchange={this.handleSlotChange}\n          />\n          {icon && <calcite-icon class={CSS.icon} flipRtl={iconFlipRtl} icon={icon} scale=\"l\" />}\n          <div class={{ [CSS.textContentContainer]: true, [CSS.row]: true }}>\n            <slot\n              data-name=\"ContentStart\"\n              name={SLOTS.contentStart}\n              onSlotchange={this.handleSlotChange}\n            />\n            <div class={CSS.textContent}>\n              {heading && <div class={CSS.heading}>{heading}</div>}\n              {description && <div class={CSS.description}>{description}</div>}\n            </div>\n            <slot\n              data-name=\"ContentEnd\"\n              name={SLOTS.contentEnd}\n              onSlotchange={this.handleSlotChange}\n            />\n          </div>\n          <slot\n            data-name=\"ContentBottom\"\n            name={SLOTS.contentBottom}\n            onSlotchange={this.handleSlotChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        {this.href ? (\n          <calcite-link disabled={disabled} href={this.href}>\n            {this.renderTile()}\n          </calcite-link>\n        ) : (\n          this.renderTile()\n        )}\n      </InteractiveContainer>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tile-background-color: Specifies the background color of the component.\n * @prop --calcite-tile-border-color: Specifies the border color of the component.\n * @prop --calcite-tile-description-text-color: Specifies the description text color of the component.\n * @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.\n */\n\n:host {\n  --calcite-tile-background-color: var(--calcite-color-foreground-1);\n  --calcite-tile-border-color: var(--calcite-color-border-2);\n  --calcite-tile-description-text-color: var(--calcite-color-text-3);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-2);\n  --calcite-icon-color: var(--calcite-color-text-3);\n\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.container {\n  background-color: var(--calcite-tile-background-color);\n  block-size: var(--calcite-container-size-content-fluid);\n  box-sizing: border-box;\n  inline-size: var(--calcite-container-size-content-fluid);\n  outline: var(--calcite-border-width-sm, 1px) solid var(--calcite-tile-border-color);\n  user-select: none;\n  &.interactive {\n    cursor: pointer;\n    &:hover,\n    &:focus,\n    &.selected {\n      outline-color: var(--calcite-color-brand);\n      position: relative;\n      .selection-icon {\n        --calcite-icon-color: var(--calcite-color-brand);\n      }\n    }\n    &.selected {\n      z-index: var(--calcite-z-index);\n    }\n    &:focus {\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n      z-index: var(--calcite-z-index-sticky);\n    }\n  }\n}\n\n.content-container,\n.row {\n  align-items: flex-start;\n  display: flex;\n}\n\n.content-container {\n  flex-direction: column;\n}\n\n.text-content-container {\n  inline-size: 100%;\n  outline-color: transparent;\n  padding: 0;\n}\n\n.text-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading {\n  color: var(--calcite-tile-heading-text-color);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1.20313rem;\n  overflow-wrap: break-word;\n}\n\n/* [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead */\n.large-visual-deprecated {\n  align-items: center;\n  justify-content: center;\n  min-block-size: 12rem;\n  text-align: center;\n\n  calcite-icon {\n    align-self: center;\n    block-size: 64px;\n    inline-size: 64px;\n  }\n  .text-content-container {\n    justify-content: center;\n  }\n}\n\n.description {\n  color: var(--calcite-tile-description-text-color);\n  font-weight: var(--calcite-font-weight-regular);\n  overflow-wrap: break-word;\n}\n\n:host([alignment=\"center\"]) {\n  .icon {\n    align-self: center;\n  }\n  .text-content-container {\n    justify-content: center;\n  }\n  .text-content {\n    text-align: center;\n  }\n  slot[name=\"content-start\"]::slotted(*),\n  slot[name=\"content-end\"]::slotted(*),\n  slot[name=\"content-top\"]::slotted(*),\n  slot[name=\"content-bottom\"]::slotted(*) {\n    align-self: center;\n  }\n}\n\n:host([scale=\"s\"]) {\n  max-inline-size: 400px;\n  min-inline-size: 100px;\n  .container {\n    padding: var(--calcite-spacing-sm);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-sm);\n  }\n  .heading {\n    font-size: var(--calcite-font-size--2);\n    line-height: 1.03125rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--3);\n    line-height: 0.85938rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-sm);\n  }\n}\n\n:host([scale=\"m\"]) {\n  max-inline-size: 460px;\n  min-inline-size: 140px;\n  .container {\n    padding: var(--calcite-spacing-md);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-md);\n  }\n  .heading {\n    font-size: var(--calcite-font-size--1);\n    line-height: 1.20313rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--2);\n    line-height: 1.03125rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-md);\n  }\n}\n\n:host([scale=\"l\"]) {\n  max-inline-size: 520px;\n  min-inline-size: 160px;\n  .container {\n    padding: var(--calcite-spacing-xl);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-xl);\n  }\n  .heading {\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.375rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--1);\n    line-height: 1.20313rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-xl);\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"horizontal\"]),\n:host([selection-appearance=\"border\"][layout=\"vertical\"]) {\n  .container.selected:focus::before {\n    block-size: 100%;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n    content: \"\";\n    display: block;\n    inline-size: 100%;\n    inset-block-start: 0;\n    inset-inline-start: 0;\n    position: absolute;\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"horizontal\"]) {\n  .container.selected {\n    box-shadow: inset 0 -4px 0 0 var(--calcite-color-brand);\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"vertical\"]) {\n  .container.selected {\n    box-shadow: inset 4px 0 0 0 var(--calcite-color-brand);\n  }\n}\n\n:host([href]:focus:not([disabled])),\n:host([href]:hover:not([disabled])) {\n  --calcite-tile-border-color: var(--calcite-color-text-link);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-link);\n  --calcite-icon-color: var(--calcite-color-text-link);\n  .container {\n    position: relative;\n    z-index: var(--calcite-z-index);\n  }\n}\n\n:host([href]:active:not([disabled])) {\n  .container {\n    box-shadow: 0 0 0 3px var(--calcite-tile-border-color);\n  }\n}\n\n:host([embed]) {\n  .container {\n    box-shadow: none;\n    padding: 0;\n  }\n}\n\n:host([selection-mode=\"none\"]) {\n  .container {\n    outline-color: var(--calcite-tile-border-color);\n    &:focus {\n      outline-color: var(--calcite-color-brand);\n      position: relative;\n    }\n  }\n}\n\n@include disabled();\n\n:host(:hover:not([disabled])),\n:host([active]:not([disabled])) {\n  --calcite-tile-description-text-color: var(--calcite-color-text-2);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-1);\n}\n\n@include base-component();\n\n::slotted(*) {\n  max-inline-size: 100%;\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n"],"names":["CSS","ICONS","SLOTS","Tile","clickHandler","this","interactive","setFocus","handleSelectEvent","disabled","selectionMode","selected","calciteTileSelect","emit","handleSlotChange","event","target","dataset","name","slotChangeHasAssignedElement","setContainerEl","el","containerEl","componentFocusable","focus","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","componentWillLoad","setUpLoadableComponent","keyDownHandler","key","preventDefault","calciteInternalTileKeyEvent","renderSelectionIcon","selectionAppearance","h","class","icon","scale","renderTile","description","hasContentBottom","hasContentEnd","hasContentStart","hasContentTop","heading","iconFlipRtl","isLargeVisual","disableInteraction","Boolean","href","role","undefined","hasContent","hasOnlyContentTopAndBottom","toAriaBoolean","label","onClick","ref","tabIndex","onSlotchange","flipRtl","render","InteractiveContainer","interceptedClick","HTMLElement","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","requestAnimationFrame"],"sourceRoot":""}