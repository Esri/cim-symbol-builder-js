{"version":3,"file":"static/js/239.4c458270.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/calcite-rating.entry.js","../node_modules/@esri/calcite-components/dist/esm/key-acc755b7.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { r as registerInstance, c as createEvent, h, F as Fragment, g as getElement } from './index-1f9b54dc.js';\nimport { g as guid } from './guid-9f15e57a.js';\nimport { c as connectLabel, d as disconnectLabel } from './label-333c4a4c.js';\nimport { c as connectForm, d as disconnectForm, H as HiddenFormInputSlot } from './form-80dbd90e.js';\nimport { u as updateHostInteraction } from './interactive-5db230e8.js';\nimport { i as isActivationKey } from './key-acc755b7.js';\nimport './dom-8f0a9ff2.js';\nimport './resources-9c476cb6.js';\n\nconst TEXT = {\n  rating: \"Rating\",\n  stars: \"Stars: ${num}\"\n};\n\nconst ratingCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host{position:relative;display:flex;align-items:center;inline-size:-moz-fit-content;inline-size:fit-content}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([scale=s]){block-size:1.5rem;--calcite-rating-spacing-unit:0.25rem}:host([scale=m]){block-size:2rem;--calcite-rating-spacing-unit:0.5rem}:host([scale=l]){block-size:2.75rem;--calcite-rating-spacing-unit:0.75rem}:host([read-only]){pointer-events:none}.fieldset{margin:0px;display:flex;border-width:0px;padding:0px}.wrapper{display:inline-block;margin-inline-end:var(--calcite-rating-spacing-unit)}.star{position:relative;display:flex;cursor:pointer;outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;color:var(--calcite-ui-border-input)}.focused{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}.average,.fraction{color:var(--calcite-ui-warning)}.hovered,.selected,:host([read-only]) .average,:host([read-only]) .fraction{color:var(--calcite-ui-brand)}:host .fraction{pointer-events:none;position:absolute;inset-block-start:0px;overflow:hidden;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;inset-inline-start:0}calcite-chip{pointer-events:none;cursor:default}.number--average{font-weight:var(--calcite-font-weight-bold)}.number--count{color:var(--calcite-ui-text-2);font-style:italic}.number--count:not(:first-child){margin-inline-start:var(--calcite-rating-spacing-unit)}.visually-hidden{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}\";\n\nconst Rating = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.calciteRatingChange = createEvent(this, \"calciteRatingChange\", 6);\n    // --------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    // --------------------------------------------------------------------------\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    /** The component's value. */\n    this.value = 0;\n    /** When `true`, the component's value can be read, but cannot be modified. */\n    this.readOnly = false;\n    /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n    this.disabled = false;\n    /** When `true`, and if available, displays the `average` and/or `count` data summary in a `calcite-chip`. */\n    this.showChip = false;\n    /**\n     * Accessible name for the component.\n     *\n     * @default \"Rating\"\n     */\n    this.intlRating = TEXT.rating;\n    /**\n     * Accessible name for each star. The `${num}` in the string will be replaced by the number.\n     *\n     * @default \"Stars: ${num}\"\n     */\n    this.intlStars = TEXT.stars;\n    /**\n     * When `true`, the component must have a value in order for the form to submit.\n     *\n     * @internal\n     */\n    this.required = false;\n    this.onKeyboardPressed = (event) => {\n      if (!this.required && isActivationKey(event.key)) {\n        event.preventDefault();\n        this.updateValue(0);\n      }\n    };\n    this.onFocusChange = (selectedRatingValue) => {\n      this.hasFocus = true;\n      if (!this.required && this.focusValue === selectedRatingValue) {\n        this.updateValue(0);\n      }\n      else {\n        this.focusValue = selectedRatingValue;\n      }\n    };\n    this.guid = `calcite-ratings-${guid()}`;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    connectLabel(this);\n    connectForm(this);\n  }\n  disconnectedCallback() {\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  blurHandler() {\n    this.hasFocus = false;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStars() {\n    return [1, 2, 3, 4, 5].map((i) => {\n      const selected = this.value >= i;\n      const average = this.average && !this.value && i <= this.average;\n      const hovered = i <= this.hoverValue;\n      const fraction = this.average && this.average + 1 - i;\n      const partial = !this.value && !hovered && fraction > 0 && fraction < 1;\n      const focused = this.hasFocus && this.focusValue === i;\n      return (h(\"span\", { class: { wrapper: true } }, h(\"label\", { class: { star: true, focused, selected, average, hovered, partial }, htmlFor: `${this.guid}-${i}`, onPointerOver: () => {\n          this.hoverValue = i;\n        } }, h(\"calcite-icon\", { \"aria-hidden\": \"true\", class: \"icon\", icon: selected || average || this.readOnly ? \"star-f\" : \"star\", scale: this.scale }), partial && (h(\"div\", { class: \"fraction\", style: { width: `${fraction * 100}%` } }, h(\"calcite-icon\", { icon: \"star-f\", scale: this.scale }))), h(\"span\", { class: \"visually-hidden\" }, this.intlStars.replace(\"${num}\", `${i}`))), h(\"input\", { checked: i === this.value, class: \"visually-hidden\", disabled: this.disabled || this.readOnly, id: `${this.guid}-${i}`, name: this.guid, onChange: () => this.updateValue(i), onClick: (event) => \n        // click is fired from the component's label, so we treat this as an internal event\n        event.stopPropagation(), onFocus: () => this.onFocusChange(i), onKeyDown: this.onKeyboardPressed, ref: (el) => (i === 1 || i === this.value) && (this.inputFocusRef = el), type: \"radio\", value: i })));\n    });\n  }\n  render() {\n    const { disabled, intlRating, showChip, scale, count, average } = this;\n    return (h(Fragment, null, h(\"fieldset\", { class: \"fieldset\", disabled: disabled, onBlur: () => (this.hoverValue = null), onPointerLeave: () => (this.hoverValue = null), onTouchEnd: () => (this.hoverValue = null) }, h(\"legend\", { class: \"visually-hidden\" }, intlRating), this.renderStars()), (count || average) && showChip ? (h(\"calcite-chip\", { scale: scale, value: count === null || count === void 0 ? void 0 : count.toString() }, !!average && h(\"span\", { class: \"number--average\" }, average.toString()), !!count && h(\"span\", { class: \"number--count\" }, \"(\", count === null || count === void 0 ? void 0 :\n      count.toString(), \")\"))) : null, h(HiddenFormInputSlot, { component: this })));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  onLabelClick() {\n    this.setFocus();\n  }\n  updateValue(value) {\n    this.value = value;\n    this.calciteRatingChange.emit({ value });\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    var _a;\n    (_a = this.inputFocusRef) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  get el() { return getElement(this); }\n};\nRating.style = ratingCss;\n\nexport { Rating as calcite_rating };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nexport { isActivationKey as i, numberKeys as n };\n"],"names":["TEXT","Rating","constructor","hostRef","registerInstance","this","calciteRatingChange","createEvent","scale","value","readOnly","disabled","showChip","intlRating","intlStars","required","onKeyboardPressed","event","isActivationKey","key","preventDefault","updateValue","onFocusChange","selectedRatingValue","hasFocus","focusValue","guid","connectedCallback","connectLabel","connectForm","disconnectedCallback","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","blurHandler","renderStars","map","i","selected","average","hovered","hoverValue","fraction","partial","focused","h","class","wrapper","star","htmlFor","onPointerOver","icon","style","width","replace","checked","id","name","onChange","onClick","stopPropagation","onFocus","onKeyDown","ref","el","inputFocusRef","type","render","count","Fragment","onBlur","onPointerLeave","onTouchEnd","toString","HiddenFormInputSlot","component","onLabelClick","setFocus","emit","_a","focus","getElement","numberKeys"],"sourceRoot":""}