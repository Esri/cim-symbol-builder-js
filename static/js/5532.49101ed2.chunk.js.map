{"version":3,"file":"static/js/5532.49101ed2.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js","../node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssets.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{throwIfAborted as t}from\"../../../../core/promiseUtils.js\";import{join as o}from\"../../../../core/urlUtils.js\";import{isHostedAgolService as s}from\"../../../support/arcgisLayerUrl.js\";const r=1e6,a=20*r,n=2e9,i=3;async function p({data:p,name:c,description:l},m,d){let f=null;try{const u=o(m,\"uploads\"),h=o(u,\"info\"),{data:w}=await e(h,{query:{f:\"json\"},responseType:\"json\"});t(d);const y=s(m),j=w.maxUploadFileSize*r,g=y?n:j,q=y?Math.min(a,j):a;if(p.size>g)throw new Error(\"Data too large\");const T=o(u,\"register\"),{data:z}=await e(T,{query:{f:\"json\",itemName:c,description:l},responseType:\"json\",method:\"post\"});if(t(d),!z.success)throw new Error(\"Registration failed\");const{itemID:E}=z.item;f=o(u,E);const U=o(f,\"uploadPart\"),D=Math.ceil(p.size/q),M=new Array;for(let e=0;e<D;++e)M.push(p.slice(e*q,Math.min((e+1)*q,p.size)));const P=M.slice().reverse(),x=new Array,A=async()=>{for(;0!==P.length;){const o=M.length-P.length,s=P.pop(),r=new FormData;r.append(\"f\",\"json\"),r.append(\"file\",s),r.append(\"partId\",`${o}`);const{data:a}=await e(U,{timeout:0,body:r,responseType:\"json\",method:\"post\"});if(t(d),!a.success)throw new Error(\"Part upload failed\")}};for(let e=0;e<i&&0!==P.length;++e)x.push(A());await Promise.all(x);const F=o(f,\"commit\"),{data:I}=await e(F,{query:{f:\"json\",parts:M.map(((e,t)=>t)).join(\",\")},responseType:\"json\",method:\"post\"});if(t(d),!I.success)throw new Error(\"Commit failed\");return I.item}catch(u){if(null!=f){const t=o(f,\"delete\");await e(t,{query:{f:\"json\"},responseType:\"json\",method:\"post\"})}throw u}}export{p as uploadItem};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import t from\"../../../../core/Error.js\";import s from\"../../../../core/Logger.js\";import{throwIfAborted as r,throwIfAbortError as a,after as o}from\"../../../../core/promiseUtils.js\";import{parseData as n,join as i}from\"../../../../core/urlUtils.js\";import{generateBracedUUID as u}from\"../../../../core/uuid.js\";import{externalIsOnService as l,assetFormatId as c,ServiceAsset as p,ServiceAssetPart as f,externalSourceToMultiPart as d}from\"../../../../geometry/support/meshUtils/External.js\";import{uploadItem as m}from\"./uploads.js\";import{getFormatIdMimeType as y,getMimeTypeFormatId as w,getFilenameFormatId as h}from\"../../../support/infoFor3D.js\";async function g(e,t,s){return e.length?Promise.all(e.map((e=>T(e,t,s)))):[]}async function T(e,{layer:s,ongoingUploads:r},a){const o=r.get(e);if(o)return o;if(!P(s))throw new t(`${s.type}-layer:upload-failure`,\"Layer does not support asset uploads.\",new Error);if(b(e,s))return e;const n=E(e,s,a);r.set(e,n);try{await n}finally{r.delete(e)}return e}function b(e,t){const{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some((e=>l(e,s)))}async function E(e,t,s){const{metadata:a}=e,{displaySource:o}=a,n=x(o?.source,t),i=!!n,u=a.externalSources.length>0,l=i?$(n,t,s):u?F(e,t,s):j(e,t,s),c=await l;return r(s),e.addExternalSources([c]),e}async function $(e,t,s){return{source:await N(e,t,s),original:!0}}async function F(e,s,r){const a=B(s),{externalSources:o}=e.metadata,n=U(o,s);if(!n)throw new t(`${s.type}-layer:upload-failure`,\"Could not find an external source that is supported by the service.\",new Error);const i=await N(n,s,r);e.addExternalSources([{source:i,original:!0}]);return{source:await q(i,s,a)}}async function j(e,t,s){const r=D(e,t,s);return{source:await A([r],t,s),extent:e.extent.clone(),original:!0}}async function D(e,t,s){const a=B(t),o=await e.load(s),n=await o.toBinaryGLTF({ignoreLocalTransform:!0});r(s);const i=await n.buffer();return r(s),{blob:new Blob([i.data],{type:i.type}),assetName:`${u()}.glb`,assetType:a}}function U(e,t){for(const s of e){const e=x(s.source,t);if(e)return e}return null}function x(e,t){if(!e)return null;const{infoFor3D:{supportedFormats:s,editFormats:r}}=t,a=d(e),o=new Array;let n=!1;for(let i=0;i<a.length;++i){const e=v(a[i],s);if(!e)return null;r.includes(e.assetType)&&(n=!0),o.push(e)}return n?o:null}function v(e,t){const s=c(e,t);return s?{asset:e,assetType:s}:null}async function N(e,t,s){return A(e.map((e=>S(e,s))),t,s)}async function A(e,t,s){const a=await Promise.all(e.map((async e=>{const a=I(await e,t,s);return r(s),a})));r(s);const{uploadResults:o}=await R(a.map((({item:e})=>e)),t,s);return r(s),e.map(((e,s)=>L(a[s],o[s],t)))}async function S(e,t){const{asset:s,assetType:a}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:a};const o=await s.toBlob(t);return r(t),{blob:o,assetName:s.assetName,assetType:a}}async function I(e,o,i){const{blob:u,assetType:l,assetName:c}=e;let p=null;try{const e=await m({data:u,name:c},o.url,i);r(i),p={assetType:l,assetUploadId:e.itemID}}catch(f){a(f),s.getLogger(\"esri.layers.graphics.sources.support.uploadAssets\").warnOnce(`Service ${o.url} does not support the REST Uploads API.`)}if(!p){const e=await n(u);if(r(i),!e.isBase64)throw new t(`${o.type}-layer:uploadAssets-failure`,\"Expected gltf data in base64 format after conversion.\",new Error);p={assetType:l,assetData:e.data}}if(!p)throw new t(`${o.type}-layer:uploadAssets-failure`,\"Unable to prepare uploadAsset request options.\",new Error);return{item:p,assetName:c}}async function R(s,a,o){const n=await e(i(a.parsedUrl.path,\"uploadAssets\"),{timeout:0,query:{f:\"json\",assets:JSON.stringify(s)},method:\"post\",responseType:\"json\"});if(r(o),n.data.uploadResults.length!==s.length)throw new t(`${a.type}-layer:uploadAssets-failure`,`Bad response. Uploaded ${s.length} items and received ${n.data.uploadResults.length} results.`,new Error);return n.data}function L(e,s,r){const{success:a}=s;if(!a){const{error:a}=s;throw new t(`${r.type}-layer:upload-failure`,`Failed to upload mesh file ${e.assetName}. Error code: ${a.code}. Error message: ${a.messages}`,new Error)}const{assetHash:o}=s,{assetName:n,item:{assetType:i}}=e,{infoFor3D:{supportedFormats:u}}=r,l=y(i,u);if(!l)throw new t(`${r.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${i}, but it does not list it in its supported formats.`,new Error);return new p(n,l,[new f(`${r.parsedUrl.path}/assets/${o}`,o)])}async function q(s,r,a){const o=s.map((({assetName:e,parts:t})=>({assetName:e,assetHash:t[0].partHash}))),n=r.capabilities?.operations.supportsAsyncConvert3D,u={query:{f:\"json\",assets:JSON.stringify(o),transportType:\"esriTransportTypeUrl\",targetFormat:a,async:n},responseType:\"json\",timeout:0},l=i(r.parsedUrl.path,\"convert3D\"),c=(n?await C(l,u):await e(l,u)).data,{infoFor3D:{supportedFormats:d}}=r;return c.assets.map((e=>{const s=w(e.contentType,d);if(!s)throw new t(`${r.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${s}, but it does not list it in its supported formats.`,new Error);return new p(e.assetName,e.contentType,[new f(e.assetURL,e.assetHash)])}))}async function C(s,r){const a=(await e(s,r)).data.statusUrl;for(;;){const s=(await e(a,{query:{f:\"json\"},responseType:\"json\"})).data;switch(s.status){case\"Completed\":return e(s.resultUrl,{query:{f:\"json\"},responseType:\"json\"});case\"CompletedWithErrors\":throw new t(\"async-convert3D-failed\",\"asynchronous convert3D call failed.\");case\"Failed ImportChanges\":case\"InProgress\":case\"Pending\":case\"ExportAttachments\":case\"ExportChanges\":case\"ExportingData\":case\"ExportingSnapshot\":case\"ImportAttachments\":case\"ProvisioningReplica\":case\"UnRegisteringReplica\":break;default:throw new t(\"async-convert3D-failed\",\"asynchronous convert3D call failed (undefined response status)\")}await o(H)}}function P(e){return!!e.infoFor3D&&!!e.url}function B(e){const{infoFor3D:s}=e,r=w(\"model/gltf-binary\",s.supportedFormats)??h(\"glb\",s.supportedFormats);if(!r)throw new t(`${e.type}-layer:upload-failure`,\"Layer does not support glb.\",new Error);return r}const H=1e3;export{g as uploadAssets};\n"],"names":["r","a","async","p","m","d","data","name","c","description","l","f","u","o","h","w","e","query","responseType","t","y","s","j","maxUploadFileSize","g","q","Math","min","size","Error","T","z","itemName","method","success","itemID","E","item","U","D","ceil","M","Array","push","slice","P","reverse","x","A","length","pop","FormData","append","timeout","body","Promise","all","F","I","parts","map","join","layer","ongoingUploads","get","infoFor3D","url","type","parsedUrl","metadata","externalSources","some","b","n","displaySource","source","i","N","original","$","B","addExternalSources","load","toBinaryGLTF","ignoreLocalTransform","buffer","blob","Blob","assetName","assetType","extent","clone","set","delete","supportedFormats","editFormats","v","includes","asset","File","toBlob","S","assetUploadId","warnOnce","isBase64","assetData","uploadResults","path","assets","JSON","stringify","R","error","code","messages","assetHash","L","partHash","capabilities","operations","supportsAsyncConvert3D","transportType","targetFormat","statusUrl","status","resultUrl","H","C","contentType","assetURL"],"sourceRoot":""}