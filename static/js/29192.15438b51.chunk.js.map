{"version":3,"file":"static/js/29192.15438b51.chunk.js","mappings":";yNASA,MAAMA,EACgB,uBADhBA,EAEK,UAELC,EACO,aAKPC,GAA+BC,EAAAA,EAAAA,IAAmB,cAAcC,EAAAA,GACpEC,cACEC,QACAC,KAAKC,iBACLD,KAAKE,iBACLF,KAAKG,UAAW,EAChBH,KAAKI,YAAc,IACnBJ,KAAKK,SAAW,MAOlBC,qBACEC,EAAAA,EAAAA,GAAgCP,MAElCQ,wBACEC,EAAAA,EAAAA,GAAmCT,MAOrCU,SACE,MAAM,GAAEC,GAAOX,KACTY,GAAeC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAOrB,IAAeoB,EAAAA,EAAAA,GAAE,OAAQ,OAC1DE,GAAYC,EAAAA,EAAAA,GAAWL,EAAIjB,GAE3BuB,EAAW,CADKF,GAAaF,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAOrB,EAAwByB,IAAK,eAAgBL,EAAAA,EAAAA,GAAE,OAAQ,CAAEM,KAAMzB,KAAuB,KAC1GkB,GAIjC,MAH4B,QAAxBG,GAAWV,UACbY,EAASG,WAEJP,EAAAA,EAAAA,GAAEQ,EAAAA,GAAU,KAAMJ,GAEvBN,SAAO,OAAOX,KACPsB,mBAAU,MAvCG,kgDAwCvB,CAAC,EAAG,2BAA4B,CAC/B,SAAY,CAAC,KACb,YAAe,CAAC,IAAK,gBACrB,SAAY,CAAC,QAEjB,SAASC,IACP,GAA8B,qBAAnBC,eACT,OAEiB,CAAC,4BACTC,SAAQC,IAAa,GACzB,6BADiCA,EAE/BF,eAAeG,IAAID,IACtBF,eAAeI,OAAOF,EAAS/B,MAKvC4B,IAEA,MAAMM,EAAwBlC,EACxBmC,EAAsBP,sECtE5B,MAAMQ,EAAW,IAAIC,IACrB,IAAIC,EACJ,MAAMC,EAAkB,CAAEC,WAAW,GAWrC,SAAS5B,EAAgC6B,GAClCH,IACHA,GAAmBI,EAAAA,EAAAA,GAAe,WAAYC,IAEhDL,EAAiBM,QAAQH,EAAUzB,GAAIuB,GAYzC,SAASzB,EAAmC2B,GAC1CL,EAASS,OAAOJ,EAAUzB,IAI1B2B,EAAiBL,EAAiBQ,eAClCR,EAAiBS,aACjB,IAAK,MAAOC,KAAYZ,EAASa,UAC/BX,EAAiBM,QAAQI,EAAST,GAGtC,SAASI,EAAiBO,GACxBA,EAAUpB,SAAQ,IAAgB,IAAf,OAAEqB,GAAa,GAChCC,EAAAA,EAAAA,IAAYD,wDCpChB,SAAST,EAAeW,EAAMC,EAAUC,GACtC,IAAKC,EAAAA,GAAAA,UACH,OAEF,MAAMC,EAGR,SAAqBJ,GAEnB,MAAMK,UAAiCC,OAAOC,iBAC5CzD,YAAYmD,GACVlD,MAAMkD,GACNjD,KAAKwD,cAAgB,GACrBxD,KAAKiD,SAAWA,EAElBV,QAAQO,EAAQI,GAEd,OADAlD,KAAKwD,cAAcC,KAAK,CAAEX,SAAQI,YAC3BnD,MAAMwC,QAAQO,EAAQI,GAE/BQ,UAAUZ,GACR,MAAMa,EAAqB3D,KAAKwD,cAAcI,QAAQ7B,GAAaA,EAASe,SAAWA,IACvF9C,KAAKwD,cAAgB,GACrBxD,KAAKiD,SAASlD,MAAM0C,cAAezC,MACnCA,KAAK0C,aACLiB,EAAmBlC,SAASM,GAAa/B,KAAKuC,QAAQR,EAASe,OAAQf,EAASmB,YAGpF,MACmB,iBAATF,EACJM,OAAOO,qBACE,aAATb,EACEK,EACAC,OAAOQ,eA5BEC,CAAYf,GAC7B,OAAO,IAAII,EAASH,EAAUC","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-shell-center-row.js","../node_modules/@esri/calcite-components/dist/components/conditionalSlot.js","../node_modules/@esri/calcite-components/dist/components/observers.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { proxyCustomElement, HTMLElement, h, Fragment } from '@stencil/core/internal/client/index.js';\nimport { c as connectConditionalSlotComponent, d as disconnectConditionalSlotComponent } from './conditionalSlot.js';\nimport { g as getSlotted } from './dom.js';\n\nconst CSS = {\n  actionBarContainer: \"action-bar-container\",\n  content: \"content\",\n};\nconst SLOTS = {\n  actionBar: \"action-bar\",\n};\n\nconst shellCenterRowCss = \":host{box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{z-index:var(--calcite-app-z-index);display:flex;flex:1 1 auto;overflow:hidden;background-color:transparent}.content{margin:0px;display:flex;block-size:100%;inline-size:100%;overflow:hidden;flex:1 0 0}.action-bar-container{display:flex}:host([detached]){margin-inline:0.5rem;margin-block:0.5rem 1.5rem}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}:host([detached]){animation:in-up var(--calcite-internal-animation-timing-slow) ease-in-out;border-radius:0.25rem;border-width:0px;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([position=end]){align-self:flex-end}:host([position=start]){align-self:flex-start}:host([height-scale=s]){block-size:33.333333%}:host([height-scale=m]){block-size:70%}:host([height-scale=l]){block-size:100%}:host([height-scale=l][detached]){block-size:calc(100% - 2rem)}::slotted(calcite-panel){block-size:100%;inline-size:100%}::slotted(calcite-action-bar),::slotted(calcite-action-bar[position=end]){border-inline-end:1px solid;border-color:var(--calcite-ui-border-3)}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst ShellCenterRow = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.detached = false;\n    this.heightScale = \"s\";\n    this.position = \"end\";\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectConditionalSlotComponent(this);\n  }\n  disconnectedCallback() {\n    disconnectConditionalSlotComponent(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    const { el } = this;\n    const contentNode = (h(\"div\", { class: CSS.content }, h(\"slot\", null)));\n    const actionBar = getSlotted(el, SLOTS.actionBar);\n    const actionBarNode = actionBar ? (h(\"div\", { class: CSS.actionBarContainer, key: \"action-bar\" }, h(\"slot\", { name: SLOTS.actionBar }))) : null;\n    const children = [actionBarNode, contentNode];\n    if (actionBar?.position === \"end\") {\n      children.reverse();\n    }\n    return h(Fragment, null, children);\n  }\n  get el() { return this; }\n  static get style() { return shellCenterRowCss; }\n}, [1, \"calcite-shell-center-row\", {\n    \"detached\": [516],\n    \"heightScale\": [513, \"height-scale\"],\n    \"position\": [513]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-shell-center-row\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-shell-center-row\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, ShellCenterRow);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteShellCenterRow = ShellCenterRow;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteShellCenterRow, defineCustomElement };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { forceUpdate } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\n\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = { childList: true };\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n  mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n  observed.delete(component.el);\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\nfunction processMutations(mutations) {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n\nexport { createObserver as c };\n"],"names":["CSS","SLOTS","ShellCenterRow","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","detached","heightScale","position","connectedCallback","connectConditionalSlotComponent","disconnectedCallback","disconnectConditionalSlotComponent","render","el","contentNode","h","class","actionBar","getSlotted","children","key","name","reverse","Fragment","style","defineCustomElement$1","customElements","forEach","tagName","get","define","CalciteShellCenterRow","defineCustomElement","observed","Set","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","delete","takeRecords","disconnect","element","entries","mutations","target","forceUpdate","type","callback","options","Build","Observer","ExtendedMutationObserver","window","MutationObserver","observedEntry","push","unobserve","newObservedEntries","filter","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}