"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[5294],{5294:(e,t,r)=>{r.r(t),r.d(t,{default:()=>B});r(35238);var s,o=r(64681),i=r(66486),n=r(37267),l=r(52494),a=r(81633),c=r(59844),m=r(86866),f=r(99846),u=r(26855),p=r(35143),S=(r(76460),r(81806),r(47249),r(50076),r(6409)),y=r(85842),d=r(75116);let h=s=class extends d.A{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,p._)([(0,S.e)({IdentityXform:"identity"})],h.prototype,"type",void 0),h=s=(0,p._)([(0,y.$)("esri.layers.support.rasterTransforms.IdentityTransform")],h);const x=h;var O=r(29754);const J={GCSShiftXform:u.A,IdentityXform:x,PolynomialXform:O.A};Object.keys(J);function N(e){const t=e?.type;if(!t)return null;const r=J[e?.type];if(r){const t=new r;return t.read(e),t}return null}var k=r(20118),A=r(46533),b=r(76797),v=r(19247);class B{convertVectorFieldData(e){const t=i.A.fromJSON(e.pixelBlock),r=(0,f.FI)(t,e.type);return Promise.resolve(null!=r?r.toJSON():null)}computeStatisticsHistograms(e){const t=i.A.fromJSON(e.pixelBlock),r=(0,m.eH)(t);return Promise.resolve(r)}async decode(e){const t=await(0,n.D)(e.data,e.options);return t&&t.toJSON()}symbolize(e){e.pixelBlock=i.A.fromJSON(e.pixelBlock),e.extent=e.extent?b.A.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(e){this.symbolizer=k.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,a.vt)(e.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:b.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?i.A.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?v.A.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=t?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(i.A.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(e){const t=(0,m.f4)(i.A.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=(0,l.lD)(i.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear);return t&&t.forEach(((e,r)=>{t.set(r,e?.toJSON())})),Promise.resolve(t)}clipTile(e){const t=i.A.fromJSON(e.pixelBlock),r=(0,l.J$)({...e,pixelBlock:t});return Promise.resolve(r?.toJSON())}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new i.A(e):null)),r=(0,l.z7)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,o=r;return e.coefs&&(o=(0,l.$i)(r,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,l.QF)(e.destDimension,e.gcsGrid),o=(0,f.Y2)(o,e.isUV?"vector-uv":"vector-magdir",s)),{pixelBlock:o?.toJSON(),localNorthDirections:s}}async createFlowMesh(e,t){const r={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:o}=await(0,A.CW)(e.meshType,e.simulationSettings,r,t.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=b.A.fromJSON(e.projectedExtent),r=b.A.fromJSON(e.srcBufferExtent);let s=null;e.datumTransformationSteps&&(s=new o.A({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,c.xh)(t.spatialReference,r.spatialReference,s))&&await(0,c.Hh)();const i=e.rasterTransform?N(e.rasterTransform):null;return(0,c.l0)({...e,projectedExtent:t,srcBufferExtent:r,datumTransformation:s,rasterTransform:i})}}}}]);
//# sourceMappingURL=5294.37470ccf.chunk.js.map