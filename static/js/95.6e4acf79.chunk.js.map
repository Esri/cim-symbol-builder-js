{"version":3,"sources":["../node_modules/@esri/calcite-components/dist/esm-es5/observers-46118290.js","../node_modules/@esri/calcite-components/dist/esm-es5/conditionalSlot-67f579ff.js"],"names":["createObserver","e","r","t","window","IntersectionObserver","MutationObserver","ResizeObserver","getObserver","mutationObserver","observed","Set","observerOptions","childList","connectConditionalSlotComponent","processMutations","observe","el","disconnectConditionalSlotComponent","delete","takeRecords","disconnect","o","entries","length","forEach","target","forceUpdate"],"mappings":";6GAIA,SAASA,EAAeC,EAAEC,EAAEC,GAAwB,OAAO,IAAW,SAAqBF,GAAG,MAAW,iBAAJA,EAAmBG,OAAOC,qBAAyB,aAAJJ,EAAeG,OAAOE,iBAAiBF,OAAOG,eAA7JC,CAAYP,GAAU,CAAMC,EAAEC,GAJnE,0C,iCCAA,+EAIoIM,EAJpI,kBAI+GC,EAAS,IAAIC,IAA6BC,EAAgB,CAACC,WAAU,GAAM,SAASC,EAAgCb,GAAOQ,IAAkBA,EAAiBT,YAAe,WAAWe,IAAkBN,EAAiBO,QAAQf,EAAEgB,GAAGL,GAAiB,SAASM,EAAmCjB,GAAGS,EAASS,OAAOlB,EAAEgB,IAAIF,EAAiBN,EAAiBW,eAAeX,EAAiBY,aAAa,IAAI,IAAIC,EAAE,EAAEnB,EAAEO,EAASa,UAAUD,EAAEnB,EAAEqB,OAAOF,IAAI,CAAC,IAAIpB,EAAEC,EAAEmB,GAAG,GAAGb,EAAiBO,QAAQd,EAAEU,IAAkB,SAASG,EAAiBd,GAAGA,EAAEwB,SAAS,SAASxB,GAAG,IAAIqB,EAAErB,EAAEyB,OAAOC,YAAYL","file":"static/js/95.6e4acf79.chunk.js","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nfunction createObserver(e,r,t){var n=getObserver(e);return new n(r,t)}function getObserver(e){return e===\"intersection\"?window.IntersectionObserver:e===\"mutation\"?window.MutationObserver:window.ResizeObserver}export{createObserver as c};","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nimport{f as forceUpdate}from\"./index-bd94948c.js\";import{c as createObserver}from\"./observers-46118290.js\";var observed=new Set;var mutationObserver;var observerOptions={childList:true};function connectConditionalSlotComponent(e){if(!mutationObserver){mutationObserver=createObserver(\"mutation\",processMutations)}mutationObserver.observe(e.el,observerOptions)}function disconnectConditionalSlotComponent(e){observed.delete(e.el);processMutations(mutationObserver.takeRecords());mutationObserver.disconnect();for(var o=0,t=observed.entries();o<t.length;o++){var r=t[o][0];mutationObserver.observe(r,observerOptions)}}function processMutations(e){e.forEach((function(e){var o=e.target;forceUpdate(o)}))}export{connectConditionalSlotComponent as c,disconnectConditionalSlotComponent as d};"],"sourceRoot":""}