"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[39652],{39652:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ut});var r=i(27366),n=i(44055),s=i(11582),a=i(10064),o=i(97642),l=i(66978),u=i(49861),p=i(25243),c=(i(63780),i(93169),i(69912)),m=i(31201),d=i(30651),y=i(59486),h=i(52639),g=i(45918),f=i(76200),b=i(44927),R=i(84652),v=i(32718),w=i(94172),_=i(35995),S=i(38511),x=i(92975),C=i(45948),F=i(86591),I=i(46784),D=i(41625),T=i(92089);const N={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var P=i(22850),O=i(81607),j=i(17590);const V=new Set(["u1","u2","u4","u8","s8","u16","s16"]),A={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Z=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function J(e){return Z.has(e.type)}function M(e,t){if(!e||!t)return(0,R.d9)(e||t);const i=(0,R.d9)(e);if(i.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),E(i.functionDefinition.arguments,t),i.rasterFunctionDefinition=i.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(G(i.functionArguments).Raster=t);return i}function E(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&E(e[i].arguments,t))}function q(e){const t=(0,R.d9)(N[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=q(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=Q(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function z(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,r=new D.Z;r.functionName="Stretch";const n=L[O.v.toJSON(e.stretchType)],s="u8",a={StretchType:n,Statistics:B(e.statistics??[]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),n===L.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):n===L.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,r.outputPixelType=s):n===L.minMax?r.outputPixelType=s:n===L.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=a,r.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new D.Z;if(i)s.functionArguments={ColorRamp:(0,P.pM)(n)};else{const i=(0,P.Uh)(n,!0);if(i)s.functionArguments={colorRampName:i};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,P.Jw)(n)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=r,i?new D.Z({rasterFunctionDefinition:q(s)}):s}return i?new D.Z({rasterFunctionDefinition:q(r)}):r}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],n=[],s=[],a=1e-4,{pixelType:o,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=U(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol?.color;let n;r?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach((a=>{null!=t.minValue&&null!=t.maxValue&&(n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||i===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[p],r.r,r.g,r.b]))}))}));const i=o?H(s,o):s,r=new D.Z;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new D.Z({rasterFunctionDefinition:q(r)}):r}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const o=e.symbol&&e.symbol.color;o?.a?(0===t?i.push(e.minValue,e.maxValue+a):i.push(e.minValue+a,e.maxValue+a),r.push(t),s.push([t,o.r,o.g,o.b])):n.push(e.minValue,e.maxValue)}));const c=o?H(s,o):s,m=new D.Z;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},m.variableName="Raster";const d=new D.Z;return d.functionName="Colormap",d.functionArguments={Colormap:c,Raster:m},t.convertToRFT?new D.Z({rasterFunctionDefinition:q(d)}):d}(e,t);case"unique-value":return function(e,t){const i=[],{pixelType:r,rasterAttributeTable:n}=t,s=null==n?null:n.features,a=U(n),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(s){if(a){const t=new Map;l.forEach((e=>{const i=e.value,r=e.symbol?.color;null!=i&&r?.a&&t.set(String(i),r.toRgb())}));const r=e.field;s.forEach((e=>{let{attributes:n}=e;const s=String(n[r]),l=n[a],u=t.get(s);u?i.push([l,...u]):o&&i.push([l,...o])}))}}else for(let c=0;c<l.length;c++){const e=l[c],t=e.symbol?.color,r=+e.value;if(t?.a){if(isNaN(r))return null;i.push([r,t.r,t.g,t.b])}}const u=r?H(i,r):i,p=new D.Z;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new D.Z({rasterFunctionDefinition:q(p)}):p}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,n=r?H(i,r):i,s=new D.Z;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new D.Z({rasterFunctionDefinition:q(s)}):s}(e,t);case"vector-field":return function(e,t){const i=new D.Z;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:n}=t,s="vector-uv"===r;let a,o;if(n&&2===n.length){const e=n.map((e=>e.toLowerCase()));a=e.indexOf("magnitude"),o=e.indexOf("direction")}-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new j.Z,c={magnitudeBandID:a,directionBandID:o,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:A[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const m=q(i);return t.convertToRFT?D.Z.fromJSON({rasterFunctionDefinition:m}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new D.Z;const r=new D.Z;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,a={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===s&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),r.functionArguments=a,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?a.ColorRamp=(0,P.pM)(e.colorRamp):a.Colormap=(0,P.Jw)(e.colorRamp)),i?new D.Z({rasterFunctionDefinition:q(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function G(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?G(t.functionArguments):e}const L={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function H(e,t){const i=V.has(t)?(0,T.r)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function U(e){if(null==e)return;const{fields:t}=e,i=t?.find((e=>e?.name&&"value"===e.name.toLowerCase()));return i?.name}function B(e){const t=[];return e?.forEach((e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}})),t}function Q(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,P.oI)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var k=i(78377),$=i(60117);let W=class extends I.wq{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new k.Z({where:i})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const i=e.pixelFilter,r=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const n=e.multidimensionalSubset?.areaOfInterest;return n&&(t=this._addClipFunction(t,n)),r&&!i&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:i,renderer:r}=t;return e=e||t.rasterFunction,r&&J(r)?M(z(r,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandNames:i.bandInfos.map((e=>{let{name:t}=e;return t})),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:i.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=this.layer.serviceRasterInfo.pixelSize;let r=new D.Z({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:i}});return r=e?.rasterFunctionDefinition?new D.Z({rasterFunctionDefinition:q(r)}):r,M(r,e)}_addClipFunction(e,t){return M(new D.Z({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}};(0,r._)([(0,u.Cb)()],W.prototype,"layer",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"adjustAspectRatio",null),(0,r._)([(0,m.c)("adjustAspectRatio")],W.prototype,"writeAdjustAspectRatio",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"bandIds",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"compression",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"compressionQuality",null),(0,r._)([(0,m.c)("compressionQuality")],W.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"compressionTolerance",null),(0,r._)([(0,m.c)("compressionTolerance")],W.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"format",null),(0,r._)([(0,u.Cb)({type:String,json:{read:{reader:$.cl.read},write:{writer:$.cl.write}}})],W.prototype,"interpolation",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"noData",null),(0,r._)([(0,u.Cb)({type:String,json:{read:{reader:$.kQ.read},write:{writer:$.kQ.write}}})],W.prototype,"noDataInterpretation",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"pixelType",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"lercVersion",void 0),(0,r._)([(0,m.c)("lercVersion")],W.prototype,"writeLercVersion",null),(0,r._)([(0,u.Cb)({type:Number})],W.prototype,"version",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],W.prototype,"mosaicRule",null),(0,r._)([(0,u.Cb)({json:{write:!0,name:"renderingRule"}})],W.prototype,"rasterFunction",null),W=(0,r._)([(0,c.j)("esri.layers.mixins.ExportImageServiceParameters")],W);var X=i(83040),K=i(52410),Y=i(83690),ee=i(22678),te=i(96212),ie=i(53737),re=i(79586),ne=i(21969),se=i(45502),ae=i(64145),oe=i(73425),le=i(43238),ue=i(91340),pe=i(23084),ce=i(78952);let me=class extends I.wq{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],me.prototype,"north",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],me.prototype,"up",void 0),(0,r._)([(0,u.Cb)({type:ce.Z,json:{write:!0}})],me.prototype,"spatialReference",void 0),me=(0,r._)([(0,c.j)("esri.rest.support.ImageAngleResult")],me);const de=me;var ye=i(68860);let he=class extends I.wq{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,r._)([(0,u.Cb)({type:Number,json:{read:!0,write:!0}})],he.prototype,"value",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],he.prototype,"displayValue",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{read:!0,write:!0}})],he.prototype,"uncertainty",void 0),he=(0,r._)([(0,c.j)("esri.rest.support.ImageMeasureResultValue")],he);let ge=class extends he{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:ye.Jo.read,write:ye.Jo.write}})],ge.prototype,"unit",void 0),ge=(0,r._)([(0,c.j)("esri.rest.support.ImageMeasureResultLengthValue")],ge);let fe=class extends he{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:ye.gV.read,write:ye.gV.write}})],fe.prototype,"unit",void 0),fe=(0,r._)([(0,c.j)("esri.rest.support.ImageMeasureResultAreaValue")],fe);let be=class extends he{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:ye.CN.read,write:ye.CN.write}})],be.prototype,"unit",void 0),be=(0,r._)([(0,c.j)("esri.rest.support.ImageMeasureResultAngleValue")],be);let Re=class extends I.wq{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=(0,r._)([(0,c.j)("esri.rest.support.BaseImageMeasureResult")],Re);let ve=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,r._)([(0,u.Cb)({type:fe,json:{read:!0,write:!0}})],ve.prototype,"area",void 0),(0,r._)([(0,u.Cb)({type:ge,json:{read:!0,write:!0}})],ve.prototype,"perimeter",void 0),ve=(0,r._)([(0,c.j)("esri.rest.support.ImageAreaResult")],ve);const we=ve;let _e=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,r._)([(0,u.Cb)({type:ge,json:{read:!0,write:!0}})],_e.prototype,"distance",void 0),(0,r._)([(0,u.Cb)({type:be,json:{read:!0,write:!0}})],_e.prototype,"azimuthAngle",void 0),(0,r._)([(0,u.Cb)({type:be,json:{read:!0,write:!0}})],_e.prototype,"elevationAngle",void 0),_e=(0,r._)([(0,c.j)("esri.rest.support.ImageDistanceResult")],_e);const Se=_e;let xe=class extends Re{constructor(){super(...arguments),this.height=null}};(0,r._)([(0,u.Cb)({type:ge,json:{read:!0,write:!0}})],xe.prototype,"height",void 0),xe=(0,r._)([(0,c.j)("esri.rest.support.ImageHeightResult")],xe);const Ce=xe;var Fe=i(585),Ie=i(49818);let De=class extends I.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"catalogItemVisibilities",void 0),(0,r._)([(0,u.Cb)({type:Ie.Z,json:{write:!0}})],De.prototype,"catalogItems",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],De.prototype,"location",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"name",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"objectId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"processedValues",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"properties",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"value",void 0),De=(0,r._)([(0,c.j)("esri.rest.support.ImageIdentifyResult")],De);const Te=De;let Ne=class extends I.wq{constructor(){super(...arguments),this.geometries=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],Ne.prototype,"geometries",void 0),Ne=(0,r._)([(0,c.j)("esri.rest.support.ImagePixelLocationResult")],Ne);const Pe=Ne;let Oe=class extends Re{constructor(){super(...arguments),this.point=null}};(0,r._)([(0,u.Cb)({type:Fe.Z,json:{name:"point.value",read:!0,write:!0}})],Oe.prototype,"point",void 0),Oe=(0,r._)([(0,c.j)("esri.rest.support.ImagePointResult")],Oe);const je=Oe;let Ve=class extends I.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"attributes",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],Ve.prototype,"location",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"locationId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"rasterId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"resolution",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"pixelValue",void 0),Ve=(0,r._)([(0,c.j)("esri.rest.support.ImageSample")],Ve);const Ae=Ve;let Ze=class extends I.wq{constructor(){super(...arguments),this.samples=null}};(0,r._)([(0,u.Cb)({type:[Ae],json:{write:!0}})],Ze.prototype,"samples",void 0),Ze=(0,r._)([(0,c.j)("esri.rest.support.ImageSampleResult")],Ze);const Je=Ze;function Me(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ee(e,t,i){const r=(0,pe.en)(e),n=t.geometry?[t.geometry]:[],s=await(0,ue.aX)(n),a=t.toJSON();Me(a);const o=s?.[0];null!=o&&(a.geometry=o.toJSON());const l=(0,pe.cv)({...r.query,f:"json",...a});return(0,pe.lA)(l,i)}async function qe(e,t,i){const r=(0,pe.en)(e),n=t.geometry?[t.geometry]:[];return(0,ue.aX)(n).then((e=>{const n=t.toJSON(),s=e?.[0];null!=s&&(n.geometry=JSON.stringify(s.toJSON()));const a=(0,pe.cv)({...r.query,f:"json",...n}),o=(0,pe.lA)(a,i);return(0,f.Z)(r.path+"/identify",o)})).then((e=>Te.fromJSON(e.data)))}async function ze(e,t,i,r){const n=(0,pe.en)(e),s=await(0,ue.aX)(i),a=t.toJSON();null!=s[0]&&(a.fromGeometry=JSON.stringify(Ge(s[0]))),null!=s[1]&&(a.toGeometry=JSON.stringify(Ge(s[1])));const o=(0,pe.cv)({...n.query,f:"json",...a}),l=(0,pe.lA)(o,r),{data:u}=await(0,f.Z)(n.path+"/measure",l);return u}function Ge(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=Le(e.spatialReference)),t}function Le(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function He(e,t){if(!e.imageCoordinateSystem)return(0,x.B9)(e);const i=Le(e),{icsid:r,icsns:n}=i;return null==r||null!=n&&!t?.toLowerCase().includes("/"+n.toLowerCase()+"/")?JSON.stringify(i):`0:${r}`}i(64020);var Ue,Be=i(77946),Qe=(i(42265),i(19545),i(83448),i(83406),i(53866)),ke=(i(32238),i(77577)),$e=i(80885),We=(i(29909),i(78084),i(86638)),Xe=(i(11812),i(99837),i(34211)),Ke=i(24246),Ye=(i(99086),i(54307),i(38045)),et=i(32014);let tt=Ue=class extends I.wq{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ue((0,R.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,r._)([(0,u.Cb)({type:[String],json:{name:"angleName",write:!0}})],tt.prototype,"angleNames",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],tt.prototype,"point",void 0),(0,r._)([(0,u.Cb)({type:ce.Z,json:{write:!0}})],tt.prototype,"spatialReference",void 0),(0,r._)([(0,u.Cb)({type:p.z8,json:{write:!0}})],tt.prototype,"rasterId",void 0),tt=Ue=(0,r._)([(0,c.j)("esri.rest.support.ImageAngleParameters")],tt);const it=tt;var rt=i(77981);const nt=new(i(43404).X)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let st=class extends I.wq{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var at;(0,r._)([(0,u.Cb)()],st.prototype,"type",void 0),(0,r._)([(0,u.Cb)({type:nt.apiValues,json:{read:nt.read,write:nt.write}})],st.prototype,"measureOperation",void 0),(0,r._)([(0,u.Cb)({type:k.Z,json:{write:!0}})],st.prototype,"mosaicRule",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],st.prototype,"pixelSize",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],st.prototype,"raster",void 0),st=(0,r._)([(0,c.j)("esri.rest.support.BaseImageMeasureParameters")],st);let ot=at=class extends st{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new at((0,R.d9)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"fromGeometry",read:!0,write:!0}})],ot.prototype,"geometry",void 0),(0,r._)([(0,m.c)("geometry")],ot.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:nt.apiValues,json:{write:nt.write}})],ot.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],ot.prototype,"is3D",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:ye.Jo.read,write:ye.Jo.write}})],ot.prototype,"linearUnit",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:ye.gV.read,write:ye.gV.write}})],ot.prototype,"areaUnit",void 0),ot=at=(0,r._)([(0,c.j)("esri.rest.support.ImageAreaParameters")],ot);const lt=ot;var ut;let pt=ut=class extends st{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new ut((0,R.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({type:Fe.Z,json:{read:!0,write:!0}})],pt.prototype,"fromGeometry",void 0),(0,r._)([(0,m.c)("fromGeometry")],pt.prototype,"writeFromGeometry",null),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{read:!0,write:!0}})],pt.prototype,"toGeometry",void 0),(0,r._)([(0,u.Cb)({type:nt.apiValues,json:{write:nt.write}})],pt.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],pt.prototype,"is3D",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:ye.Jo.read,write:ye.Jo.write}})],pt.prototype,"linearUnit",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:ye.CN.read,write:ye.CN.write}})],pt.prototype,"angularUnit",void 0),pt=ut=(0,r._)([(0,c.j)("esri.rest.support.ImageDistanceParameters")],pt);const ct=pt;var mt;let dt=mt=class extends st{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new mt((0,R.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({type:Fe.Z,json:{read:!0}})],dt.prototype,"fromGeometry",void 0),(0,r._)([(0,m.c)("fromGeometry")],dt.prototype,"writeFromGeometry",null),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{read:!0,write:!0}})],dt.prototype,"toGeometry",void 0),(0,r._)([(0,u.Cb)({type:nt.apiValues,json:{write:nt.write}})],dt.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],dt.prototype,"operationType",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:ye.Jo.read,write:ye.Jo.write}})],dt.prototype,"linearUnit",void 0),dt=mt=(0,r._)([(0,c.j)("esri.rest.support.ImageHeightParameters")],dt);const yt=dt;var ht,gt=i(50254),ft=i(62044);let bt=ht=class extends I.wq{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=k.Z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}get renderingRule(){return(0,b.Mr)(v.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){(0,b.Mr)(v.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}get renderingRules(){return(0,b.Mr)(v.Z.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(e){(0,b.Mr)(v.Z.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=D.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=n?`${r},${n}`:`${r}`:null}}clone(){return new ht((0,R.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"geometry",void 0),(0,r._)([(0,m.c)("geometry")],bt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:k.Z,json:{write:!0}})],bt.prototype,"mosaicRule",null),(0,r._)([(0,m.c)("mosaicRule")],bt.prototype,"writeMosaicRule",null),(0,r._)([(0,u.Cb)({type:D.Z})],bt.prototype,"renderingRule",null),(0,r._)([(0,u.Cb)({type:[D.Z]})],bt.prototype,"renderingRules",null),(0,r._)([(0,u.Cb)({type:D.Z,json:{write:!0,name:"renderingRule"}})],bt.prototype,"rasterFunction",null),(0,r._)([(0,m.c)("rasterFunction")],bt.prototype,"writeRasterFunction",null),(0,r._)([(0,u.Cb)({type:[D.Z],json:{write:!0,name:"renderingRules"}})],bt.prototype,"rasterFunctions",void 0),(0,r._)([(0,m.c)("rasterFunctions")],bt.prototype,"writeRasterFunctions",null),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],bt.prototype,"pixelSize",void 0),(0,r._)([(0,m.c)("pixelSize")],bt.prototype,"writePixelSize",null),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnGeometry",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnCatalogItems",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnPixelValues",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],bt.prototype,"maxItemCount",void 0),(0,r._)([(0,u.Cb)({type:ft.Z,json:{write:{target:"time"}}})],bt.prototype,"timeExtent",void 0),(0,r._)([(0,m.c)("timeExtent")],bt.prototype,"writeTimeExtent",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"viewId",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"processAsMultidimensional",void 0),bt=ht=(0,r._)([(0,c.j)("esri.rest.support.ImageIdentifyParameters")],bt);const Rt=bt;var vt;let wt=vt=class extends I.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new vt({geometries:this.geometries?.map((e=>e.clone()))??[],rasterId:this.rasterId})}};(0,r._)([(0,u.Cb)({type:[Fe.Z],json:{write:!0}})],wt.prototype,"geometries",void 0),(0,r._)([(0,m.c)("geometries")],wt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:p.z8,json:{write:!0}})],wt.prototype,"rasterId",void 0),wt=vt=(0,r._)([(0,c.j)("esri.rest.support.ImagePixelLocationParameters")],wt);const _t=wt;var St;let xt=St=class extends st{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new St((0,R.d9)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"fromGeometry",read:rt.im}})],xt.prototype,"geometry",void 0),(0,r._)([(0,m.c)("geometry")],xt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:nt.apiValues,json:{read:nt.read,write:nt.write}})],xt.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],xt.prototype,"is3D",void 0),xt=St=(0,r._)([(0,c.j)("esri.rest.support.ImagePointParameters")],xt);const Ct=xt;var Ft;let It=Ft=class extends I.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,rt.Ji)(e),t[i]=e.toJSON())}set locations(e){if(e?.length){const t=new ke.Z({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new Ft((0,R.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{read:rt.im}})],It.prototype,"geometry",void 0),(0,r._)([(0,m.c)("geometry")],It.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)()],It.prototype,"locations",null),(0,r._)([(0,u.Cb)({type:String,json:{type:$.cl.jsonValues,read:$.cl.read,write:$.cl.write}})],It.prototype,"interpolation",void 0),(0,r._)([(0,u.Cb)({type:k.Z,json:{write:!0}})],It.prototype,"mosaicRule",void 0),(0,r._)([(0,u.Cb)({type:[String],json:{write:!0}})],It.prototype,"outFields",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],It.prototype,"pixelSize",void 0),(0,r._)([(0,u.Cb)({type:String,json:{write:!0}})],It.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],It.prototype,"returnFirstValueOnly",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],It.prototype,"sampleDistance",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],It.prototype,"sampleCount",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],It.prototype,"sliceId",void 0),(0,r._)([(0,u.Cb)({type:ft.Z,json:{read:{source:"time"},write:{target:"time"}}})],It.prototype,"timeExtent",void 0),It=Ft=(0,r._)([(0,c.j)("esri.rest.support.ImageSampleParameters")],It);const Dt=It;var Tt=i(55185);const Nt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Pt=(0,u.Eg)(p.q9,{min:0,max:255});const Ot=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new W({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.Z.fromJSON(t):null}get fieldsIndex(){return this.fields?new K.Z(this.fields):null}set format(e){e&&Nt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=k.Z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?k.Z.fromJSON(i):this._isMosaicRuleSupported(t)?k.Z.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const n=this.definitionExpression;r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new k.Z({where:n})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Pt(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i?.name}return e}get parsedUrl(){return(0,_.mN)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,n=(0,g.ij)(r,i);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!r.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),J(n)||v.Z.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,t=new X.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new X.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new X.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,R.d9)(this.fields):[];n.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(r),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new X.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(n.push(new X.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new X.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:s}=this.rasterInfo??{};if(null!=s){const t=s.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const i=(0,R.d9)(t);return i.name=e+t.name,i}));n=n.concat(t)}return n}get renderingRule(){return(0,b.Mr)(v.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){(0,b.Mr)(v.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=D.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?D.Z.fromJSON({rasterFunctionDefinition:t.renderingRule}):D.Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?ce.Z.fromJSON(i):null}readPixelType(e){return $.sM.fromJSON(e)||e}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=$.sM.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:n,pixelFilter:s,bandIds:a}=this;if(!this._isPicture()&&r&&n&&!s){const s=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),o=this._rasterJobHandler.instance;if(o){s&&(n.bind(),await o.updateSymbolizer(n,t),this._cachedRendererJson=r.toJSON());const l=await o.symbolize({bandIds:a,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:n.symbolize({bandIds:a,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new a.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,p.TJ)(it,e).clone(),async function(e,t,i){const r=t.toJSON();null!=r.angleName&&(r.angleName=r.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(r.point.spatialReference=Le(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(r.spatialReference=He(t.spatialReference));const n=(0,pe.en)(e),s=(0,pe.cv)({...n.query,f:"json",...r}),a=(0,pe.lA)(s,i),{data:o}=await(0,f.Z)(`${n.path}/computeAngles`,a);return o.spatialReference=o.spatialReference?null!=o.spatialReference.geodataXform?new ce.Z({wkid:0,imageCoordinateSystem:o.spatialReference}):ce.Z.fromJSON(o.spatialReference):null,"NaN"===o.north&&(o.north=null),"NaN"===o.up&&(o.up=null),new de(o)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new a.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,p.TJ)(_t,e).clone(),async function(e,t,i){const r=t.toJSON(),{geometries:n}=t;if(n)for(let u=0;u<n.length;u++)n[u].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[u].spatialReference=Le(n[u].spatialReference));const s=(0,pe.en)(e),a=(0,pe.cv)({...s.query,f:"json",...r}),o=(0,pe.lA)(a,i),{data:l}=await(0,f.Z)(`${s.path}/computePixelLocation`,o);return Pe.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new a.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,p.TJ)(gt.Z,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ee(e,t,i),n=(0,pe.en)(e),{data:s}=await(0,f.Z)(`${n.path}/computeHistograms`,r);return{histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new a.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,p.TJ)(gt.Z,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ee(e,t,i),n=(0,pe.en)(e),{data:s}=await(0,f.Z)(`${n.path}/computeStatisticsHistograms`,r),{statistics:a}=s;return a?.length&&a.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a,histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new a.Z("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,p.TJ)(yt,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ze(e,t,[t.fromGeometry,t.toGeometry],i);return Ce.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new a.Z("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,p.TJ)(lt,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ze(e,t,[t.geometry],i);return we.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new a.Z("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,p.TJ)(ct,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ze(e,t,[t.fromGeometry,t.toGeometry],i);return Se.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new a.Z("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,p.TJ)(Ct,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ze(e,t,[t.geometry],i);return je.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==r)throw new a.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:n.signal});e&&(this.rasterInfo=e)}const s=this.getExportImageServiceParameters(e,t,r,n.timeExtent);if(null==s){if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,n.returnImageBitmap?{imageBitmap:await(0,Y.g)(e,`${i(this.parsedUrl)}/exportImage`,n.signal)}:{imageOrCanvasElement:e}}const{bandIds:s,rasterInfo:a}=this,o=(s?.length||a.bandCount)??0,l=t*r,u=a.pixelType,p=[];for(let e=0;e<o;e++)p.push(te.Z.createEmptyBand(u,l));return{pixelData:{pixelBlock:new te.Z({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const o=!!n.requestAsImageElement&&!this.pixelFilter,l=o&&!!n.returnImageBitmap,u={imageServiceParameters:s,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:o,returnImageBitmap:l,signal:n.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return(0,f.Z)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,f.Z)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>Ie.Z.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,i){const r=(0,pe.en)(e),n=(0,pe.cv)({...r?.query,f:"json"}),s=(0,pe.lA)(n,i),a=`${r?.path}/${t}/info`,o=(0,f.Z)(`${a}`,s),l=(0,f.Z)(`${a}/keyProperties`,s),u=await Promise.allSettled([o,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let m=null;p.statistics?.length&&(m=p.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const d=Qe.Z.fromJSON(p.extent),y=Math.ceil(d.width/p.pixelSizeX-.1),h=Math.ceil(d.height/p.pixelSizeY-.1),g=d.spatialReference,b=new Fe.Z({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:g}),R=p.histograms?.length?p.histograms:null,v=new et.Z({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new ie.Z({width:y,height:h,bandCount:p.bandCount,extent:d,spatialReference:g,pixelSize:b,pixelType:p.pixelType.toLowerCase(),statistics:m,histograms:R,keyProperties:c,storageInfo:v})}(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,f.Z)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),n=r?.ics;if(!n)return;let s=null;try{s=(await(0,f.Z)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:n,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?(0,f.Z)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=s.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:(0,x.B9)(o),outSR:"0:"+e},u=(0,f.Z)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=(s.xmin+s.xmax)/2,c=(s.ymax-s.ymin)/6,m=s.ymin+c,d=[];for(let i=0;i<5;i++)d.push({x:p,y:m+c*i});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,x.B9)(o),outSR:"0:"+e},h=(0,f.Z)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([a,u,h]);let b=g[0].ipxf;if(null==b){const e=n.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=Qe.Z.fromJSON(g[1]?.geometries?.[0]);R&&(R.spatialReference=new ce.Z({wkid:0,imageCoordinateSystem:n}));const v=g[2].geometries?g[2].geometries.filter((e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],w=v.length;if(w<3)return{ics:n,icsToPixelTransform:b,icsExtent:R,northDirection:null};let _=0,S=0,C=0,F=0;for(let i=0;i<w;i++)_+=v[i].x,S+=v[i].y,C+=v[i].x*v[i].x,F+=v[i].x*v[i].y;const I=(w*F-_*S)/(w*C-_*_);let D=0;const T=v[4].x>v[0].x,N=v[4].y>v[0].y;return I===1/0?D=N?90:270:0===I?D=T?0:180:I>0?D=T?180*Math.atan(I)/Math.PI:180*Math.atan(I)/Math.PI+180:I<0&&(D=N?180+180*Math.atan(I)/Math.PI:360+180*Math.atan(I)/Math.PI),{ics:n,icsToPixelTransform:b,icsExtent:R,northDirection:D}}async generateRasterInfo(e,t){if(e=(0,p.TJ)(D.Z,e),this.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}(e);if(!r)throw new a.Z("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const n={...t,query:this._getQueryParams()},s=(0,Ye.Nb)(i(this.parsedUrl),e,n);this._functionRasterInfos[r]=s;try{return await s}catch(fe){throw this._functionRasterInfos[r]=null,fe}}getExportImageServiceParameters(e,t,r,n){const s=He((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=a;let{renderingRule:u}=a;const p=this.rasterFunction?.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;a.bandIds=void 0}else a.bandIds=o?.join(",");l instanceof Array&&l.length>0&&(a.noData=l.join(","));const m=this._processMultidimensionalIntersection(null,n,this.exportImageServiceParameters.mosaicRule);if(m.isOutSide)return null;a.mosaicRule=null!=m.mosaicRule?JSON.stringify(m.mosaicRule):null,n=m.timeExtent,a.renderingRule=this._getRenderingRuleString(D.Z.fromJSON(u));const d={};if(null!=n){const{start:e,end:t}=n.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...a,...d}}async getSamples(e,t){if(!(await this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new a.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,p.TJ)(Dt,e).clone();const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),async function(e,t,i){const r=t.toJSON();Me(r),r.outFields?.length&&(r.outFields=r.outFields.join(","));const n=(await(0,ue.aX)(t.geometry))?.[0];null!=n&&(r.geometry=n.toJSON());const s=(0,pe.en)(e),a=(0,pe.cv)({...s.query,f:"json",...r}),o=(0,pe.lA)(a,i),{data:l}=await(0,f.Z)(`${s.path}/getSamples`,o),u=l?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return Je.fromJSON({samples:u})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new a.Z("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,p.TJ)(Rt,e).clone(),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=$e.Z.fromExtent(e.geometry));const i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new a.Z("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;const{raster:r,rasterFunction:n}=this;return n&&null==e.rasterFunction&&(e.rasterFunction=n),r&&null==e.raster&&(e.raster=r),qe(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new We.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Be.e)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Ke.G)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Xe.P)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new a.Z("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p="raster.servicepixelvalue",c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(o=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new D.Z({functionName:e[0]}))),u=t.map((e=>e[1]));const{rasterFunction:i}=this;0===l.length?i?.functionName?(l.push(i),u.push(i.functionName)):l=null:i?.functionName&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let y=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:i}=(0,ne.W2)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new a.Z("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=i?.timeExtent&&(y=i.timeExtent)}const h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=$e.Z.fromExtent(g));const f=this._getQueryParams({geometry:g,timeExtent:y,mosaicRule:h,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:i,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete f.f;const b=new Rt(f);try{await this._generateRasterInfo(this.rasterFunction);const i=await qe(this.url,b,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,a=null!=i.value&&i.value.toLowerCase().includes("nodata");if(!o||m||!i?.catalogItems?.features.length||!s&&a)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n});const l=this.objectIdField||"ObjectId",p=i.catalogItems?.features??[],c=p.map((e=>e.attributes?.[l])),d=new We.Z({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),y=await this.queryRasters(d);return y?.features?.length&&y.features.forEach((t=>{p.forEach((i=>{i.attributes[l]===t.attributes[l]&&(i.geometry=new $e.Z(t.geometry),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n})}catch{throw new a.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,f.Z)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),n=(0,f.Z)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),s=await Promise.all([r,n]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,Tt.GE)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,ne.jj)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,Ye.gh)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,Ye.n$)(e,t),e))),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,n,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),v.Z.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([(0,w.YP)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(null==e||null==r||null==t||null==i?.startField)return e;const{startField:n}=i,s=r.variables.some((e=>e.dimensions.some((e=>e.name===n))))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],c=this.version>=10.8;if(a.length)a.forEach((e=>{e.dimensionName===s&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new F.Z({variableName:"",dimensionName:s,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new a.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,p.TJ)(We.Z,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new re.Z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,oe.U0)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:n}=await(0,f.Z)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new a.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),n=i?.ResampleType||i?.resampleType;return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&i.bandCount>=3){const e=(0,oe.YD)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,oe.Ob)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,oe.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=i):this.symbolizer=new le.Z({rendererJSON:t,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,se.J)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return(await(0,f.Z)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:n,signal:s}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${i(this.parsedUrl)}/exportImage`,{data:a}=await(0,f.Z)(r,{responseType:n?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:s});return a instanceof Blob?{imageBitmap:await(0,Y.g)(a,r,s),params:t}:{imageOrCanvasElement:a,params:t}}const o=this._initJobHandler(),l=(0,f.Z)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:s}),u=(await Promise.all([l,o]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,se.y)(u)),!c)throw new a.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:s},d="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,se.J)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ne.Tj)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new k.Z;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i})),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:n,returnDomainValues:s,templateFields:a}=t,o=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map((e=>e.replaceAll(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof i&&i.toLowerCase().includes("nodata"),m=[];if(i&&!l&&!c){const e={};e[p]=0,u=[i],l=[new h.Z(this.fullExtent,null,e)]}if(!l)return[];let d,y,g;this._updateResponseFieldNames(l,a),c&&!n&&(l=[]);for(let h=0;h<l.length;h++){if(d=l[h],null!=i){if(y=u[h],g=this.rasterFunction&&o&&o.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?o[r.indexOf(this.rasterFunction.functionName)]:i,"nodata"===y.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";d.attributes[e]=y,d.attributes[t]=g,this._updateFeatureWithMagDirValues(d,y);const s=this.fields&&this.fields.length>0;let a=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?s?y:i:g;this.rasterFunction||(a=s?y:i),this._updateFeatureWithRasterAttributeTableValues(d,a)}if(d.sourceLayer=d.layer=this,s&&this._updateFeatureWithDomainValues(d),r&&o&&r.length===o.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];d.attributes[t]=o[e]}m.push(l[h])}return m}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){const{isOutside:i,intersection:n}=(0,ne.W2)(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=n?.timeExtent&&(t=n.timeExtent)}if((i=this._combineMosaicRuleWithTimeExtent(i,t))?.multidimensionalDefinition){const{isOutside:e}=(0,ne.W2)(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:n}=i,s=n.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!s)return;const a=r.filter((e=>e.attributes[s]===(null!=t?parseInt(t,10):null)));a&&a[0]&&n.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=a[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),n=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new te.Z({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new Qe.Z(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:(0,ae.Tg)([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=a[0],e.attributes["Raster.Direction"]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(e?.attributes)for(const r of t){const t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&e instanceof gt.Z&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:n}=e,s=t.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&o,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),c=u&&p.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:u,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&s,supportsProject:i>=10.3&&s,supportsComputeStatisticsHistograms:i>=10.4&&s,supportsQueryBoundary:i>=10.6&&s,supportsCalculateVolume:i>=10.7&&a,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}};function i(e){return e?.path??""}return(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,r._)([(0,S.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,r._)([(0,u.Cb)()],t.prototype,"adjustAspectRatio",void 0),(0,r._)([(0,u.Cb)({type:[p.z8],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,r._)([(0,S.r)("bandIds")],t.prototype,"readBandIds",null),(0,r._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,r._)([(0,S.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,r._)([(0,u.Cb)({type:Number})],t.prototype,"compressionQuality",void 0),(0,r._)([(0,m.c)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.Cb)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,r._)([(0,m.c)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,r._)([(0,S.r)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,r._)([(0,u.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"rasterInfo",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,type:[X.Z]})],t.prototype,"fields",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,r._)([(0,u.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,r._)([(0,S.r)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,r._)([(0,u.Cb)({type:Qe.Z})],t.prototype,"fullExtent",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,r._)([(0,u.Cb)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,r._)([(0,u.Cb)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,r._)([(0,u.Cb)({type:String,json:{type:$.cl.jsonValues,read:$.cl.read,write:$.cl.write}})],t.prototype,"interpolation",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"minScale",void 0),(0,r._)([(0,S.r)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,u.Cb)()],t.prototype,"maxScale",void 0),(0,r._)([(0,S.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,u.Cb)({type:k.Z})],t.prototype,"mosaicRule",null),(0,r._)([(0,S.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,r._)([(0,m.c)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,r._)([(0,u.Cb)()],t.prototype,"multidimensionalInfo",void 0),(0,r._)([(0,u.Cb)({type:ee.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,u.Cb)({json:{type:p.z8}})],t.prototype,"noData",void 0),(0,r._)([(0,m.c)("noData")],t.prototype,"writeNoData",null),(0,r._)([(0,u.Cb)({type:String,json:{type:$.kQ.jsonValues,read:$.kQ.read,write:$.kQ.write}})],t.prototype,"noDataInterpretation",void 0),(0,r._)([(0,u.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,r._)([(0,S.r)("objectIdField")],t.prototype,"readObjectIdField",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,r._)([(0,u.Cb)({})],t.prototype,"typeIdField",void 0),(0,r._)([(0,u.Cb)({})],t.prototype,"types",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,r._)([(0,u.Cb)({type:Function})],t.prototype,"pixelFilter",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,r._)([(0,S.r)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,r._)([(0,u.Cb)()],t.prototype,"viewId",void 0),(0,r._)([(0,u.Cb)({types:g.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:g.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,r._)([(0,S.r)("renderer")],t.prototype,"readRenderer",null),(0,r._)([(0,m.c)("renderer")],t.prototype,"writeRenderer",null),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,r._)([(0,u.Cb)(C.Oh)],t.prototype,"opacity",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"rasterFields",null),(0,r._)([(0,u.Cb)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,r._)([(0,u.Cb)({type:D.Z})],t.prototype,"renderingRule",null),(0,r._)([(0,u.Cb)({type:D.Z,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,r._)([(0,S.r)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,type:ce.Z})],t.prototype,"spatialReference",void 0),(0,r._)([(0,S.r)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,r._)([(0,u.Cb)({json:{type:$.sM.jsonValues}})],t.prototype,"pixelType",void 0),(0,r._)([(0,S.r)("pixelType")],t.prototype,"readPixelType",null),(0,r._)([(0,m.c)("pixelType")],t.prototype,"writePixelType",null),(0,r._)([(0,u.Cb)({constructOnly:!0,type:ie.Z})],t.prototype,"serviceRasterInfo",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,u.Cb)(C.HQ)],t.prototype,"url",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,r._)([(0,S.r)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,r._)([(0,c.j)("esri.layers.mixins.ArcGISImageService")],t),t};var jt=i(11936),Vt=i(6693),At=i(46671),Zt=i(6061),Jt=i(29598),Mt=i(71684),Et=i(56811),qt=i(99063),zt=i(26704),Gt=i(81085),Lt=i(84933);let Ht=class extends((0,Vt.h)((0,qt.n)((0,Et.M)((0,Zt.q)((0,Jt.I)(Ot((0,Mt.Q)((0,At.N)((0,jt.Y)((0,o.R)((0,s.J)(d.Z)))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,l.Ds)((async(e,t,r)=>{const{save:n,saveAs:s}=await i.e(63275).then(i.bind(i,63275));switch(e){case Lt.x.SAVE:return n(this,t);case Lt.x.SAVE_AS:return s(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){const r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const t=this.rasterFields,i=this.title,r=new Set;let n=!1,s=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;n&&a.add("raster.itempixelvalue");for(const l of t){const e=l.name.toLowerCase();a.has(e)||e.includes("raster.servicepixelvalue.")||r.add(l.name)}s&&r.add("raster.magnitude").add("raster.direction");const o=(0,Gt.eZ)({fields:t,title:i},{...e,visibleFieldNames:r});return o?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&o.fieldInfos.forEach((e=>{let{format:t,fieldName:i}=e;t&&/^raster\.(item|service)pixelvalue/i.test(i)&&(t.places=2)})),o}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Lt.x.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Lt.x.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,zt.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,r._)([(0,u.Cb)(C.rn)],Ht.prototype,"legendEnabled",null),(0,r._)([(0,u.Cb)({type:["show","hide"]})],Ht.prototype,"listMode",null),(0,r._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ht.prototype,"isReference",void 0),(0,r._)([(0,u.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Ht.prototype,"operationalLayerType",void 0),(0,r._)([(0,m.c)("web-map","operationalLayerType")],Ht.prototype,"writeOperationalLayerType",null),(0,r._)([(0,u.Cb)(C.C_)],Ht.prototype,"popupEnabled",void 0),(0,r._)([(0,u.Cb)({type:n.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Ht.prototype,"popupTemplate",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],Ht.prototype,"defaultPopupTemplate",null),(0,r._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Ht.prototype,"type",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],Ht.prototype,"_isPreviewLayer",null),Ht=(0,r._)([(0,c.j)("esri.layers.ImageryLayer")],Ht);const Ut=Ht},83690:(e,t,i)=>{i.d(t,{V:()=>a,g:()=>s});var r=i(10064),n=i(66978);async function s(e,t,i){let s;try{s=await createImageBitmap(e)}catch(a){throw new r.Z("request:server",`Unable to load ${t}`,{url:t,error:a})}return(0,n.k_)(i),s}async function a(e,t,i,s,a){let o;try{o=await createImageBitmap(e)}catch(l){throw new r.Z("request:server",`Unable to load tile ${t}/${i}/${s}`,{error:l,level:t,row:i,col:s})}return(0,n.k_)(a),o}},22585:(e,t,i)=>{function r(e){const t={};for(const i in e){if("declaredClass"===i)continue;const n=e[i];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){t[i]=[];for(let e=0;e<n.length;e++)t[i][e]=r(n[e])}else"object"==typeof n?n.toJSON&&(t[i]=JSON.stringify(n)):t[i]=n}return t}i.d(t,{A:()=>r})},34211:(e,t,i)=>{i.d(t,{P:()=>a});var r=i(23084),n=i(5192),s=i(86638);async function a(e,t,i){const a=(0,r.en)(e);return(0,n.hH)(a,s.Z.from(t),{...i}).then((e=>e.data.count))}},24246:(e,t,i)=>{i.d(t,{G:()=>a});var r=i(23084),n=i(5192),s=i(86638);async function a(e,t,i){const a=(0,r.en)(e);return(0,n.Ev)(a,s.Z.from(t),{...i}).then((e=>e.data.objectIds))}},77946:(e,t,i)=>{i.d(t,{F:()=>l,e:()=>o});var r=i(23084),n=i(5192),s=i(49818),a=i(86638);async function o(e,t,i){const r=await l(e,t,i);return s.Z.fromJSON(r)}async function l(e,t,i){const s=(0,r.en)(e),o={...i},l=a.Z.from(t),{data:u}=await(0,n.JT)(s,l,l.sourceSpatialReference,o);return u}},5192:(e,t,i)=>{i.d(t,{Ev:()=>g,JT:()=>d,Vr:()=>b,hH:()=>f,n7:()=>h,qp:()=>y});var r=i(76200),n=i(35995),s=i(77981),a=i(91340),o=i(92975),l=i(22585),u=i(27607),p=i(68620);const c="Layer does not support extent calculation.";function m(e,t){const i=e.geometry,r=e.toJSON();delete r.compactGeometryEnabled,delete r.defaultSpatialReferenceEnabled;const n=r;let a,l,u;if(null!=i&&(l=i.spatialReference,u=(0,o.B9)(l),n.geometryType=(0,s.Ji)(i),n.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(i,e.compactGeometryEnabled),n.inSR=u),r.groupByFieldsForStatistics&&(n.groupByFieldsForStatistics=r.groupByFieldsForStatistics.join(",")),r.objectIds&&(n.objectIds=r.objectIds.join(",")),r.orderByFields&&(n.orderByFields=r.orderByFields.join(",")),!r.outFields||!r.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete n.outFields:r.outFields.includes("*")?n.outFields="*":n.outFields=r.outFields.join(","),r.outSR?(n.outSR=(0,o.B9)(r.outSR),a=e.outSpatialReference):i&&(r.returnGeometry||r.returnCentroid)&&(n.outSR=n.inSR,a=l),r.returnGeometry&&delete r.returnGeometry,r.outStatistics&&(n.outStatistics=JSON.stringify(r.outStatistics)),r.fullText&&(n.fullText=JSON.stringify(r.fullText)),r.pixelSize&&(n.pixelSize=JSON.stringify(r.pixelSize)),r.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=l&&null!=e.quantizationParameters?.extent&&l.equals(e.quantizationParameters.extent.spatialReference)&&delete r.quantizationParameters.extent.spatialReference,n.quantizationParameters=JSON.stringify(r.quantizationParameters)),r.parameterValues&&(n.parameterValues=JSON.stringify(r.parameterValues)),r.rangeValues&&(n.rangeValues=JSON.stringify(r.rangeValues)),r.dynamicDataSource&&(n.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r.timeExtent){const e=r.timeExtent,{start:t,end:i}=e;null==t&&null==i||(n.time=t===i?t:`${t??"null"},${i??"null"}`),delete r.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=l&&null!=a&&l.equals(a)&&(n.defaultSR=n.inSR,delete n.inSR,delete n.outSR),n}async function d(e,t,i,r){const n=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await R(e,t,"json",r);return(0,p.p)(t,i,n.data),n}async function y(e,t,i,r){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:i.createFeatureResult()};const n=await h(e,t,r),s=n;return s.data=(0,u.C)(n.data,i),s}function h(e,t,i){return R(e,t,"pbf",i)}function g(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):R(e,t,"json",i,{returnIdsOnly:!0})}function f(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):R(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0})}async function b(e,t,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const r=await R(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),n=r.data;if(n.hasOwnProperty("extent"))return r;if(n.features)throw new Error(c);if(n.hasOwnProperty("count"))throw new Error(c);return r}async function R(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const u="string"==typeof e?(0,n.mN)(e):e,p=t.geometry?[t.geometry]:[],c=await(0,a.aX)(p,null,{signal:s.signal}),d=c?.[0];null!=d&&((t=t.clone()).geometry=d);const y=(0,l.A)({...u.query,f:i,...o,...m(t,o)});return(0,r.Z)((0,n.v_)(u.path,v(t,o)?"query3d":"query"),{...s,responseType:"pbf"===i?"array-buffer":"json",query:{...y,...s.query}})}function v(e,t){return null!=e.formatOf3DObjects&&!(t.returnCountOnly||t.returnExtentOnly||t.returnIdsOnly)}},11812:(e,t,i)=>{i.d(t,{Z:()=>m});var r,n=i(27366),s=i(46784),a=i(49861),o=i(25243),l=(i(63780),i(93169),i(69912));function u(e){const{exifInfo:t,exifName:i,tagName:r}=e;if(!t||!i||!r)return null;const n=t.find((e=>e.name===i));return n?function(e){const{tagName:t,tags:i}=e;if(!i||!t)return null;const r=i.find((e=>e.name===t));return r?.value||null}({tagName:r,tags:n.tags}):null}const p={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let c=r=class extends s.wq{constructor(e){super(e),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}get orientationInfo(){const{exifInfo:e}=this,t=u({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:e});return p[t]||null}clone(){return new r({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}};(0,n._)([(0,a.Cb)({type:String})],c.prototype,"contentType",void 0),(0,n._)([(0,a.Cb)()],c.prototype,"exifInfo",void 0),(0,n._)([(0,a.Cb)({readOnly:!0})],c.prototype,"orientationInfo",null),(0,n._)([(0,a.Cb)({type:o.z8})],c.prototype,"id",void 0),(0,n._)([(0,a.Cb)({type:String})],c.prototype,"globalId",void 0),(0,n._)([(0,a.Cb)({type:String})],c.prototype,"keywords",void 0),(0,n._)([(0,a.Cb)({type:String})],c.prototype,"name",void 0),(0,n._)([(0,a.Cb)({json:{read:!1}})],c.prototype,"parentGlobalId",void 0),(0,n._)([(0,a.Cb)({json:{read:!1}})],c.prototype,"parentObjectId",void 0),(0,n._)([(0,a.Cb)({type:o.z8})],c.prototype,"size",void 0),(0,n._)([(0,a.Cb)({json:{read:!1}})],c.prototype,"url",void 0),c=r=(0,n._)([(0,l.j)("esri.layers.support.AttachmentInfo")],c);const m=c}}]);
//# sourceMappingURL=39652.c152fbae.chunk.js.map