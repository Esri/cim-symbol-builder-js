{"version":3,"file":"static/js/36370.57339fcb.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/lumina/dist/proxyExports-Cdzj7WL_.js","../node_modules/@arcgis/lumina/dist/controllers/index.js","../node_modules/@esri/calcite-components/dist/chunks/math.js","../node_modules/@esri/calcite-components/dist/chunks/useT9n.js","../node_modules/@esri/calcite-components/dist/components/calcite-shell-panel/customElement.js","../node_modules/lit-html/src/directives/keyed.ts","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts"],"sourcesContent":["import { d as setParentController, e as retrieveParentControllers, o as setAmbientChildController, t as trackKey, h as bypassReadOnly } from \"./Controller-BQOv8BAL.js\";\nconst proxyExports = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  const initialExports = instance.exports;\n  setParentController(ambientControllers.at(-1));\n  const manager = instance.component.manager;\n  manager.W(instance, initialExports);\n  instance.watchExports(manager.W.bind(manager, instance));\n  setAmbientChildController(instance);\n  const hostCandidates = [instance.component, ...ambientControllers].reverse();\n  return trackKey(\n    hostCandidates,\n    (resolution) => resolution === void 0 ? void 0 : setProxy(instance, resolution, initialExports),\n    initialExports\n  );\n};\nconst setProxy = (controller, { host, key, isReactive: assignedToProp }, initialExports) => {\n  const genericHost = host;\n  const controllerValueChanged = genericHost[key] !== controller.exports;\n  const hostValueChanged = genericHost[key] !== initialExports;\n  const controllerUpdatedExports = initialExports !== controller.exports;\n  if (controllerValueChanged && !hostValueChanged && controllerUpdatedExports) {\n    genericHost[key] = controller.exports;\n  }\n  const isProxyExportsOnComponent = host === controller.component;\n  if (isProxyExportsOnComponent) {\n    if (assignedToProp) {\n      const manager = controller.component.manager;\n      if (hostValueChanged) {\n        manager.W(controller, genericHost[key]);\n      }\n      controller.onUpdate((changes) => {\n        if (changes.has(key)) {\n          const value = genericHost[key];\n          if (value !== controller.exports) {\n            manager.W(controller, value);\n          }\n        }\n      });\n    }\n    controller.O = assignedToProp ? void 0 : key;\n  }\n  const isReadOnly = controller.component.constructor.elementProperties.get(key)?.readOnly;\n  controller.watchExports(() => {\n    if (genericHost[key] === controller.exports) {\n      return;\n    }\n    if (isReadOnly) {\n      bypassReadOnly(() => {\n        genericHost[key] = controller.exports;\n      });\n    } else {\n      genericHost[key] = controller.exports;\n    }\n  });\n};\nexport {\n  proxyExports as p\n};\n","import { C as Controller, s as setAmbientComponent, i as isPromise, d as setParentController, e as retrieveParentControllers, t as trackKey, r as retrieveComponent, f as createEventFactory } from \"../Controller-BQOv8BAL.js\";\nimport { G, h, g, c, n, m, k, l, j } from \"../Controller-BQOv8BAL.js\";\nimport { p as proxyExports } from \"../proxyExports-Cdzj7WL_.js\";\nimport { isServer } from \"lit\";\nimport { observeAncestorsMutation, isEsriInternalEnv, getElementAttribute, getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nconst makeController = (constructor) => proxy(void 0, constructor);\nconst makeGenericController = (constructor) => (component) => proxy(\n  component,\n  /**\n   * GenericController is identical to Controller, in all except for typing.\n   * So dying a type-cast here so as not to needlessly add one more object\n   * to the prototype chain\n   */\n  constructor\n);\nclass FunctionalController extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (isPromise(value)) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then((result) => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch((error) => {\n          this.P.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this.P.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n}\nconst proxy = proxyExports(FunctionalController);\nconst useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nclass AttributeWatchController extends Controller {\n  #observer;\n  #attributes;\n  #callback;\n  constructor(attributes, callback) {\n    super();\n    if (isServer) {\n      return;\n    }\n    this.#attributes = attributes;\n    this.#callback = callback;\n    this.#observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (attributes.includes(mutation.attributeName)) {\n          callback.call(\n            this.component,\n            this.component.el.getAttribute(mutation.attributeName),\n            mutation.oldValue,\n            mutation.attributeName\n          );\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this.#attributes.forEach((attribute) => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this.#callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this.#observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this.#attributes\n    });\n  }\n  hostDisconnected() {\n    this.#observer.disconnect();\n  }\n}\nconst load = makeController;\nconst toFunction = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\nconst useMedia = (query) => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  const changed = () => {\n    controller.exports = media.matches;\n  };\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\nconst defaultDirection = \"ltr\";\nconst useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    const callback = () => {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    };\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolved) => {\n        if (resolved?.key === \"dir\") {\n          throw new Error(\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\n          );\n        }\n      },\n      controller.exports\n    );\n  }\n  return void 0;\n});\nconst makeT9nController = (getAssetPath) => (options = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    const locale = getElementLocales(component.el);\n    const pending = { [\"_lang\"]: locale.lang, [\"_t9nLocale\"]: locale.t9nLocale, [\"_loading\"]: true };\n    const componentWithOverrides = component;\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        () => getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          const withoutOverrides = {\n            ...t9nStrings,\n            [\"_lang\"]: lang,\n            [\"_t9nLocale\"]: t9nLocale,\n            [\"_loading\"]: false\n          };\n          controller.exports = withoutOverrides;\n          const label = t9nStrings.componentLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ??= label;\n          }\n          applyOverrides(componentWithOverrides.messageOverrides);\n        },\n        options.name\n      )\n    );\n    const applyOverrides = (messageOverrides) => {\n      const currentValue = controller.exports;\n      const rawMessages = currentValue[\"_original\"] ?? currentValue;\n      const updated = deepMerge(rawMessages, messageOverrides);\n      if (messageOverrides) {\n        updated[\"_original\"] = rawMessages;\n      }\n      controller.exports = updated;\n    };\n    if (\"messageOverrides\" in componentWithOverrides) {\n      controller.onUpdate((changes) => {\n        if (changes.has(\"messageOverrides\")) {\n          applyOverrides(componentWithOverrides.messageOverrides);\n        }\n      });\n    }\n    if (options.blocking) {\n      controller.setProvisionalExports(pending, false);\n      return controller.ready;\n    } else {\n      return pending;\n    }\n  })\n);\nconst deepMerge = (original, overwrites) => {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = { ...original };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n};\nconst usePropertyChange = (_component) => propertyChangeController;\nconst eventName = \"arcgisPropertyChange\";\nconst propertyChangeController = (...toWatch) => {\n  const component = retrieveComponent();\n  const eventEmitter = createEventFactory(eventName, void 0, component);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    toWatch.forEach((prop) => {\n      const descriptor = component.constructor.elementProperties.get(prop);\n      const isProp = descriptor !== void 0 && descriptor.state !== true;\n      if (!isProp) {\n        throw new Error(\n          `For usePropertyChange to emit event on \"${prop}\" property change, you should add @property() to ${prop} in ${component.el.localName}`\n        );\n      }\n    });\n  }\n  let isFirst = true;\n  component.manager.onUpdated((changes) => {\n    if (isFirst || !component.el.isConnected) {\n      isFirst = false;\n      return;\n    }\n    for (const name of toWatch) {\n      if (changes.has(name)) {\n        eventEmitter.emit({ name });\n      }\n    }\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n    trackKey(\n      component,\n      (resolution) => {\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n          throw new Error(\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\n          );\n        }\n      },\n      eventEmitter\n    );\n  }\n  return eventEmitter;\n};\nexport {\n  Controller,\n  G as GenericController,\n  h as bypassReadOnly,\n  g as bypassSetter,\n  c as controllerSymbol,\n  n as getControllersCount,\n  m as isController,\n  k as keyTrackResolve,\n  load,\n  makeController,\n  makeGenericController,\n  makeT9nController,\n  proxyExports,\n  retrieveComponent,\n  toFunction,\n  trackKey,\n  l as trackPropKey,\n  j as trackPropertyKey,\n  useDirection,\n  useMedia,\n  usePropertyChange,\n  useWatchAttributes\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nconst clamp = (value, min, max) => Math.max(min, Math.min(value, max));\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\nconst decimalPlaces = (value) => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) - // Adjust for scientific notation.\n    (match[2] ? +match[2] : 0)\n  );\n};\nfunction getDecimals(value) {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\nfunction remap(value, fromMin, fromMax, toMin, toMax) {\n  return (value - fromMin) * (toMax - toMin) / (fromMax - fromMin) + toMin;\n}\nfunction closeToRangeEdge(value, range, threshold) {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\nexport {\n  closeToRangeEdge as a,\n  clamp as c,\n  decimalPlaces as d,\n  getDecimals as g,\n  remap as r\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeT9nController } from \"@arcgis/lumina/controllers\";\nimport { g as getAssetPath } from \"./runtime.js\";\nconst useT9n = makeT9nController(getAssetPath);\nexport {\n  useT9n as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { C as CSS_UTILITY, a as resizeShiftStep, b as resizeStep, c as customElement } from \"../../chunks/runtime.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { i as interact } from \"../../chunks/interact.min.js\";\nimport { html } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { g as getElementDir, k as getStylePixelValue, s as slotChangeGetAssignedElements, a as slotChangeHasAssignedElement } from \"../../chunks/dom.js\";\nimport { c as clamp } from \"../../chunks/math.js\";\nimport { g as getDimensionClass } from \"../../chunks/dynamicClasses.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  container: \"container\",\n  actionBarContainer: \"action-bar-container\",\n  contentContainer: \"content-container\",\n  content: \"content\",\n  contentHeader: \"content__header\",\n  contentBody: \"content__body\",\n  contentOverlay: \"content--overlay\",\n  floatAll: \"float-all\",\n  floatContent: \"float--content\",\n  resizeHandle: \"resize-handle\",\n  resizeHandleBar: \"resize-handle-bar\"\n};\nconst SLOTS = {\n  actionBar: \"action-bar\",\n  header: \"header\"\n};\nconst styles = css`:host{pointer-events:none;position:relative;display:flex;flex:0 1 auto;align-items:stretch;z-index:var(--calcite-shell-panel-z-index, var(--calcite-z-index));--calcite-shell-panel-max-height: unset;--calcite-internal-shell-panel-shadow-block-start: 0 4px 8px -1px rgba(0, 0, 0, .08), 0 2px 4px -1px rgba(0, 0, 0, .04);--calcite-internal-shell-panel-shadow-block-end: 0 -4px 8px -1px rgba(0, 0, 0, .08), 0 -2px 4px -1px rgba(0, 0, 0, .04);--calcite-internal-shell-panel-shadow-inline-start: 4px 0 8px -1px rgba(0, 0, 0, .08), 2px 0 4px -1px rgba(0, 0, 0, .04);--calcite-internal-shell-panel-shadow-inline-end: -4px 0 8px -1px rgba(0, 0, 0, .08), -2px 0 4px -1px rgba(0, 0, 0, .04)}.calcite--rtl.content--overlay{--calcite-internal-shell-panel-shadow-inline-start: -4px 0 8px -1px rgba(0, 0, 0, .08), -2px 0 4px -1px rgba(0, 0, 0, .04);--calcite-internal-shell-panel-shadow-inline-end: 4px 0 8px -1px rgba(0, 0, 0, .08), 2px 0 4px -1px rgba(0, 0, 0, .04)}:host([layout=vertical]){z-index:var(--calcite-shell-panel-z-index, calc(var(--calcite-z-index) + 1))}:host([layout=vertical][display-mode=overlay]){z-index:var(--calcite-shell-panel-z-index, calc(var(--calcite-z-index-header) + 1))}:host([layout=vertical][display-mode=float-all]) .content{flex:2}:host([layout=vertical]:not([display-mode=float-all])) .width-s{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 12vw);--calcite-internal-shell-panel-max-width: var(--calcite-shell-panel-max-width, 300px);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 150px)}:host([layout=vertical][display-mode=float-all]) .width-s{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 12vw);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 150px)}:host([layout=vertical]:not([display-mode=float-all])) .width-m{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 20vw);--calcite-internal-shell-panel-max-width: var(--calcite-shell-panel-max-width, 420px);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 240px)}:host([layout=vertical][display-mode=float-all]) .width-m{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 20vw);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 240px)}:host([layout=vertical]:not([display-mode=float-all])) .width-l{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 45vw);--calcite-internal-shell-panel-max-width: var(--calcite-shell-panel-max-width, 680px);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 340px)}:host([layout=vertical][display-mode=float-all]) .width-l{--calcite-internal-shell-panel-width: var(--calcite-shell-panel-width, 45vw);--calcite-internal-shell-panel-min-width: var(--calcite-shell-panel-min-width, 340px)}:host([layout=horizontal]) .height-s{--calcite-internal-shell-panel-max-height: var( --calcite-shell-panel-max-height, var(--calcite-shell-panel-detached-max-height, 20vh) )}:host([layout=horizontal]) .content{--calcite-internal-shell-panel-min-height: var(--calcite-shell-panel-min-height, 5vh);--calcite-internal-shell-panel-max-height: var(--calcite-shell-panel-max-height, 30vh)}:host([layout=horizontal]) .height-l{--calcite-internal-shell-panel-max-height: var( --calcite-shell-panel-max-height, var(--calcite-shell-panel-detached-max-height, 40vh) )}.container{pointer-events:none;box-sizing:border-box;display:flex;block-size:100%;flex:1 1 auto;align-items:stretch;background-color:transparent;font-size:var(--calcite-font-size--1);color:var(--calcite-shell-panel-text-color, var(--calcite-color-text-2))}.container *{box-sizing:border-box}.container.float-all{margin-block:var(--calcite-spacing-sm);margin-inline:var(--calcite-spacing-sm)}.float-all{max-block-size:var(--calcite-internal-shell-panel-max-height, calc(100% - 1rem) );box-shadow:var(--calcite-shell-panel-shadow, var(--calcite-shadow-sm));border-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));overflow:hidden}:host([layout=vertical][position=start]) .float-all{border-inline-start:var(--calcite-border-width-sm) solid var(--calcite-shell-panel-border-color, var(--calcite-color-border-3))}:host([layout=vertical][position=end]) .float-all{border-inline-end:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-shell-panel-border-color, var(--calcite-color-border-3)))}:host([layout=horizontal]) .float-all{border-inline:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-shell-panel-border-color, var(--calcite-color-border-3)))}:host([layout=horizontal]) .container{block-size:auto;inline-size:100%;flex-direction:column}.resize-handle{position:absolute;box-sizing:border-box;display:flex;-webkit-user-select:none;user-select:none;align-items:center;justify-content:center;outline:2px solid transparent;outline-offset:2px;--calcite-internal-shell-panel-resize-handle-offset: calc( (var(--calcite-size-fixed-xxl) - var(--calcite-size-fixed-sm-plus)) / 2 * -1 );z-index:var(--calcite-z-index-header)}.resize-handle:active .resize-handle-bar,.resize-handle:hover .resize-handle-bar{color:var(--calcite-shell-panel-resize-icon-color, var(--calcite-color-text-1));background-color:var(--calcite-shell-panel-resize-background-color, var(--calcite-color-foreground-3))}.resize-handle-bar{pointer-events:none;display:flex;align-items:center;justify-content:center;color:var(--calcite-shell-panel-resize-icon-color, var(--calcite-color-border-input));background-color:var(--calcite-shell-panel-resize-background-color, var(--calcite-color-background))}.resize-handle:focus .resize-handle-bar{outline-color:transparent;outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)))}:host([position=start][layout=vertical]) .resize-handle{inline-size:var(--calcite-size-fixed-xxl);inset-inline-end:var(--calcite-internal-shell-panel-resize-handle-offset);block-size:100%}:host([position=start][layout=vertical]) .resize-handle-bar{block-size:100%;inline-size:var(--calcite-size-fixed-sm-plus);border-inline-start:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-color-border-3))}:host([position=start][layout=vertical]):host([display-mode^=float]) .resize-handle-bar{border-start-end-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));border-end-end-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round))}:host([position=end][layout=vertical]) .resize-handle{inline-size:var(--calcite-size-fixed-xxl);inset-inline-start:var(--calcite-internal-shell-panel-resize-handle-offset);block-size:100%}:host([position=end][layout=vertical]) .resize-handle-bar{block-size:100%;inline-size:var(--calcite-size-fixed-sm-plus);border-inline-end:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-color-border-3))}:host([position=end][layout=vertical]):host([display-mode^=float]) .resize-handle-bar{border-start-start-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));border-end-start-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round))}:host([position=start][layout=horizontal]) .resize-handle{block-size:var(--calcite-size-fixed-xxl);inline-size:100%;inset-block-end:var(--calcite-internal-shell-panel-resize-handle-offset)}:host([position=start][layout=horizontal]) .resize-handle-bar{inline-size:100%;block-size:var(--calcite-size-fixed-sm-plus);border-block-start:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-color-border-3))}:host([position=start][layout=horizontal]):host([display-mode^=float]) .resize-handle-bar{border-end-end-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));border-end-start-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round))}:host([position=end][layout=horizontal]) .resize-handle{block-size:var(--calcite-size-fixed-xxl);inline-size:100%;inset-block-start:var(--calcite-internal-shell-panel-resize-handle-offset)}:host([position=end][layout=horizontal]) .resize-handle-bar{inline-size:100%;block-size:var(--calcite-size-fixed-sm-plus);border-block-end:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-color-border-3))}:host([position=end][layout=horizontal]):host([display-mode^=float]) .resize-handle-bar{border-start-start-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));border-start-end-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round))}::slotted(calcite-panel),::slotted(calcite-flow){block-size:100%;inline-size:100%;flex:1 1 auto;max-block-size:unset;max-inline-size:unset}::slotted(.calcite-match-height){display:flex;flex:1 1 auto;overflow:hidden}.action-bar-container{pointer-events:auto;box-sizing:border-box;display:flex;flex:1 1 auto}.content-container{position:relative;box-sizing:border-box;display:flex;block-size:100%;inline-size:100%;flex:1 1 auto;align-items:stretch;align-self:stretch}:host([layout=horizontal]) .action-bar-container,:host([layout=horizontal]) .content-container{flex-direction:column}.content{pointer-events:auto;position:relative;box-sizing:border-box;display:flex;flex-direction:column;flex-wrap:nowrap;align-items:stretch;align-self:stretch;padding:0;background-color:var(--calcite-shell-panel-background-color, var(--calcite-color-background));transition:max-block-size var(--calcite-animation-timing),max-inline-size var(--calcite-animation-timing)}:host([layout=vertical]:not([display-mode=float-all])) .content{inline-size:var(--calcite-internal-shell-panel-width);max-inline-size:var(--calcite-internal-shell-panel-max-width);min-inline-size:var(--calcite-internal-shell-panel-min-width)}:host([layout=vertical][display-mode=float-all]) .content{inline-size:var(--calcite-internal-shell-panel-width);min-inline-size:var(--calcite-internal-shell-panel-min-width)}:host([layout=horizontal]) .content{block-size:var(--calcite-internal-shell-panel-height);max-block-size:var(--calcite-internal-shell-panel-max-height);min-block-size:var(--calcite-internal-shell-panel-min-height)}:host([resizable][layout=vertical][position=start]) .content{padding-inline-end:var(--calcite-size-fixed-sm-plus)}:host([resizable][layout=vertical][position=end]) .content{padding-inline-start:var(--calcite-size-fixed-sm-plus)}:host([resizable][layout=horizontal][position=start]) .content{padding-block-end:var(--calcite-size-fixed-sm-plus)}:host([resizable][layout=horizontal][position=end]) .content{padding-block-start:var(--calcite-size-fixed-sm-plus)}.content__header{display:flex;flex:0 1 auto;flex-direction:column;flex-wrap:nowrap;align-items:stretch}.content__body{display:flex;flex:1 1 auto;flex-direction:column;overflow:hidden}.content--overlay{position:absolute;--tw-shadow: 0 4px 8px -1px rgba(0, 0, 0, .08), 0 2px 4px -1px rgba(0, 0, 0, .04);--tw-shadow-colored: 0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--calcite-shell-panel-shadow, var(--tw-ring-offset-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-ring-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-shadow))}:host([layout=vertical]) .content--overlay{inset-block-start:0px;block-size:100%}:host([layout=horizontal]) .content--overlay{inset-inline-start:0px;inline-size:100%}:host([layout=vertical][position=start]) .content--overlay{inset-inline-start:100%;box-shadow:var(--calcite-internal-shell-panel-shadow-inline-start)}:host([layout=vertical][position=end]) .content--overlay{inset-inline-end:100%;box-shadow:var(--calcite-internal-shell-panel-shadow-inline-end)}:host([layout=horizontal][position=start]) .content--overlay{inset-block-start:100%;box-shadow:var(--calcite-internal-shell-panel-shadow-block-start)}:host([layout=horizontal][position=end]) .content--overlay{inset-block-end:100%;box-shadow:var(--calcite-internal-shell-panel-shadow-block-end)}.float--content{margin-block-end:auto;block-size:auto;overflow:hidden;--tw-shadow: 0 4px 8px -1px rgba(0, 0, 0, .08), 0 2px 4px -1px rgba(0, 0, 0, .04);--tw-shadow-colored: 0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--calcite-shell-panel-shadow, var(--tw-ring-offset-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-ring-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-shadow));border-radius:var(--calcite-shell-panel-corner-radius, var(--calcite-corner-radius-round));margin-inline:var(--calcite-spacing-sm);margin-block-start:var(--calcite-spacing-sm);max-block-size:var(--calcite-internal-shell-panel-max-height, calc(100% - 1rem) )}.float--content ::slotted(calcite-panel),.float--content ::slotted(calcite-flow){max-block-size:unset}:host([layout=horizontal]) .float--content{margin-block:var(--calcite-spacing-sm)}:host([position=start]) .float--content ::slotted(calcite-panel),:host([position=start]) .float--content ::slotted(calcite-flow),:host([position=end]) .float--content ::slotted(calcite-panel),:host([position=end]) .float--content ::slotted(calcite-flow){border-style:none}.content[hidden]{display:none}slot[name=action-bar]::slotted(calcite-action-bar),.content ::slotted(calcite-flow),.content ::slotted(calcite-panel:not([closed])){border:var(--calcite-border-width-sm) solid var(--calcite-shell-border-color, var(--calcite-color-border-3))}:host([position=start]:not([slot=panel-end])) slot[name=action-bar]::slotted(calcite-action-bar),:host([position=start]:not([slot=panel-end])) .content ::slotted(calcite-flow),:host([position=start]:not([slot=panel-end])) .content ::slotted(calcite-panel),:host([position=end][slot=panel-start]) slot[name=action-bar]::slotted(calcite-action-bar),:host([position=end][slot=panel-start]) .content ::slotted(calcite-flow),:host([position=end][slot=panel-start]) .content ::slotted(calcite-panel){border-inline-start:none}:host([resizable][layout=vertical]) .content ::slotted(calcite-flow),:host([resizable][layout=vertical]) .content ::slotted(calcite-panel){border-inline-start:none;border-inline-end:none}:host([resizable][layout=horizontal]) .content ::slotted(calcite-flow),:host([resizable][layout=horizontal]) .content ::slotted(calcite-panel){border-block-start:none;border-block-end:none}:host([position=end]:not([slot=panel-start])) slot[name=action-bar]::slotted(calcite-action-bar),:host([position=end]:not([slot=panel-start])) .content ::slotted(calcite-flow),:host([position=end]:not([slot=panel-start])) .content ::slotted(calcite-panel),:host([position=start][slot=panel-end]) slot[name=action-bar]::slotted(calcite-action-bar),:host([position=start][slot=panel-end]) .content ::slotted(calcite-flow),:host([position=start][slot=panel-end]) .content ::slotted(calcite-panel){border-inline-end:none}:host([layout=horizontal]) slot[name=action-bar]::slotted(calcite-action-bar){border-inline:0}:host([layout=horizontal][position=start]) .content ::slotted(calcite-flow),:host([layout=horizontal][position=start]) .content ::slotted(calcite-panel){border-inline:0;border-block-start:0}:host([layout=horizontal][position=end]) .content ::slotted(calcite-flow),:host([layout=horizontal][position=end]) .content ::slotted(calcite-panel){border-inline:0;border-block-end:0}:host([hidden]){display:none}[hidden]{display:none}`;\nclass ShellPanel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.actionBars = [];\n    this.messages = useT9n();\n    this.resizeValues = {\n      inlineSize: null,\n      blockSize: null,\n      minInlineSize: null,\n      minBlockSize: null,\n      maxInlineSize: null,\n      maxBlockSize: null\n    };\n    this.hasHeader = false;\n    this.collapsed = false;\n    this.displayMode = \"dock\";\n    this.layout = \"vertical\";\n    this.position = \"start\";\n    this.resizable = false;\n    this.widthScale = \"m\";\n    this.calciteInternalShellPanelResizeEnd = createEvent({ cancelable: false });\n    this.calciteInternalShellPanelResizeStart = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { resizeValues: [16, {}, { state: true }], hasHeader: [16, {}, { state: true }], collapsed: [7, {}, { reflect: true, type: Boolean }], displayMode: [3, {}, { reflect: true }], heightScale: [3, {}, { reflect: true }], layout: [3, {}, { reflect: true }], messageOverrides: [0, {}, { attribute: false }], position: [3, {}, { reflect: true }], resizable: [7, {}, { reflect: true, type: Boolean }], height: [3, {}, { reflect: true }], widthScale: [3, {}, { reflect: true }], width: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  willUpdate(changes) {\n    if (changes.has(\"layout\") && (this.hasUpdated || this.layout !== \"vertical\")) {\n      this.setActionBarsLayout(this.actionBars);\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.cleanupInteractions();\n  }\n  getContentElDOMRect() {\n    return this.contentEl.getBoundingClientRect();\n  }\n  handleKeyDown(event) {\n    const { key, defaultPrevented, shiftKey } = event;\n    const { position, layout, resizable, contentEl, el, resizeValues: { maxBlockSize, maxInlineSize, minBlockSize, minInlineSize } } = this;\n    const arrowKeys = layout === \"horizontal\" ? [\"ArrowUp\", \"ArrowDown\"] : [\"ArrowLeft\", \"ArrowRight\"];\n    const keys = [...arrowKeys, \"Home\", \"End\"];\n    if (!resizable || !contentEl || defaultPrevented || !keys.includes(key)) {\n      return;\n    }\n    const rect = this.getContentElDOMRect();\n    const invertRTL = getElementDir(el) === \"rtl\" ? -1 : 1;\n    const stepValue = shiftKey ? resizeShiftStep : resizeStep;\n    switch (key) {\n      case \"ArrowUp\":\n        this.updateSize({\n          size: rect.height + (layout === \"horizontal\" && position === \"end\" ? stepValue : -stepValue),\n          type: \"blockSize\"\n        });\n        event.preventDefault();\n        break;\n      case \"ArrowDown\":\n        this.updateSize({\n          size: rect.height + (layout === \"horizontal\" && position === \"end\" ? -stepValue : stepValue),\n          type: \"blockSize\"\n        });\n        event.preventDefault();\n        break;\n      case \"ArrowLeft\":\n        this.updateSize({\n          size: rect.width + (layout === \"vertical\" && position === \"end\" ? stepValue : -stepValue) * invertRTL,\n          type: \"inlineSize\"\n        });\n        event.preventDefault();\n        break;\n      case \"ArrowRight\":\n        this.updateSize({\n          size: rect.width + (layout === \"vertical\" && position === \"end\" ? -stepValue : stepValue) * invertRTL,\n          type: \"inlineSize\"\n        });\n        event.preventDefault();\n        break;\n      case \"Home\":\n        this.updateSize({\n          size: layout === \"horizontal\" ? minBlockSize : minInlineSize,\n          type: layout === \"horizontal\" ? \"blockSize\" : \"inlineSize\"\n        });\n        event.preventDefault();\n        break;\n      case \"End\":\n        this.updateSize({\n          size: layout === \"horizontal\" ? maxBlockSize : maxInlineSize,\n          type: layout === \"horizontal\" ? \"blockSize\" : \"inlineSize\"\n        });\n        event.preventDefault();\n        break;\n    }\n  }\n  updateSize({ type, size }) {\n    const { contentEl, resizeValues } = this;\n    if (!contentEl) {\n      return;\n    }\n    const resizeMin = type === \"blockSize\" ? \"minBlockSize\" : \"minInlineSize\";\n    const resizeMax = type === \"blockSize\" ? \"maxBlockSize\" : \"maxInlineSize\";\n    const clamped = resizeValues[resizeMin] && resizeValues[resizeMax] ? clamp(size, resizeValues[resizeMin], resizeValues[resizeMax]) : size;\n    const rounded = Math.round(clamped);\n    this.resizeValues = {\n      ...resizeValues,\n      [type]: rounded\n    };\n    contentEl.style[type] = size !== null ? `${rounded}px` : null;\n  }\n  cleanupInteractions() {\n    this.interaction?.unset();\n    this.updateSize({ size: null, type: \"inlineSize\" });\n    this.updateSize({ size: null, type: \"blockSize\" });\n  }\n  async setupInteractions() {\n    this.cleanupInteractions();\n    const { el, contentEl, resizable, position, collapsed, resizeHandleEl, layout } = this;\n    if (!contentEl || collapsed || !resizable || !resizeHandleEl) {\n      return;\n    }\n    await this.el.componentOnReady();\n    const { inlineSize, minInlineSize, blockSize, minBlockSize, maxInlineSize, maxBlockSize } = window.getComputedStyle(contentEl);\n    const values = {\n      inlineSize: getStylePixelValue(inlineSize),\n      blockSize: getStylePixelValue(blockSize),\n      minInlineSize: getStylePixelValue(minInlineSize),\n      minBlockSize: getStylePixelValue(minBlockSize),\n      maxInlineSize: getStylePixelValue(maxInlineSize) || window.innerWidth,\n      maxBlockSize: getStylePixelValue(maxBlockSize) || window.innerHeight\n    };\n    this.resizeValues = values;\n    const rtl = getElementDir(el) === \"rtl\";\n    this.interaction = interact(contentEl, { context: el.ownerDocument }).resizable({\n      edges: {\n        top: position === \"end\" && layout === \"horizontal\" ? resizeHandleEl : false,\n        right: position === (rtl ? \"end\" : \"start\") && layout === \"vertical\" ? resizeHandleEl : false,\n        bottom: position === \"start\" && layout === \"horizontal\" ? resizeHandleEl : false,\n        left: position === (rtl ? \"start\" : \"end\") && layout === \"vertical\" ? resizeHandleEl : false\n      },\n      modifiers: [\n        interact.modifiers.restrictSize({\n          min: {\n            width: values.minInlineSize,\n            height: values.minBlockSize\n          },\n          max: {\n            width: values.maxInlineSize,\n            height: values.maxBlockSize\n          }\n        })\n      ],\n      listeners: {\n        resizestart: () => {\n          this.calciteInternalShellPanelResizeStart.emit();\n        },\n        resizeend: () => {\n          this.calciteInternalShellPanelResizeEnd.emit();\n        },\n        move: ({ rect }) => {\n          const isBlock = layout === \"horizontal\";\n          this.updateSize({\n            size: isBlock ? rect.height : rect.width,\n            type: isBlock ? \"blockSize\" : \"inlineSize\"\n          });\n        }\n      }\n    });\n  }\n  storeContentEl(contentEl) {\n    this.contentEl = contentEl;\n  }\n  setResizeHandleEl(el) {\n    this.resizeHandleEl = el;\n    this.setupInteractions();\n  }\n  setActionBarsLayout(actionBars) {\n    actionBars.forEach((actionBar) => actionBar.layout = this.layout);\n  }\n  handleActionBarSlotChange(event) {\n    const actionBars = slotChangeGetAssignedElements(event).filter((el) => el?.matches(\"calcite-action-bar\"));\n    this.actionBars = actionBars;\n    this.setActionBarsLayout(actionBars);\n  }\n  handleHeaderSlotChange(event) {\n    this.hasHeader = slotChangeHasAssignedElement(event);\n  }\n  getResizeIcon() {\n    const { layout } = this;\n    return layout === \"horizontal\" ? \"drag-resize-vertical\" : \"drag-resize-horizontal\";\n  }\n  renderHeader() {\n    return keyed(\"header\", html`<div class=${safeClassMap(CSS.contentHeader)} .hidden=${!this.hasHeader}><slot name=${SLOTS.header} @slotchange=${this.handleHeaderSlotChange}></slot></div>`);\n  }\n  render() {\n    const { collapsed, position, resizable, layout, displayMode, resizeValues } = this;\n    const dir = getElementDir(this.el);\n    const separatorNode = !collapsed && resizable ? keyed(\"resize-handle\", html`<div .ariaLabel=${this.messages.resize} .ariaOrientation=${layout === \"horizontal\" ? \"vertical\" : \"horizontal\"} .ariaValueMax=${layout == \"horizontal\" ? resizeValues.maxBlockSize : resizeValues.maxInlineSize} .ariaValueMin=${layout == \"horizontal\" ? resizeValues.minBlockSize : resizeValues.minInlineSize} .ariaValueNow=${layout == \"horizontal\" ? resizeValues.blockSize : resizeValues.inlineSize} class=${safeClassMap(CSS.resizeHandle)} @keydown=${this.handleKeyDown} role=separator tabindex=0 touch-action=none ${ref(this.setResizeHandleEl)}><div class=${safeClassMap(CSS.resizeHandleBar)}><calcite-icon .icon=${this.getResizeIcon()} scale=s></calcite-icon></div></div>`) : null;\n    const getAnimationDir = () => {\n      if (layout === \"horizontal\") {\n        return position === \"start\" ? CSS_UTILITY.calciteAnimateInDown : CSS_UTILITY.calciteAnimateInUp;\n      } else {\n        const isStart = dir === \"ltr\" && position === \"end\" || dir === \"rtl\" && position === \"start\";\n        return isStart ? CSS_UTILITY.calciteAnimateInLeft : CSS_UTILITY.calciteAnimateInRight;\n      }\n    };\n    const contentNode = html`<div class=${safeClassMap(CSS.contentContainer)}>${keyed(\"content\", html`<div class=${safeClassMap({\n      [CSS_UTILITY.rtl]: dir === \"rtl\",\n      [CSS.content]: true,\n      [CSS.contentOverlay]: displayMode === \"overlay\",\n      [CSS.floatContent]: displayMode === \"float-content\" || displayMode === \"float\",\n      [CSS_UTILITY.calciteAnimate]: displayMode === \"overlay\",\n      [getAnimationDir()]: displayMode === \"overlay\",\n      [getDimensionClass(\"width\", this.width, this.widthScale)]: !!(this.width || this.widthScale),\n      [getDimensionClass(\"height\", this.height, this.heightScale)]: !!(this.height || this.heightScale)\n    })} .hidden=${collapsed} ${ref(this.storeContentEl)}>${this.renderHeader()}<div class=${safeClassMap(CSS.contentBody)}><slot></slot></div>${separatorNode}</div>`)}</div>`;\n    const actionBarNode = keyed(\"action-bar-container\", html`<div class=${safeClassMap(CSS.actionBarContainer)}><slot name=${SLOTS.actionBar} @slotchange=${this.handleActionBarSlotChange}></slot></div>`);\n    const mainNodes = [actionBarNode, contentNode];\n    if (position === \"end\") {\n      mainNodes.reverse();\n    }\n    return html`<div class=${safeClassMap({ [CSS.container]: true, [CSS.floatAll]: displayMode === \"float-all\" })}>${mainNodes}</div>`;\n  }\n}\ncustomElement(\"calcite-shell-panel\", ShellPanel);\nexport {\n  ShellPanel\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["setProxy","controller","host","key","isReactive","assignedToProp","initialExports","genericHost","controllerValueChanged","exports","hostValueChanged","controllerUpdatedExports","component","manager","W","onUpdate","changes","has","value","O","isReadOnly","constructor","elementProperties","get","readOnly","watchExports","bypassReadOnly","makeController","proxy","makeGenericController","FunctionalController","Controller","super","originalExports","this","setAmbientComponent","constructorChangedExports","isPromise","setProvisionalExports","resolved","then","result","catchUpLifecycle","catch","error","P","reject","console","onLoad","async","queueMicrotask","Class","args","ambientControllers","retrieveParentControllers","instance","setParentController","at","bind","setAmbientChildController","hostCandidates","reverse","trackKey","resolution","useWatchAttributes","attributes","callback","AttributeWatchController","isServer","MutationObserver","mutations","forEach","mutation","includes","attributeName","call","el","getAttribute","oldValue","hostConnected","attribute","hasAttribute","observe","attributeOldValue","attributeFilter","hostDisconnected","disconnect","toFunction","makeT9nController","getAssetPath","options","locale","getElementLocales","pending","lang","t9nLocale","componentWithOverrides","onLifecycle","startLocaleObserver","t9nStrings","withoutOverrides","label","componentLabel","applyOverrides","messageOverrides","name","currentValue","rawMessages","updated","deepMerge","blocking","ready","original","overwrites","merged","Object","entries","clamp","min","max","Math","decimalNumberRegex","RegExp","decimalPlaces","match","parseInt","length","getDecimals","parseFloat","toString","split","remap","fromMin","fromMax","toMin","toMax","closeToRangeEdge","range","threshold","useT9n","CSS","SLOTS","styles","css","ShellPanel","LitElement","arguments","actionBars","messages","resizeValues","inlineSize","blockSize","minInlineSize","minBlockSize","maxInlineSize","maxBlockSize","hasHeader","collapsed","displayMode","layout","position","resizable","widthScale","calciteInternalShellPanelResizeEnd","createEvent","cancelable","calciteInternalShellPanelResizeStart","properties","state","reflect","type","Boolean","heightScale","height","width","willUpdate","hasUpdated","setActionBarsLayout","disconnectedCallback","cleanupInteractions","getContentElDOMRect","contentEl","getBoundingClientRect","handleKeyDown","event","defaultPrevented","shiftKey","keys","rect","invertRTL","getElementDir","stepValue","resizeShiftStep","resizeStep","updateSize","size","preventDefault","resizeMin","resizeMax","clamped","rounded","round","style","interaction","unset","setupInteractions","resizeHandleEl","componentOnReady","window","getComputedStyle","values","getStylePixelValue","innerWidth","innerHeight","rtl","interact","context","ownerDocument","edges","top","right","bottom","left","modifiers","restrictSize","listeners","resizestart","emit","resizeend","move","isBlock","storeContentEl","setResizeHandleEl","actionBar","handleActionBarSlotChange","slotChangeGetAssignedElements","filter","matches","handleHeaderSlotChange","slotChangeHasAssignedElement","getResizeIcon","renderHeader","keyed","html","safeClassMap","render","dir","separatorNode","resize","ref","contentNode","CSS_UTILITY","calciteAnimate","getAnimationDir","calciteAnimateInDown","calciteAnimateInUp","calciteAnimateInLeft","calciteAnimateInRight","getDimensionClass","mainNodes","customElement","i","t","e","r","update","s","notifyChildrenConnectedChanged","_$AN","_$AO","o","_$AM","delete","Set","add","c","h","n","_$AH","Array","isArray","CHILD","_$AP","_$AQ","f","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","createRef","WeakMap","G","rt","lt","ct","ht","element","globalThis","set"],"sourceRoot":""}