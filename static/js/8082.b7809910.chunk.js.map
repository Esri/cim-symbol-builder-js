{"version":3,"file":"static/js/8082.b7809910.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/card/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/card/card.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/card/card.scss?tag=calcite-card&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  contentWrapper: \"content-wrapper\",\n  header: \"header\",\n  footer: \"footer\",\n  heading: \"heading\",\n  description: \"description\",\n  checkboxWrapper: \"checkbox-wrapper\",\n  checkboxWrapperDeprecated: \"checkbox-wrapper-deprecated\",\n  thumbnailWrapper: \"thumbnail-wrapper\",\n  headerTextContainer: \"header-text-container\",\n  cardContent: \"card-content\",\n  hasSlottedContent: \"has-slotted-content\",\n};\n\nexport const SLOTS = {\n  thumbnail: \"thumbnail\",\n  heading: \"heading\",\n  description: \"description\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n  title: \"title\",\n  subtitle: \"subtitle\",\n};\n\nexport const ICONS = {\n  selected: \"check-square-f\",\n  unselected: \"square\",\n  selectedSingle: \"circle-f\",\n  unselectedSingle: \"circle\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { LogicalFlowPosition, SelectionMode } from \"../interfaces\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\nimport { CardMessages } from \"./assets/card/t9n\";\n\n/**\n * @slot - A slot for adding content.\n * @slot title - [Deprecated] use `heading` instead. A slot for adding a heading.\n * @slot subtitle - [Deprecated] use `description` instead. A slot for adding a description.\n * @slot thumbnail - A slot for adding a thumbnail.\n * @slot heading - A slot for adding a heading.\n * @slot description - A slot for adding a description.\n * @slot footer-start - A slot for adding a leading footer.\n * @slot footer-end - A slot for adding a trailing footer.\n */\n\n@Component({\n  tag: \"calcite-card\",\n  styleUrl: \"card.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Card\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**  When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /** Sets the placement of the thumbnail defined in the `thumbnail` slot. */\n  @Prop({ reflect: true }) thumbnailPosition: LogicalFlowPosition = \"block-start\";\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * When `true`, the component is selectable.\n   *\n   * @deprecated use `selectionMode` property on a parent `calcite-card-group` instead.\n   */\n  @Prop({ reflect: true }) selectable = false;\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: CardMessages;\n\n  /**\n   * This internal property, managed by a containing `calcite-card-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<CardMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the deprecated `selectable` is true, or `selectionMode` set on parent `calcite-card-group` is not `none` and the component is selected. */\n  @Event({ cancelable: false }) calciteCardSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalCardKeyEvent: EventEmitter<KeyboardEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled) {\n      this.containerEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCardElement;\n\n  @State() effectiveLocale: string;\n\n  @State() hasThumbnail = false;\n\n  @State() hasHeading = false;\n\n  @State() hasDescription = false;\n\n  @State() hasSubtitle = false;\n\n  @State() hasTitle = false;\n\n  @State() hasFooterStart = false;\n\n  @State() hasFooterEnd = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: CardMessages;\n\n  @State() private hasContent = false;\n\n  private containerEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private handleThumbnailSlotChange = (event: Event): void => {\n    this.hasThumbnail = slotChangeHasAssignedElement(event);\n  };\n\n  private handleHeadingSlotChange = (event: Event): void => {\n    this.hasHeading = slotChangeHasAssignedElement(event);\n  };\n\n  private handleDescriptionSlotChange = (event: Event): void => {\n    this.hasDescription = slotChangeHasAssignedElement(event);\n  };\n\n  private handleTitleSlotChange = (event: Event): void => {\n    this.hasTitle = slotChangeHasAssignedElement(event);\n  };\n\n  private handleSubtitleSlotChange = (event: Event): void => {\n    this.hasSubtitle = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFooterStartSlotChange = (event: Event): void => {\n    this.hasFooterStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFooterEndSlotChange = (event: Event): void => {\n    this.hasFooterEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasAssignedElement(event);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.target === this.containerEl && !this.selectable && !this.disabled) {\n      if (isActivationKey(event.key) && this.selectionMode !== \"none\") {\n        this.calciteCardSelect.emit();\n        event.preventDefault();\n      } else {\n        switch (event.key) {\n          case \"ArrowRight\":\n          case \"ArrowLeft\":\n          case \"Home\":\n          case \"End\":\n            this.calciteInternalCardKeyEvent.emit(event);\n            event.preventDefault();\n            break;\n        }\n      }\n    }\n  };\n\n  private cardBodyClickHandler = (event: MouseEvent): void => {\n    const isFromScreenReader = event.target === this.containerEl;\n    if (isFromScreenReader && !this.selectable && !this.disabled && this.selectionMode !== \"none\") {\n      this.calciteCardSelect.emit();\n    }\n  };\n\n  private renderCheckboxDeprecated(): VNode {\n    return (\n      <calcite-label class={CSS.checkboxWrapperDeprecated}>\n        <calcite-checkbox\n          checked={this.selected}\n          label={this.messages.select}\n          onClick={this.selectCardDeprecated}\n          onKeyDown={this.cardSelectKeyDownDeprecated}\n        />\n      </calcite-label>\n    );\n  }\n\n  private cardSelectKeyDownDeprecated = (event: KeyboardEvent): void => {\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        this.selectCardDeprecated();\n        event.preventDefault();\n        break;\n    }\n  };\n\n  private selectCardDeprecated = (): void => {\n    this.selected = !this.selected;\n    this.calciteCardSelect.emit();\n  };\n\n  private cardSelectClick = (event): void => {\n    if (!this.disabled) {\n      event.preventDefault();\n      this.calciteCardSelect.emit();\n      this.setFocus();\n    }\n  };\n\n  private renderThumbnail(): VNode {\n    return (\n      <section class={CSS.thumbnailWrapper} hidden={!this.hasThumbnail}>\n        <slot name={SLOTS.thumbnail} onSlotchange={this.handleThumbnailSlotChange} />\n      </section>\n    );\n  }\n\n  private renderSelectionIcon(): VNode {\n    const icon: IconNameOrString =\n      this.selectionMode === \"multiple\" && this.selected\n        ? ICONS.selected\n        : this.selectionMode === \"multiple\"\n          ? ICONS.unselected\n          : this.selected\n            ? ICONS.selectedSingle\n            : ICONS.unselectedSingle;\n\n    return (\n      <div class={CSS.checkboxWrapper} onPointerDown={this.cardSelectClick} tabIndex={-1}>\n        <calcite-icon icon={icon} scale=\"s\" />\n      </div>\n    );\n  }\n\n  private renderHeader(): VNode {\n    const hasHeader = this.hasHeading || this.hasDescription;\n    const hasDeprecatedHeader = this.hasSubtitle || this.hasTitle;\n    const showHeader = hasHeader || hasDeprecatedHeader;\n\n    return (\n      <header class={CSS.header} hidden={!showHeader}>\n        {this.selectable ? this.renderCheckboxDeprecated() : null}\n        <div class={CSS.headerTextContainer}>\n          <slot name={SLOTS.heading} onSlotchange={this.handleHeadingSlotChange} />\n          <slot name={SLOTS.description} onSlotchange={this.handleDescriptionSlotChange} />\n          <slot name={SLOTS.title} onSlotchange={this.handleTitleSlotChange} />\n          <slot name={SLOTS.subtitle} onSlotchange={this.handleSubtitleSlotChange} />\n        </div>\n        {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n      </header>\n    );\n  }\n\n  private renderFooter(): VNode {\n    const hasFooter = this.hasFooterStart || this.hasFooterEnd;\n    return (\n      <footer class={CSS.footer} hidden={!hasFooter}>\n        <slot name={SLOTS.footerStart} onSlotchange={this.handleFooterStartSlotChange} />\n        <slot name={SLOTS.footerEnd} onSlotchange={this.handleFooterEndSlotChange} />\n      </footer>\n    );\n  }\n\n  render(): VNode {\n    const thumbnailInline = this.thumbnailPosition.startsWith(\"inline\");\n    const thumbnailStart = this.thumbnailPosition.endsWith(\"start\");\n    const role =\n      this.selectionMode === \"multiple\"\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\"\n          ? \"radio\"\n          : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={this.selectionMode !== \"none\" ? toAriaBoolean(this.selected) : undefined}\n            aria-label={this.label}\n            class={{ [CSS.contentWrapper]: true, inline: thumbnailInline }}\n            onClick={this.cardBodyClickHandler}\n            onKeyDown={this.keyDownHandler}\n            ref={(el) => (this.containerEl = el)}\n            role={role}\n            tabIndex={!this.selectable || this.disabled ? 0 : -1}\n          >\n            {this.loading ? (\n              <div aria-live=\"polite\" class=\"calcite-card-loader-container\">\n                <calcite-loader label={this.messages.loading} />\n              </div>\n            ) : null}\n            {thumbnailStart && this.renderThumbnail()}\n            <section aria-busy={toAriaBoolean(this.loading)} class={{ [CSS.container]: true }}>\n              {this.renderHeader()}\n              <div\n                class={{\n                  [CSS.cardContent]: true,\n                  [CSS.hasSlottedContent]: this.hasContent,\n                }}\n              >\n                <slot onSlotchange={this.handleDefaultSlotChange} />\n              </div>\n              {this.renderFooter()}\n            </section>\n            {!thumbnailStart && this.renderThumbnail()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-card-accent-color-selected: Specifies the component's accent color when `selected`.\n * @prop --calcite-card-background-color: Specifies the component's background color.\n * @prop --calcite-card-border-color: Specifies the component's border color.\n * @prop --calcite-card-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-card-selection-background-color-active: [Deprecated] Use `--calcite-card-selection-background-color-press`. Specifies the component's selection element background color when active.\n * @prop --calcite-card-selection-background-color-hover: Specifies the component's selection element background color when hovered.\n * @prop --calcite-card-selection-background-color-press: Specifies the component's selection element background color when active.\n * @prop --calcite-card-selection-background-color-selected: [Deprecated] Use `--calcite-card-background-color`. Specifies the component's selection element icon color when `selected`.\n * @prop --calcite-card-selection-background-color: [Deprecated] Use `--calcite-card-background-color`. Specifies the component's selection element background color.\n * @prop --calcite-card-selection-color-hover: Specifies the component's selection element color when hovered or focused.\n * @prop --calcite-card-selection-color: Specifies the component's selection element color.\n * @prop --calcite-card-selection-icon-color-hover: [Deprecated] Use `--calcite-card-selection-color-hover`. Specifies the component's selection element icon color when hovered.\n * @prop --calcite-card-selection-icon-color-selected: [Deprecated] Use `--calcite-card-accent-color-selected`. Specifies the component's selection element icon color when `selected`.\n * @prop --calcite-card-selection-icon-color: [Deprecated] Use `--calcite-card-selection-color`. Specifies the component's selection element icon color.\n * @prop --calcite-card-shadow: Specifies the component's shadow.\n *\n */\n\n:host {\n  @apply block max-w-full;\n}\n\n.content-wrapper {\n  @apply relative\n    flex\n    h-full\n    flex-col\n    justify-between\n    overflow-hidden;\n  border: var(--calcite-border-width-sm) solid var(--calcite-card-border-color, var(--calcite-color-border-3));\n  border-radius: var(--calcite-card-corner-radius, var(--calcite-corner-radius-sharp));\n  background-color: var(--calcite-card-background-color, var(--calcite-color-foreground-1));\n  box-shadow: var(--calcite-card-shadow, var(--calcite-shadow-none));\n  pointer-events: none;\n}\n\n::slotted(*) {\n  @apply pointer-events-auto;\n}\n\n:host(:not([selectable])) {\n  .content-wrapper {\n    &:not(.non-interactive) {\n      @apply focus-base;\n    }\n    &:not(.non-interactive):focus {\n      @apply focus-outset;\n    }\n  }\n}\n\n.container {\n  @apply relative flex flex-auto flex-col;\n}\n\n:host([loading]) .content-wrapper *:not(calcite-loader):not(.calcite-card-loader-container) {\n  @apply pointer-events-none;\n  opacity: $calcite-opacity-0;\n}\n\n:host([loading]) .calcite-card-loader-container {\n  @apply absolute inset-0 flex items-center;\n}\n\n.header {\n  @apply flex flex-row items-start;\n}\n\n.footer {\n  @apply flex mt-auto flex-row content-between justify-between;\n  padding-inline: var(--calcite-spacing-md);\n  padding-block-start: var(--calcite-spacing-xxs);\n  padding-block-end: var(--calcite-spacing-md);\n}\n\n.header-text-container {\n  @apply flex flex-col px-3 py-2 w-full justify-center;\n  &:not(:only-child) {\n    @apply pr-0.5;\n  }\n}\n\n.footer {\n  @apply mt-auto flex-row content-between\n    justify-between\n    px-3\n    pt-1\n    pb-3;\n}\n\n.card-content {\n  @apply h-auto text-n2-wrap;\n}\n\n.has-slotted-content {\n  @apply p-3;\n}\n\n:host([selected]) .content-wrapper {\n  box-shadow: inset 0 -4px 0 0 var(--calcite-card-accent-color-selected, var(--calcite-color-brand));\n}\n\n:host([selectable]) .header {\n  padding-inline-end: var(--calcite-spacing-xxxl);\n}\n\n@include slotted(\"title\", \"*\") {\n  @apply text-color-1\n    text-n1-wrap\n    m-0\n    font-medium;\n}\n\n@include slotted(\"subtitle\", \"*\") {\n  @apply text-color-2\n    text-n2-wrap\n    m-0 mt-0.5\n    font-normal;\n}\n\n@include slotted(\"heading\", \"*\") {\n  @apply text-color-1\n    text-n1-wrap\n    m-0\n    font-medium;\n}\n\n@include slotted(\"description\", \"*\") {\n  @apply text-color-2\n    text-n2-wrap\n    m-0 mt-0.5\n    font-normal;\n}\n\n@include slotted(\"thumbnail\", \"img\") {\n  @apply min-w-full max-w-full;\n}\n\n@include slotted(\"footer-start\", \"*\") {\n  @apply text-n2-wrap self-center;\n  margin-inline-end: auto;\n}\n\n@include slotted(\"footer-end\", \"*\") {\n  @apply text-n2-wrap self-center;\n}\n\n// deprecated\n.checkbox-wrapper-deprecated {\n  @apply absolute pointer-events-auto;\n  inset-block-start: var(--calcite-spacing-sm);\n  inset-inline-end: var(--calcite-spacing-sm);\n  margin: 0;\n  padding: 0;\n  color: var(--calcite-card-selection-color, var(--calcite-color-text-3));\n\n  &:hover {\n    background-color: var(--calcite-card-selection-background-color-hover, var(--calcite-color-foreground-2));\n    color: var(\n      --calcite-card-selection-color-hover,\n      var(--calcite-card-selection-icon-color-hover, var(--calcite-color-text-2))\n    );\n  }\n  &:active {\n    background-color: var(--calcite-card-selection-background-color-press, var(--calcite-color-transparent-press));\n  }\n}\n\n.checkbox-wrapper {\n  @apply m-2 p-2 focus-base cursor-pointer pointer-events-auto;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  color: var(--calcite-card-selection-color, var(--calcite-color-text-3));\n\n  &:hover {\n    background-color: var(--calcite-card-selection-background-color-hover, var(--calcite-color-foreground-2));\n    color: var(\n      --calcite-card-selection-color-hover,\n      var(--calcite-card-selection-icon-color-hover, var(--calcite-color-text-2))\n    );\n  }\n  &:active {\n    background-color: var(--calcite-card-selection-background-color-press, var(--calcite-color-transparent-press));\n  }\n  & calcite-icon {\n    pointer-events: none;\n  }\n}\n\n:host([selected]) {\n  .checkbox-wrapper-deprecated,\n  .checkbox-wrapper {\n    color: var(\n      --calcite-card-accent-color-selected,\n      var(--calcite-card-selection-icon-color-selected, var(--calcite-color-brand))\n    );\n  }\n}\n\n:host(:not([selectable])) .content-wrapper:not(.non-interactive):focus {\n  .checkbox-wrapper-deprecated,\n  .checkbox-wrapper {\n    background-color: var(--calcite-card-selection-background-color-hover, var(--calcite-color-foreground-2));\n    color: var(\n      --calcite-card-selection-color-hover,\n      var(--calcite-card-selection-icon-color-hover, var(--calcite-color-text-2))\n    );\n  }\n}\n\n:host([selected]:not([selectable])) .content-wrapper:not(.non-interactive):focus {\n  .checkbox-wrapper-deprecated,\n  .checkbox-wrapper {\n    background-color: var(--calcite-card-selection-background-color-press, var(--calcite-color-transparent-press));\n    color: var(\n      --calcite-card-accent-color-selected,\n      var(--calcite-card-selection-icon-color-selected, var(--calcite-color-brand))\n    );\n  }\n}\n/* end deprecated */\n\n.thumbnail-wrapper {\n  @apply flex;\n}\n\n.content-wrapper.inline {\n  @apply flex-row;\n\n  & > .container {\n    @apply w-3/5;\n  }\n  & > .thumbnail-wrapper {\n    @apply items-start w-2/5;\n  }\n\n  @include slotted(\"thumbnail\", \"img\") {\n    @apply w-full;\n  }\n}\n\nslot[name=\"footer-start\"]::slotted(*),\nslot[name=\"footer-end\"]::slotted(*) {\n  @apply flex gap-1;\n}\n\n@include base-component();\n@include disabled();\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","SLOTS","ICONS","Card","handleThumbnailSlotChange","event","this","hasThumbnail","slotChangeHasAssignedElement","handleHeadingSlotChange","hasHeading","handleDescriptionSlotChange","hasDescription","handleTitleSlotChange","hasTitle","handleSubtitleSlotChange","hasSubtitle","handleFooterStartSlotChange","hasFooterStart","handleFooterEndSlotChange","hasFooterEnd","handleDefaultSlotChange","hasContent","keyDownHandler","target","containerEl","selectable","disabled","isActivationKey","key","selectionMode","calciteCardSelect","emit","preventDefault","calciteInternalCardKeyEvent","cardBodyClickHandler","cardSelectKeyDownDeprecated","selectCardDeprecated","selected","cardSelectClick","setFocus","onMessagesChange","componentFocusable","focus","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","effectiveLocaleChange","updateMessages","effectiveLocale","renderCheckboxDeprecated","h","class","checked","label","messages","select","onClick","onKeyDown","renderThumbnail","hidden","name","onSlotchange","renderSelectionIcon","icon","onPointerDown","tabIndex","scale","renderHeader","hasHeader","hasDeprecatedHeader","showHeader","renderFooter","hasFooter","render","thumbnailInline","thumbnailPosition","startsWith","thumbnailStart","endsWith","role","undefined","Host","InteractiveContainer","toAriaBoolean","inline","ref","el","loading","interceptedClick","HTMLElement","prototype","click","call","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","requestAnimationFrame","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","tagName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}