{"version":3,"file":"static/js/1077.9849167d.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/calcite-value-list_2.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './index-1f9b54dc.js';\nimport { S as Sortable } from './sortable.esm-8be1d379.js';\nimport { g as getItemIndex, m as mutationObserverCallback, d as deselectRemovedItems, a as deselectSiblingItems, s as selectSiblings, h as handleFilter, b as getItemData, k as keyDownHandler, c as moveItemIndex, i as initialize, e as initializeObserver, f as cleanUpObserver, j as calciteListFocusOutHandler, r as removeItem, l as calciteListItemChangeHandler, n as calciteInternalListItemValueChangeHandler, o as setUpItems, p as setFocus, L as List, I as ICON_TYPES$1, C as CSS$1, S as SLOTS$1 } from './resources-3e3255c7.js';\nimport { c as createObserver } from './observers-9f44e9b3.js';\nimport { u as updateHostInteraction } from './interactive-5db230e8.js';\nimport { g as guid } from './guid-9f15e57a.js';\nimport { g as getSlotted } from './dom-8f0a9ff2.js';\nimport { c as connectConditionalSlotComponent, d as disconnectConditionalSlotComponent } from './conditionalSlot-a3e8c63a.js';\nimport './array-03a17827.js';\nimport './debounce-d85a6654.js';\nimport './resources-9c476cb6.js';\n\nconst CSS = {\n  container: \"container\",\n  handle: \"handle\"\n};\nvar ICON_TYPES;\n(function (ICON_TYPES) {\n  ICON_TYPES[\"grip\"] = \"grip\";\n})(ICON_TYPES || (ICON_TYPES = {}));\n\nfunction getScreenReaderText(item, status, valueList) {\n  const { items, intlDragHandleIdle, intlDragHandleActive, intlDragHandleChange, intlDragHandleCommit } = valueList;\n  const total = items.length;\n  const position = getItemIndex(valueList, item) + 1;\n  if (status === \"idle\") {\n    const idleText = intlDragHandleIdle\n      ? replacePlaceholders(intlDragHandleIdle, item.label, position, total)\n      : `${item.label}, press space and use arrow keys to reorder content. Current position ${position} of ${total}.`;\n    return idleText;\n  }\n  else if (status === \"active\") {\n    const activeText = intlDragHandleActive\n      ? replacePlaceholders(intlDragHandleActive, item.label, position, total)\n      : `Reordering ${item.label}, current position ${position} of ${total}.`;\n    return activeText;\n  }\n  else if (status === \"change\") {\n    const changeText = intlDragHandleChange\n      ? replacePlaceholders(intlDragHandleChange, item.label, position, total)\n      : `${item.label}, new position ${position} of ${total}. Press space to confirm.`;\n    return changeText;\n  }\n  else {\n    const commitText = intlDragHandleCommit\n      ? replacePlaceholders(intlDragHandleCommit, item.label, position, total)\n      : `${item.label}, current position ${position} of ${total}.`;\n    return commitText;\n  }\n}\nfunction getHandleAndItemElement(event) {\n  const handle = event\n    .composedPath()\n    .find((item) => { var _a; return ((_a = item.dataset) === null || _a === void 0 ? void 0 : _a.jsHandle) !== undefined; });\n  const item = event\n    .composedPath()\n    .find((item) => { var _a; return ((_a = item.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === \"calcite-value-list-item\"; });\n  return { handle, item };\n}\nfunction replacePlaceholders(text, label, position, total) {\n  const replacePosition = text.replace(\"${position}\", position.toString());\n  const replaceLabel = replacePosition.replace(\"${item.label}\", label);\n  return replaceLabel.replace(\"${total}\", total.toString());\n}\n\nconst valueListCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host{position:relative;box-sizing:border-box;display:flex;flex-shrink:0;flex-grow:0;flex-direction:column;align-items:stretch;background-color:transparent;font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2)}:host *{box-sizing:border-box}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}calcite-value-list-item:last-of-type{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([filter-enabled]) header{margin-block-end:0.25rem;display:flex;align-items:center;justify-content:flex-end;background-color:var(--calcite-ui-foreground-1);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([filter-enabled]) header.sticky-pos{position:sticky;inset-block-start:0px;z-index:300}calcite-filter{margin-block-end:1px}\";\n\nconst ValueList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.calciteListChange = createEvent(this, \"calciteListChange\", 6);\n    this.calciteListOrderChange = createEvent(this, \"calciteListOrderChange\", 6);\n    // --------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * When `true`, interaction is prevented and the component is displayed with lower opacity.\n     */\n    this.disabled = false;\n    /**\n     * When `true`, `calcite-value-list-item`s are sortable via a draggable button.\n     */\n    this.dragEnabled = false;\n    /**\n     * When `true`, an input appears at the top of the component that can be used by end users to filter list items.\n     */\n    this.filterEnabled = false;\n    /**\n     * When `true`, a busy indicator is displayed.\n     */\n    this.loading = false;\n    /**\n     * Similar to standard radio buttons and checkboxes.\n     * When `true`, a user can select multiple `calcite-value-list-item`s at a time.\n     * When `false`, only a single `calcite-value-list-item` can be selected at a time,\n     * and a new selection will deselect previous selections.\n     */\n    this.multiple = false;\n    /**\n     * When `true` and single-selection is enabled, the selection changes when navigating `calcite-value-list-item`s via keyboard.\n     */\n    this.selectionFollowsFocus = false;\n    // --------------------------------------------------------------------------\n    //\n    //  Private Properties\n    //\n    // --------------------------------------------------------------------------\n    this.selectedValues = new Map();\n    this.dataForFilter = [];\n    this.lastSelectedItem = null;\n    this.mutationObserver = createObserver(\"mutation\", mutationObserverCallback.bind(this));\n    this.setFilterEl = (el) => {\n      this.filterEl = el;\n    };\n    this.deselectRemovedItems = deselectRemovedItems.bind(this);\n    this.deselectSiblingItems = deselectSiblingItems.bind(this);\n    this.selectSiblings = selectSiblings.bind(this);\n    this.handleFilter = handleFilter.bind(this);\n    this.getItemData = getItemData.bind(this);\n    this.keyDownHandler = (event) => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const { handle, item } = getHandleAndItemElement(event);\n      if (handle && !item.handleActivated && event.key === \" \") {\n        this.updateScreenReaderText(getScreenReaderText(item, \"commit\", this));\n      }\n      if (!handle || !item.handleActivated) {\n        keyDownHandler.call(this, event);\n        return;\n      }\n      const { items } = this;\n      if (event.key === \" \") {\n        this.updateScreenReaderText(getScreenReaderText(item, \"active\", this));\n      }\n      if ((event.key !== \"ArrowUp\" && event.key !== \"ArrowDown\") || items.length <= 1) {\n        return;\n      }\n      event.preventDefault();\n      const { el } = this;\n      const nextIndex = moveItemIndex(this, item, event.key === \"ArrowUp\" ? \"up\" : \"down\");\n      if (nextIndex === items.length - 1) {\n        el.appendChild(item);\n      }\n      else {\n        const itemAtNextIndex = el.children[nextIndex];\n        const insertionReferenceItem = itemAtNextIndex === item.nextElementSibling\n          ? itemAtNextIndex.nextElementSibling\n          : itemAtNextIndex;\n        el.insertBefore(item, insertionReferenceItem);\n      }\n      this.items = this.getItems();\n      this.calciteListOrderChange.emit(this.items.map(({ value }) => value));\n      requestAnimationFrame(() => handle === null || handle === void 0 ? void 0 : handle.focus());\n      item.handleActivated = true;\n      this.updateHandleAriaLabel(handle, getScreenReaderText(item, \"change\", this));\n    };\n    this.storeAssistiveEl = (el) => {\n      this.assistiveTextEl = el;\n    };\n    this.handleFocusIn = (event) => {\n      const { handle, item } = getHandleAndItemElement(event);\n      if (!(item === null || item === void 0 ? void 0 : item.handleActivated) && item && handle) {\n        this.updateHandleAriaLabel(handle, getScreenReaderText(item, \"idle\", this));\n      }\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    initialize.call(this);\n    initializeObserver.call(this);\n  }\n  componentDidLoad() {\n    this.setUpDragAndDrop();\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  disconnectedCallback() {\n    cleanUpObserver.call(this);\n    this.cleanUpDragAndDrop();\n  }\n  calciteListFocusOutHandler(event) {\n    calciteListFocusOutHandler.call(this, event);\n  }\n  calciteListItemRemoveHandler(event) {\n    removeItem.call(this, event);\n  }\n  calciteListItemChangeHandler(event) {\n    calciteListItemChangeHandler.call(this, event);\n  }\n  calciteInternalListItemPropsChangeHandler(event) {\n    event.stopPropagation();\n    this.setUpFilter();\n  }\n  calciteInternalListItemValueChangeHandler(event) {\n    calciteInternalListItemValueChangeHandler.call(this, event);\n    event.stopPropagation();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n  getItems() {\n    return Array.from(this.el.querySelectorAll(\"calcite-value-list-item\"));\n  }\n  setUpItems() {\n    setUpItems.call(this, \"calcite-value-list-item\");\n  }\n  setUpFilter() {\n    if (this.filterEnabled) {\n      this.dataForFilter = this.getItemData();\n    }\n  }\n  setUpDragAndDrop() {\n    this.cleanUpDragAndDrop();\n    if (!this.dragEnabled) {\n      return;\n    }\n    this.sortable = Sortable.create(this.el, {\n      dataIdAttr: \"id\",\n      handle: `.${CSS.handle}`,\n      draggable: \"calcite-value-list-item\",\n      group: this.group,\n      onSort: () => {\n        this.items = Array.from(this.el.querySelectorAll(\"calcite-value-list-item\"));\n        const values = this.items.map((item) => item.value);\n        this.calciteListOrderChange.emit(values);\n      }\n    });\n  }\n  cleanUpDragAndDrop() {\n    var _a;\n    (_a = this.sortable) === null || _a === void 0 ? void 0 : _a.destroy();\n    this.sortable = null;\n  }\n  handleBlur() {\n    if (this.dragEnabled) {\n      this.updateScreenReaderText(\"\");\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  /** Returns the currently selected items */\n  async getSelectedItems() {\n    return this.selectedValues;\n  }\n  /**\n   * Sets focus on the component.\n   *\n   * @param focusId\n   */\n  async setFocus(focusId) {\n    return setFocus.call(this, focusId);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  getIconType() {\n    let type = null;\n    if (this.dragEnabled) {\n      type = ICON_TYPES.grip;\n    }\n    return type;\n  }\n  updateScreenReaderText(text) {\n    this.assistiveTextEl.textContent = text;\n  }\n  updateHandleAriaLabel(handleElement, text) {\n    handleElement.ariaLabel = text;\n  }\n  render() {\n    return (h(List, { onBlur: this.handleBlur, onFocusin: this.handleFocusIn, onKeyDown: this.keyDownHandler, props: this }));\n  }\n  get el() { return getElement(this); }\n};\nValueList.style = valueListCss;\n\nconst ICONS = {\n  drag: \"drag\"\n};\nconst SLOTS = {\n  actionsEnd: \"actions-end\",\n  actionsStart: \"actions-start\"\n};\n\nconst valueListItemCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host{margin-block-end:1px;box-sizing:border-box;display:flex;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);transition:background-color var(--calcite-animation-timing), box-shadow var(--calcite-animation-timing)}:host *{box-sizing:border-box}calcite-pick-list-item{position:relative;margin:0px;flex-grow:1;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([active]),:host([selected]){--tw-shadow:0 0 0 1px var(--calcite-ui-brand);--tw-shadow-colored:0 0 0 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.handle{display:flex;cursor:move;align-items:center;justify-content:center;border-style:none;background-color:transparent;padding-block:0px;padding-inline:0.25rem;color:var(--calcite-ui-border-input);outline-color:transparent}.handle:hover{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}.handle:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}.handle--activated{background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-1)}.handle calcite-icon{color:inherit}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}\";\n\nconst ValueListItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.calciteListItemRemove = createEvent(this, \"calciteListItemRemove\", 7);\n    /**\n     * When `true`, interaction is prevented and the component is displayed with lower opacity.\n     */\n    this.disabled = false;\n    /**\n     * @internal\n     */\n    this.disableDeselect = false;\n    /**\n     * When `true`, prevents the content of the component from user interaction.\n     */\n    this.nonInteractive = false;\n    /**\n     * @internal\n     */\n    this.handleActivated = false;\n    /**\n     * Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.\n     *\n     * @see [ICON_TYPES](https://github.com/Esri/calcite-components/blob/master/src/components/pick-list/resources.ts#L5)\n     */\n    this.icon = null;\n    /**\n     * When `true`, adds an action to remove the component.\n     */\n    this.removable = false;\n    /**\n     * When `true`, the component is selected.\n     */\n    this.selected = false;\n    this.pickListItem = null;\n    this.guid = `calcite-value-list-item-${guid()}`;\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.getPickListRef = (el) => (this.pickListItem = el);\n    this.handleKeyDown = (event) => {\n      if (event.key === \" \") {\n        this.handleActivated = !this.handleActivated;\n      }\n    };\n    this.handleBlur = () => {\n      this.handleActivated = false;\n    };\n    this.handleSelectChange = (event) => {\n      this.selected = event.detail.selected;\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectConditionalSlotComponent(this);\n  }\n  disconnectedCallback() {\n    disconnectConditionalSlotComponent(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this, this.el.closest(\"calcite-value-list\") ? \"managed\" : false);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * Toggle the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  async toggleSelected(coerce) {\n    this.pickListItem.toggleSelected(coerce);\n  }\n  /** Set focus on the component. */\n  async setFocus() {\n    var _a;\n    (_a = this.pickListItem) === null || _a === void 0 ? void 0 : _a.setFocus();\n  }\n  calciteListItemChangeHandler(event) {\n    // adjust item payload from wrapped item before bubbling\n    event.detail.item = this.el;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderActionsEnd() {\n    const { el } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n    return hasActionsEnd ? (h(\"slot\", { name: SLOTS.actionsEnd, slot: SLOTS$1.actionsEnd })) : null;\n  }\n  renderActionsStart() {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n    return hasActionsStart ? (h(\"slot\", { name: SLOTS.actionsStart, slot: SLOTS$1.actionsStart })) : null;\n  }\n  renderHandle() {\n    const { icon } = this;\n    if (icon === ICON_TYPES$1.grip) {\n      return (h(\"span\", { class: {\n          [CSS$1.handle]: true,\n          [CSS$1.handleActivated]: this.handleActivated\n        }, \"data-js-handle\": true, onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, role: \"button\", tabindex: \"0\" }, h(\"calcite-icon\", { icon: ICONS.drag, scale: \"s\" })));\n    }\n  }\n  render() {\n    return (h(Host, { id: this.el.id || this.guid }, this.renderHandle(), h(\"calcite-pick-list-item\", { description: this.description, disableDeselect: this.disableDeselect, disabled: this.disabled, label: this.label, metadata: this.metadata, nonInteractive: this.nonInteractive, onCalciteListItemChange: this.handleSelectChange, ref: this.getPickListRef, removable: this.removable, selected: this.selected, value: this.value }, this.renderActionsStart(), this.renderActionsEnd())));\n  }\n  get el() { return getElement(this); }\n};\nValueListItem.style = valueListItemCss;\n\nexport { ValueList as calcite_value_list, ValueListItem as calcite_value_list_item };\n"],"names":["CSS","ICON_TYPES","getScreenReaderText","item","status","valueList","items","intlDragHandleIdle","intlDragHandleActive","intlDragHandleChange","intlDragHandleCommit","total","length","position","getItemIndex","replacePlaceholders","label","getHandleAndItemElement","event","handle","composedPath","find","_a","undefined","dataset","jsHandle","tagName","toLowerCase","text","replace","toString","ValueList","constructor","hostRef","registerInstance","this","calciteListChange","createEvent","calciteListOrderChange","disabled","dragEnabled","filterEnabled","loading","multiple","selectionFollowsFocus","selectedValues","Map","dataForFilter","lastSelectedItem","mutationObserver","createObserver","mutationObserverCallback","setFilterEl","el","filterEl","deselectRemovedItems","deselectSiblingItems","selectSiblings","handleFilter","getItemData","keyDownHandler","defaultPrevented","handleActivated","key","updateScreenReaderText","preventDefault","nextIndex","moveItemIndex","appendChild","itemAtNextIndex","children","insertionReferenceItem","nextElementSibling","insertBefore","getItems","emit","map","value","requestAnimationFrame","focus","updateHandleAriaLabel","storeAssistiveEl","assistiveTextEl","handleFocusIn","connectedCallback","initialize","initializeObserver","componentDidLoad","setUpDragAndDrop","componentDidRender","updateHostInteraction","disconnectedCallback","cleanUpObserver","cleanUpDragAndDrop","calciteListFocusOutHandler","calciteListItemRemoveHandler","removeItem","calciteListItemChangeHandler","calciteInternalListItemPropsChangeHandler","stopPropagation","setUpFilter","calciteInternalListItemValueChangeHandler","Array","from","querySelectorAll","setUpItems","sortable","Sortable","dataIdAttr","draggable","group","onSort","values","destroy","handleBlur","focusId","setFocus","getIconType","type","grip","textContent","handleElement","ariaLabel","render","h","List","onBlur","onFocusin","onKeyDown","props","getElement","style","ICONS","SLOTS","ValueListItem","calciteListItemRemove","disableDeselect","nonInteractive","icon","removable","selected","pickListItem","guid","getPickListRef","handleKeyDown","handleSelectChange","detail","connectConditionalSlotComponent","disconnectConditionalSlotComponent","closest","coerce","toggleSelected","renderActionsEnd","getSlotted","name","slot","SLOTS$1","renderActionsStart","renderHandle","ICON_TYPES$1","class","CSS$1","role","tabindex","scale","Host","id","description","metadata","onCalciteListItemChange","ref"],"sourceRoot":""}