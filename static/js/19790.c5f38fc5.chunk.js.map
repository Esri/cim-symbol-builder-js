{"version":3,"file":"static/js/19790.c5f38fc5.chunk.js","mappings":";sMAQA,MAEMA,GAAuBC,EAAAA,EAAAA,IAAmB,cAAcC,EAAAA,GAC5DC,cACEC,QACAC,KAAKC,iBACLD,KAAKE,iBACLF,KAAKG,6BAA8BC,EAAAA,EAAAA,IAAYJ,KAAM,8BAA+B,GACpFA,KAAKK,kBAAmBC,EAAAA,EAAAA,GAAe,YAAY,KACjDN,KAAKO,kCACLP,KAAKG,4BAA4BK,UAEnCR,KAAKS,UAAW,EAChBT,KAAKU,WAAQC,EACbX,KAAKY,cAAWD,EAChBX,KAAKa,WAAQF,EAEfG,iBAAiBC,EAAWC,EAAWC,GACpB,UAAbA,GAAqC,UAAbA,GAC1BjB,KAAKO,kCAEPP,KAAKG,4BAA4BK,OAOnCD,kCACE,MAAQW,IAAI,YAAEC,GAAR,mBAAuBC,EAAvB,mBAA2CC,EAA3C,MAA+DX,EAA/D,MAAsEG,GAAWb,KAClFU,GAASA,IAAUU,IACtBpB,KAAKU,MAAQS,EACbnB,KAAKoB,mBAAqBD,GAEf,MAATN,GACFA,IAAUQ,IACVrB,KAAKa,MAAQM,EACbnB,KAAKqB,mBAAqBF,GAQ9BG,oBACEtB,KAAKO,kCACLP,KAAKK,kBAAkBkB,QAAQvB,KAAKkB,GAAI,CACtCM,gBAAiB,CAAC,QAAS,SAC3BC,eAAe,EACfC,WAAW,EACXC,SAAS,IAGbC,uBACE5B,KAAKK,kBAAkBwB,aAOzBC,SACE,OAAOC,EAAAA,EAAAA,GAAE,OAAQ,KAAM/B,KAAKU,OAE1BQ,SAAO,OAAOlB,KACPgC,sBAAa,MAAO,CAC7B,SAAY,CAAC,oBACb,MAAS,CAAC,oBACV,SAAY,CAAC,oBACb,MAAS,CAAC,qBAEDC,mBAAU,MAxEL,4EAyEf,CAAC,EAAG,iBAAkB,CACrB,SAAY,CAAC,KACb,MAAS,CAAC,MACV,SAAY,CAAC,KACb,MAAS,CAAC,SAEd,SAASC,IACP,GAA8B,qBAAnBC,eACT,OAEiB,CAAC,kBACTC,SAAQC,IAAa,GACzB,mBADiCA,EAE/BF,eAAeG,IAAID,IACtBF,eAAeI,OAAOF,EAAS1C,MAKvCuC,IAEA,MAAMM,EAAgB7C,EAChB8C,EAAsBP,mDCzF5B,SAAS5B,EAAeoC,EAAMC,EAAUC,GACtC,IAAKC,EAAAA,GAAAA,UACH,OAEF,MAAMC,EAGR,SAAqBJ,GAEnB,MAAMK,UAAiCC,OAAOC,iBAC5CnD,YAAY6C,GACV5C,MAAM4C,GACN3C,KAAKkD,cAAgB,GACrBlD,KAAK2C,SAAWA,EAElBpB,QAAQ4B,EAAQP,GAEd,OADA5C,KAAKkD,cAAcE,KAAK,CAAED,SAAQP,YAC3B7C,MAAMwB,QAAQ4B,EAAQP,GAE/BS,UAAUF,GACR,MAAMG,EAAqBtD,KAAKkD,cAAcK,QAAQC,GAAaA,EAASL,SAAWA,IACvFnD,KAAKkD,cAAgB,GACrBlD,KAAK2C,SAAS5C,MAAM0D,cAAezD,MACnCA,KAAK6B,aACLyB,EAAmBlB,SAASoB,GAAaxD,KAAKuB,QAAQiC,EAASL,OAAQK,EAASZ,YAGpF,MACmB,iBAATF,EACJM,OAAOU,qBACE,aAAThB,EACEK,EACAC,OAAOW,eA5BEC,CAAYlB,GAC7B,OAAO,IAAII,EAASH,EAAUC","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-option.js","../node_modules/@esri/calcite-components/dist/components/observers.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\n\nconst optionCss = \":host{display:block}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst Option = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.calciteInternalOptionChange = createEvent(this, \"calciteInternalOptionChange\", 6);\n    this.mutationObserver = createObserver(\"mutation\", () => {\n      this.ensureTextContentDependentProps();\n      this.calciteInternalOptionChange.emit();\n    });\n    this.disabled = false;\n    this.label = undefined;\n    this.selected = undefined;\n    this.value = undefined;\n  }\n  handlePropChange(_newValue, _oldValue, propName) {\n    if (propName === \"label\" || propName === \"value\") {\n      this.ensureTextContentDependentProps();\n    }\n    this.calciteInternalOptionChange.emit();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  ensureTextContentDependentProps() {\n    const { el: { textContent }, internallySetLabel, internallySetValue, label, value, } = this;\n    if (!label || label === internallySetLabel) {\n      this.label = textContent;\n      this.internallySetLabel = textContent;\n    }\n    if (value == null /* intentional loose equals to handle both undefined & null */ ||\n      value === internallySetValue) {\n      this.value = textContent;\n      this.internallySetValue = textContent;\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.ensureTextContentDependentProps();\n    this.mutationObserver?.observe(this.el, {\n      attributeFilter: [\"label\", \"value\"],\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n  disconnectedCallback() {\n    this.mutationObserver?.disconnect();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    return h(\"slot\", null, this.label);\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"handlePropChange\"],\n    \"label\": [\"handlePropChange\"],\n    \"selected\": [\"handlePropChange\"],\n    \"value\": [\"handlePropChange\"]\n  }; }\n  static get style() { return optionCss; }\n}, [1, \"calcite-option\", {\n    \"disabled\": [516],\n    \"label\": [1025],\n    \"selected\": [516],\n    \"value\": [1032]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-option\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-option\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Option);\n      }\n      break;\n  } });\n}\ndefineCustomElement$1();\n\nconst CalciteOption = Option;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteOption, defineCustomElement };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.9.2\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n\nexport { createObserver as c };\n"],"names":["Option","proxyCustomElement","HTMLElement","constructor","super","this","__registerHost","__attachShadow","calciteInternalOptionChange","createEvent","mutationObserver","createObserver","ensureTextContentDependentProps","emit","disabled","label","undefined","selected","value","handlePropChange","_newValue","_oldValue","propName","el","textContent","internallySetLabel","internallySetValue","connectedCallback","observe","attributeFilter","characterData","childList","subtree","disconnectedCallback","disconnect","render","h","watchers","style","defineCustomElement$1","customElements","forEach","tagName","get","define","CalciteOption","defineCustomElement","type","callback","options","Build","Observer","ExtendedMutationObserver","window","MutationObserver","observedEntry","target","push","unobserve","newObservedEntries","filter","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}