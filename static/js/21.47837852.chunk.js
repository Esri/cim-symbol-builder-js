(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[21],{1069:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return re}));var i=n(0),r=n(73),a=n(11),o=n(12),s=n(31),l=n(26),c=n(1),u=(n(9),n(5),n(4),n(3)),f=n(925),d=n(661),m=n(2),h=n(60),p=n(66),_=n(646),v=n(281),g=n(658),x=n(665);class b extends x.a{constructor(e,t,n,i,r,a=null){super(e,t,n,i,r),this.bitmap=new g.a(a,null,null),this.bitmap.coordScale=[i,r],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:Object(v.b)(),tileMat3:Object(v.b)()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}var y=n(615),S=n(670);class T extends S.a{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[n,i]=this._tileInfoView.tileInfo.size;return new b(e,t[0],t[3],n,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[_.a.raster],target:()=>this.children.map(e=>e.bitmap),drawPhase:y.c.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===y.c.MAP&&super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(Object(h.g)(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:n}=this._tileInfoView,i=Object(p.o)(n.spatialReference);if(i){const{resolution:r}=n.lodAt(e.level),a=i/r%n.size[0],o=a?(n.size[0]-a)*r:0;t[0]-=o*e.world,t[2]-=o*e.world}}return t}}n(64);var O=n(85),w=n(28),C=n(721),I=n(372),E=n(933),P=n(659),R=n(735),D=(n(471),n(380)),A=(n(138),n(465)),M=n(467),L=n(341),V=n(35);const j=[0,0],z=a.a.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let N=class extends O.a{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=Object(o.h)((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.doRefresh():this._redrawImage(t))}get useWebGLForProcessing(){var e;return null==(e=this._get("useWebGLForProcessing"))||e}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return null==this._get("useProgressiveUpdate")||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new M.a({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:n,scale:i}=e.state,r=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){var a;if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[r.level],i=t.toJSON?t:V.a.fromJSON(t);Object(E.h)(this._blockCacheRegistryUrl,this._blockCacheRegistryId,i,n,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,(null==(a=this.previousLOD)?void 0:a.level)!==r.level&&(this.previousLOD=r,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._fetchQueue.updating||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){Object(L.a)().supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new D.a(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new A.a({tileInfoView:this._tileInfoView,concurrency:e,process:(e,t)=>this._fetchTile1(e,t)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new M.a({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,Object(E.g)(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",()=>{e.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&Object(m.j)(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[n,i]=e,r=new C.a({width:n,height:i,pixels:[new Uint8Array(n*i)],mask:new Uint8Array(n*i),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=r),r}_fetchTile1(e,t){const n=!Object(m.i)(t)&&t.signal,i=this.canUseWebGLForProcessing(),{layerView:r}=this,a=!r.tileInfo.isWrappable&&Object(m.j)(Object(R.e)(r.view.spatialReference)),o={allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:i?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:i,signal:Object(m.q)(n),srcResolution:this._srcResolutions[e.level],timeExtent:r.timeExtent,tileInfo:r.tileInfo,disableWrapAround:a};return this.fetchTile(e,o)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new w.a({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:n,srcResolutions:i,isCustomTilingScheme:r}=Object(R.a)(this.layer.rasterInfo,e),a=I.a.create({spatialReference:e,size:512,scales:n});(0===a.origin.x||a.origin.x>t.x)&&(a.origin=t),this._isCustomTilingScheme=r,this.layerView.set("tileInfo",a),this._srcResolutions=null!=i?i:[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),{bandIds:i}=this.layer;let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){r=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(n){Object(o.l)(n)&&z.error(n)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(j,e.key),s=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:i,coords:a,resolution:s}),e.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(e)}catch(n){Object(o.l)(n)||z.error(n)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map(async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Object(o.i)(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},n=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!n||!n.pixelBlock)return;const i=this.layer.symbolizer.generateWebGLParameters({pixelBlock:Object(P.h)(n.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&i&&"stretch"===i.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(i.factor=i.factor.map(e=>255*e),i.outMin=Math.round(255*i.outMin),i.outMax=Math.round(255*i.outMax)),this._globalSymbolizerParams=i}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:n,raster:i}=this.layer,{multidimensionalDefinition:r}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),a=null!=n&&n.multidimensionalInfo?i.getSliceIndex(r):null,o=Object(E.d)(t,a);if(o!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&Object(E.g)(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Object(E.f)(o,this.layer.raster.rasterInfo),e){const e=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),t=this._srcResolutions[e.level];Object(E.h)(o,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,t,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=o}}async doRefresh(){await this.updatingHandles.addPromise(this.layer.updateRenderer()),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._tileStrategy.tiles.forEach(t=>e.push(this._enqueueTileFetch(t))),await Object(o.i)(e)}};Object(i.a)([Object(c.b)()],N.prototype,"_fetchQueue",void 0),Object(i.a)([Object(c.b)()],N.prototype,"_globalUpdateRequested",void 0),Object(i.a)([Object(c.b)()],N.prototype,"attached",void 0),Object(i.a)([Object(c.b)()],N.prototype,"container",void 0),Object(i.a)([Object(c.b)()],N.prototype,"layer",void 0),Object(i.a)([Object(c.b)()],N.prototype,"layerView",void 0),Object(i.a)([Object(c.b)()],N.prototype,"type",void 0),Object(i.a)([Object(c.b)()],N.prototype,"useWebGLForProcessing",null),Object(i.a)([Object(c.b)()],N.prototype,"useProgressiveUpdate",null),Object(i.a)([Object(c.b)()],N.prototype,"timeExtent",void 0),Object(i.a)([Object(c.b)()],N.prototype,"updating",null),N=Object(i.a)([Object(u.a)("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],N);var U=n(683);let F=class extends N{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new T(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!("majority"===this.layer.interpolation&&Object(U.a)(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:n}=this.layer,i=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{source:a,symbolizerParams:o,globalSymbolizerParams:s,suspended:l,coords:c,resolution:u}=t,{bitmap:f}=e;if([f.x,f.y]=c,f.resolution=u,a&&Object(m.j)(a)&&Object(m.j)(a.pixelBlock)){const e={extent:a.extent,pixelBlock:a.pixelBlock};if(f.rawPixelData=e,r)f.source=a.pixelBlock,f.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===(null==s?void 0:s.type)?s:null);f.source=t,f.isRendereredSource=!0}f.symbolizerParameters=r?o:null,r?f.transformGrid||(f.transformGrid=a.transformGrid):f.transformGrid=null}else{const e=this.createEmptyTilePixelBlock();f.source=e,f.symbolizerParameters=r?o:null,f.transformGrid=null}f.bandIds=r?n:null,f.width=this._tileInfoView.tileInfo.size[0],f.height=this._tileInfoView.tileInfo.size[1],f.interpolation=i,f.suspended=l,f.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:n,global:i}=t,{bandIds:r}=this.layer,a=this._getLayerInterpolation(),o=this.canUseWebGLForProcessing(),{bitmap:s}=e,{rawPixelData:l}=s;!o&&Object(m.j)(l)?(s.source=await this.layer.applyRenderer(l,"stretch"===(null==i?void 0:i.type)?i:null),s.isRendereredSource=!0):(s.isRendereredSource&&Object(m.j)(l)&&(s.source=l.pixelBlock),s.isRendereredSource=!1),s.symbolizerParameters=o?i||n:null,s.bandIds=o?r:null,s.interpolation=a,s.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if("raster-colormap"===e||"unique-value"===e||"class-breaks"===e)return"nearest";const{interpolation:t}=this.layer,{renderer:n}=this.layer;return"raster-stretch"===n.type&&null!=n.colorRamp?"bilinear"===t||"cubic"===t?"bilinear":"nearest":t}};Object(i.a)([Object(c.b)()],F.prototype,"container",void 0),Object(i.a)([Object(c.b)()],F.prototype,"layer",void 0),Object(i.a)([Object(c.b)()],F.prototype,"type",void 0),F=Object(i.a)([Object(u.a)("esri.views.2d.layers.imagery.ImageryTileView2D")],F);const k=F;var G=n(722),B=n(656),W=n(208),H=n(906);class q extends x.a{constructor(e,t,n,i,r,a=null){super(e,t,n,i,r),this.tileData=new H.a(a),this.tileData.coordScale=[i,r],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:Object(v.b)(),tileMat3:Object(v.b)()}}setTransform(e,t){super.setTransform(e,t);const n=t/(e.resolution*e.pixelRatio),i=this.transforms.tileMat3,[r,a]=this.tileData.offset,o=[this.x+r*t,this.y-a*t],[s,l]=e.toScreenNoRotation([0,0],o),{symbolTileSize:c}=this.tileData.symbolizerParameters,u=Math.round((this.width-this.tileData.offset[0])/c)*c,f=Math.round((this.height-this.tileData.offset[1])/c)*c,d=u/this.rangeX*n,m=f/this.rangeY*n;Object(W.l)(i,d,0,0,0,m,0,s,l,1),Object(W.i)(this.transforms.dvs,e.displayViewMat3,i),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Z extends S.a{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(Object(h.g)(),e),[n,i]=this._tileInfoView.tileInfo.size;return new q(e,t[0],t[3],n,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[B.a],target:()=>this.children.map(e=>e.tileData),drawPhase:y.c.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===y.c.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let Y=class extends N{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const n=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.rasterInfo.dataType&&null!=n&&n.pixelBlock&&(n.pixelBlock=await this.layer.convertVectorFieldData(n.pixelBlock,t)),n}updateTileSource(e,t){const n=t.symbolizerParams,{tileData:i}=e;i.key=e.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=n,{source:a}=t;if(i.offset=this._getTileSymbolOffset(i.key,r),Object(m.j)(a)&&Object(m.j)(a.pixelBlock)){const e={extent:a.extent,pixelBlock:a.pixelBlock};i.rawPixelData=e,i.symbolizerParameters=n,i.source=this._sampleVectorFieldData(a.pixelBlock,n,i.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo[0]-i.offset[0])/r),Math.round((this._tileInfoView.tileInfo[1]-i.offset[1])/r)],t=this.createEmptyTilePixelBlock(e);i.source=t,i.symbolizerParameters=n}return i.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var n;const i=t.local,{symbolTileSize:r}=i,{tileData:a}=e;a.offset=this._getTileSymbolOffset(a.key,r);const o=a.symbolizerParameters.symbolTileSize;return a.symbolizerParameters=i,Object(m.j)(null==(n=a.rawPixelData)?void 0:n.pixelBlock)&&o!==r&&(a.source=this._sampleVectorFieldData(a.rawPixelData.pixelBlock,a.symbolizerParameters,a.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new Z(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Object(s.e)(()=>this.layer.renderer,e=>this._updateSymbolType(e))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const n=e.col*this._tileInfoView.tileInfo.size[0]%t,i=e.row*this._tileInfoView.tileInfo.size[1]%t;return[n>t/2?t-n:-n,i>t/2?t-i:-i]}_sampleVectorFieldData(e,t,n){const{symbolTileSize:i}=t;return Object(G.g)(e,"vector-uv",i,n)}_updateSymbolType(e){"vector-field"===e.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};Object(i.a)([Object(c.b)()],Y.prototype,"container",void 0),Object(i.a)([Object(c.b)()],Y.prototype,"layer",void 0),Object(i.a)([Object(c.b)()],Y.prototype,"type",void 0),Y=Object(i.a)([Object(u.a)("esri.views.2d.layers.imagery.VectorFieldTileView2D")],Y);const X=Y;var K=n(8),Q=n(102),J=n(765);const $=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return Object(R.b)(Object(m.q)(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(e){return!!this.projectFullExtent(e)}projectFullExtent(e){const t=Object(m.q)(this.layer.fullExtent),n=Object(R.b)(t,e,!1);return Object(R.h)(t,e,n)}async fetchPopupFeatures(e,t){const{layer:n}=this;if(!e)return Promise.reject(new K.a("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:n}));const{popupEnabled:i}=n,a=Object(J.a)(n,t);if(!i||!Object(m.j)(a))throw new K.a("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:i,popupTemplate:a});const o=[],{value:s,magdirValue:l}=await n.identify(e,{timeExtent:this.timeExtent});let c="";if(s&&s.length){var u,f;c="imagery-tile"===n.type&&n.hasStandardTime()&&null!=s[0]?s.map(e=>n.getStandardTimeValue(e)).join(", "):s.join(", ");const e={ObjectId:0},t="Raster.ServicePixelValue";e[t]=this._formatAttributeValue(c,t);const i=null==(u=n.rasterInfo)||null==(f=u.attributeTable)?void 0:f.features;if(i&&i.length>0){const t=i.filter(e=>{const t=e.attributes.value||e.attributes.Value||e.attributes.VALUE;return String(t)===c});if(t.length>0){const n=t[0];if(n)for(const t in n.attributes)if(n.attributes.hasOwnProperty(t)){const i=this._rasterFieldPrefix+t;e[i]=this._formatAttributeValue(n.attributes[t],i)}}}const a=n.rasterInfo.dataType;"vector-magdir"!==a&&"vector-uv"!==a||(e["Raster.Magnitude"]=null==l?void 0:l[0],e["Raster.Direction"]=null==l?void 0:l[1]);const d=new r.a(this.fullExtent.clone(),null,e);d.layer=n,d.sourceLayer=d.layer,o.push(d)}return o}_formatAttributeValue(e,t){if("string"==typeof e){const n=this.layer.popupTemplate&&this.layer.popupTemplate.fieldInfos,i=this._getFieldInfo(n,t),r=i&&i.format;if(r){let t,n;return e.trim().indexOf(",")>-1?(t=",",n=t+" ",this._formatDelimitedString(e,t,n,r)):e.trim().indexOf(" ")>-1?(t=n=" ",this._formatDelimitedString(e,t,n,r)):this._formatNumberFromString(e,r)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const n=t.toLowerCase();let i;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==n&&e.fieldName.toLowerCase()!==n.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,n,i){return e&&t&&n&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(n):e}_formatNumberFromString(e,t){if(!e||!t)return e;const n=Number(e);return isNaN(n)?e:t.format(n)}};return Object(i.a)([Object(c.b)()],t.prototype,"layer",void 0),Object(i.a)([Object(c.b)(Q.a)],t.prototype,"timeExtent",void 0),Object(i.a)([Object(c.b)()],t.prototype,"view",void 0),Object(i.a)([Object(c.b)()],t.prototype,"fullExtent",null),Object(i.a)([Object(c.b)()],t.prototype,"tileInfo",void 0),Object(i.a)([Object(c.b)({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=Object(i.a)([Object(u.a)("esri.views.layers.ImageryTileLayerView")],t),t};var ee=n(660),te=n(713);const ne=a.a.getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let ie=class extends($(Object(te.a)(Object(d.a)(ee.a)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([Object(l.d)(this.layer,["bandIds","renderer","interpolation","multidimensionalDefinition"],(e,t,n)=>{const i="multidimensionalDefinition"===n,r="interpolation"===n&&("majority"===e||"majority"===t)&&Object(U.a)(this.layer),a="renderer"===n&&t.type!==e.type;a&&this._updateSubview();const s=i||r||a;this.subview.redrawOrRefetch(s).catch(e=>{Object(o.l)(e)||ne.error(e)}),this.notifyChange("updating")}),Object(s.e)(()=>{var e;return null!=(e=this.layer.blendMode)?e:"normal"},e=>{this.subview.container.blendMode=e},s.d),Object(s.e)(()=>{var e;return null!=(e=this.layer.effect)?e:null},e=>{this.subview.container.effect=e},s.d),Object(s.e)(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch(e=>{Object(o.l)(e)||ne.error(e)})},s.a)],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),null==(e=this.subview)||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[new r.a({attributes:{},geometry:e.clone()})]}doRefresh(){return this.subview.doRefresh()}_updateSubview(){const e="vector-field"===this.layer.renderer.type?"rasterVF":"flow"===this.layer.renderer.type?"flow":"raster";if(this.subview){var t;if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),null==(t=this.subview)||t.destroy(),this.subview=null}const{layer:n}=this;let i;i="rasterVF"===e?new X({layer:n,layerView:this}):"flow"===e?new f.a({layer:n,layerView:this}):new k({layer:n,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i&&(i.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){null!=e&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};Object(i.a)([Object(c.b)()],ie.prototype,"subview",void 0),Object(i.a)([Object(c.b)()],ie.prototype,"useWebGLForProcessing",null),Object(i.a)([Object(c.b)()],ie.prototype,"useProgressiveUpdate",null),ie=Object(i.a)([Object(u.a)("esri.views.2d.layers.ImageryTileLayerView2D")],ie);const re=ie},617:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(){this.name=this.constructor.name||"UnnamedBrush"}prepareState(e,t,n){}draw(e,t,n){}drawMany(e,t,n){for(const i of t)this.draw(e,i,n)}}},622:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return h})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return f})),n.d(t,"i",(function(){return u})),n.d(t,"j",(function(){return r}));var i,r,a,o,s,l,c,u,f,d,m=n(14);(d=i||(i={}))[d.BACKGROUND=0]="BACKGROUND",d[d.FILL=1]="FILL",d[d.LINE=2]="LINE",d[d.SYMBOL=3]="SYMBOL",d[d.CIRCLE=4]="CIRCLE",function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(r||(r={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(a||(a={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(o||(o={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(s||(s={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(l||(l={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(c||(c={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(u||(u={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(f||(f={}));class h{}h.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:r.VISIBLE}},h.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:r.VISIBLE}},h.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:r.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:m.d.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:m.o.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},h.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:r.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:a.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:s.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:c.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[f.HORIZONTAL]}},h.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:r.VISIBLE}},h.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},h.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},h.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"line-width":{type:"number",minimum:0,default:1}},h.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},h.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},h.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}}},625:function(e,t,n){"use strict";function i(){return new Float32Array(4)}function r(e,t,n,i){const r=new Float32Array(4);return r[0]=e,r[1]=t,r[2]=n,r[3]=i,r}function a(){return i()}function o(){return r(1,1,1,1)}function s(){return r(1,0,0,0)}function l(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function u(){return r(0,0,0,1)}n.d(t,"a",(function(){return r}));const f=a(),d=o(),m=s(),h=l(),p=c(),_=u();Object.freeze({__proto__:null,create:i,clone:function(e){const t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},fromValues:r,createView:function(e,t){return new Float32Array(e,t,4)},zeros:a,ones:o,unitX:s,unitY:l,unitZ:c,unitW:u,ZEROS:f,ONES:d,UNIT_X:m,UNIT_Y:h,UNIT_Z:p,UNIT_W:_})},627:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(650);function r(e,t,n=""){return new i.a(e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},630:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(637);const r={shaders:{vertexShader:Object(i.a)("background/background.vert"),fragmentShader:Object(i.a)("background/background.frag")},attributes:new Map([["a_pos",0]])}},632:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return s}));Number.POSITIVE_INFINITY;const i=Math.PI,r=128/i,a=1/Math.LN2;function o(e,t){return(e%=t)>=0?e:e+t}function s(e){return o(e*r,256)}function l(e){return o(e*(256/360),256)}function c(e){return Math.log(e)*a}function u(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},634:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n(619),r=n(614),a=n(620),o=n(631);class s{constructor(e,t){this.rctx=e,this._vertexBuffer=i.a.createVertex(e,r.D.STATIC_DRAW,new Uint16Array(t)),this._vao=new a.a(e,new Map([["a_position",0]]),{geometry:[new o.a("a_position",2,r.k.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=t.length/2}bind(){this._vao.bind()}unbind(){this._vao.unbind()}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(r.r.TRIANGLE_STRIP,0,this._count)}}},637:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));const i={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.0000001;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\n#endif\n#ifdef DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef OUTLINED_FILL\nvarying lowp float v_isOutline;\n#endif\n#ifdef DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#ifdef DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef OUTLINED_FILL\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = vec4(1.0, 0.0, 0.0, 0.0);\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\nout_color = v_opacity * v_color * color;\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef OUTLINED_FILL\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#ifdef DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SIMPLE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\n#ifdef DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef OUTLINED_FILL\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_color   = outputs.color;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nv_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nout_color = v_color;\n#ifdef DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\nfloat width = u_pixelRatio * u_zoomFactor * a_width * scale.x;\nfloat height = u_pixelRatio * u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\n0,            0,             1);\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\nvec2 symbolOffset = (a_offset - tileOffset - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\n#elif defined(DOT_DENSITY)\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef OUTLINED_FILL\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nout_pos = hittestFill();\ngl_PointSize = 1.0;\n}\n#elif defined(OUTLINED_FILL)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nlowp vec4 color = vec4(0.);\nhighp vec3 pos  = vec3(0.);\ndraw(color, pos);\ngl_Position = vec4(clip(color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nbool hasSameSide(vec3 p0, vec3 p1, vec3 a, vec3 b) {\nvec3 cp0 = cross(b - a, p0 - a);\nvec3 cp1 = cross(b - a, p1 - a);\nreturn dot(cp0, cp1) >= 0.;\n}\nbool intersectPointTriangle(vec3 p, vec3 a, vec3 b, vec3 c) {\nreturn hasSameSide(p, a, b, c) && hasSameSide(p, b, a, c) && hasSameSide(p, c, a, b);\n}\nbool intersectCircleTriange(vec3 p, vec3 a, vec3 b, vec3 c, float radius) {\nvec2 ba = b.xy - a.xy;\nvec2 ca = c.xy - a.xy;\nbool isParallel = ba.x * ca.y - ca.x * ba.y == 0.;\nif (isParallel) {\nreturn false;\n}\nif (distance(p, a) <= radius) {\nreturn true;\n}\nif (distance(p, b) <= radius) {\nreturn true;\n}\nif (distance(p, c) <= radius) {\nreturn true;\n}\nvec3 p0 = p - normalize(p - a) * radius;\nif (intersectPointTriangle(p0, a, b, c)) {\nreturn true;\n}\nvec3 p1 = p - normalize(p - b) * radius;\nif (intersectPointTriangle(p1, a, b, c)) {\nreturn true;\n}\nvec3 p2 = p - normalize(p - c) * radius;\nreturn intersectPointTriangle(p2, a, b, c);\n}\nvec3 hittestFill() {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3  hittestPos = vec3(u_hittestPos, 1.);\nfloat hittestDist = u_hittestDist;\nif (!intersectCircleTriange(hittestPos, pos, pos1, pos2, hittestDist)) {\noutTextureCoords.z += 2.0;\n}\nreturn outTextureCoords;\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\n#endif"},icon:{"common.glsl":"uniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying highp float v_filters;\nvarying lowp float v_opacity;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nvec3 hittestMarker(vec2 size) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3  hittestPos = vec3(u_hittestPos, 1.);\nfloat hittestDist = u_hittestDist;\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat maxHalfSize = max(size.x, size.y) / 2.;\nif (distance(pos, hittestPos) - maxHalfSize > hittestDist) {\noutTextureCoords.z += 2.0;\n}\nreturn outTextureCoords;\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/icon/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn vec4(1.);\n}\n#elif defined(SDF)\nvec4 getColor() {\nvec2 v_size = v_sizeTex.xy;\nvec2 v_tex  = v_sizeTex.zw;\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor() {\nvec2 v_tex  = v_sizeTex.zw;\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = getRotation() * vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nvec2 v_tex      = a_texCoords / u_mosaicSize;\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_filters  = getFilterFlags();\nv_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\nv_sizeTex  = vec4(v_size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\n#ifdef HITTEST\nvec3 pos = hittestMarker(v_size.xy);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, v_filters, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, v_filters, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nbool intersectCircleLineInner(vec3 p, vec3 a, vec3 b, float radius) {\nvec3 v0 = a - p;\nvec3 b2 = b - p;\nvec3 v  = b2 - v0;\nfloat D = 4. * dot(v0, v) * dot(v0, v) - 4. * dot(v, v) * ( dot(v0, v0) - radius * radius );\nif (D < 0.) {\nreturn false;\n}\nfloat sqrtD = sqrt(D);\nfloat t0 = (-2. * dot(v0, v) + sqrtD) / (2. * dot(v, v));\nfloat t1 = (-2. * dot(v0, v) - sqrtD) / (2. * dot(v, v));\nreturn ((t0 >= 0. && t0 <= 1.) || (t1 >= 0. && t1 <= 1.));\n}\nbool intersectCircleLine(vec3 p, vec3 a, vec3 b, vec3 c, float radius) {\nreturn intersectCircleLineInner(p, a, b, radius) || intersectCircleLineInner(p, b, c, radius);\n}\nvec3 hittestLine(float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3  hittestPos = vec3(u_hittestPos, 1.);\nfloat hittestDist = u_hittestDist;\nif (!intersectCircleLine(hittestPos, pos, pos1, pos2, hittestDist + halfWidth)) {\noutTextureCoords.z += 2.0;\n}\nreturn outTextureCoords;\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = vec4(1.);\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef OUTLINED_FILL\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\ngl_PointSize = 1.;\nvec3 pos = hittestLine(halfWidth);\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef OUTLINED_FILL\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},shared:{line:{"common.glsl":"#if !defined(OUTLINED_FILL) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef OUTLINED_FILL\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(OUTLINED_FILL) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / referenceHalfWidth) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef OUTLINED_FILL\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, 0);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef OUTLINED_FILL\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nvec3 hittestGlyph(in vec3 in_pos, in vec3 offset, in float fontSize) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * in_pos + u_tileMat3 * offset;\nvec3  hittestPos = vec3(u_hittestPos, 1.);\nfloat hittestDist = u_hittestDist;\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat halfFontSize = fontSize / 2.;\nif (distance(pos, hittestPos) > hittestDist + halfFontSize) {\noutTextureCoords.z += 2.0;\n}\nreturn outTextureCoords;\n}\n#endif","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn vec4(1.);\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nvec3 pos = hittestGlyph(in_pos, offset, fontSize);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef OES_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_isFloatTexture;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"flow.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_lineColor;\nvarying float v_lineRenderWidth;\nuniform float u_time;\nuniform float u_fadeDuration;\nuniform float u_lineSpeed;\nvoid main(void) {\nvec4 color = v_lineColor;\nfloat edgeWidth = min(2.0 * v_lineRenderWidth - 1.0, 1.0);\nfloat edgeStart = (v_lineRenderWidth - edgeWidth) / v_lineRenderWidth;\nif (edgeStart < 0.95) {\nfloat s = step(edgeStart, abs(v_side));\ncolor.a *= (1.0 - s) + s * (1.0 - (abs(v_side) - edgeStart) / (1.0 - edgeStart));\n}\nfloat t = mod(v_timeSeed * (v_totalTime + u_fadeDuration) + u_time * u_lineSpeed, v_totalTime + u_fadeDuration) - v_time;\ncolor.a *= step(0.0, t) * exp(-2.3 * t / u_fadeDuration);\ncolor.rgb *= color.a;\ngl_FragColor = color;\n}","flow.vert":"precision highp float;\nattribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_lineColor;\nvarying float v_lineRenderWidth;\n#define MAX_STOPS 8\n#ifdef VV_LINE_COLOR\nuniform float u_lineColor_stops[MAX_STOPS];\nuniform vec4 u_lineColor_values[MAX_STOPS];\nuniform int u_lineColor_count;\n#else\nuniform vec4 u_lineColor;\n#endif\n#ifdef VV_LINE_OPACITY\nuniform float u_lineOpacity_stops[MAX_STOPS];\nuniform float u_lineOpacity_values[MAX_STOPS];\nuniform int u_lineOpacity_count;\n#else\nuniform float u_lineOpacity;\n#endif\n#ifdef VV_LINE_RENDER_WIDTH\nuniform float u_lineRenderWidth_stops[MAX_STOPS];\nuniform float u_lineRenderWidth_values[MAX_STOPS];\nuniform int u_lineRenderWidth_count;\n#else\nuniform float u_lineRenderWidth;\n#endif\nvoid main(void) {\nfloat x = a_speed;\n#ifdef VV_LINE_COLOR\nvec4 lineColor = u_lineColor_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_lineColor_count) {\nbreak;\n}\nfloat x1 = u_lineColor_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_lineColor_stops[i];\nvec4 y2 = u_lineColor_values[i];\nif (x < x2) {\nvec4 y1 = u_lineColor_values[i - 1];\nlineColor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nlineColor = y2;\n}\n}\n}\n#else\nvec4 lineColor = u_lineColor;\n#endif\n#ifdef VV_LINE_OPACITY\nfloat lineOpacity = u_lineOpacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_lineOpacity_count) {\nbreak;\n}\nfloat x1 = u_lineOpacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_lineOpacity_stops[i];\nfloat y2 = u_lineOpacity_values[i];\nif (x < x2) {\nfloat y1 = u_lineOpacity_values[i - 1];\nlineOpacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nlineOpacity = y2;\n}\n}\n}\n#else\nfloat lineOpacity = u_lineOpacity;\n#endif\n#ifdef VV_LINE_RENDER_WIDTH\nfloat lineRenderWidth = u_lineRenderWidth_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_lineRenderWidth_count) {\nbreak;\n}\nfloat x1 = u_lineRenderWidth_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_lineRenderWidth_stops[i];\nfloat y2 = u_lineRenderWidth_values[i];\nif (x < x2) {\nfloat y1 = u_lineRenderWidth_values[i - 1];\nlineRenderWidth = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nlineRenderWidth = y2;\n}\n}\n}\n#else\nfloat lineRenderWidth = u_lineRenderWidth;\n#endif\nvec2 position = a_positionAndSide.xy;\nfloat side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineRenderWidth, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_side = side;\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_lineColor = vec4(lineColor.rgb, lineColor.a * lineOpacity);\nv_lineRenderWidth = lineRenderWidth;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nvoid main() {\ngl_Position = vec4(a_pos, 0.0, 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};const r=new(n(651).a)((function(e){let t=i;return e.split("/").forEach(e=>{t&&(t=t[e])}),t}));function a(e){return r.resolveIncludes(e)}},638:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return o}));var i=n(614),r=n(631);const a={geometry:[new r.a("a_pos",2,i.k.BYTE,0,2)]},o={geometry:[new r.a("a_pos",2,i.k.BYTE,0,4),new r.a("a_tex",2,i.k.BYTE,2,4)]},s={geometry:[new r.a("a_pos",2,i.k.UNSIGNED_SHORT,0,4)]}},639:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return f})),n.d(t,"e",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return m})),n.d(t,"h",(function(){return d})),n.d(t,"i",(function(){return h})),n.d(t,"j",(function(){return _})),n.d(t,"k",(function(){return p}));var i=n(106),r=n(614),a=(n(633),n(623));function o(e,t,n="nearest",o=!1){var s;const l=!(o&&"u8"===t.pixelType),c=l?r.q.FLOAT:r.q.UNSIGNED_BYTE,u=null==t.pixels||0===t.pixels.length?null:l?t.getAsRGBAFloat():t.getAsRGBA(),f=null==(s=e.capabilities.textureFloat)?void 0:s.textureFloatLinear,d={width:t.width,height:t.height,target:r.A.TEXTURE_2D,pixelFormat:r.p.RGBA,internalFormat:e.type===i.a.WEBGL2&&l?r.v.RGBA32F:r.p.RGBA,samplingMode:!f||"bilinear"!==n&&"cubic"!==n?r.z.NEAREST:r.z.LINEAR,dataType:c,wrapMode:r.B.CLAMP_TO_EDGE,flipped:!1};return new a.a(e,d,u)}function s(e,t){const{spacing:n,offsets:o,coefficients:s,size:[l,c]}=t,u=n[0]>1,f={width:u?4*l:l,height:c,target:r.A.TEXTURE_2D,pixelFormat:r.p.RGBA,internalFormat:e.type===i.a.WEBGL2?r.v.RGBA32F:r.p.RGBA,dataType:r.q.FLOAT,samplingMode:r.z.NEAREST,wrapMode:r.B.CLAMP_TO_EDGE,flipped:!1},d=new Float32Array(u?l*c*16:2*o.length);if(u)for(let i=0,r=0;i<s.length;i++)d[r++]=s[i],i%3==2&&(d[r++]=1);else for(let i=0;i<c;i++)for(let e=0;e<l;e++){const t=4*(i*l+e),n=2*(e*c+i);d[t]=o[n],d[t+1]=o[n+1],d[t+3]=-1===o[n]?0:1}return new a.a(e,f,d)}function l(e,t){const n={width:t.length/4,height:1,target:r.A.TEXTURE_2D,pixelFormat:r.p.RGBA,internalFormat:r.p.RGBA,dataType:r.q.UNSIGNED_BYTE,samplingMode:r.z.NEAREST,wrapMode:r.B.CLAMP_TO_EDGE,flipped:!1};return new a.a(e,n,t)}function c(e,t,n,i=1,r=!0,a=!1){return{u_flipY:r,u_isFloatTexture:a,u_applyTransform:!!e,u_opacity:i,u_transformSpacing:e?e.spacing:null,u_transformGridSize:e?e.size:null,u_targetImageSize:t,u_srcImageSize:n}}function u(e,t){return{u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:null}}function f(e,t){return{u_scale:e,u_offset:t}}function d(e){return{u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function m(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function h(e,t){const n=e.gl,i=t.glName,r=n.getProgramParameter(i,n.ACTIVE_UNIFORMS),a=new Map;let o;for(let s=0;s<r;s++)o=n.getActiveUniform(i,s),o&&a.set(o.name,{location:n.getUniformLocation(i,o.name),info:o});return a}function p(e,t,n){Object.keys(n).forEach(i=>{const a=t.get(i)||t.get(i+"[0]");a&&function(e,t,n,i){if(null===i||null==n)return!1;const{info:a}=i;switch(a.type){case r.C.FLOAT:a.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case r.C.FLOAT_VEC2:e.setUniform2fv(t,n);break;case r.C.FLOAT_VEC3:e.setUniform3fv(t,n);break;case r.C.FLOAT_VEC4:e.setUniform4fv(t,n);break;case r.C.FLOAT_MAT3:e.setUniformMatrix3fv(t,n);break;case r.C.FLOAT_MAT4:e.setUniformMatrix4fv(t,n);break;case r.C.INT:a.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case r.C.BOOL:e.setUniform1i(t,n?1:0);break;case r.C.INT_VEC2:case r.C.BOOL_VEC2:e.setUniform2iv(t,n);break;case r.C.INT_VEC3:case r.C.BOOL_VEC3:e.setUniform3iv(t,n);break;case r.C.INT_VEC4:case r.C.BOOL_VEC4:e.setUniform4iv(t,n);break;default:return!1}}(e,i,n[i],a)})}function _(e,t,n,i){n.length===i.length&&(i.some(e=>null==e)||n.some(e=>null==e)||n.forEach((n,r)=>{t.setUniform1i(n,r),e.bindTexture(i[r],r)}))}},642:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i,r,a,o={exports:{}};i=o,r=function(){function e(e,n,r){r=r||2;var a,o,s,c,u,f,d,m=n&&n.length,h=m?n[0]*r:e.length,p=t(e,0,h,r,!0),_=[];if(!p||p.next===p.prev)return _;if(m&&(p=l(e,n,p,r)),e.length>80*r){a=s=e[0],o=c=e[1];for(var v=r;v<h;v+=r)(u=e[v])<a&&(a=u),(f=e[v+1])<o&&(o=f),u>s&&(s=u),f>c&&(c=f);d=0!==(d=Math.max(s-a,c-o))?1/d:0}return i(p,_,r,a,o,d),_}function t(e,t,n,i,r){var a,o;if(r===E(e,t,n,i)>0)for(a=t;a<n;a+=i)o=w(a,e[a],e[a+1],o);else for(a=n-i;a>=t;a-=i)o=w(a,e[a],e[a+1],o);if(o&&x(o,o.next)){var s=o.next;C(o),o=s}return o}function n(e,t){if(!e)return e;t||(t=e);var n,i=e;do{if(n=!1,i.steiner||!x(i,i.next)&&0!==g(i.prev,i,i.next))i=i.next;else{var r=i.prev;if(C(i),(i=t=r)===i.next)break;n=!0}}while(n||i!==t);return t}function i(e,t,l,c,u,f,d){if(e){!d&&f&&m(e,c,u,f);for(var h,p,_=e;e.prev!==e.next;)if(h=e.prev,p=e.next,f?a(e,c,u,f):r(e))t.push(h.i/l),t.push(e.i/l),t.push(p.i/l),C(e),e=p.next,_=p.next;else if((e=p)===_){d?1===d?i(e=o(n(e),t,l),t,l,c,u,f,2):2===d&&s(e,t,l,c,u,f):i(n(e),t,l,c,u,f,1);break}}}function r(e){var t=e.prev,n=e,i=e.next;if(g(t,n,i)>=0)return!1;for(var r=e.next.next;r!==e.prev;){if(_(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&g(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function a(e,t,n,i){var r=e.prev,a=e,o=e.next;if(g(r,a,o)>=0)return!1;for(var s=r.x<a.x?r.x<o.x?r.x:o.x:a.x<o.x?a.x:o.x,l=r.y<a.y?r.y<o.y?r.y:o.y:a.y<o.y?a.y:o.y,c=r.x>a.x?r.x>o.x?r.x:o.x:a.x>o.x?a.x:o.x,u=r.y>a.y?r.y>o.y?r.y:o.y:a.y>o.y?a.y:o.y,f=h(s,l,t,n,i),d=h(c,u,t,n,i),m=e.prevZ,p=e.nextZ;m&&m.z>=f&&p&&p.z<=d;){if(m!==e.prev&&m!==e.next&&_(r.x,r.y,a.x,a.y,o.x,o.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,p!==e.prev&&p!==e.next&&_(r.x,r.y,a.x,a.y,o.x,o.y,p.x,p.y)&&g(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;m&&m.z>=f;){if(m!==e.prev&&m!==e.next&&_(r.x,r.y,a.x,a.y,o.x,o.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;p&&p.z<=d;){if(p!==e.prev&&p!==e.next&&_(r.x,r.y,a.x,a.y,o.x,o.y,p.x,p.y)&&g(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function o(e,t,i){var r=e;do{var a=r.prev,o=r.next.next;!x(a,o)&&b(a,r,r.next,o)&&T(a,o)&&T(o,a)&&(t.push(a.i/i),t.push(r.i/i),t.push(o.i/i),C(r),C(r.next),r=e=o),r=r.next}while(r!==e);return n(r)}function s(e,t,r,a,o,s){var l=e;do{for(var c=l.next.next;c!==l.prev;){if(l.i!==c.i&&v(l,c)){var u=O(l,c);return l=n(l,l.next),u=n(u,u.next),i(l,t,r,a,o,s),void i(u,t,r,a,o,s)}c=c.next}l=l.next}while(l!==e)}function l(e,i,r,a){var o,s,l,u=[];for(o=0,s=i.length;o<s;o++)(l=t(e,i[o]*a,o<s-1?i[o+1]*a:e.length,a,!1))===l.next&&(l.steiner=!0),u.push(p(l));for(u.sort(c),o=0;o<u.length;o++)r=n(r=f(u[o],r),r.next);return r}function c(e,t){return e.x-t.x}function u(e){if(e.next.prev===e)return e;let t=e;for(;;){const n=t.next;if(n.prev===t||n===t||n===e)break;t=n}return t}function f(e,t){var i=function(e,t){var n,i=t,r=e.x,a=e.y,o=-1/0;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var s=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(s<=r&&s>o){if(o=s,s===r){if(a===i.y)return i;if(a===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!n)return null;if(r===o)return n;var l,c=n,u=n.x,f=n.y,m=1/0;i=n;do{r>=i.x&&i.x>=u&&r!==i.x&&_(a<f?r:o,a,u,f,a<f?o:r,a,i.x,i.y)&&(l=Math.abs(a-i.y)/(r-i.x),T(i,e)&&(l<m||l===m&&(i.x>n.x||i.x===n.x&&d(n,i)))&&(n=i,m=l)),i=i.next}while(i!==c);return n}(e,t);if(!i)return t;var r=O(i,e),a=n(i,i.next);let o=u(r);return n(o,o.next),a=u(a),u(t===i?a:t)}function d(e,t){return g(e.prev,e,t.prev)<0&&g(t.next,e,e.next)<0}function m(e,t,n,i){var r=e;do{null===r.z&&(r.z=h(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){var t,n,i,r,a,o,s,l,c=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,i=n,s=0,t=0;t<c&&(s++,i=i.nextZ);t++);for(l=c;s>0||l>0&&i;)0!==s&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,s--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(o>1)}(r)}function h(e,t,n,i,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function p(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function _(e,t,n,i,r,a,o,s){return(r-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(i-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(r-o)*(i-s)>=0}function v(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&b(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(T(e,t)&&T(t,e)&&function(e,t){var n=e,i=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(g(e.prev,e,t.prev)||g(e,t.prev,t))||x(e,t)&&g(e.prev,e,e.next)>0&&g(t.prev,t,t.next)>0)}function g(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function x(e,t){return e.x===t.x&&e.y===t.y}function b(e,t,n,i){var r=S(g(e,t,n)),a=S(g(e,t,i)),o=S(g(n,i,e)),s=S(g(n,i,t));return r!==a&&o!==s||!(0!==r||!y(e,n,t))||!(0!==a||!y(e,i,t))||!(0!==o||!y(n,e,i))||!(0!==s||!y(n,t,i))}function y(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function T(e,t){return g(e.prev,e,e.next)<0?g(e,t,e.next)>=0&&g(e,e.prev,t)>=0:g(e,t,e.prev)<0||g(e,e.next,t)<0}function O(e,t){var n=new I(e.i,e.x,e.y),i=new I(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function w(e,t,n,i){var r=new I(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function C(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function I(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function E(e,t,n,i){for(var r=0,a=t,o=n-i;a<n;a+=i)r+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return r}return e.deviation=function(e,t,n,i){var r=t&&t.length,a=r?t[0]*n:e.length,o=Math.abs(E(e,0,a,n));if(r)for(var s=0,l=t.length;s<l;s++){var c=t[s]*n,u=s<l-1?t[s+1]*n:e.length;o-=Math.abs(E(e,c,u,n))}var f=0;for(s=0;s<i.length;s+=3){var d=i[s]*n,m=i[s+1]*n,h=i[s+2]*n;f+=Math.abs((e[d]-e[h])*(e[m+1]-e[d+1])-(e[d]-e[m])*(e[h+1]-e[d+1]))}return 0===o&&0===f?0:Math.abs((f-o)/o)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},i=0,r=0;r<e.length;r++){for(var a=0;a<e[r].length;a++)for(var o=0;o<t;o++)n.vertices.push(e[r][a][o]);r>0&&(i+=e[r-1].length,n.holes.push(i))}return n},e},void 0!==(a=r())&&(i.exports=a);const s=o.exports},643:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var i=n(625),r=n(638),a=n(617),o=n(630),s=n(619),l=n(614),c=n(627),u=n(620);class f extends a.a{constructor(){super(...arguments),this._color=Object(i.a)(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e},t){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(l.w.KEEP,l.w.KEEP,l.w.REPLACE),e.setStencilWriteMask(255),e.setStencilFunctionSeparate(l.n.FRONT_AND_BACK,l.h.GREATER,t.stencilRef,255)}draw(e,t){const{context:n}=e;this._initialized||this._initialize(n),n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(l.r.TRIANGLE_STRIP,0,4),n.bindVAO()}_initialize(e){if(this._initialized)return!0;const t=Object(c.a)(e,o.a);if(!t)return!1;const n=new Int8Array([0,0,1,0,0,1,1,1]),i=s.a.createVertex(e,l.D.STATIC_DRAW,n),a=new u.a(e,o.a.attributes,r.a,{geometry:i});return this._solidProgram=t,this._solidVertexArrayObject=a,this._initialized=!0,!0}}},645:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var i=n(625),r=n(638),a=n(617),o=n(630),s=n(637);const l={shaders:{vertexShader:Object(s.a)("tileInfo/tileInfo.vert"),fragmentShader:Object(s.a)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])};var c=n(619),u=n(614),f=n(627),d=n(623),m=n(620);const h=300;class p extends a.a{constructor(){super(...arguments),this._color=Object(i.a)(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(u.b.ONE,u.b.ONE_MINUS_SRC_ALPHA,u.b.ONE,u.b.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,t){const{context:n}=e;if(!t.isReady)return;this._loadWGLResources(n),n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(u.r.LINE_STRIP,0,4);const i=this._getTexture(n,t);i?(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(i,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",i.descriptor.width,i.descriptor.height),n.drawArrays(u.r.TRIANGLE_STRIP,0,4),n.bindVAO()):n.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const t=Object(f.a)(e,o.a),n=Object(f.a)(e,l),i=new Int8Array([0,0,1,0,1,1,0,1]),a=c.a.createVertex(e,u.D.STATIC_DRAW,i),s=new m.a(e,o.a.attributes,r.a,{geometry:a}),d=new Int8Array([0,0,1,0,0,1,1,1]),h=c.a.createVertex(e,u.D.STATIC_DRAW,d),p=new m.a(e,l.attributes,r.a,{geometry:h});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=s,this._tileInfoVertexArrayObject=p}_getTexture(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","300"),this._canvas.setAttribute("height","32"),this._canvas.setAttribute("style","display:none"));const n=t.triangleCount;let i=t.key.id;t.triangleCount>0&&(i+=", "+n);const r=this._canvas,a=r.getContext("2d");return a.font="24px sans-serif",a.textAlign="left",a.textBaseline="top",a.clearRect(0,0,h,32),n>1e5?(a.fillStyle="red",a.fillRect(0,0,h,32),a.fillStyle="black"):(a.clearRect(0,0,h,32),a.fillStyle="blue"),a.fillText(i,0,0),t.texture=new d.a(e,{target:u.A.TEXTURE_2D,pixelFormat:u.p.RGBA,dataType:u.q.UNSIGNED_BYTE,samplingMode:u.z.NEAREST,wrapMode:u.B.CLAMP_TO_EDGE},r),t.texture}}},646:function(e,t,n){"use strict";n.d(t,"a",(function(){return B}));var i=n(655),r=n(658),a=n(634),o=n(617),s=n(614),l=n(639);class c extends o.a{constructor(){super(...arguments),this._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA,s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(s.h.EQUAL,t.stencilRef,255)}draw(e,t){var n;if(!Object(r.b)(t)||t.suspended)return;e.timeline.begin(this.name);const i=!(null!=(n=e.context.capabilities.textureFloat)&&n.textureFloatLinear);t.updateTexture(e);const a=this._getShaderVariations(t,i),o=e.painter.materialManager.getProgram(e,this._desc[t.symbolizerParameters.type],a);this._drawWithProgram(e.context,o,t),e.timeline.end(this.name)}_drawWithProgram(e,t,n,i=1,r=[0,0],o=!1){this._quad||(this._quad=new a.a(e,[0,0,1,0,0,1,1,1]));const{symbolizerParameters:s,transformGrid:c,width:u,height:f,opacity:d}=n,m=s.type;e.useProgram(t);const h=this._getShaderVariations(n),p=this._getUniformInfos(m,e,t,h),{names:_,textures:v}=n.getTextures();Object(l.j)(e,t,_,v);const g=Object(l.d)(i,r),x=Object(l.f)(c,[u,f],[n.source.width,n.source.height],d,o);if(Object(l.k)(t,p,{u_coordScale:n.coordScale,u_dvsMat3:n.transforms.dvs,...g,...x}),s.colormap){const{colormap:e,colormapOffset:n}=s,i=Object(l.e)(e,n);Object(l.k)(t,p,i)}if("stretch"===s.type){const e=Object(l.h)(s);Object(l.k)(t,p,e)}else if("hillshade"===s.type){const e=Object(l.g)(s);Object(l.k)(t,p,e)}this._quad.draw()}_getUniformInfos(e,t,n,i){const r=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(r))return this._rendererUniformInfos.get(r);const a=Object(l.i)(t,n);return this._rendererUniformInfos.set(r,a),a}_getShaderVariations(e,t=!1){const n=[],{interpolation:i}=e,{type:r,colormap:a}=e.symbolizerParameters;return"cubic"===i?n.push("bicubic"):"bilinear"===i&&"stretch"===r&&null!=a?(n.push("bilinear"),n.push("nnedge")):t&&"bilinear"===i&&n.push("bilinear"),e.isRendereredSource?n.push("noop"):a&&n.push("applyColormap"),e.transformGrid&&(n.push("applyProjection"),1===e.transformGrid.spacing[0]&&n.push("lookupProjection")),n}}var u=n(656),f=n(226);const d={nearest:{defines:[],samplingMode:s.z.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:s.z.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:s.z.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:s.z.LINEAR_MIPMAP_LINEAR,mips:!0}};class m extends o.a{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_position",0],["a_texcoord",1]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),"additive"===t.blendFunction?e.setBlendFunctionSeparate(s.b.ONE,s.b.ONE,s.b.ONE,s.b.ONE):e.setBlendFunctionSeparate(s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA,s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(s.h.EQUAL,t.stencilRef,255)}draw(e,t){const{context:n,renderingOptions:i,painter:r}=e;if(!t.source)return;e.timeline.begin(this.name),this._quad||(this._quad=new a.a(n,[0,0,1,0,0,1,1,1]));const o=((e,t,n)=>{if("dynamic"===n.samplingMode){const{state:n}=e,i=t.resolution/t.pixelRatio/n.resolution,r=Math.round(e.pixelRatio)!==e.pixelRatio,a=i>1.05||i<.95;return n.rotation||a||r||t.isSourceScaled||t.rotation?d.bilinear:d.nearest}return d[n.samplingMode]})(e,t,i),s=r.materialManager.getProgram(e,this._desc,o.defines),{coordScale:l,computedOpacity:c,transforms:u}=t;t.setSamplingProfile(o),t.bind(e.context,f.F),n.useProgram(s),s.setUniformMatrix3fv("u_dvsMat3",u.dvs),s.setUniform1i("u_texture",f.F),s.setUniform2fv("u_coordScale",l),s.setUniform1f("u_opacity",c),this._quad.draw(),e.timeline.end(this.name)}}var h=n(2),p=n(625),_=n(616),v=n(630),g=n(627);class x extends o.a{constructor(){super(...arguments),this._color=Object(p.a)(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(s.w.KEEP,s.w.KEEP,s.w.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(s.h.ALWAYS,0,255)}draw(e,t){const{context:n,state:i}=e,r=Object(_.g)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT}]}),a=t.getVAO(n,i,r.attributes,r.bufferLayouts);Object(h.i)(a.indexBuffer)||(this._program||(this._program=Object(g.a)(n,v.a)),n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",i.displayMat3),n.bindVAO(a),n.drawElements(s.r.TRIANGLES,a.indexBuffer.size,s.k.UNSIGNED_INT,0),n.bindVAO())}}var b=n(645),y=n(643),S=n(49),T=n(281),O=n(615),w=n(174),C=n(619),I=n(620);class E extends o.a{constructor(){super(...arguments),this._color=Object(p.a)(1,0,0,1),this._patternMatrix=Object(T.b)(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,t){const{context:n,painter:i,styleLayerUID:r}=e;this._loadWGLResources(e);const a=e.displayLevel,o=e.styleLayer,l=o.backgroundMaterial,c=i.vectorTilesMaterialManager,u=o.getPaintValue("background-color",a),d=o.getPaintValue("background-opacity",a),m=o.getPaintValue("background-pattern",a),p=void 0!==m,_=u[3]*d,v=1|window.devicePixelRatio,g=e.spriteMosaic;let x,b;const y=v>f.Q?2:1,T=e.drawPhase===O.c.HITTEST,C=this._programOptions;C.id=T,C.pattern=p;const I=c.getMaterialProgram(n,l,C);if(n.bindVAO(this._vao),n.useProgram(I),p){const e=g.getMosaicItemPosition(m,!0);if(Object(h.j)(e)){const{tl:t,br:i,page:r}=e;x=i[0]-t[0],b=i[1]-t[1];const a=g.getPageSize(r);Object(h.j)(a)&&(g.bind(n,s.z.LINEAR,r,f.S),I.setUniform4f("u_tlbr",t[0],t[1],i[0],i[1]),I.setUniform2fv("u_mosaicSize",a),I.setUniform1i("u_texture",f.S))}I.setUniform1f("u_opacity",d)}else this._color[0]=_*u[0],this._color[1]=_*u[1],this._color[2]=_*u[2],this._color[3]=_,I.setUniform4fv("u_color",this._color);if(I.setUniform1f("u_depth",o.z||0),T){const e=Object(w.c)(r+1);I.setUniform4fv("u_id",e)}for(const f of t){if(I.setUniform1f("u_coord_range",f.rangeX),I.setUniformMatrix3fv("u_dvsMat3",f.transforms.dvs),p){const e=Math.max(2**(Math.round(a)-f.key.level),1),t=y*f.width*e,n=t/Object(S.j)(x),i=t/Object(S.j)(b);this._patternMatrix[0]=n,this._patternMatrix[4]=i,I.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(s.h.EQUAL,f.stencilRef,255),n.drawArrays(s.r.TRIANGLE_STRIP,0,4)}}_loadWGLResources(e){if(this._vao)return;const{context:t,styleLayer:n}=e,i=n.backgroundMaterial,r=new Int8Array([0,0,1,0,0,1,1,1]),a=C.a.createVertex(t,s.D.STATIC_DRAW,r),o=new I.a(t,i.getAttributeLocations(),i.getLayoutInfo(),{geometry:a});this._vao=o}}var P=n(622);class R extends o.a{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,requiredLevel:r,state:a,drawPhase:o,painter:l,spriteMosaic:c,styleLayerUID:u}=e;if(!t.some(e=>{var t,n;return null!=(t=null==(n=e.layerData.get(u))?void 0:n.circleIndexCount)&&t}))return;const f=e.styleLayer,d=f.circleMaterial,m=l.vectorTilesMaterialManager,p=f.getPaintValue("circle-translate",i),_=f.getPaintValue("circle-translate-anchor",i),v=o===O.c.HITTEST,g=this._programOptions;g.id=v;const x=m.getMaterialProgram(n,d,g);n.useProgram(x),x.setUniformMatrix3fv("u_displayMat3",_===P.i.VIEWPORT?a.displayMat3:a.displayViewMat3),x.setUniform2fv("u_circleTranslation",p),x.setUniform1f("u_depth",f.z),x.setUniform1f("u_antialiasingWidth",1.2);let b=-1;if(v){const e=Object(w.c)(u+1);x.setUniform4fv("u_id",e)}for(const y of t){if(!y.layerData.has(u))continue;y.key.level!==b&&(b=y.key.level,d.setDataUniforms(x,i,f,b,c));const e=y.layerData.get(u);if(!e.circleIndexCount)continue;e.prepareForRendering(n);const t=e.circleVertexArrayObject;Object(h.i)(t)||(n.bindVAO(t),x.setUniformMatrix3fv("u_dvsMat3",y.transforms.dvs),r!==y.key.level?n.setStencilFunction(s.h.EQUAL,y.stencilRef,255):n.setStencilFunction(s.h.GREATER,255,255),n.drawElements(s.r.TRIANGLES,e.circleIndexCount,s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.circleIndexStart),y.triangleCount+=e.circleIndexCount/3)}}}class D extends o.a{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(e,t){const{displayLevel:n,drawPhase:i,renderPass:r,spriteMosaic:a,styleLayerUID:o}=e;let s=!1;for(const b of t)if(b.layerData.has(o)){const e=b.layerData.get(o);if(e.fillIndexCount>0||e.outlineIndexCount>0){s=!0;break}}if(!s)return;const l=e.styleLayer,c=l.getPaintProperty("fill-pattern"),u=void 0!==c,f=u&&c.isDataDriven;let d;if(u&&!f){const e=c.getValue(n);d=a.getMosaicItemPosition(e,!0)}const m=!u&&l.getPaintValue("fill-antialias",n);let h,p=!0,_=1;if(!u){const e=l.getPaintProperty("fill-color"),t=l.getPaintProperty("fill-opacity");if(!(null!=e&&e.isDataDriven||null!=t&&t.isDataDriven)){const e=l.getPaintValue("fill-color",n);_=l.getPaintValue("fill-opacity",n)*e[3],_>=1&&(p=!1)}}if(p&&"opaque"===r)return;i===O.c.HITTEST&&(h=Object(w.c)(o+1));const v=l.getPaintValue("fill-translate",n),g=l.getPaintValue("fill-translate-anchor",n);(p||"translucent"!==r)&&this._drawFill(e,o,l,t,v,g,u,d,f,h);const x=!l.hasDataDrivenOutlineColor&&l.outlineUsesFillColor&&_<1;m&&"opaque"!==r&&!x&&this._drawOutline(e,o,l,t,v,g,h)}_drawFill(e,t,n,i,r,a,o,l,c,u){if(o&&!c&&Object(h.i)(l))return;const{context:d,displayLevel:m,state:p,drawPhase:_,painter:v,pixelRatio:g,spriteMosaic:x}=e,b=n.fillMaterial,y=v.vectorTilesMaterialManager,S=g>f.Q?2:1,T=_===O.c.HITTEST,w=this._fillProgramOptions;w.id=T,w.pattern=o;const C=y.getMaterialProgram(d,b,w);if(d.useProgram(C),Object(h.j)(l)){const{page:e}=l,t=x.getPageSize(e);Object(h.j)(t)&&(x.bind(d,s.z.LINEAR,e,f.S),C.setUniform2fv("u_mosaicSize",t),C.setUniform1i("u_texture",f.S))}C.setUniformMatrix3fv("u_displayMat3",a===P.i.VIEWPORT?p.displayMat3:p.displayViewMat3),C.setUniform2fv("u_fillTranslation",r),C.setUniform1f("u_depth",n.z+1/65536),T&&C.setUniform4fv("u_id",u);let I=-1;for(const O of i){if(!O.layerData.has(t))continue;O.key.level!==I&&(I=O.key.level,b.setDataUniforms(C,m,n,I,x));const e=O.layerData.get(t);if(!e.fillIndexCount)continue;e.prepareForRendering(d);const i=e.fillVertexArrayObject;if(!Object(h.i)(i)){if(d.bindVAO(i),C.setUniformMatrix3fv("u_dvsMat3",O.transforms.dvs),d.setStencilFunction(s.h.EQUAL,O.stencilRef,255),o){const e=Math.max(2**(Math.round(m)-O.key.level),1),t=O.rangeX/(S*O.width*e);C.setUniform1f("u_patternFactor",t)}if(c){const t=e.patternMap;if(!t)continue;for(const[e,n]of t){const t=x.getPageSize(e);Object(h.j)(t)&&(x.bind(d,s.z.LINEAR,e,f.S),C.setUniform2fv("u_mosaicSize",t),C.setUniform1i("u_texture",f.S),d.drawElements(s.r.TRIANGLES,n[1],s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else d.drawElements(s.r.TRIANGLES,e.fillIndexCount,s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.fillIndexStart);O.triangleCount+=e.fillIndexCount/3}}}_drawOutline(e,t,n,i,r,a,o){const{context:l,displayLevel:c,state:u,drawPhase:f,painter:d,pixelRatio:m,spriteMosaic:p}=e,_=n.outlineMaterial,v=d.vectorTilesMaterialManager,g=.75/m,x=f===O.c.HITTEST,b=this._outlineProgramOptions;b.id=x;const y=v.getMaterialProgram(l,_,b);l.useProgram(y),y.setUniformMatrix3fv("u_displayMat3",a===P.i.VIEWPORT?u.displayMat3:u.displayViewMat3),y.setUniform2fv("u_fillTranslation",r),y.setUniform1f("u_depth",n.z+1/65536),y.setUniform1f("u_outline_width",g),x&&y.setUniform4fv("u_id",o);let S=-1;for(const T of i){if(!T.layerData.has(t))continue;T.key.level!==S&&(S=T.key.level,_.setDataUniforms(y,c,n,S,p));const e=T.layerData.get(t);if(e.prepareForRendering(l),!e.outlineIndexCount)continue;const i=e.outlineVertexArrayObject;Object(h.i)(i)||(l.bindVAO(i),y.setUniformMatrix3fv("u_dvsMat3",T.transforms.dvs),l.setStencilFunction(s.h.EQUAL,T.stencilRef,255),l.drawElements(s.r.TRIANGLES,e.outlineIndexCount,s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),T.triangleCount+=e.outlineIndexCount/3)}}}class A extends o.a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,state:r,drawPhase:a,painter:o,pixelRatio:l,spriteMosaic:c,styleLayerUID:u}=e;if(!t.some(e=>{var t,n;return null!=(t=null==(n=e.layerData.get(u))?void 0:n.lineIndexCount)&&t}))return;const d=e.styleLayer,m=d.lineMaterial,p=o.vectorTilesMaterialManager,_=d.getPaintValue("line-translate",i),v=d.getPaintValue("line-translate-anchor",i),g=d.getPaintProperty("line-pattern"),x=void 0!==g,b=x&&g.isDataDriven;let y,S;if(x&&!b){const e=g.getValue(i);y=c.getMosaicItemPosition(e)}let T=!1;if(!x){const e=d.getPaintProperty("line-dasharray");if(S=void 0!==e,T=S&&e.isDataDriven,S&&!T){const t=e.getValue(i),n=d.getDashKey(t,d.getLayoutValue("line-cap",i));y=c.getMosaicItemPosition(n)}}const C=1/l,I=a===O.c.HITTEST,E=this._programOptions;E.id=I,E.pattern=x,E.sdf=S;const R=p.getMaterialProgram(n,m,E);if(n.useProgram(R),R.setUniformMatrix3fv("u_displayViewMat3",r.displayViewMat3),R.setUniformMatrix3fv("u_displayMat3",v===P.i.VIEWPORT?r.displayMat3:r.displayViewMat3),R.setUniform2fv("u_lineTranslation",_),R.setUniform1f("u_depth",d.z),R.setUniform1f("u_antialiasing",C),I){const e=Object(w.c)(u+1);R.setUniform4fv("u_id",e)}if(y&&Object(h.j)(y)){const{page:e}=y,t=c.getPageSize(e);Object(h.j)(t)&&(c.bind(n,s.z.LINEAR,e,f.S),R.setUniform2fv("u_mosaicSize",t),R.setUniform1i("u_texture",f.S))}let D=-1;for(const O of t){if(!O.layerData.has(u))continue;O.key.level!==D&&(D=O.key.level,m.setDataUniforms(R,i,d,D,c));const e=2**(i-D)/l;R.setUniform1f("u_zoomFactor",e);const t=O.layerData.get(u);if(!t.lineIndexCount)continue;t.prepareForRendering(n);const r=t.lineVertexArrayObject;if(!Object(h.i)(r)){if(n.bindVAO(r),R.setUniformMatrix3fv("u_dvsMat3",O.transforms.dvs),n.setStencilFunction(s.h.EQUAL,O.stencilRef,255),b||T){const e=t.patternMap;if(!e)continue;for(const[t,i]of e){const e=c.getPageSize(t);Object(h.j)(e)&&(c.bind(n,s.z.LINEAR,t,f.S),R.setUniform2fv("u_mosaicSize",e),R.setUniform1i("u_texture",f.S),n.drawElements(s.r.TRIANGLES,i[1],s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]))}}else n.drawElements(s.r.TRIANGLES,t.lineIndexCount,s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.lineIndexStart);O.triangleCount+=t.lineIndexCount/3}}}}var M=n(175),L=n(649),V=n(632);class j extends o.a{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Object(M.a)()}dispose(){}drawMany(e,t){const{drawPhase:n,styleLayerUID:i}=e,r=e.styleLayer;let a;n===O.c.HITTEST&&(a=Object(w.c)(i+1)),this._drawIcons(e,r,t,a),this._drawText(e,r,t,a)}_drawIcons(e,t,n,i){const{context:r,displayLevel:a,drawPhase:o,painter:s,spriteMosaic:l,state:c,styleLayerUID:u}=e,d=t.iconMaterial,m=s.vectorTilesMaterialManager;let p,_=!1;for(const f of n)if(f.layerData.has(u)&&(p=f.layerData.get(u),p.iconPerPageElementsMap.size>0)){_=!0;break}if(!_)return;const v=t.getPaintValue("icon-translate",a),g=t.getPaintValue("icon-translate-anchor",a);let x=t.getLayoutValue("icon-rotation-alignment",a);x===P.a.AUTO&&(x=t.getLayoutValue("symbol-placement",a)===P.e.POINT?P.a.VIEWPORT:P.a.MAP);const b=x===P.a.MAP,y=t.getLayoutValue("icon-keep-upright",a)&&b,S=p.isIconSDF,T=o===O.c.HITTEST,w=this._iconProgramOptions;w.id=T,w.sdf=S;const C=m.getMaterialProgram(r,d,w);r.useProgram(C),C.setUniformMatrix3fv("u_displayViewMat3",x===P.a.MAP?c.displayViewMat3:c.displayMat3),C.setUniformMatrix3fv("u_displayMat3",g===P.i.VIEWPORT?c.displayMat3:c.displayViewMat3),C.setUniform2fv("u_iconTranslation",v),C.setUniform1f("u_depth",t.z),C.setUniform1f("u_mapRotation",Object(V.b)(c.rotation)),C.setUniform1f("u_keepUpright",y?1:0),C.setUniform1f("u_level",10*a),C.setUniform1i("u_texture",f.S),C.setUniform1f("u_fadeDuration",L.d/1e3),T&&C.setUniform4fv("u_id",i);let I=-1;for(const f of n){if(!f.layerData.has(u))continue;if(f.key.level!==I&&(I=f.key.level,d.setDataUniforms(C,a,t,I,l)),p=f.layerData.get(u),0===p.iconPerPageElementsMap.size)continue;p.prepareForRendering(r),p.updateOpacityInfo();const n=p.iconVertexArrayObject;if(!Object(h.i)(n)){r.bindVAO(n),C.setUniformMatrix3fv("u_dvsMat3",f.transforms.dvs),C.setUniform1f("u_time",(performance.now()-p.lastOpacityUpdate)/1e3);for(const[t,n]of p.iconPerPageElementsMap)this._renderIconRange(e,C,n,t,f)}}}_renderIconRange(e,t,n,i,r){const{context:a,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(i)/4,this._spritesTextureSize[1]=o.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(a,s.z.LINEAR,i,f.S),a.setStencilTestEnabled(!0),a.setStencilFunction(s.h.GREATER,255,255),a.setStencilWriteMask(0),a.drawElements(s.r.TRIANGLES,n[1],s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]),r.triangleCount+=n[1]/3}_drawText(e,t,n,i){const{context:r,displayLevel:a,drawPhase:o,glyphMosaic:l,painter:c,pixelRatio:u,spriteMosaic:d,state:m,styleLayerUID:p}=e,_=t.textMaterial,v=c.vectorTilesMaterialManager;let g,x=!1;for(const s of n)if(s.layerData.has(p)&&(g=s.layerData.get(p),g.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const b=t.getPaintProperty("text-opacity");if(b&&!b.isDataDriven&&0===b.getValue(a))return;const y=t.getPaintProperty("text-color"),S=!y||y.isDataDriven||y.getValue(a)[3]>0,T=t.getPaintProperty("text-halo-width"),w=t.getPaintProperty("text-halo-color"),C=(!T||T.isDataDriven||T.getValue(a)>0)&&(!w||w.isDataDriven||w.getValue(a)[3]>0);if(!S&&!C)return;let I=t.getLayoutValue("text-rotation-alignment",a);I===P.a.AUTO&&(I=t.getLayoutValue("symbol-placement",a)===P.e.POINT?P.a.VIEWPORT:P.a.MAP);const E=I===P.a.MAP,R=t.getLayoutValue("text-keep-upright",a)&&E,D=o===O.c.HITTEST,A=.8*3/u;this._glyphTextureSize||(this._glyphTextureSize=Object(M.b)(l.width/4,l.height/4));const j=t.getPaintValue("text-translate",a),z=t.getPaintValue("text-translate-anchor",a),N=this._sdfProgramOptions;N.id=D;const U=v.getMaterialProgram(r,_,N);r.useProgram(U),U.setUniformMatrix3fv("u_displayViewMat3",I===P.a.MAP?m.displayViewMat3:m.displayMat3),U.setUniformMatrix3fv("u_displayMat3",z===P.i.VIEWPORT?m.displayMat3:m.displayViewMat3),U.setUniform2fv("u_textTranslation",j),U.setUniform1f("u_depth",t.z+1/65536),U.setUniform2fv("u_mosaicSize",this._glyphTextureSize),U.setUniform1f("u_mapRotation",Object(V.b)(m.rotation)),U.setUniform1f("u_keepUpright",R?1:0),U.setUniform1f("u_level",10*a),U.setUniform1i("u_texture",f.R),U.setUniform1f("u_antialiasingWidth",A),U.setUniform1f("u_fadeDuration",L.d/1e3),D&&U.setUniform4fv("u_id",i);let F=-1;for(const f of n){if(!f.layerData.has(p))continue;if(f.key.level!==F&&(F=f.key.level,_.setDataUniforms(U,a,t,F,d)),g=f.layerData.get(p),0===g.glyphPerPageElementsMap.size)continue;g.prepareForRendering(r),g.updateOpacityInfo();const e=g.textVertexArrayObject;if(Object(h.i)(e))continue;r.bindVAO(e),U.setUniformMatrix3fv("u_dvsMat3",f.transforms.dvs),r.setStencilTestEnabled(!0),r.setStencilFunction(s.h.GREATER,255,255),r.setStencilWriteMask(0);const n=(performance.now()-g.lastOpacityUpdate)/1e3;U.setUniform1f("u_time",n),g.glyphPerPageElementsMap.forEach((e,t)=>{this._renderGlyphRange(r,e,t,l,U,C,S,f)})}}_renderGlyphRange(e,t,n,i,r,a,o,l){i.bind(e,s.z.LINEAR,n,f.R),a&&(r.setUniform1f("u_halo",1),e.drawElements(s.r.TRIANGLES,t[1],s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),o&&(r.setUniform1f("u_halo",0),e.drawElements(s.r.TRIANGLES,t[1],s.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}var z=n(379);class N extends o.a{constructor(){super(...arguments),this._computeDesc=null}prepareState({context:e},t,n){const i=n&&-1!==n.indexOf("hittest");e.setBlendingEnabled(!i),e.setBlendFunctionSeparate(s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA,s.b.ONE,s.b.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(s.h.EQUAL,t.stencilRef,255)}draw(e,t,n){const i=this.getGeometryType();t.commit(e);const r=t.getGeometry(i);Object(h.i)(r)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),r.forEachCommand(i=>this.drawGeometry(e,t,i,n)))}_setSharedUniforms(e,t,n){const{displayLevel:i,pixelRatio:r,state:a,passOptions:o}=t;Object(h.j)(o)&&"hittest"===o.type&&(e.setUniform2fv("u_hittestPos",o.position),e.setUniform1f("u_hittestDist",o.distance)),e.setUniform1f("u_pixelRatio",r),e.setUniformMatrix3fv("u_tileMat3",n.transforms.tileMat3),e.setUniformMatrix3fv("u_viewMat3",a.viewMat3),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",a.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(i*f.w)),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",f.B),e.setUniform1i("u_attributeData1",f.C),e.setUniform1i("u_attributeData2",f.D),e.setUniform1i("u_attributeData3",f.E)}_setSizeVVUniforms(e,t,n,i){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",n.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",n.vvSizeScaleStopsValue),e.vvSizeFieldStops){const e=n.getSizeVVFieldStops(i.key.level);t.setUniform1fv("u_vvSizeFieldStopsValues",e.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",n.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(e,t,n){e.vvColor&&(t.setUniform1fv("u_vvColorValues",n.vvColorValues),t.setUniform4fv("u_vvColors",n.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",n.vvOpacityValues),t.setUniform1fv("u_vvOpacities",n.vvOpacities))}_setRotationVVUniforms(e,t,n){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===n.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(e){if(!this._computeDesc){const t=e.strides,n=e.strides.geometry,i=new Map(e.attributes),r=e.bufferLayouts.geometry.map(e=>({...e})),a=Math.max(...e.attributes.values()),o={geometry:r};o.geometry.push({count:2,name:"a_pos1",divisor:0,normalized:!1,offset:n,stride:n,type:s.k.SHORT}),o.geometry.push({count:2,name:"a_pos2",divisor:0,normalized:!1,offset:2*n,stride:n,type:s.k.SHORT}),i.set("a_pos1",a+1),i.set("a_pos2",a+2),this._computeDesc={bufferLayouts:o,attributes:i,strides:t}}return this._computeDesc}}var U=n(618),F=n(633),k=n(685),G=n(623);const B={marker:class extends N{dispose(){}getGeometryType(){return O.d.MARKER}drawGeometry(e,t,n,i){const{context:r,painter:a,rendererInfo:o,state:l,passOptions:c}=e,u=U.d.load(n.materialKey),{bufferLayouts:f,attributes:d}=(p=u,Object(_.g)(p.data,{geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:s.k.SHORT},{location:2,name:"a_texCoords",count:2,type:s.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:s.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:s.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:s.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:s.k.UNSIGNED_SHORT}]})),m=a.materialManager.getMaterialProgram(e,u,"materials/icon",d,i);var p;r.useProgram(m),u.textureBinding&&a.textureManager.bindTextures(r,m,u,!0);let v=s.r.TRIANGLES;Object(h.j)(c)&&"hittest"===c.type&&(v=s.r.POINTS),this._setSharedUniforms(m,e,t);const g=u.vvRotation?l.displayViewMat3:l.displayMat3;m.setUniformMatrix3fv("u_displayMat3",g),this._setSizeVVUniforms(u,m,o,t),this._setColorAndOpacityVVUniforms(u,m,o),this._setRotationVVUniforms(u,m,o);const x=n.target.getVAO(r,f,d),b=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;r.bindVAO(x),r.drawElements(v,n.indexCount,s.k.UNSIGNED_INT,b)}},line:class extends N{dispose(){}getGeometryType(){return O.d.LINE}drawGeometry(e,t,n,i){const{context:r,painter:a,rendererInfo:o,displayLevel:l,passOptions:c}=e,u=U.c.load(n.materialKey);let f=(m=u,Object(_.g)(m.data,{geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT},{location:1,name:"a_id",count:4,type:s.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:s.k.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:s.k.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:s.k.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:s.k.BYTE},{location:7,name:"a_aux",count:2,type:s.k.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:s.k.UNSIGNED_SHORT}]})),d=s.r.TRIANGLES;var m;Object(h.j)(c)&&"hittest"===c.type&&(f=this._getTriangleDesc(f),d=s.r.POINTS);const{attributes:p,bufferLayouts:v}=f,g=a.materialManager.getMaterialProgram(e,u,"materials/line",p,i),x=1/e.pixelRatio;r.useProgram(g),this._setSharedUniforms(g,e,t),u.textureBinding&&a.textureManager.bindTextures(r,g,u);const b=2**(l-t.key.level)/e.pixelRatio;g.setUniform1f("u_zoomFactor",b),g.setUniform1f("u_blur",0+x),g.setUniform1f("u_antialiasing",x),this._setSizeVVUniforms(u,g,o,t),this._setColorAndOpacityVVUniforms(u,g,o),r.setFaceCullingEnabled(!1);const y=Object(h.j)(c)&&"hittest"===c.type,S=n.target.getVAO(r,v,p,y);let T=n.indexCount,O=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;y&&(T/=3,O/=3),r.bindVAO(S),r.drawElements(d,T,s.k.UNSIGNED_INT,O)}},fill:class extends N{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([f.K,f.L]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){this._disposeTextures(),this._dotFBO=Object(h.e)(this._dotFBO),this._dotVAO=Object(h.e)(this._dotVAO)}getGeometryType(){return O.d.FILL}drawGeometry(e,t,n,i){const{context:r,painter:a,rendererInfo:o,requiredLevel:l,passOptions:c}=e,u=U.a.load(n.materialKey),f=a.materialManager;let d=s.r.TRIANGLES,m=(e=>{const t={geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT},{location:1,name:"a_id",count:3,type:s.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:s.k.UNSIGNED_BYTE}]};return e.dotDensity?(t.geometry.push({location:3,name:"a_inverseArea",count:1,type:s.k.FLOAT}),Object(_.g)(e.data,t)):(t.geometry.push({location:3,name:"a_color",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0}),e.simple||t.geometry.push({location:4,name:"a_aux1",count:4,type:s.k.UNSIGNED_SHORT}),t.geometry.push({location:5,name:"a_aux2",count:4,type:s.k.UNSIGNED_BYTE},{location:6,name:"a_aux3",count:4,type:s.k.UNSIGNED_BYTE}),e.simple||t.geometry.push({location:7,name:"a_zoomRange",count:2,type:s.k.UNSIGNED_SHORT}),Object(_.g)(e.data,t))})(u);Object(h.j)(c)&&"hittest"===c.type&&(m=this._getTriangleDesc(m),d=s.r.POINTS);const{attributes:p,bufferLayouts:v}=m,g=f.getMaterialProgram(e,u,"materials/fill",p,i);if(r.useProgram(g),this._setSharedUniforms(g,e,t),g.setUniform2f("u_tileOffset",512*t.key.col,512*t.key.row),u.textureBinding){a.textureManager.bindTextures(r,g,u);const n=1/2**(l-t.key.level)/e.pixelRatio;g.setUniform1f("u_zoomFactor",n)}const x=1/e.pixelRatio;g.setUniform1f("u_blur",x),g.setUniform1f("u_antialiasing",x),this._setSizeVVUniforms(u,g,o,t),this._setColorAndOpacityVVUniforms(u,g,o);const b=Object(h.j)(c)&&"hittest"===c.type,y=n.target.getVAO(r,v,p,b);let S=n.indexCount,T=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;if(b&&(S/=3,T/=3),r.bindVAO(y),!u.dotDensity||b)r.drawElements(d,S,s.k.UNSIGNED_INT,T);else{const n=this._drawDotLocations(e,t,g,S,T);this._drawDotDensity(e,t,n)}}_drawDotDensity(e,t,n){const{context:i,painter:r,rendererInfo:a}=e,o=r.materialManager.getProgram(e,this._dotDesc),l=this._createDotDensityMesh(i,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:s.k.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});i.setStencilTestEnabled(!0),i.useProgram(o),o.setUniform1f("u_tileZoomFactor",1),o.setUniform1i("u_texture",this._dotSamplers[0]),o.setUniform1f("u_dotSize",Math.max(a.ddDotSize,1)),o.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(o,e,t),i.bindTexture(n,this._dotSamplers[0]),i.bindVAO(l),i.drawArrays(s.r.POINTS,0,262144)}_drawDotLocations(e,t,n,i,r){const{context:a,rendererInfo:o,requiredLevel:l}=e,c=a.getViewport();a.setViewport(0,0,512,512);const u=a.getBoundFramebufferObject(),d=this._createFBO(a);a.bindFramebuffer(d),a.setClearColor(0,0,0,0),a.clear(a.gl.COLOR_BUFFER_BIT|a.gl.STENCIL_BUFFER_BIT),a.setStencilTestEnabled(!1);const m=1/2**(l-t.key.level),h=f.P,p=h*window.devicePixelRatio*h*window.devicePixelRatio,_=1/m*(1/m),v=o.ddDotScale?e.state.scale/o.ddDotScale:1;return n.setUniform1f("u_tileZoomFactor",m),n.setUniform1f("u_tileDotsOverArea",p/(f.P*window.devicePixelRatio*f.P*window.devicePixelRatio)),n.setUniformMatrix4fv("u_dotColors",o.ddColors),n.setUniform4fv("u_isActive",o.ddActiveDots),n.setUniform4fv("u_dotBackgroundColor",o.ddBackgroundColor),n.setUniform1f("u_dotValue",Math.max(1,o.ddDotValue*v*_)),this._bindDotDensityTextures(a,n,o,h),a.drawElements(s.r.TRIANGLES,i,s.k.UNSIGNED_INT,r),a.setViewport(c.x,c.y,c.width,c.height),a.bindFramebuffer(u),d.colorTexture}_createFBO(e){if(Object(h.i)(this._dotFBO)){const t=512,n=512,i={target:s.A.TEXTURE_2D,pixelFormat:s.p.RGBA,dataType:s.q.UNSIGNED_BYTE,samplingMode:s.z.NEAREST,wrapMode:s.B.CLAMP_TO_EDGE,width:t,height:n},r={colorTarget:s.y.TEXTURE,depthStencilTarget:s.m.DEPTH_STENCIL_RENDER_BUFFER},a=new k.a(e,{width:t,height:n,internalFormat:s.s.DEPTH_STENCIL});this._dotFBO=new F.a(e,r,i,a)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,n,i){const r=this._createDotDensityTextures(e,i,n.ddSeed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let a=0;a<r.length;a++)e.bindTexture(r[a],this._dotSamplers[a])}_createDotDensityMesh(e,t,n){if(Object(h.i)(this._dotVAO)){const i=2,r=new Int16Array(262144*i);for(let e=0;e<512;e++)for(let t=0;t<512;t++)r[i*(t+512*e)]=t,r[i*(t+512*e)+1]=e;const a=C.a.createVertex(e,s.D.STATIC_DRAW,r);this._dotVAO=new I.a(e,t,n,{geometry:a},null)}return this._dotVAO}_createDotDensityTextures(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){const i=new z.a(n);this._dotTextures=[this._allocDotDensityTexture(e,t,i),this._allocDotDensityTexture(e,t,i)]}return this._dotTextures}_allocDotDensityTexture(e,t,n){const i=new Float32Array(t*t*4);for(let r=0;r<i.length;r++)i[r]=n.getFloat();return new G.a(e,{wrapMode:s.B.REPEAT,pixelFormat:s.p.RGBA,dataType:s.q.FLOAT,samplingMode:s.z.NEAREST,width:t,height:t},i)}},text:class extends N{dispose(){}getGeometryType(){return O.d.TEXT}drawGeometry(e,t,n,i){const{context:r,painter:a,rendererInfo:o,state:l,passOptions:c}=e,u=U.f.load(n.materialKey),{bufferLayouts:f,attributes:d}=(p=u,Object(_.g)(p.data,{geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT},{location:1,name:"a_id",count:4,type:s.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:s.k.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:s.k.BYTE},{location:6,name:"a_zoomRange",count:2,type:s.k.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:s.k.SHORT},{location:8,name:"a_texCoords",count:2,type:s.k.UNSIGNED_SHORT}]})),m=a.materialManager.getMaterialProgram(e,u,"materials/text",d,i);var p;r.useProgram(m);let v=s.r.TRIANGLES;Object(h.j)(c)&&"hittest"===c.type&&(v=s.r.POINTS),this._setSharedUniforms(m,e,t),a.textureManager.bindTextures(r,m,u),m.setUniformMatrix3fv("u_displayMat3",l.displayMat3),m.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),this._setSizeVVUniforms(u,m,o,t),this._setColorAndOpacityVVUniforms(u,m,o),this._setRotationVVUniforms(u,m,o),m.setUniform1f("u_isHalo",1);const g=n.target.getVAO(r,f,d),x=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;r.bindVAO(g),r.drawElements(s.r.TRIANGLES,n.indexCount,s.k.UNSIGNED_INT,x),m.setUniform1f("u_isHalo",0),r.drawElements(v,n.indexCount,s.k.UNSIGNED_INT,x)}},label:class extends N{dispose(){}getGeometryType(){return O.d.LABEL}drawGeometry(e,t,n,i){const{context:r,painter:a,state:o,rendererInfo:l}=e,c=U.b.load(n.materialKey),u=c.mapAligned?1:0;if(!u&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:f,attributes:d}=(e=>Object(_.g)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:s.k.SHORT},{location:1,name:"a_id",count:4,type:s.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:s.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:s.k.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:s.k.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:s.k.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:s.k.SHORT},{location:8,name:"a_texCoords",count:2,type:s.k.UNSIGNED_SHORT}]}))(c),m=a.materialManager.getMaterialProgram(e,c,"materials/label",d,i);e.context.setStencilFunction(s.h.EQUAL,0,255),r.useProgram(m),this._setSharedUniforms(m,e,t),a.textureManager.bindTextures(r,m,c);const h=1===u?o.displayViewMat3:o.displayMat3;this._setSizeVVUniforms(c,m,l,t),m.setUniform1f("u_mapRotation",Math.floor(o.rotation/360*254)),m.setUniform1f("u_mapAligned",u),m.setUniformMatrix3fv("u_displayMat3",h),m.setUniform1f("u_opacity",1),m.setUniform2fv("u_screenSize",e.state.size),m.setUniform1f("u_isHalo",1);const p=n.target.getVAO(r,f,d),v=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;r.bindVAO(p),r.drawElements(s.r.TRIANGLES,n.indexCount,s.k.UNSIGNED_INT,v),m.setUniform1f("u_isHalo",0),r.drawElements(s.r.TRIANGLES,n.indexCount,s.k.UNSIGNED_INT,v),r.setStencilTestEnabled(!0),r.setBlendingEnabled(!0)}},clip:x,stencil:y.a,bitmap:m,raster:c,rasterVF:u.a,flow:i.a,tileInfo:b.a,vtlBackground:E,vtlFill:D,vtlLine:A,vtlCircle:R,vtlSymbol:j}},648:function(e,t,n){"use strict";n.d(t,"a",(function(){return I}));n(5);var i=n(2),r=n(281),a=n(646),o=n(654),s=n(8),l=n(11),c=n(628),u=n(642),f=n(32),d=n(76),m=n(340),h=n(109),p=n(174),_=n(619),v=n(614);const g=l.a.getLogger("esri.views.2d.engine.webgl.Mesh2D"),x=(e,t,n,i)=>{let r=0;for(let a=1;a<n;a++){const n=e[2*(t+a-1)],i=e[2*(t+a-1)+1];r+=(e[2*(t+a)]-n)*(e[2*(t+a)+1]+i)}return i?r>0:r<0},b=({coords:e,lengths:t},n)=>{const i=[];for(let r=0,a=0;r<t.length;a+=t[r],r+=1){const o=a,s=[];for(;r<t.length-1&&x(e,a+t[r],t[r+1],n);r+=1,a+=t[r])s.push(a+t[r]-o);const l=e.slice(2*o,2*(a+t[r])),c=Object(u.a)(l,s,2);for(const e of c)i.push(e+o)}return i};class y{constructor(e,t,n,i=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=n,this.isMapSpace=i}static fromRect({x:e,y:t,width:n,height:i}){const r=e,a=t,o=r+n,s=a+i;return y.fromScreenExtent({xmin:r,ymin:a,xmax:o,ymax:s})}static fromPath(e){const t=Object(m.f)(new h.a,e.path,!1,!1),n=t.coords,i=new Uint32Array(b(t,!0)),r=new Uint32Array(n.length/2);for(let a=0;a<r.length;a++)r[a]=Object(p.a)(Math.floor(n[2*a]),Math.floor(n[2*a+1]));return new y({geometry:r},i,v.r.TRIANGLES)}static fromGeometry(e,t){const n=t.geometry.type;switch(n){case"polygon":return y.fromPolygon(e,t.geometry);case"extent":return y.fromMapExtent(e,t.geometry);default:return g.error(new s.a("mapview-bad-type","Unable to create a mesh from type "+n,t)),y.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const n=Object(m.g)(new h.a,t,!1,!1),i=n.coords,r=new Uint32Array(b(n,!1)),a=new Uint32Array(i.length/2),o=Object(d.a)(),s=Object(d.a)();for(let l=0;l<a.length;l++)Object(f.m)(o,i[2*l],i[2*l+1]),e.toScreen(s,o),a[l]=Object(p.a)(Math.floor(s[0]),Math.floor(s[1]));return new y({geometry:a},r,v.r.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:n,ymax:i}){const r={geometry:new Uint32Array([Object(p.a)(e,n),Object(p.a)(t,n),Object(p.a)(e,i),Object(p.a)(e,i),Object(p.a)(t,n),Object(p.a)(t,i)])},a=new Uint32Array([0,1,2,3,4,5]);return new y(r,a,v.r.TRIANGLES)}static fromMapExtent(e,t){const[n,i]=e.toScreen([0,0],[t.xmin,t.ymin]),[r,a]=e.toScreen([0,0],[t.xmax,t.ymax]),o={geometry:new Uint32Array([Object(p.a)(n,i),Object(p.a)(r,i),Object(p.a)(n,a),Object(p.a)(n,a),Object(p.a)(r,i),Object(p.a)(r,a)])},s=new Uint32Array([0,1,2,3,4,5]);return new y(o,s,v.r.TRIANGLES)}destroy(){Object(i.j)(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)Object(i.j)(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}get elementType(){return(e=>{switch(e.BYTES_PER_ELEMENT){case 1:return v.k.UNSIGNED_BYTE;case 2:return v.k.UNSIGNED_SHORT;case 4:return v.k.UNSIGNED_INT;default:throw new s.a("Cannot get DataType of array")}})(this.indices)}getIndexBuffer(e,t=v.D.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=_.a.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=v.D.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce((n,i)=>({...n,[i]:_.a.createVertex(e,t,this.vertices[i])}),{})),this._cache.vertexBuffers}}var S=n(620);const T=l.a.getLogger("esri.views.2d.engine.webgl.ClippingInfo"),O=e=>parseFloat(e)/100;class w extends c.a{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=t.watch("version",()=>this._invalidate()),this.ready()}static fromClipArea(e,t){return new w(e,t)}_destroyGL(){Object(i.j)(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(i.j)(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,n,r){const[a,o]=t.size;if("geometry"!==this._clip.type&&this._lastWidth===a&&this._lastHeight===o||(this._lastWidth=a,this._lastHeight=o,this._destroyGL()),Object(i.i)(this._cache.vao)){const i=this._createMesh(t,this._clip),a=i.getIndexBuffer(e),o=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new S.a(e,n,r,o,a)}return this._cache.vao}_createTransforms(){return{dvs:Object(r.b)()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(e,t){const[n,i]=e.size,r="string"==typeof t.left?O(t.left)*n:t.left,a="string"==typeof t.right?O(t.right)*n:t.right,o="string"==typeof t.top?O(t.top)*i:t.top,s="string"==typeof t.bottom?O(t.bottom)*i:t.bottom,l=r,c=o;return{x:l,y:c,width:Math.max(n-a-l,0),height:Math.max(i-s-c,0)}}_createMesh(e,t){switch(t.type){case"rect":return y.fromRect(this._createScreenRect(e,t));case"path":return y.fromPath(t);case"geometry":return y.fromGeometry(e,t);default:return T.error(new s.a("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),y.fromRect({x:0,y:0,width:1,height:1})}}}var C=n(615);class I extends o.a{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach(t=>t.clips=e),this._updateClippingInfo()}_createTransforms(){return{dvs:Object(r.b)()}}doRender(e){const t=this.createRenderParams(e),{painter:n,globalOpacity:i,profiler:r,drawPhase:a}=t,o=a===C.c.LABEL||a===C.c.HIGHLIGHT?1:i*this.computedOpacity;r.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,o),this.updateTransforms(e.state),this.renderChildren(t),n.compositeLayer(t,o),r.recordContainerEnd()}renderChildren(e){Object(i.i)(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const n of this.children)n.beforeRender(e);for(const n of this._renderPasses)try{n.render(e)}catch(t){}for(const n of this.children)n.afterRender(e)}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:"clip",brushes:[a.a.clip],target:()=>this._clippingInfos,drawPhase:C.c.MAP|C.c.LABEL|C.c.LABEL_ALPHA|C.c.DEBUG|C.c.HIGHLIGHT})]}updateTransforms(e){for(const t of this.children)t.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){if(Object(i.j)(this._clippingInfos)&&(this._clippingInfos.forEach(e=>e.destroy()),this._clippingInfos=null),!this.stage)return;const e=this._clips;Object(i.j)(e)&&e.length&&(this._clippingInfos=e.items.map(e=>w.fromClipArea(this.stage,e))),this.requestRender()}}},649:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return o}));const i=!0,r=32,a=1.5,o=200},650:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));n(5);var i=n(2),r=n(681),a=n(106),o=n(614),s=n(653);class l{constructor(e,t,n,i,l=new Map){this._context=e,this._locations=i,this._uniformBlockBindings=l,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v={},this._nameToUniform2={},this._nameToUniform3={},this._nameToUniform4={},this._nameToUniformMatrix3={},this._nameToUniformMatrix4={},e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),this._context.type===a.a.WEBGL2&&(t=Object(s.a)(t,o.u.VERTEX_SHADER),n=Object(s.a)(n,o.u.FRAGMENT_SHADER)),this._vShader=u(this._context,o.u.VERTEX_SHADER,t),this._fShader=u(this._context,o.u.FRAGMENT_SHADER,n),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(o.t.Shader,this),Object(r.c)()&&(this.vertexShader=t,this.fragmentShader=n)}get glName(){if(Object(i.j)(this._glName))return this._glName;if(Object(i.i)(this._vShader))return null;const e=this._context.gl,t=e.createProgram();if(e.attachShader(t,this._vShader),e.attachShader(t,this._fShader),this._locations.forEach((n,i)=>e.bindAttribLocation(t,n,i)),e.linkProgram(t),Object(r.c)()&&!e.getProgramParameter(t,e.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${e.getProgramParameter(t,e.VALIDATE_STATUS)}, gl error ${e.getError()}, vertex: ${e.getShaderParameter(this._vShader,e.COMPILE_STATUS)}, fragment: ${e.getShaderParameter(this._fShader,e.COMPILE_STATUS)}, info log: ${e.getProgramInfoLog(t)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===a.a.WEBGL2){const n=e;for(const[e,i]of this._uniformBlockBindings){const r=n.getUniformBlockIndex(t,e);r<4294967295&&n.uniformBlockBinding(t,r,i)}}return this._glName=t,this._context.instanceCounter.increment(o.t.Program,this),t}get hasGLName(){return Object(i.j)(this._glName)}get isCompiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl;this._vShader&&(e.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(o.t.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(o.t.Program,this))}ref(){++this._refCount}_getUniformLocation(e){return void 0===this._nameToUniformLocation[e]&&(this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this.glName,e)),this._nameToUniformLocation[e]}hasUniform(e){return null!==this._getUniformLocation(e)}setUniform1i(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1iv(e,t){const n=this._nameToUniform1v[e];c(n,t)&&(this._context.gl.uniform1iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform1v[e]=Array.from(t):f(t,n))}setUniform2iv(e,t){const n=this._nameToUniform2[e];c(n,t)&&(this._context.gl.uniform2iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform2[e]=Array.from(t):f(t,n))}setUniform3iv(e,t){const n=this._nameToUniform3[e];c(n,t)&&(this._context.gl.uniform3iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform3[e]=Array.from(t):f(t,n))}setUniform4iv(e,t){const n=this._nameToUniform4[e];c(n,t)&&(this._context.gl.uniform4iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform4[e]=Array.from(t):f(t,n))}setUniform1f(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1fv(e,t){const n=this._nameToUniform1v[e];c(n,t)&&(this._context.gl.uniform1fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform1v[e]=Array.from(t):f(t,n))}setUniform2f(e,t,n){const i=this._nameToUniform2[e];void 0!==i&&t===i[0]&&n===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),void 0===i?this._nameToUniform2[e]=[t,n]:(i[0]=t,i[1]=n))}setUniform2fv(e,t){const n=this._nameToUniform2[e];c(n,t)&&(this._context.gl.uniform2fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform2[e]=Array.from(t):f(t,n))}setUniform3f(e,t,n,i){const r=this._nameToUniform3[e];void 0!==r&&t===r[0]&&n===r[1]&&i===r[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),void 0===r?this._nameToUniform3[e]=[t,n,i]:(r[0]=t,r[1]=n,r[2]=i))}setUniform3fv(e,t){const n=this._nameToUniform3[e];c(n,t)&&(this._context.gl.uniform3fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform3[e]=Array.from(t):f(t,n))}setUniform4f(e,t,n,i,r){const a=this._nameToUniform4[e];void 0!==a&&t===a[0]&&n===a[1]&&i===a[2]&&r===a[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,r),void 0===a?this._nameToUniform4[e]=[t,n,i,r]:(a[0]=t,a[1]=n,a[2]=i,a[3]=r))}setUniform4fv(e,t){const n=this._nameToUniform4[e];c(n,t)&&(this._context.gl.uniform4fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform4[e]=Array.from(t):f(t,n))}setUniformMatrix3fv(e,t,n=!1){const r=this._nameToUniformMatrix3[e];(function(e,t){return!!Object(i.i)(e)||(9!==e.length?c(e,t):9!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8])})(r,t)&&(this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t),void 0===r?this._nameToUniformMatrix3[e]=Array.from(t):f(t,r))}setUniformMatrix4fv(e,t,n=!1){const r=this._nameToUniformMatrix4[e];(function(e,t){return!!Object(i.i)(e)||(16!==e.length?c(e,t):16!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8]||e[9]!==t[9]||e[10]!==t[10]||e[11]!==t[11]||e[12]!==t[12]||e[13]!==t[13]||e[14]!==t[14]||e[15]!==t[15])})(r,t)&&(this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t),void 0===r?this._nameToUniformMatrix4[e]=Array.from(t):f(t,r))}stop(){}}function c(e,t){if(Object(i.i)(e)||e.length!==t.length)return!0;for(let n=0;n<e.length;++n)if(e[n]!==t[n])return!0;return!1}function u(e,t,n){const i=e.gl,s=i.createShader(t);return i.shaderSource(s,n),i.compileShader(s),Object(r.c)()&&!i.getShaderParameter(s,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===o.u.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(s)),console.error(function(e){let t=2;return e.replace(/\n/g,()=>"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":")}(n)),e.type===a.a.WEBGL2&&(console.log("Shader source before transpilation:"),console.log(n))),s}function f(e,t){for(let n=0;n<e.length;++n)t[n]=e[n]}},651:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(e){this.readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const n=this._read(e);if(!n)throw new Error("cannot find shader file "+e);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let r=i.exec(n);const a=[];for(;null!=r;)a.push({path:r[1],start:r.index,length:r[0].length}),r=i.exec(n);let o=0,s="";return a.forEach(e=>{s+=n.slice(o,e.start),s+=t.has(e.path)?"":this._resolve(e.path,t),o=e.start+e.length}),s+=n.slice(o),t.set(e,s),s}_read(e){return this.readFile(e)}}},653:function(e,t,n){"use strict";n.d(t,"a",(function(){return C}));n(5);var i=n(2),r=n(614);const a=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"];var o,s={exports:{}};void 0!==(o=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(s.exports=o);const l=s.exports;var c,u={exports:{}};c=u,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(c.exports=t)}();const f=u.exports;var d,m={exports:{}};d=m,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"];void 0!==t&&(d.exports=t)}();const h=m.exports;var p=999,_=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function v(){var e,t,n,i=0,r=0,a=p,o=[],s=[],c=1,u=0,d=0,m=!1,v=!1,g="";return function(e){return s=[],null!==e?b(e.replace?e.replace(/\r\n/g,"\n"):e):(o.length&&x(o.join("")),a=10,x("(eof)"),s)};function x(e){e.length&&s.push({type:_[a],data:e,position:d,line:c,column:u})}function b(t){var o;for(i=0,n=(g+=t).length;e=g[i],i<n;){switch(o=i,a){case 0:i=O();break;case 1:case 2:i=T();break;case 3:i=w();break;case 4:i=E();break;case 11:i=I();break;case 5:i=P();break;case 9999:i=R();break;case 9:i=S();break;case p:i=y()}o!==i&&("\n"===g[o]?(u=0,++c):++u)}return r+=i,g=g.slice(i),s}function y(){return o=o.length?[]:o,"/"===t&&"*"===e?(d=r+i-1,a=0,t=e,i+1):"/"===t&&"/"===e?(d=r+i-1,a=1,t=e,i+1):"#"===e?(a=2,d=r+i,i):/\s/.test(e)?(a=9,d=r+i,i):(m=/\d/.test(e),v=/[^\w_]/.test(e),d=r+i,a=m?4:v?3:9999,i)}function S(){return/[^\s]/g.test(e)?(x(o.join("")),a=p,i):(o.push(e),t=e,i+1)}function T(){return"\r"!==e&&"\n"!==e||"\\"===t?(o.push(e),t=e,i+1):(x(o.join("")),a=p,i)}function O(){return"/"===e&&"*"===t?(o.push(e),x(o.join("")),a=p,i+1):(o.push(e),t=e,i+1)}function w(){if("."===t&&/\d/.test(e))return a=5,i;if("/"===t&&"*"===e)return a=0,i;if("/"===t&&"/"===e)return a=1,i;if("."===e&&o.length){for(;C(o););return a=5,i}if(";"===e||")"===e||"("===e){if(o.length)for(;C(o););return x(e),a=p,i+1}var n=2===o.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;C(o););return a=p,i}return o.push(e),t=e,i+1}function C(e){for(var t,n,i=0;;){if(t=f.indexOf(e.slice(0,e.length+i).join("")),n=f[t],-1===t){if(i--+e.length>0)continue;n=e.slice(0,1).join("")}return x(n),d+=n.length,(o=o.slice(n.length)).length}}function I(){return/[^a-fA-F0-9]/.test(e)?(x(o.join("")),a=p,i):(o.push(e),t=e,i+1)}function E(){return"."===e||/[eE]/.test(e)?(o.push(e),a=5,t=e,i+1):"x"===e&&1===o.length&&"0"===o[0]?(a=11,o.push(e),t=e,i+1):/[^\d]/.test(e)?(x(o.join("")),a=p,i):(o.push(e),t=e,i+1)}function P(){return"f"===e&&(o.push(e),t=e,i+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(o.push(e),t=e,i+1):/[^\d]/.test(e)?(x(o.join("")),a=p,i):(o.push(e),t=e,i+1)}function R(){if(/[^\d\w_]/.test(e)){var n=o.join("");return a=l.indexOf(n)>-1?8:h.indexOf(n)>-1?7:6,x(o.join("")),a=p,i}return o.push(e),t=e,i+1}}function g(e){return function(e){var t=v(),n=[];return(n=n.concat(t(e))).concat(t(null))}(e)}const x=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function b(e,t){for(let n=t-1;n>=0;n--){const t=e[n];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function y(e,t,n,i){i=i||n;for(const r of e)if("ident"===r.type&&r.data===n)return i in t?t[i]++:t[i]=0,y(e,t,i+"_"+t[i],i);return n}function S(e,t,n="afterVersion"){function i(e,t){for(let n=t;n<e.length;n++){const t=e[n];if("operator"===t.type&&";"===t.data)return n}return null}const r={data:"\n",type:"whitespace"},a=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let o=function(e){let t=-1,r=0,a=-1;for(let o=0;o<e.length;o++){const s=e[o];if("preprocessor"===s.type&&(s.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++r:s.data.match(/\#endif\s*.*/)&&--r),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===s.type&&/^#version/.test(s.data)&&(a=Math.max(a,o)),"afterPrecision"===n&&"keyword"===s.type&&"precision"===s.data){const t=i(e,o);if(null===t)throw new Error("precision statement not followed by any semicolons!");a=Math.max(a,t)}t<a&&0===r&&(t=o)}return t+1}(e);a(o-1)&&e.splice(o++,0,r);for(const s of t)e.splice(o++,0,s);a(o-1)&&a(o)&&e.splice(o,0,r)}function T(e,t,n,i="lowp"){S(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function O(e,t,n,i,r="lowp"){S(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function w(e,t){let n,i,r=-1;for(let a=t;a<e.length;a++){const t=e[a];if("operator"===t.type&&("["===t.data&&(n=a),"]"===t.data)){i=a;break}"integer"===t.type&&(r=parseInt(t.data,10))}return n&&i&&e.splice(n,i-n+1),r}function C(e,t){const n=function(e){return I?E.get(e):null}(e);if(Object(i.j)(n))return n;const o=g(e);if("300 es"===function(e,t="100",n="300 es"){const i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const r of e)if("preprocessor"===r.type){const e=i.exec(r.data);if(e){const i=e[1].replace(/\s\s+/g," ");if(i===n)return i;if(i===t)return r.data="#version "+n,t;throw new Error("unknown glsl version: "+i)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+n},{type:"whitespace",data:"\n"}),null}(o,"100","300 es"))return e;let s=null,l=null;const c={},u={};for(let i=0;i<o.length;++i){const e=o[i];switch(e.type){case"keyword":t===r.u.VERTEX_SHADER&&"attribute"===e.data?e.data="in":"varying"===e.data&&(e.data=t===r.u.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(e.data.trim())&&(e.data=e.data.replace(/(2D|Cube|EXT)/g,"")),t===r.u.FRAGMENT_SHADER&&"gl_FragColor"===e.data&&(s||(s=y(o,c,"fragColor"),T(o,s,"vec4")),e.data=s),t===r.u.FRAGMENT_SHADER&&"gl_FragData"===e.data){const t=w(o,i+1),n=y(o,c,"fragData");O(o,n,"vec4",t,"mediump"),e.data=n}else t===r.u.FRAGMENT_SHADER&&"gl_FragDepthEXT"===e.data&&(l||(l=y(o,c,"gl_FragDepth")),e.data=l);break;case"ident":if(a.indexOf(e.data)>=0){if(t===r.u.VERTEX_SHADER&&b(o,i))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");e.data in u||(u[e.data]=y(o,c,e.data)),e.data=u[e.data]}}}for(let i=o.length-1;i>=0;--i){const e=o[i];if("preprocessor"===e.type){const t=e.data.match(/\#extension\s+(.*)\:/);if(t&&t[1]&&x.indexOf(t[1].trim())>=0){const e=o[i+1];o.splice(i,e&&"whitespace"===e.type?2:1)}const n=e.data.match(/\#ifdef\s+(.*)/);n&&n[1]&&x.indexOf(n[1].trim())>=0&&(e.data="#if 1");const r=e.data.match(/\#ifndef\s+(.*)/);r&&r[1]&&x.indexOf(r[1].trim())>=0&&(e.data="#if 0")}}return function(e,t){return I&&E.set(e,t),t}(e,function(e){return e.map(e=>"eof"!==e.type?e.data:"").join("")}(o))}const I=!1,E=new Map},655:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(2),r=n(617),a=n(614);class o extends r.a{dispose(){}prepareState(e){const{context:t}=e;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(a.h.EQUAL,0,255)}draw(e,t){const{context:n}=e,{displayData:r}=t;if(Object(i.i)(r))return;if("loaded"===r.state.name&&r.prepareForRendering(n),"attached"!==r.state.name)return;const o=r.state.resources;n.setFaceCullingEnabled(!1),n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(a.b.ONE,a.b.ONE_MINUS_SRC_ALPHA,a.b.ONE,a.b.ONE);const s=[];"ramp"===o.values.lineColor.kind&&s.push("vvLineColor"),"ramp"===o.values.lineOpacity.kind&&s.push("vvLineOpacity"),"ramp"===o.values.lineRenderWidth.kind&&s.push("vvLineRenderWidth");const c=e.painter.materialManager.getProgram(e,{vsPath:"raster/flow",fsPath:"raster/flow",attributes:o.locations},s);n.useProgram(c),c.setUniform1f("u_time",e.time/1e3),c.setUniform1f("u_fadeDuration",r.flowStyle.renderSettings.fadeDuration),c.setUniform1f("u_lineSpeed",r.flowStyle.renderSettings.lineSpeed),c.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),c.setUniformMatrix3fv("u_displayViewMat3",e.state.displayViewMat3),l(c,"lineColor","vec4",r.flowStyle.renderSettings.lineColor),l(c,"lineOpacity","float",r.flowStyle.renderSettings.lineOpacity),l(c,"lineRenderWidth","float",r.flowStyle.renderSettings.lineRenderWidth),n.bindVAO(o.vertexArray),n.drawElements(a.r.TRIANGLES,o.indexBuffer.size,a.k.UNSIGNED_INT,0),r.flowStyle.animated&&t.requestRender()}}function s(e,t,n,i){switch(t){case"int":e.setUniform1iv(n,i);break;case"float":e.setUniform1fv(n,i);break;case"vec2":e.setUniform2fv(n,i);break;case"vec3":e.setUniform3fv(n,i);break;case"vec4":e.setUniform4fv(n,i)}}function l(e,t,n,i){"constant"===i.kind?s(e,n,"u_"+t,i.value):(s(e,"float",`u_${t}_stops`,i.stops),s(e,n,`u_${t}_values`,i.values),s(e,"int",`u_${t}_count`,[i.count]))}},656:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n(2),r=n(617),a=n(614);const o=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),s={beaufort_ft:o,beaufort_m:o,beaufort_km:o,beaufort_mi:o,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class l extends r.a{constructor(){super(...arguments),this._desc={magdir:{vsPath:"raster/magdir",fsPath:"raster/magdir",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])},scalar:{vsPath:"raster/scalar",fsPath:"raster/scalar",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])}}}dispose(){}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(a.b.ONE,a.b.ONE_MINUS_SRC_ALPHA,a.b.ONE,a.b.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(a.w.KEEP,a.w.KEEP,a.w.REPLACE),e.setStencilFunction(a.h.EQUAL,t.stencilRef,255)}draw(e,t){if(Object(i.i)(t.source)||0===t.source.validPixelCount)return;const{timeline:n}=e;if(n.begin(this.name),t.updateVectorFieldVAO(e),"scalar"===e.renderPass){const n=t.vaoData.scalar;n&&this._drawScalars(e,t,n.vao,n.elementCount)}else{const n=t.vaoData.magdir;n&&this._drawTriangles(e,t,n.vao,n.elementCount)}n.end(this.name)}_drawTriangles(e,t,n,i){const{context:r,painter:o}=e,{symbolizerParameters:l}=t,c=l.dataRange?["dataRange"]:[];"geographic"===l.rotationType&&c.push("rotationGeographic");const u=o.materialManager.getProgram(e,this._desc.magdir,c);r.useProgram(u);const{coordScale:f,opacity:d,transforms:m}=t;u.setUniform2fv("u_coordScale",f),u.setUniform1f("u_opacity",d),u.setUniformMatrix3fv("u_dvsMat3",m.dvs);const{style:h,dataRange:p,rotation:_,symbolPercentRange:v}=l;u.setUniform4fv("u_colors",s[h]||s.single_arrow),u.setUniform2fv("u_dataRange",p),u.setUniform1f("u_rotation",_),u.setUniform2fv("u_symbolPercentRange",v);const g=this._getSymbolSize(e,t);u.setUniform2fv("u_symbolSize",g),r.bindVAO(n),r.drawElements(a.r.TRIANGLES,i,a.k.UNSIGNED_INT,0)}_drawScalars(e,t,n,i){const{context:r,painter:o}=e,{symbolizerParameters:s}=t,l=[];"wind_speed"===s.style?l.push("innerCircle"):s.dataRange&&l.push("dataRange"),"geographic"===s.rotationType&&l.push("rotationGeographic");const c=o.materialManager.getProgram(e,this._desc.scalar,l);r.useProgram(c);const{coordScale:u,opacity:f,transforms:d}=t;c.setUniform2fv("u_coordScale",u),c.setUniform1f("u_opacity",f),c.setUniformMatrix3fv("u_dvsMat3",d.dvs);const{dataRange:m,symbolPercentRange:h}=s;c.setUniform2fv("u_dataRange",m),c.setUniform2fv("u_symbolPercentRange",h);const p=this._getSymbolSize(e,t);c.setUniform2fv("u_symbolSize",p),r.bindVAO(n),r.drawElements(a.r.TRIANGLES,i,a.k.UNSIGNED_INT,0)}_getSymbolSize(e,t){const n=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:i}=t.symbolizerParameters;return[i/(Math.round((t.width-t.offset[0])/i)*i)/n,i/(Math.round((t.height-t.offset[1])/i)*i)/n]}}},658:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var i=n(2),r=n(208),a=n(281),o=n(175),s=n(659),l=n(628),c=n(614),u=n(639);const f={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class d extends l.a{constructor(e=null,t=null,n=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=n}destroy(){const e=this.getTextures();null==e||e.textures.forEach(e=>e.dispose()),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}get symbolizerParameters(){return this._symbolizerParameters||f}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdschanged(e)&&this.invalidateTexture()}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e)?c.z.LINEAR:c.z.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:Object(a.b)()}}setTransform(e){const t=Object(r.b)(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,s=a*this.width,l=a*this.height,c=Math.PI*this.rotation/180;Object(r.c)(t,t,Object(o.b)(n,i)),Object(r.c)(t,t,Object(o.b)(s/2,l/2)),Object(r.k)(t,t,-c),Object(r.c)(t,t,Object(o.b)(-s/2,-l/2)),Object(r.g)(t,t,Object(o.b)(s,l)),Object(r.i)(this.transforms.dvs,e.displayViewMat3,t)}getTextures(){if(!this._rasterTexture)return null;const e=[],t=[];return this._transformGridTexture&&(t.push(this._transformGridTexture),e.push("u_transformGrid")),this._rasterTexture&&(t.push(this._rasterTexture),e.push("u_image")),this._colormapTexture&&(t.push(this._colormapTexture),e.push("u_colormap")),{names:e,textures:t}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){var t,n,i;if(!this.stage)return null==(t=this._rasterTexture)||t.dispose(),null==(n=this._transformGridTexture)||n.dispose(),null==(i=this._colormapTexture)||i.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const r=this._isValidSource(this.source);r&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(r?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Object(u.c)(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}_createOrDestroyRasterTexture(e){var t,n;const r=Object(i.j)(this.source)?Object(s.h)(this.source,this.bandIds):null;if(!this._isValidSource(r))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const a=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(a)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=null==(t=e.capabilities.textureFloat)?void 0:t.textureFloatLinear;const o=this._getTextureSamplingMethod(this.interpolation),l=this.isRendereredSource||!(null!=(n=e.capabilities.textureFloat)&&n.textureFloat);this._rasterTexture=Object(u.b)(e,r,o,l),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return Object(i.j)(e)&&(null==(t=e.pixels)?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t,colormap:n}=this.symbolizerParameters,r="lut"===t||"stretch"===t&&Object(i.j)(n);return!this._supportsBilinearTexture||r||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,n=this.symbolizerParameters.colormap;return n?t?n.length!==t.length||n.some((e,n)=>e!==t[n])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Object(u.a)(e,n),void(this._colormap=n)):void 0:(this._colormapTexture=Object(u.a)(e,n),void(this._colormap=n)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}function m(e){return Object(i.j)(e.source)}},660:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var i=n(0),r=n(20),a=n(101),o=n(85),s=n(284),l=n(11),c=n(2),u=n(156),f=n(1),d=(n(9),n(5),n(4),n(3));let m=class extends(Object(o.b)(Object(s.a)(Object(u.b)(a.a.EventedMixin(r.a))))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch(e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",n=this.layer&&this.layer.title||"no title";throw l.a.getLogger(this.declaredClass).error("#resolve()",`Failed to resolve layer view (layer title: '${n}', id: '${t}')`,e),e}})}get fullOpacity(){return Object(c.r)(this.get("layer.opacity"),1)*Object(c.r)(this.get("parent.fullOpacity"),1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&!0===this.layer.legendEnabled}get updating(){var e;return!!(null!=(e=this.updatingHandles)&&e.updating||this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){var e;return!0===(null==(e=this.layer)?void 0:e.visible)}set visible(e){void 0!==e?this._override("visible",e):this._clearOverride("visible")}canResume(){var e,t,n;return this.visible&&(null==(e=this.layer)?void 0:e.loaded)&&!(null!=(t=this.parent)&&t.suspended)&&(null==(n=this.view)?void 0:n.ready)||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{};return this.view&&this.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};Object(i.a)([Object(f.b)()],m.prototype,"fullOpacity",null),Object(i.a)([Object(f.b)()],m.prototype,"layer",void 0),Object(i.a)([Object(f.b)()],m.prototype,"parent",void 0),Object(i.a)([Object(f.b)({readOnly:!0})],m.prototype,"suspended",null),Object(i.a)([Object(f.b)({readOnly:!0})],m.prototype,"suspendInfo",null),Object(i.a)([Object(f.b)({readOnly:!0})],m.prototype,"legendEnabled",null),Object(i.a)([Object(f.b)({type:Boolean,readOnly:!0})],m.prototype,"updating",null),Object(i.a)([Object(f.b)({readOnly:!0})],m.prototype,"updatingProgress",null),Object(i.a)([Object(f.b)()],m.prototype,"visible",null),Object(i.a)([Object(f.b)()],m.prototype,"view",void 0),m=Object(i.a)([Object(d.a)("esri.views.layers.LayerView")],m);const h=m},661:function(e,t,n){"use strict";n.d(t,"a",(function(){return E}));var i=n(0),r=n(24),a=n(107),o=n(8),s=n(31),l=n(1),c=(n(9),n(5),n(4),n(3)),u=n(654),f=n(10);n(11),n(119);let d=class extends f.a{};d=Object(i.a)([Object(c.a)("esri.views.layers.support.ClipArea")],d);const m=d;var h;let p=h=class extends m{constructor(){super(...arguments),this.type="rect",this.left=null,this.right=null,this.top=null,this.bottom=null}clone(){return new h({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}get version(){return(this._get("version")||0)+1}};Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],p.prototype,"left",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],p.prototype,"right",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],p.prototype,"top",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],p.prototype,"bottom",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],p.prototype,"version",null),p=h=Object(i.a)([Object(c.a)("esri.views.layers.support.ClipRect")],p);const _=p;n(64);var v,g=n(68),x=n(15),b=n(35),y=n(86);const S={base:g.a,key:"type",typeMap:{extent:b.a,polygon:y.a}};let T=v=class extends m{constructor(){super(...arguments),this.type="geometry",this.geometry=null}get version(){return(this._get("version")||0)+1}clone(){return new v({geometry:this.geometry.clone()})}};Object(i.a)([Object(l.b)({types:S,json:{read:x.a,write:!0}})],T.prototype,"geometry",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],T.prototype,"version",null),T=v=Object(i.a)([Object(c.a)("esri.views.layers.support.Geometry")],T);const O=T;let w=class extends m{constructor(){super(...arguments),this.type="path",this.path=[]}get version(){return(this._get("version")||0)+1}};Object(i.a)([Object(l.b)({type:[[[Number]]],json:{write:!0}})],w.prototype,"path",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],w.prototype,"version",null),w=Object(i.a)([Object(c.a)("esri.views.layers.support.Path")],w);const C=w,I=r.a.ofType({key:"type",base:m,typeMap:{rect:_,path:C,geometry:O}}),E=e=>{let t=class extends e{constructor(){super(...arguments),this.attached=!1,this.clips=new I,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1}initialize(){var e,t,n,i;const r=null==(e=null==(t=this.view)?void 0:t.spatialReferenceLocked)||e;(null==(n=this.view)?void 0:n.spatialReference)&&r&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new o.a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new u.a),this.container.fadeTransitionEnabled=!0,this.container.opacity=0,this.container.clips=this.clips,this.handles.add([Object(s.e)(()=>this.suspended,e=>{this.container&&(this.container.visible=!e),this.view&&!e&&this.updateRequested&&this.view.requestUpdate()},s.d),Object(s.e)(()=>{var e,t;return null!=(e=null==(t=this.layer)?void 0:t.opacity)?e:1},e=>{this.container&&(this.container.opacity=e)},s.d),Object(s.e)(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",e=>{this.container&&(this.container.blendMode=e)},s.d),Object(s.e)(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,e=>{this.container&&(this.container.effect=e)},s.d),Object(s.b)(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)})]),null!=(i=this.view)&&i.whenLayerView?this.view.whenLayerView(this.layer).then(e=>{e===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){var e;const t=null==(e=this.view)?void 0:e.spatialReference;return null==t||this.supportsSpatialReference(t)}get updating(){var e;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!(null==(e=this.updatingHandles)||!e.updating))}get visibleAtCurrentScale(){return this.isVisibleAtScale(this.view.scale)}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.detach(),this.updateRequested=!1)}isVisibleAtScale(e){const t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;const{minScale:n,maxScale:i}=t;return(0===n||e<=n)&&(0===i||e>=i)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,t){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),t=!this.spatialReferenceSupported,n=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),n&&(e.outsideScaleRange=n),e}};return Object(i.a)([Object(l.b)()],t.prototype,"attached",void 0),Object(i.a)([Object(l.b)({type:I,set(e){const t=Object(a.b)(e,this._get("clips"),I);this._set("clips",t)}})],t.prototype,"clips",void 0),Object(i.a)([Object(l.b)()],t.prototype,"container",void 0),Object(i.a)([Object(l.b)()],t.prototype,"moving",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"updateParameters",void 0),Object(i.a)([Object(l.b)()],t.prototype,"updateRequested",void 0),Object(i.a)([Object(l.b)()],t.prototype,"updating",null),Object(i.a)([Object(l.b)()],t.prototype,"view",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=Object(i.a)([Object(c.a)("esri.views.2d.layers.LayerView2D")],t),t}},665:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(208),r=n(628),a=n(138);class o extends r.a{constructor(e,t,n,i,r,o=i,s=r){super(),this.triangleCountReportedInDebug=0,this.triangleCount=0,this.texture=null,this.key=new a.a(e),this.x=t,this.y=n,this.width=i,this.height=r,this.rangeX=o,this.rangeY=s}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}setTransform(e,t){const n=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[a,o]=e.toScreenNoRotation([0,0],[this.x,this.y]),s=this.width/this.rangeX*n,l=this.height/this.rangeY*n;Object(i.l)(r,s,0,0,0,l,0,a,o,1),Object(i.i)(this.transforms.dvs,e.displayViewMat3,r)}}},670:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(5),r=n(615),a=n(648),o=n(645),s=n(643);const l=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;class c extends a.a{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(l),this.setStencilReference(e),super.renderChildren(e)}createRenderParams(e){const{state:t}=e,n=super.createRenderParams(e);return n.requiredLevel=this._tileInfoView.getClosestInfoForScale(t.scale).level,n.displayLevel=this._tileInfoView.tileInfo.scaleToZoom(t.scale),n}prepareRenderPasses(e){const t=super.prepareRenderPasses(e);return t.push(e.registerRenderPass({name:"stencil",brushes:[s.a],drawPhase:r.c.DEBUG|r.c.MAP|r.c.HIGHLIGHT,target:()=>this.getStencilTarget()})),Object(i.a)("esri-tiles-debug")&&t.push(e.registerRenderPass({name:"tileInfo",brushes:[o.a],drawPhase:r.c.DEBUG,target:()=>this.children})),t}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const n=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,n)}}setStencilReference(e){let t=1;for(const n of this.children)n.stencilRef=t++}}},683:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));const i=new(n(23).a)({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch",mesh:"mesh"});function r(e){return i.toJSON(e)}function a(e){const{bandCount:t,attributeTable:n,colormap:i,pixelType:r}=e.rasterInfo;return 1===t&&(null!=n||null!=i||"u8"===r||"s8"===r)}},713:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(0),r=n(11),a=n(12),o=n(31),s=n(1),l=(n(9),n(5),n(4),n(3));const c=e=>{let t=class extends e{initialize(){this.handles.add(Object(o.b)(()=>this.layer,"refresh",e=>{this.doRefresh(e.dataChanged).catch(e=>{Object(a.l)(e)||r.a.getLogger(this.declaredClass).error(e)})}),"RefreshableLayerView")}};return Object(i.a)([Object(s.b)()],t.prototype,"layer",void 0),t=Object(i.a)([Object(l.a)("esri.layers.mixins.RefreshableLayerView")],t),t}},722:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return p})),n.d(t,"c",(function(){return _})),n.d(t,"d",(function(){return E})),n.d(t,"e",(function(){return I})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return P})),n.d(t,"h",(function(){return v})),n.d(t,"i",(function(){return c})),n.d(t,"j",(function(){return d}));var i=n(23),r=n(2),a=n(721),o=n(659);const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const l=180/Math.PI,c=new i.a({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function u(e,t){return s.get(e)/s.get(t)||1}function f(e){return(450-e)%360}function d(e,t="geographic"){const[n,i]=e,r=Math.sqrt(n*n+i*i);let a=Math.atan2(i,n)*l;return a=(360+a)%360,"geographic"===t&&(a=f(a)),[r,a]}function m(e,t="geographic"){let n=e[1];"geographic"===t&&(n=f(n)),n%=360;const i=e[0];return[i*Math.cos(n/l),i*Math.sin(n/l)]}function h(e,t,n,i="geographic"){if(!Object(o.j)(e)||Object(r.i)(n))return e;const a="vector-magdir"===t?e.clone():Object(r.q)(p(e,t)),s=a.pixels[1];for(let r=0;r<s.length;r++)s[r]="geographic"===i?(s[r]+n[r]+270)%360:(s[r]+360-n[r])%360;return"vector-magdir"===t?a:p(a,"vector-magdir")}function p(e,t,n="geographic",i=1){if(!Object(o.j)(e))return e;const{pixels:r,width:s,height:l}=e,c=s*l,u=r[0],f=r[1],h=e.pixelType.startsWith("f")?e.pixelType:"f32",p=a.a.createEmptyBand(h,c),_=a.a.createEmptyBand(h,c);let v=0;for(let a=0;a<l;a++)for(let e=0;e<s;e++)"vector-uv"===t?([p[v],_[v]]=d([u[v],f[v]],n),p[v]*=i):([p[v],_[v]]=m([u[v],f[v]],n),p[v]*=i,_[v]*=i),v++;const g=new a.a({pixelType:h,width:e.width,height:e.height,mask:e.mask,validPixelCount:e.validPixelCount,maskIsAlpha:e.maskIsAlpha,pixels:[p,_]});return g.updateStatistics(),g}function _(e,t,n=1){if(1===n||!Object(o.j)(e))return e;const i=e.clone(),{pixels:r,width:a,height:s}=i,l=r[0],c=r[1];let u=0;for(let o=0;o<s;o++)for(let e=0;e<a;e++)"vector-uv"===t?(l[u]*=n,c[u]*=n):l[u]*=n,u++;return i.updateStatistics(),i}function v(e,t,n,i,a){if(!Object(r.j)(a)||!a.spatialReference.equals(e.spatialReference))return{extent:e,width:Math.round(t/i),height:Math.round(n/i),resolution:e.width/t};const o=a.xmin,s=a.ymax,l=(e.xmax-e.xmin)/t*i,c=(e.ymax-e.ymin)/n*i,u=(l+c)/2;return e.xmin=o+Math.floor((e.xmin-o)/l)*l,e.xmax=o+Math.ceil((e.xmax-o)/l)*l,e.ymin=s+Math.floor((e.ymin-s)/c)*c,e.ymax=s+Math.ceil((e.ymax-s)/c)*c,{extent:e,width:Math.round(e.width/l),height:Math.round(e.height/c),resolution:u}}const g=function(e=0,t=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const r=i?-1:1,a=13*r,o=-7*r,s=-2*r,l=-16*r,c=21.75,[u,f]=b(0,t+a,n,c),[d,m]=b(e-5.5,t+o,n,c),[h,p]=b(e+5.5,t+o,n,c),[_,v]=b(e-1.5,t+s,n,c),[g,x]=b(e+1.5,t+s,n,c),[y,S]=b(e-1.5,t+l,n,c),[T,O]=b(e+1.5,t+l,n,c);return[u,f,d,m,_,v,g,x,h,p,y,S,T,O]}(0,0,0);function x(e=0,t=Math.PI,n=!0){n&&(t=(2*Math.PI-t)%(2*Math.PI));const i=n?-1:1,r=5*i,a=20*i,o=25*i,s=45,l=2*i;let[c,u]=[5,0-a],[f,d]=[c+2,u],[m,h]=[f-0,d+l],[p,_]=[-5,0-o],[v,g]=[p+0,_-l],x=Math.ceil(e/5),y=Math.floor(x/10);x-=8*y;const S=[],T=[];for(let A=0;A<x/2;A++,y--){y<=0&&x%2==1&&A===(x-1)/2&&(p=0,v=p+0,_=(_+u)/2,g=_-l);const[e,n]=b(p,_,t,s);if(y>0){const[i,r]=b(f,_,t,s),[a,o]=b(c,u,t,s);S.push(i),S.push(r),S.push(e),S.push(n),S.push(a),S.push(o)}else{const[i,r]=b(f,d,t,s),[a,o]=b(m,h,t,s),[l,c]=b(v,g,t,s);T.push(e),T.push(n),T.push(l),T.push(c),T.push(a),T.push(o),T.push(i),T.push(r)}_+=r,u+=r,d+=r,h+=r,g+=r}const[O,w]=b(5,0+a,t,s),[C,I]=b(7,0+a,t,s),[E,P]=b(5,0-o,t,s),[R,D]=b(7,0-o,t,s);return{pennants:S,barbs:T,shaft:[O,w,C,I,E,P,R,D]}}function b(e,t,n,i=1){const r=Math.sqrt(e*e+t*t)/i,a=(2*Math.PI+Math.atan2(t,e))%(2*Math.PI);return[r,(2*Math.PI+a-n)%(2*Math.PI)]}const y=[0,1,3,6,10,16,21,27,33,40,47,55,63],S=[0,.5,1,1.5,2],T=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function O(e,t,n,i){const r=u(i||"knots",n);let a;for(a=1;a<t.length;a++)if(a===t.length-1){if(e<t[a]*r)break}else if(e<=t[a]*r)break;return Math.min(a-1,t.length-2)}function w(e,t,n,i,r){let a=0;switch(t){case"beaufort_kn":a=O(e,y,"knots",n);break;case"beaufort_km":a=O(e,y,"kilometer-per-hour",n);break;case"beaufort_ft":a=O(e,y,"feet-per-second",n);break;case"beaufort_m":a=O(e,y,"meter-per-second",n);break;case"classified_arrow":a=O(e,r,i,n);break;case"ocean_current_m":a=O(e,S,"meter-per-second",n);break;case"ocean_current_kn":a=O(e,T,"knots",n)}return a}const C=[];function I(e,t){let n=0,i=0;const{width:r,height:a,mask:o}=e,s=e.pixels[0],l=[],f=[],d=u(c.fromJSON(t.inputUnit),"knots"),m="wind_speed"===t.style?5:Number.MAX_VALUE;for(let c=0;c<a;c++)for(let e=0;e<r;e++){const t=s[c*r+e]*d;if((!o||o[c*r+e])&&t<m){for(let i=0;i<4;i++)l[n++]=(e+.5)/r,l[n++]=(c+.5)/a,l[n++]=i<2?-.5:.5,l[n++]=i%2==0?-.5:.5,l[n++]=0,l[n++]=t;const o=4*(n/24-1);f[i++]=o,f[i++]=o+1,f[i++]=o+2,f[i++]=o+1,f[i++]=o+2,f[i++]=o+3}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(f)}}function E(e,t){return"simple_scalar"===t.style?I(e,t):"wind_speed"===t.style?function(e,t){if(0===C.length)for(let c=0;c<30;c++)C.push(x(5*c,0));const n=u(c.fromJSON(t.inputUnit),"knots"),{width:i,height:r,mask:a}=e,o=e.pixels[0],s=e.pixels[1],l=[],f=[];let d=0,m=0;for(let c=0;c<r;c++)for(let e=0;e<i;e++){const t=c*i+e,u=o[t]*n;if((!a||a[c*i+e])&&u>=5){var h;const n=null!=(h=(s[t]+360)%360/180*Math.PI)?h:2*Math.PI*Math.random(),{pennants:a,barbs:o,shaft:p}=C[Math.min(Math.floor(u/5),29)];if(a.length+o.length===0)continue;let _=l.length/6;const v=(e+.5)/i,g=(c+.5)/r;for(let e=0;e<a.length;e+=2)l[d++]=v,l[d++]=g,l[d++]=a[e],l[d++]=a[e+1]+n,l[d++]=0,l[d++]=u;for(let e=0;e<o.length;e+=2)l[d++]=v,l[d++]=g,l[d++]=o[e],l[d++]=o[e+1]+n,l[d++]=0,l[d++]=u;for(let e=0;e<p.length;e+=2)l[d++]=v,l[d++]=g,l[d++]=p[e],l[d++]=p[e+1]+n,l[d++]=0,l[d++]=u;for(let e=0;e<a.length/6;e++)f[m++]=_,f[m++]=_+1,f[m++]=_+2,_+=3;for(let e=0;e<o.length/8;e++)f[m++]=_,f[m++]=_+1,f[m++]=_+2,f[m++]=_+1,f[m++]=_+2,f[m++]=_+3,_+=4;f[m++]=_+0,f[m++]=_+1,f[m++]=_+2,f[m++]=_+1,f[m++]=_+3,f[m++]=_+2,_+=4}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(f)}}(e,t):function(e,t){const{style:n,inputUnit:i,outputUnit:r,breakValues:a}=t,o=c.fromJSON(i),s=c.fromJSON(r);let l=0,u=0;const{width:f,height:d,mask:m}=e,h=e.pixels[0],p=e.pixels[1],_=m?m.filter(e=>e>0).length:f*d,v=new Float32Array(42*_),x=new Uint32Array(15*_);for(let c=0;c<d;c++)for(let e=0;e<f;e++){const t=c*f+e;if(!m||m[c*f+e]){var b;const i=null!=(b=(p[t]+360)%360/180*Math.PI)?b:2*Math.PI*Math.random(),r=w(h[t],n,o,s,a);for(let n=0;n<g.length;n+=2)v[l++]=(e+.5)/f,v[l++]=(c+.5)/d,v[l++]=g[n],v[l++]=g[n+1]+i,v[l++]=r,v[l++]=h[t];const m=7*(l/42-1);x[u++]=m,x[u++]=m+1,x[u++]=m+2,x[u++]=m+0,x[u++]=m+4,x[u++]=m+3,x[u++]=m+0,x[u++]=m+2,x[u++]=m+3,x[u++]=m+2,x[u++]=m+5,x[u++]=m+3,x[u++]=m+5,x[u++]=m+6,x[u++]=m+3}}return{vertexData:v,indexData:x}}(e,t)}function P(e,t,n,i=[0,0],r=.5){const{width:o,height:s,mask:l}=e,[c,u]=e.pixels,[f,h]=i,p=Math.round((o-f)/n),_=Math.round((s-h)/n),v=p*_,g=new Float32Array(v),x=new Float32Array(v),b=new Uint8Array(v),y="vector-uv"===t;for(let a=0;a<_;a++)for(let e=0;e<p;e++){let t=0;const i=a*p+e,_=Math.max(0,a*n+h),v=Math.max(0,e*n+f),S=Math.min(s,_+n),T=Math.min(o,v+n);for(let e=_;e<S;e++)for(let n=v;n<T;n++){const r=e*o+n;if(!l||l[r]){t++;const e=y?[c[r],u[r]]:[c[r],(360+u[r])%360],[n,a]=y?e:m(e);g[i]+=n,x[i]+=a}}if(t>=(S-_)*(T-v)*(1-r)){b[i]=1;const[e,n]=d([g[i]/t,x[i]/t]);g[i]=e,x[i]=n}else b[i]=0,g[i]=0,x[i]=0}const S=new a.a({width:p,height:_,pixels:[g,x],mask:b});return S.updateStatistics(),S}},735:function(e,t,n){"use strict";n.d(t,"a",(function(){return F})),n.d(t,"b",(function(){return g})),n.d(t,"c",(function(){return V})),n.d(t,"d",(function(){return L})),n.d(t,"e",(function(){return R})),n.d(t,"f",(function(){return M})),n.d(t,"g",(function(){return v})),n.d(t,"h",(function(){return E})),n.d(t,"i",(function(){return y})),n.d(t,"j",(function(){return x})),n.d(t,"k",(function(){return f})),n.d(t,"l",(function(){return N})),n.d(t,"m",(function(){return U}));n(64);var i=n(8),r=n(2),a=n(37),o=n(299),s=n(77),l=n(35),c=n(28),u=n(30);function f(e,t,n){return!Object(s.a)(e,t,n)}function d(e,t,n){const r=f(e,t,n);if(r&&!Object(s.e)())throw new i.a("rasterprojectionhelper-project","projection engine is not loaded");return r}const m=function(e,t,n,i=0){if(1===n[0])return[0,0];let r=1,a=-1,o=1,s=-1;for(let _=0;_<e.length;_+=2)isNaN(e[_])||(r=r>e[_]?e[_]:r,a=a>e[_]?a:e[_],o=o>e[_+1]?e[_+1]:o,s=s>e[_+1]?s:e[_+1]);const{cols:l,rows:c}=t,u=(a-r)/l/n[0],f=(s-o)/c/n[1],d=2*i;let m=0,h=!1,p=[0,0];for(let _=0;_<l-3;_++){for(let t=0;t<c-3;t++){const n=_*c*2+2*t,i=(e[n]+e[n+4]+e[n+4*c]+e[n+4*c+4])/4,r=(e[n+1]+e[n+5]+e[n+4*c+1]+e[n+4*c+5])/4,a=Math.abs((i-e[n+2*c+2])/u),o=Math.abs((r-e[n+2*c+3])/f);if(a+o>m&&(m=a+o,p=[a,o]),d&&m>d){h=!0;break}}if(h)break}return p},h={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},p=new Map,_=new Map;async function v(){if(Object(s.e)())return null;await Object(s.f)()}function g(e,t,n){return d(e.spatialReference,t)?n?Object(s.c)(t,e.spatialReference,e):Object(s.c)(e.spatialReference,t,e):null}function x(e,t,n,i=null){const o=e.spatialReference;if(o.equals(t))return e;d(o,t,i);const c=n.center,u=new l.a({xmin:c.x-e.x/2,xmax:c.x+e.x/2,ymin:c.y-e.y/2,ymax:c.y+e.y/2,spatialReference:o}),f=Object(s.g)(u,t,i);if(Object(r.i)(f))return null;const m={x:f.xmax-f.xmin,y:f.ymax-f.ymin},h=R(t);if(Object(r.j)(h)&&m.x>=h){const n=Object(a.d)(o)/Object(a.d)(t);m.x=e.x*n,m.y=e.y*n}return m}function b(e,t=.01){return Object(a.d)(e)?t/Object(a.d)(e):0}function y(e,t,n=null,i=!0){const a=e.spatialReference;if(a.equals(t))return e;d(a,t,n);const o=Object(s.g)(e,t,n);if(!i||!o)return o;const l=D(a,!0),c=D(t,!0),u=b(a);return u&&Object(r.j)(l)&&Object(r.j)(c)&&(o.x>0&&Math.abs(e.x-l[0])<u?o.x-=c[1]-c[0]:o.x<0&&Math.abs(e.x-l[1])<u&&(o.x+=c[1]-c[0])),o}function S(e){const{inSR:t,outSR:n,datumTransformation:i,preferPE:a}=e;if(t.equals(n)){const{points:t}=C(e,null);return t}if(t.isWebMercator&&n.isWGS84||t.isWGS84&&n.isWebMercator)return function(e){const{cols:t,rows:n,xres:i,yres:r,usePixelCenter:a,inSR:o,outSR:l}=e;let{xmin:u,ymax:f}=e;a&&(u+=i/2,f-=r/2);const d=[],m=[],h=Math.max(t,n);for(let _=0;_<h;_++){const e=u+i*Math.min(t,_),a=f-r*Math.min(n,_),h=Object(s.g)(new c.a({x:e,y:a,spatialReference:o}),l);_<=t&&d.push(h.x),_<=n&&m.push(h.y)}const p=[];for(let s=0;s<t;s++)for(let e=0;e<n;e++)p.push([d[s],m[e]]);return p}(e);if(d(t,n,i)&&a){if(t.isGeographic)return T(e);const n=O(t);if(Object(r.j)(n))return T(e)}return function(e){const{points:t}=C(e,null),n=t.map(t=>new c.a(t[0],t[1],e.inSR));return Object(s.g)(n,e.outSR,e.datumTransformation).map(e=>e?[e.x,e.y]:[NaN,NaN])}(e)}function T(e){const{inSR:t,outSR:n,datumTransformation:i}=e,a=O(t),{points:s,mask:l}=C(e,a);if(!t.isGeographic){const e=t.wkid?o.a.coordsys(t.wkid):o.a.fromString(t.isGeographic?o.b.PE_TYPE_GEOGCS:o.b.PE_TYPE_PROJCS,t.wkt);o.c.projToGeog(e,s.length,s)}if(Object(r.j)(i)&&i.steps.length&&i.steps.forEach(e=>{const t=e.wkid?o.a.geogtran(e.wkid):o.a.fromString(o.b.PE_TYPE_GEOGTRAN,e.wkt);o.d.geogToGeog(t,s.length,s,null,e.isInverse?o.b.PE_TRANSFORM_2_TO_1:o.b.PE_TRANSFORM_1_TO_2)}),!n.isGeographic){const e=O(n,!0),t=Object(r.j)(e)&&e.isEnvelope?[e.bbox[1],e.bbox[3]]:[-90,90];!function(e,t){const[n,i]=t;for(let r=0;r<e.length;r++){const t=e[r][1];(t<n||t>i)&&(e[r]=[NaN,NaN])}}(s,t);const i=n.wkid?o.a.coordsys(n.wkid):o.a.fromString(n.isGeographic?o.b.PE_TYPE_GEOGCS:o.b.PE_TYPE_PROJCS,n.wkt);o.c.geogToProj(i,s.length,s)}let c=s;if(l&&s.length!==l.length){c=[];for(let e=0,t=0;e<l.length;e++)l[e]?c.push(s[t++]):c.push([NaN,NaN])}return c}function O(e,t=!1){let n=e.wkid||e.wkt;if(!n||e.isGeographic)return null;if(n=String(n),p.has(n)){const e=p.get(n);return t?null==e?void 0:e.gcs:null==e?void 0:e.pcs}const i=e.wkid?o.a.coordsys(e.wkid):o.a.fromString(e.isGeographic?o.b.PE_TYPE_GEOGCS:o.b.PE_TYPE_PROJCS,e.wkt),r=w(i,b(e,1e-4)),a=w(i,0,!0);return p.set(n,{pcs:r,gcs:a}),t?a:r}function w(e,t=0,n=!1){const i=o.f.generate(e),r=n?e.horizonGcsGenerate():e.horizonPcsGenerate();if(null==r||!r.length)return null;let a=!1,s=r.find(e=>1===e.getInclusive()&&1===e.getKind());if(!s){if(s=r.find(e=>1===e.getInclusive()&&0===e.getKind()),!s)return null;a=!0}const l=i.isPannableRectangle(),c=s.getCoord();if(a)return{isEnvelope:a,isPannable:l,vertices:c,coef:null,bbox:[c[0][0]-t,c[0][1]-t,c[1][0]+t,c[1][1]+t]};let u=0;const f=[];let[d,m]=c[0],[h,p]=c[0];for(let o=0,_=c.length;o<_;o++){u++,u===_&&(u=0);const[e,t]=c[o],[n,i]=c[u];if(i===t)f.push([e,n,t,i,2]);else{const r=(n-e)/(i-t||1e-4),a=e-r*t;t<i?f.push([r,a,t,i,0]):f.push([r,a,i,t,1])}d=d<e?d:e,m=m<t?m:t,h=h>e?h:e,p=p>t?p:t}return{isEnvelope:!1,isPannable:l,vertices:c,coef:f,bbox:[d,m,h,p]}}function C(e,t){const n=[],{cols:i,rows:a,xres:o,yres:s,usePixelCenter:l}=e;let{xmin:c,ymax:u}=e;if(l&&(c+=o/2,u-=s/2),!Object(r.j)(t)){for(let e=0;e<i;e++)for(let t=0;t<a;t++)n.push([c+o*e,u-s*t]);return{points:n}}const f=new Uint8Array(i*a);if(t.isEnvelope){const{bbox:[e,r,l,d]}=t;for(let m=0,h=0;m<i;m++){const i=c+o*m,p=t.isPannable||i>=e&&i<=l;for(let e=0;e<a;e++,h++){const t=u-s*e;p&&t>=r&&t<=d&&(n.push([i,t]),f[h]=1)}}return{points:n,mask:f}}const{coef:d}=t,m=[];for(let r=0;r<a;r++){const e=u-s*r,t=[],n=[];for(let r=0;r<d.length;r++){const[i,a,o,s,l]=d[r];if(e===o&&o===s)t.push(i),t.push(a),n.push(2),n.push(2);else if(e>=o&&e<=s){const r=i*e+a;t.push(r),n.push(l)}}let i=t;if(t.length>2){let e=2===n[0]?0:n[0],r=t[0];i=[];for(let a=1;a<n.length;a++)2===n[a]&&a!==n.length-1||(n[a]!==e&&(i.push(0===e?Math.min(r,t[a-1]):Math.max(r,t[a-1])),e=n[a],r=t[a]),a===n.length-1&&i.push(0===n[a]?Math.min(r,t[a]):Math.max(r,t[a])));i.sort((e,t)=>e-t)}else t[0]>t[1]&&(i=[t[1],t[0]]);m.push(i)}for(let r=0,h=0;r<i;r++){const e=c+o*r;for(let t=0;t<a;t++,h++){const i=u-s*t,r=m[t];if(2===r.length)e>=r[0]&&e<=r[1]&&(n.push([e,i]),f[h]=1);else if(r.length>2){let t=!1;for(let n=0;n<r.length;n+=2)if(e>=r[n]&&e<=r[n+1]){t=!0;break}t&&(n.push([e,i]),f[h]=1)}}}return{points:n,mask:f}}function I(e){const t=R(e[0].spatialReference);if(e.length<2||!Object(r.j)(t))return e[0];let{xmin:n,xmax:i,ymin:a,ymax:o}=e[0];for(let r=1;r<e.length;r++){const n=e[r];i=n.xmax+t*r,a=Math.min(a,n.ymin),o=Math.max(o,n.ymax)}return new l.a({xmin:n,xmax:i,ymin:a,ymax:o,spatialReference:e[0].spatialReference})}function E(e,t,n=null,i=!0){if(e.spatialReference.equals(t))return e;const a=M(e),o=R(e.spatialReference,!0),s=R(t);if(0===a||Object(r.i)(o)||Object(r.i)(s))return P(e,t,n,i);const c=e.clone().normalize();if(1===c.length&&e.xmax<o&&e.xmax-o/2>b(e.spatialReference)){const{xmin:t,xmax:n}=e;for(let i=0;i<=a;i++){const r=0===i?t:-o/2,s=i===a?n-o*i:o/2;c[i]=new l.a({xmin:r,xmax:s,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference})}}return I(c.map(e=>P(e,t,n,i)).filter(e=>!!e))}function P(e,t,n=null,i=!0,a=!0){const o=e.spatialReference;if(o.equals(t))return e;d(o,t,n);const l=Object(s.g)(e,t,n);if(a&&t.isWebMercator&&l&&(l.ymax=Math.min(20037508.342787,l.ymax),l.ymin=Math.max(-20037508.342787,l.ymin),l.ymin>=l.ymax))return null;if(!i||!l)return l;const u=D(o,!0),f=D(t,!0);if(Object(r.i)(u)||Object(r.i)(f))return l;const m=b(o,.001),h=b(o,500),p=b(t,.001);if(Math.abs(l.xmin-f[0])<p&&Math.abs(l.xmax-f[1])<p){const i=Math.abs(e.xmin-u[0]),r=Math.abs(u[1]-e.xmax);if(i<m&&r>h){l.xmin=f[0];const i=[];i.push(new c.a(e.xmax,e.ymin,o)),i.push(new c.a(e.xmax,(e.ymin+e.ymax)/2,o)),i.push(new c.a(e.xmax,e.ymax,o));const r=i.map(e=>y(e,t,n)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);l.xmax=Math.max.apply(null,r)}if(r<m&&i>h){l.xmax=f[1];const i=[];i.push(new c.a(e.xmin,e.ymin,o)),i.push(new c.a(e.xmin,(e.ymin+e.ymax)/2,o)),i.push(new c.a(e.xmin,e.ymax,o));const r=i.map(e=>y(e,t,n)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);l.xmin=Math.min.apply(null,r)}}else{const e=b(t,.001);Math.abs(l.xmin-f[0])<e&&(l.xmin=f[0]),Math.abs(l.xmax-f[1])<e&&(l.xmax=f[1])}return l}function R(e,t=!1){const n=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*n:e.wkid&&e.isGeographic?360:2*h[e.wkid]||null}function D(e,t=!1){if(e.isGeographic)return[-180,180];const n=R(e,t);return Object(r.j)(n)?[-n/2,n/2]:null}function A(e,t,n,i){let r=(e-t)/n;return r-Math.floor(r)!=0?r=Math.floor(r):i&&(r-=1),r}function M(e,t=!1){const n=R(e.spatialReference);if(!Object(r.j)(n))return 0;const i=t?0:-n/2,a=b(e.spatialReference),o=!t&&Math.abs(e.xmax-n/2)<a?n/2:e.xmax,s=!t&&Math.abs(e.xmin+n/2)<a?-n/2:e.xmin;return A(o,i,n,!0)-A(s,i,n,!1)}function L(e){const t=e.storageInfo.origin.x,n=R(e.spatialReference,!0);if(!Object(r.j)(n))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const i=n/2,{nativePixelSize:a,storageInfo:o,extent:s}=e,{maximumPyramidLevel:l,blockWidth:c,pyramidScalingFactor:u}=o;let f=a.x;const d=[],m=Object(r.j)(e.transform)&&"gcs-shift"===e.transform.type,h=t+(m?0:i),p=m?n-t:i-t;for(let r=0;r<=l;r++){const e=(s.xmax-t)/f/c,n=e-Math.floor(e)==0?e:Math.ceil(e),i=p/f/c,r=i-Math.floor(i)==0?i:Math.ceil(i),a=Math.floor(h/f/c),o=Math.round(h/f)%c,l=(c-Math.round(p/f)%c)%c;d.push({resolutionX:f,blockWidth:c,datsetColumnCount:n,worldColumnCountFromOrigin:r,leftMargin:o,rightPadding:l,originColumnOffset:a}),f*=u}return{originX:t,halfWorldWidth:i,pyramidsInfo:d,hasGCSSShiftTransform:m}}function V(e){const t=e.isAdaptive&&null==e.spacing;let n=e.spacing||[32,32],i=j(e),a={cols:i.size[0]+1,rows:i.size[1]+1};const s=i.outofBoundPointCount>0&&i.outofBoundPointCount<i.offsets.length/2;let l=i.outofBoundPointCount===i.offsets.length/2||t&&s?[0,0]:m(i.offsets,a,n,4);const c=(l[0]+l[1])/2,d=e.projectedExtent.spatialReference,h=e.srcBufferExtent.spatialReference;if(t&&(s||c>4)&&(f(d,h,e.datumTransformation)&&(d.isGeographic||Object(r.j)(O(d))),n=[4,4],i=j({...e,spacing:n}),a={cols:i.size[0]+1,rows:i.size[1]+1},l=m(i.offsets,a,n,4)),i.error=l,n[0]>1&&(i.coefficients=z(i.offsets,a,s)),e.includeGCSGrid&&!d.isGeographic&&!d.isWebMercator)if(h.isGeographic)i.gcsGrid={offsets:i.offsets,coefficients:i.coefficients,spacing:n};else{const t=O(d);if(Object(r.j)(t)&&!t.isEnvelope){const t=function(e){if(!e||e.isGeographic)return e;const t=String(e.wkid||e.wkt);let n;return _.has(t)?n=_.get(t):(n=(e.wkid?o.a.coordsys(e.wkid):o.a.fromString(o.b.PE_TYPE_PROJCS,e.wkt)).getGeogcs().getCode(),_.set(t,n)),new u.a({wkid:n})}(d),r=E(e.projectedExtent,t),{offsets:l}=j({...e,srcBufferExtent:r,spacing:n}),c=z(l,a,s);i.gcsGrid={offsets:l,coefficients:c,spacing:n}}}return i}function j(e){const{projectedExtent:t,srcBufferExtent:n,pixelSize:i,datumTransformation:a,rasterTransform:o}=e,s=t.spatialReference,l=n.spatialReference;d(s,l);const{xmin:u,ymin:f,xmax:m,ymax:h}=t,p=R(l),_=Object(r.j)(p)&&(e.hasWrapAround||"gcs-shift"===(null==o?void 0:o.type)),v=e.spacing||[32,32],g=v[0]*i.x,x=v[1]*i.y,y=1===v[0],T=Math.ceil((m-u)/g-.1/v[0])+(y?0:1),O=Math.ceil((h-f)/x-.1/v[1])+(y?0:1),w=S({cols:T,rows:O,xmin:u,ymax:h,xres:g,yres:x,inSR:s,outSR:l,datumTransformation:a,preferPE:v[0]<=4,usePixelCenter:y}),C=[];let I,E=0;const P=y?-1:NaN,{xmin:D,xmax:A,ymax:M,width:L,height:V}=n,j=b(l,500);for(let r=0;r<T;r++){const e=[];for(let t=0;t<O;t++){let n=w[r*O+t];if(_&&n[0]>A&&n[0]>p/2-j&&(n[0]-=p),!n||isNaN(n[0])||isNaN(n[1]))C.push(P),C.push(P),e.push(null),E++;else{if(o){const e=o.inverseTransform(new c.a({x:n[0],y:n[1],spatialReference:l}));n=[e.x,e.y]}e.push(n),r>0&&_&&I[t]&&n[0]<I[t][0]&&(n[0]+=p),C.push((n[0]-D)/L),C.push((M-n[1])/V)}}I=e}return{offsets:C,error:null,coefficients:null,outofBoundPointCount:E,spacing:v,size:y?[T,O]:[T-1,O-1]}}function z(e,t,n){const{cols:i,rows:r}=t,a=new Float32Array((i-1)*(r-1)*2*6),o=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),s=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let l=0;l<i-1;l++){for(let t=0;t<r-1;t++){let n=l*r*2+2*t;const c=e[n],u=e[n+1],f=e[n+2],d=e[n+3];n+=2*r;const m=e[n],h=e[n+1],p=e[n+2],_=e[n+3];let v=0,g=12*(t*(i-1)+l);for(let e=0;e<3;e++)a[g++]=o[v++]*c+o[v++]*f+o[v++]*p;v=0;for(let e=0;e<3;e++)a[g++]=o[v++]*u+o[v++]*d+o[v++]*_;v=0;for(let e=0;e<3;e++)a[g++]=s[v++]*c+s[v++]*m+s[v++]*p;v=0;for(let e=0;e<3;e++)a[g++]=s[v++]*u+s[v++]*h+s[v++]*_}if(n)for(let e=0;e<a.length;e++)isNaN(a[e])&&(a[e]=-1)}return a}function N(e){const t=e.clone().normalize();return 1===t.length?t[0]:I(t)}function U(e,t,n){const{storageInfo:i,pixelSize:a}=t;let o,s=!1;const{pyramidResolutions:l}=i;if(Object(r.j)(l)&&l.length){const i=(e.x+e.y)/2,r=l[l.length-1],u=(r.x+r.y)/2,f=(a.x+a.y)/2;if(i<=f)o=0;else if(i>=u)o=l.length,s=i/u>8;else{let e,t=f;for(let r=1;r<=l.length;r++){if(e=(l[r-1].x+l[r-1].y)/2,i<=e){i===e?o=r:"down"===n?(o=r-1,s=i/t>8):o="up"===n||i-t>e-i||i/t>2?r:r-1;break}t=e}}const d=0===o?a:l[o-1];return{pyramidLevel:o,pyramidResolution:new c.a({x:d.x,y:d.y,spatialReference:t.spatialReference}),excessiveReading:s}}const u=Math.log(e.x/a.x)/Math.LN2,f=Math.log(e.y/a.y)/Math.LN2,d=t.storageInfo.maximumPyramidLevel||0;o="down"===n?Math.floor(Math.min(u,f)):"up"===n?Math.ceil(Math.max(u,f)):Math.round((u+f)/2),o<0?o=0:o>d&&(s=o>d+3,o=d);const m=2**o;return{pyramidLevel:o,pyramidResolution:new c.a({x:m*t.nativePixelSize.x,y:m*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:s}}function F(e,t,n=512,i=!0){const{extent:r,spatialReference:o,pixelSize:s}=e,l=x(new c.a({x:s.x,y:s.y,spatialReference:o}),t,r);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const u=(l.x+l.y)/2,f=Object(a.d)(t),d=u*f*96*39.37,m=t.isGeographic?256/n*295828763.7958547:256/n*591657527.591555;let h="vector-magdir"===e.dataType||"vector-uv"===e.dataType;const p=E(r,t);h||i&&(t.isGeographic||t.isWebMercator)&&(h=p.xmin*p.xmax<0);let _,v=d;const g=1.001;if(h){v=m;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,n=e*(96*f*39.37),i=t.isGeographic?4326:3857;_=x(new c.a({x:e,y:e,spatialReference:{wkid:i}}),o,p),_.x*=v/n,_.y*=v/n}else{_={x:s.x,y:s.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let n=0;for(;v<m*(g/2)&&n<t;)n++,v*=2,_.x*=2,_.y*=2;Math.max(v,m)/Math.min(v,m)<=g&&(v=m)}const b=[v],y=[{x:_.x,y:_.y}],S=Math.min(70.5310735,d)/g;for(;v>=S;)v/=2,_.x/=2,_.y/=2,b.push(v),y.push({x:_.x,y:_.y});return{projectedPixelSize:l,scales:b,srcResolutions:y,isCustomTilingScheme:!h}}},764:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return v}));n(64);var i=n(11),r=n(49),a=n(2),o=n(12),s=n(379),l=n(27),c=n(35);const u=i.a.getLogger("esri.views.2d.engine.flow.dataUtils");async function f(e,t,n){const i=performance.now(),r=d(e,t),a=performance.now(),l=h(e,r,t.width,t.height),c=performance.now(),f=function(e,t){const n=new s.a,i=e.reduce((e,t)=>e+t.length,0),r=new Float32Array(4*i),a=new Array(e.length);let o=0,l=0;for(const s of e){const e=o;for(const t of s)r[4*o+0]=t.x,r[4*o+1]=t.y,r[4*o+2]=t.t,r[4*o+3]=t.speed,o++;a[l++]={startVertex:e,numberOfVertices:s.length,totalTime:s[s.length-1].t,timeSeed:t?n.getFloat():0}}return{lineVertices:r,lineDescriptors:a}}(l,!0),m=performance.now(),_=p(f),v=performance.now();if(e.profile){const e={"_createFlowFieldFromData()":Math.round(a-i),"_getStreamlines()":Math.round(c-a),"createAnimatedLinesData()":Math.round(m-c),"createLinesMesh()":Math.round(v-m),"Total elapsed time":Math.round(v-i)};u.info("createStreamlinesMesh profile",e)}return await Promise.resolve(),Object(o.t)(n),_}function d(e,t){const n=function(e,t,n,i){if(0===i)return e;const r=Math.round(3*i),a=new Array(2*r+1);let o=0;for(let c=-r;c<=r;c++){const e=Math.exp(-c*c/(i*i));a[c+r]=e,o+=e}for(let c=-r;c<=r;c++)a[c+r]/=o;const s=new Float32Array(e.length);for(let c=0;c<n;c++)for(let n=0;n<t;n++){let i=0,o=0;for(let s=-r;s<=r;s++){if(n+s<0||n+s>=t)continue;const l=a[s+r];i+=l*e[2*(c*t+(n+s))+0],o+=l*e[2*(c*t+(n+s))+1]}s[2*(c*t+n)+0]=i,s[2*(c*t+n)+1]=o}const l=new Float32Array(e.length);for(let c=0;c<t;c++)for(let e=0;e<n;e++){let i=0,o=0;for(let l=-r;l<=r;l++){if(e+l<0||e+l>=n)continue;const u=a[l+r];i+=u*s[2*((e+l)*t+c)+0],o+=u*s[2*((e+l)*t+c)+1]}l[2*(e*t+c)+0]=i,l[2*(e*t+c)+1]=o}return l}(t.data,t.width,t.height,e.smoothing);return e.interpolate?(e,i)=>{const r=Math.floor(e),a=Math.floor(i);if(r<0||r>=t.width)return[0,0];if(a<0||a>=t.height)return[0,0];const o=e-r,s=i-a,l=r,c=a,u=r<t.width-1?r+1:r,f=a<t.height-1?a+1:a,d=n[2*(c*t.width+l)],m=n[2*(c*t.width+u)],h=n[2*(f*t.width+l)],p=n[2*(f*t.width+u)],_=n[2*(c*t.width+l)+1],v=n[2*(c*t.width+u)+1];return[(d*(1-s)+h*s)*(1-o)+(m*(1-s)+p*s)*o,(_*(1-s)+n[2*(f*t.width+l)+1]*s)*(1-o)+(v*(1-s)+n[2*(f*t.width+u)+1]*s)*o]}:(e,i)=>{const r=Math.round(e),a=Math.round(i);return r<0||r>=t.width||a<0||a>=t.height?[0,0]:[n[2*(a*t.width+r)+0],n[2*(a*t.width+r)+1]]}}function m(e,t,n,i,r,a,o,s,l){const c=[];let u=n,f=i,d=0,[m,h]=t(u,f);m*=e.velocityScale,h*=e.velocityScale;const p=Math.sqrt(m*m+h*h);let _,v;c.push({x:u,y:f,t:d,speed:p});for(let g=0;g<e.verticesPerLine;g++){let[n,i]=t(u,f);n*=e.velocityScale,i*=e.velocityScale;const m=Math.sqrt(n*n+i*i);if(m<e.minSpeedThreshold)return c;const h=n/m,p=i/m;if(u+=h*e.segmentLength,f+=p*e.segmentLength,d+=e.segmentLength/m,Math.acos(h*_+p*v)>e.maxTurnAngle)return c;if(e.mergeLines){const e=Math.round(u*l),t=Math.round(f*l);if(e<0||e>o-1||t<0||t>s-1)return c;const n=a[t*o+e];if(-1!==n&&n!==r)return c;a[t*o+e]=r}c.push({x:u,y:f,t:d,speed:m}),_=h,v=p}return c}function h(e,t,n,i){const r=[],a=new s.a,o=1/Math.max(e.lineCollisionWidth,1),l=Math.round(n*o),c=Math.round(i*o),u=new Int32Array(l*c);for(let s=0;s<u.length;s++)u[s]=-1;const f=[];for(let s=0;s<i;s+=e.lineSpacing)for(let t=0;t<n;t+=e.lineSpacing)f.push({x:t,y:s,sort:a.getFloat()});f.sort((e,t)=>e.sort-t.sort);for(const{x:s,y:d}of f)if(a.getFloat()<e.density){const n=m(e,t,s,d,r.length,u,l,c,o);if(n.length<2)continue;r.push(n)}return r}function p(e,t=10){const{lineVertices:n,lineDescriptors:i}=e;let r=0,a=0;for(const d of i)r+=2*d.numberOfVertices,a+=6*(d.numberOfVertices-1);const o=new Float32Array(9*r),s=new Uint32Array(a);let l=0,c=0;function u(){s[c++]=l-2,s[c++]=l,s[c++]=l-1,s[c++]=l,s[c++]=l+1,s[c++]=l-1}function f(e,t,n,i,r,a,s,c){const u=9*l;let f=0;o[u+f++]=e,o[u+f++]=t,o[u+f++]=1,o[u+f++]=n,o[u+f++]=a,o[u+f++]=s,o[u+f++]=i/2,o[u+f++]=r/2,o[u+f++]=c,l++,o[u+f++]=e,o[u+f++]=t,o[u+f++]=-1,o[u+f++]=n,o[u+f++]=a,o[u+f++]=s,o[u+f++]=-i/2,o[u+f++]=-r/2,o[u+f++]=c,l++}for(const d of i){const{totalTime:e,timeSeed:i}=d;let r=null,a=null,o=null,s=null,l=null,c=null;for(let m=0;m<d.numberOfVertices;m++){const h=n[4*(d.startVertex+m)+0],p=n[4*(d.startVertex+m)+1],_=n[4*(d.startVertex+m)+2],v=n[4*(d.startVertex+m)+3];let g=null,x=null,b=null,y=null;if(m>0){g=h-r,x=p-a;const n=Math.sqrt(g*g+x*x);if(g/=n,x/=n,m>1){let e=g+l,n=x+c;const i=Math.sqrt(e*e+n*n);e/=i,n/=i;const r=Math.min(1/(e*g+n*x),t);e*=r,n*=r,b=-n,y=e}else b=-x,y=g;null!==b&&null!==y&&(f(r,a,o,b,y,e,i,v),u())}r=h,a=p,o=_,l=g,c=x,s=v}f(r,a,o,-c,l,e,i,s)}return{vertexData:o,indexData:s}}function _(e,t){const n=t.pixels,{width:i,height:a}=t,o=new Float32Array(i*a*2);if("vector-uv"===e)for(let r=0;r<i*a;r++)o[2*r+0]=n[0][r],o[2*r+1]=-n[1][r];else if("vector-magdir"===e)for(let s=0;s<i*a;s++){const e=n[0][s],t=Object(r.f)(n[1][s]),i=Math.cos(t-Math.PI/2),a=Math.sin(t-Math.PI/2);o[2*s+0]=i*e,o[2*s+1]=a*e}return{data:o,width:i,height:a}}async function v(e,t,n,i,r,a){const o=Object(l.e)(t.spatialReference);if(!o)return g(e,t,n,i,r,a);const[s,u]=o.valid,f=u-s,d=Math.ceil(t.width/f),m=t.width/d,h=Math.round(n/d);let p=t.xmin;const _=[];for(let l=0;l<d;l++){const n=new c.a({xmin:p,xmax:p+m,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference});_.push(g(e,n,h,i,r,a)),p+=m}const v=await Promise.all(_),x={data:new Float32Array(n*i*2),width:n,height:i};let b=0;for(const l of v){for(let e=0;e<l.height;e++)for(let t=0;t<l.width;t++)b+t>=n||(x.data[2*(e*n+b+t)+0]=l.data[2*(e*l.width+t)+0],x.data[2*(e*n+b+t)+1]=l.data[2*(e*l.width+t)+1]);b+=l.width}return x}async function g(e,t,n,i,r,o){const s={requestProjectedLocalDirections:!0,signal:o};if(Object(a.j)(r)&&(s.timeExtent=r),"imagery"===e.type){await e.load({signal:o});const r=e.rasterInfo.dataType,l=await e.fetchImage(t,n,i,s);return!l||Object(a.i)(l.pixelData)||Object(a.i)(l.pixelData.pixelBlock)?{data:new Float32Array(n*i*2),width:n,height:i}:_(r,l.pixelData.pixelBlock)}await e.load({signal:o});const l=e.rasterInfo.dataType,c=await e.fetchPixels(t,n,i,s);return!c||Object(a.i)(c.pixelBlock)?{data:new Float32Array(n*i*2),width:n,height:i}:_(l,c.pixelBlock)}},765:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return a}));var i=n(2),r=n(43);async function a(e,t=e.popupTemplate){if(!Object(i.j)(t))return[];const n=await t.getRequiredFields(e.fieldsIndex),{lastEditInfoEnabled:a}=t,{objectIdField:o,typeIdField:s,globalIdField:l,relationships:c}=e;if(n.includes("*"))return["*"];const u=a?await Object(r.n)(e):[],f=Object(r.j)(e.fieldsIndex,[...n,...u]);return s&&f.push(s),f&&o&&e.fieldsIndex.has(o)&&-1===f.indexOf(o)&&f.push(o),f&&l&&e.fieldsIndex.has(l)&&-1===f.indexOf(l)&&f.push(l),c&&c.forEach(t=>{const{keyField:n}=t;f&&n&&e.fieldsIndex.has(n)&&-1===f.indexOf(n)&&f.push(n)}),f}function o(e,t){return e.popupTemplate?e.popupTemplate:Object(i.j)(t)&&t.defaultPopupTemplateEnabled&&Object(i.j)(e.defaultPopupTemplate)?e.defaultPopupTemplate:null}},906:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));n(5);var i=n(2),r=n(208),a=n(281),o=n(175),s=n(722),l=n(628),c=n(616),u=n(619),f=n(614),d=n(620);class m extends l.a{constructor(e=null){super(),this._source=null,this._symbolizerParameters=null,this._vaoInvalidated=!0,this.coordScale=[1,1],this.height=null,this.stencilRef=0,this.resolution=null,this.pixelRatio=1,this.x=0,this.y=0,this.rotation=0,this.rawPixelData=null,this.width=null,this.source=e}destroy(){var e,t;Object(i.j)(this.vaoData)&&(null==(e=this.vaoData.magdir)||e.vao.dispose(),null==(t=this.vaoData.scalar)||t.vao.dispose(),this.vaoData=null)}get symbolizerParameters(){return this._symbolizerParameters}set symbolizerParameters(e){JSON.stringify(this._symbolizerParameters)!==JSON.stringify(e)&&(this._symbolizerParameters=e,this.invalidateVAO())}get source(){return this._source}set source(e){this._source=e,this.invalidateVAO()}invalidateVAO(){var e,t;!this._vaoInvalidated&&Object(i.j)(this.vaoData)&&(null==(e=this.vaoData.magdir)||e.vao.dispose(),null==(t=this.vaoData.scalar)||t.vao.dispose(),this.vaoData=null,this._vaoInvalidated=!0,this.requestRender())}updateVectorFieldVAO(e){if(this._vaoInvalidated){if(this._vaoInvalidated=!1,Object(i.j)(this.source)&&!Object(i.j)(this.vaoData)){const{style:t}=this.symbolizerParameters;switch(t){case"beaufort_ft":case"beaufort_km":case"beaufort_kn":case"beaufort_m":case"beaufort_mi":case"classified_arrow":case"ocean_current_kn":case"ocean_current_m":case"single_arrow":{const t=Object(s.d)(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t);this.vaoData={magdir:n}}break;case"simple_scalar":{const t=Object(s.e)(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t);this.vaoData={scalar:n}}break;case"wind_speed":{const t=Object(s.d)(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t),i=Object(s.e)(this.source,this.symbolizerParameters),r=this._createVectorFieldVAO(e.context,i);this.vaoData={magdir:n,scalar:r}}}}this.ready(),this.requestRender()}}_createTransforms(){return{dvs:Object(a.b)()}}setTransform(e){const t=Object(r.b)(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,s=a*this.width,l=a*this.height,c=Math.PI*this.rotation/180;Object(r.c)(t,t,Object(o.b)(n,i)),Object(r.c)(t,t,Object(o.b)(s/2,l/2)),Object(r.k)(t,t,-c),Object(r.c)(t,t,Object(o.b)(-s/2,-l/2)),Object(r.g)(t,t,Object(o.b)(s,l)),Object(r.i)(this.transforms.dvs,e.displayViewMat3,t)}onAttach(){this.invalidateVAO()}onDetach(){this.invalidateVAO()}_createVectorFieldVAO(e,t){const{vertexData:n,indexData:i}=t,r=u.a.createVertex(e,f.D.STATIC_DRAW,new Float32Array(n)),a=u.a.createIndex(e,f.D.STATIC_DRAW,new Uint32Array(i)),o=Object(c.g)("vector-field",{geometry:[{location:0,name:"a_pos",count:2,type:f.k.FLOAT,normalized:!1},{location:1,name:"a_offset",count:2,type:f.k.FLOAT,normalized:!1},{location:2,name:"a_vv",count:2,type:f.k.FLOAT,normalized:!1}]});return{vao:new d.a(e,o.attributes,o.bufferLayouts,{geometry:r},a),elementCount:i.length}}}},925:function(e,t,n){"use strict";n.d(t,"a",(function(){return G}));var i=n(0),r=n(73),a=n(85),o=n(31),s=n(1),l=(n(9),n(5),n(4),n(3)),c=n(764),u=n(655),f=n(615),d=n(648);class m extends d.a{constructor(){super(...arguments),this.flowStyle=null}get requiresDedicatedFBO(){return!1}doRender(e){super.doRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"flow",brushes:[u.a],target:()=>this.children,drawPhase:f.c.MAP});return[...super.prepareRenderPasses(e),t]}}n(64);var h=n(20),p=n(11),_=n(49),v=n(2),g=n(12),x=n(28);const b=p.a.getLogger("esri.views.2d.engine.flow.FlowDisplayData");class y{constructor(e,t,n,i){this.state={name:"created"},this.flowStyle=e,this.extent=t,this.size=n,this.pixelRatio=i}async load(){const e=new AbortController;this.state={name:"loading",abortController:e};const t=await this.flowStyle.loadResources({extent:this.extent,size:this.size,pixelRatio:this.pixelRatio},e.signal);this.state={name:"loaded",resources:t}}prepareForRendering(e){if("loaded"!==this.state.name)return void b.error("Only loaded resources can be attached.");const t=this.state.resources;t.prepareForRendering(e),this.state={name:"attached",resources:t}}destroy(){if("loading"===this.state.name)return this.state.abortController.abort(),void(this.state={name:"detached"});"attached"===this.state.name&&(this.state.resources.detach(),this.state={name:"detached"})}update(e){return!!this.flowStyle.areResourcesCompatible(e.flowStyle)&&(!(!this.extent.equals(e.extent)||this.size[0]!==e.size[0]||this.size[1]!==e.size[1]||this.pixelRatio!==e.pixelRatio)&&(this.flowStyle=e.flowStyle,!0))}}var S=n(208),T=n(281),O=n(628);class w extends O.a{constructor(){super(...arguments),this._displayData=null}get displayData(){return this._displayData}set displayData(e){this._displayData=e,this.requestRender()}clear(){Object(v.j)(this._displayData)&&(this._displayData.destroy(),this._displayData=null,this.requestRender())}setTransform(e){const{displayData:t}=this;if(Object(v.i)(t))return;const n=t.extent.xmin,i=t.extent.ymax,r=[0,0];e.toScreen(r,[n,i]);const a=(t.extent.xmax-t.extent.xmin)/t.size[0]/e.resolution,o=Object(_.f)(e.rotation),{dvs:s}=this.transforms;Object(S.h)(s,[-1,1,0]),Object(S.d)(s,s,[2/(e.size[0]*e.pixelRatio),-2/(e.size[1]*e.pixelRatio),1]),Object(S.c)(s,s,[r[0],r[1],0]),Object(S.k)(s,s,o),Object(S.d)(s,s,[a*e.pixelRatio,a*e.pixelRatio,1])}_createTransforms(){return{dvs:Object(T.b)()}}}var C=n(35);const I=p.a.getLogger("esri.views.2d.engine.flow.FlowStrategy");let E=class extends h.a{constructor(e){super(e),this._flowDisplayObject=new w,this._loading=null}initialize(){this.flowContainer.addChild(this._flowDisplayObject)}destroy(){this._clear(),this.flowContainer.removeAllChildren()}get updating(){return null!=this._loading}update(e){const{flowStyle:t}=this.flowContainer;if(Object(v.i)(t))return void this._clear();const{extent:n,rotation:i,resolution:r,pixelRatio:a}=e.state,o=function(e,t){const n=new x.a({x:(e.xmax+e.xmin)/2,y:(e.ymax+e.ymin)/2,spatialReference:e.spatialReference}),i=e.xmax-e.xmin,r=e.ymax-e.ymin,a=Math.abs(Math.cos(Object(_.f)(t))),o=Math.abs(Math.sin(Object(_.f)(t))),s=a*i+o*r,l=o*i+a*r,c=new C.a({xmin:n.x-s/2,ymin:n.y-l/2,xmax:n.x+s/2,ymax:n.y+l/2,spatialReference:e.spatialReference});return c.centerAt(n),c}(n,i);o.expand(1.15);const s=[Math.round((o.xmax-o.xmin)/r),Math.round((o.ymax-o.ymin)/r)],l=new y(t,o,s,a);if(Object(v.j)(this._loading)){if(this._loading.update(l))return;this._loading.destroy(),this._loading=null}!Object(v.i)(this._flowDisplayObject.displayData)&&this._flowDisplayObject.displayData.update(l)||(l.load().then(()=>{this._flowDisplayObject.clear(),this._flowDisplayObject.displayData=this._loading,this._loading=null},e=>{Object(g.l)(e)||(I.error("A resource failed to load.",e),this._loading=null)}),this._loading=l)}_clear(){this._flowDisplayObject.clear(),Object(v.j)(this._loading)&&(this._loading.destroy(),this._loading=null)}};Object(i.a)([Object(s.b)()],E.prototype,"_loading",void 0),Object(i.a)([Object(s.b)()],E.prototype,"flowContainer",void 0),Object(i.a)([Object(s.b)()],E.prototype,"updating",null),E=Object(i.a)([Object(l.a)("esri.views.2d.engine.flow.FlowStrategy")],E);const P=E;var R=n(619),D=n(614),A=n(620),M=n(631);const L=new Map;L.set("a_positionAndSide",0),L.set("a_timeInfo",1),L.set("a_extrude",2),L.set("a_speed",3);const V={geometry:[new M.a("a_positionAndSide",3,D.k.FLOAT,0,36),new M.a("a_timeInfo",3,D.k.FLOAT,12,36),new M.a("a_extrude",2,D.k.FLOAT,24,36),new M.a("a_speed",1,D.k.FLOAT,32,36)]};class j{constructor(e,t,n){this.values=n,this._vertexData=e,this._indexData=t}prepareForRendering(e){const t=R.a.createVertex(e,D.D.STATIC_DRAW,this._vertexData),n=R.a.createIndex(e,D.D.STATIC_DRAW,this._indexData),i=new A.a(e,L,V,{geometry:t},n);this.vertexBuffer=t,this.indexBuffer=n,this.vertexArray=i,this._vertexData=null,this._indexData=null}detach(){this.vertexArray.dispose(),this.vertexBuffer.dispose(),this.indexBuffer.dispose()}get locations(){return L}}var z=n(21);function N(e){const t=function(e){if(!e.hasVisualVariables("size"))return{kind:"constant",value:[Object(z.c)(e.trailWidth)]};const t=e.getVisualVariablesForType("size")[0],n=[],i=[];let r;if(t.stops){for(const e of t.stops)n.push(e.value),i.push(e.size);r=t.stops.length}else n.push(t.minDataValue,t.maxDataValue),i.push(t.minSize,t.maxSize),r=2;return{kind:"ramp",stops:n,values:i,count:r}}(e),n="constant"===(f=t).kind?f.value[0]:f.values[f.values.length-1],i=2*n,r=Math.round(Object(z.c)(e.maxPathLength)/i)+1,a=n,o=function(e){if(!e.hasVisualVariables("color"))return{kind:"constant",value:U(e.color)};const t=e.getVisualVariablesForType("color")[0],n=[],i=[];for(const r of t.stops)n.push(r.value),Array.prototype.push.apply(i,U(r.color));return{kind:"ramp",stops:n,values:i,count:t.stops.length}}(e),s=function(e){if(!e.hasVisualVariables("opacity"))return{kind:"constant",value:[1]};const t=e.getVisualVariablesForType("opacity")[0],n=[],i=[];for(const r of t.stops)n.push(r.value),i.push(r.opacity);return{kind:"ramp",stops:n,values:i,count:t.stops.length}}(e),{flowSpeed:l,trailLength:c,density:u}=e;var f;return{lineRenderWidth:t,segmentLength:i,verticesPerLine:r,lineCollisionWidth:a,lineSpacing:10,lineColor:o,lineOpacity:s,lineSpeed:l,fadeDuration:c,density:u,smoothing:Object(z.c)(e.smoothing),velocityScale:"flow-from"===e.flowRepresentation?1:-1,minWeightThreshold:.001,minSpeedThreshold:.001,maxTurnAngle:1,mergeLines:!0,interpolate:!0,profile:!1}}function U(e){const t=e.toRgba();return[t[0]/255,t[1]/255,t[2]/255,t[3]]}class F{constructor(e,t,n,i){this._loadImagery=e,this._createStreamlinesMesh=t,this._timeExtent=i,this._rendererSettings=N(n)}get animated(){return this._rendererSettings.lineSpeed>0}get renderSettings(){return this._rendererSettings}areResourcesCompatible(e){let t=!0;return t=t&&e._loadImagery===this._loadImagery,t=t&&e._createStreamlinesMesh===this._createStreamlinesMesh,t=t&&e._rendererSettings.verticesPerLine===this._rendererSettings.verticesPerLine,t=t&&e._rendererSettings.segmentLength===this._rendererSettings.segmentLength,t=t&&e._rendererSettings.lineSpacing===this._rendererSettings.lineSpacing,t=t&&e._rendererSettings.density===this._rendererSettings.density,t=t&&e._rendererSettings.smoothing===this._rendererSettings.smoothing,t=t&&e._rendererSettings.velocityScale===this._rendererSettings.velocityScale,t=t&&e._rendererSettings.minWeightThreshold===this._rendererSettings.minWeightThreshold,t=t&&e._rendererSettings.minSpeedThreshold===this._rendererSettings.minSpeedThreshold,t=t&&e._rendererSettings.mergeLines===this._rendererSettings.mergeLines,t=t&&e._rendererSettings.velocityScale===this._rendererSettings.velocityScale,t=t&&e._rendererSettings.interpolate===this._rendererSettings.interpolate,t=t&&e._rendererSettings.lineColor.kind===this._rendererSettings.lineColor.kind,t=t&&e._rendererSettings.lineOpacity.kind===this._rendererSettings.lineOpacity.kind,t=t&&e._rendererSettings.lineRenderWidth.kind===this._rendererSettings.lineRenderWidth.kind,t&&this._rendererSettings.mergeLines&&(t=e._rendererSettings.lineCollisionWidth===this._rendererSettings.lineCollisionWidth),t&&e._timeExtent!==this._timeExtent&&(t=!(!Object(v.j)(e._timeExtent)||!Object(v.j)(this._timeExtent))&&e._timeExtent.equals(this._timeExtent)),t}async loadResources(e,t){const{extent:n,size:i}=e;Object(g.t)(t);const r=await this._loadImagery(n,i[0],i[1],this._timeExtent,t),{vertexData:a,indexData:o}=await this._createStreamlinesMesh(this._rendererSettings,r,t);return new j(a,o,{lineColor:this._rendererSettings.lineColor,lineOpacity:this._rendererSettings.lineOpacity,lineRenderWidth:this._rendererSettings.lineRenderWidth})}}let k=class extends a.a{constructor(){super(...arguments),this._loadImagery=(e,t,n,i,r)=>Object(c.b)(this.layer,e,t,n,i,r),this._createStreamlinesMesh=(e,t,n)=>this.layer.createStreamlinesMesh({flowData:t,rendererSettings:e},{signal:n}),this.attached=!1,this.container=null,this.layer=null,this.type="flow",this.timeExtent=null,this.redrawOrRefetch=async()=>{this._updateVisualization()}}get updating(){return!this._strategy||this._strategy.updating}attach(){const{layer:e}=this,t=()=>{this._loadImagery=(t,n,i,r,a)=>Object(c.b)(e,t,n,i,r,a),this._updateVisualization()};"multidimensionalDefinition"in e?this.handles.add(Object(o.e)(()=>e.multidimensionalDefinition,t)):this.handles.add([Object(o.e)(()=>e.mosaicRule,t),Object(o.e)(()=>e.renderingRule,t),Object(o.e)(()=>e.definitionExpression,t)]),this.container=new m,this._strategy=new P({flowContainer:this.container}),this._updateVisualization()}detach(){this._strategy.destroy(),this.container.removeAllChildren(),this.container=null,this.handles.removeAll()}update(e){e.stationary?this._strategy.update(e):this.layerView.requestUpdate()}hitTest(e){return new r.a({attributes:{},geometry:e.clone(),layer:this.layer})}moveEnd(){}async doRefresh(){}_updateVisualization(){if("flow"!==this.layer.renderer.type)return;const e=new F(this._loadImagery,this._createStreamlinesMesh,this.layer.renderer,this.timeExtent);this.container.flowStyle=e,this.layerView.requestUpdate()}};Object(i.a)([Object(s.b)()],k.prototype,"_strategy",void 0),Object(i.a)([Object(s.b)()],k.prototype,"attached",void 0),Object(i.a)([Object(s.b)()],k.prototype,"container",void 0),Object(i.a)([Object(s.b)()],k.prototype,"layer",void 0),Object(i.a)([Object(s.b)()],k.prototype,"layerView",void 0),Object(i.a)([Object(s.b)()],k.prototype,"type",void 0),Object(i.a)([Object(s.b)()],k.prototype,"updating",null),Object(i.a)([Object(s.b)()],k.prototype,"timeExtent",void 0),k=Object(i.a)([Object(l.a)("esri.views.2d.engine.flow.FlowView2D")],k);const G=k},933:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return h})),n.d(t,"c",(function(){return d})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return m})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return p}));n(64);var i=n(2);var r=n(735),a=n(28);const o=new Map,s=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const n=e+"/"+t,i=this._cachedBlocks;if(i.has(n)){const e=i.get(n);return e.refCount--,e.refCount<=0&&(i.delete(n),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const n=e+"/"+t,i=this._cachedBlocks;if(i.has(n)){const e=i.get(n);return e.ts=Date.now(),e.refCount++,i.delete(n),i.set(n,e),e.block}return null}putBlock(e,t,n,i=null){const r=this._cachedBlocks,a=e+"/"+t;if(r.has(a)){const e=r.get(a);e.ts=Date.now(),e.refCount++}else r.set(a,{block:n,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,t){const n=this._cachedBlocks,i=e+"/"+t;n.has(i)&&n.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),n=Date.now();for(let i=0;i<t.length&&t[i][1].ts<=n-this._duration;i++)e.delete(t[i][0]);0===e.size&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let n=0;n<t.length-this._size;n++)e.delete(t[n][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const n={extent:null,rasterInfo:t,cache:new Map};if(o.has(e)){const t=o.get(e);return t.push(n),t.length-1}return o.set(e,[n]),0}function u(e,t){if(o.has(e)){const n=o.get(e);n[t]=null,n.some(e=>null!=e)||o.delete(e)}}function f(e,t,n){if(!o.has(e))return null==t?s.decreaseRefCount(e,n):0;const i=o.get(e);if(null==i[t])return s.decreaseRefCount(e,n);const r=i[t].cache;if(r.has(n)){const e=r.get(n);if(e.refCount--,0===e.refCount){r.delete(n);for(let e=0;e<i.length;e++)i[e]&&i[e].cache.has(n)&&i[e].cache.delete(n);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,n){if(!o.has(e))return null==t?s.getBlock(e,n):null;const i=o.get(e);if(null==i[t]){for(let e=0;e<i.length;e++)if(i[e]&&i[e].cache.has(n)){const t=i[e].cache.get(n);return t.refCount++,t.block}return s.getBlock(e,n)}const r=i[t].cache;if(r.has(n)){const e=r.get(n);return e.refCount++,e.block}for(let a=0;a<i.length;a++)if(a!==t&&i[a]&&i[a]&&i[a].cache.has(n)){const e=i[a].cache.get(n);return e.refCount++,r.set(n,e),e.block}return null}function m(e,t,n,i,r=null){if(!o.has(e))return void(null==t&&s.putBlock(e,n,i,r));const a=o.get(e);if(null==a[t])return void s.putBlock(e,n,i,r);const l={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:r};i.then(()=>l.isResolved=!0).catch(()=>l.isRejected=!0),a[t].cache.set(n,l)}function h(e,t,n){if(!o.has(e))return void(null==t&&s.deleteBlock(e,n));const i=o.get(e);null!=i[t]?i[t].cache.delete(n):s.deleteBlock(e,n)}function p(e,t,n,s,l,c,u=null){const f=function(e,t){if(!o.has(e))return null;const n=o.get(e);return null==n[t]?null:n[t]}(e,t),d=f.extent,{cache:m,rasterInfo:h}=f;if(d&&d.xmin===n.xmin&&d.xmax===n.xmax&&d.ymin===n.ymin&&d.ymax===n.ymax)return;const p=n.clone().normalize(),{spatialReference:_,transform:v}=h,g=new Set;for(let o=0;o<p.length;o++){const e=p[o];if(e.xmax-e.xmin<=s||e.ymax-e.ymin<=s)continue;let t=Object(r.h)(e,_,u);Object(i.j)(v)&&(t=v.inverseTransform(t));const n=new a.a({x:s,y:s,spatialReference:e.spatialReference});if(null==l&&!(l=Object(r.j)(n,_,e,u)))return;const{pyramidLevel:f,pyramidResolution:d,excessiveReading:m}=Object(r.m)(l,h,c||"closest");if(m)return;const{storageInfo:x}=h,{origin:b}=x,y={x:Math.max(0,Math.floor((t.xmin-b.x)/d.x)),y:Math.max(0,Math.floor((b.y-t.ymax)/d.y))},S=Math.ceil((t.xmax-t.xmin)/d.x-.1),T=Math.ceil((t.ymax-t.ymin)/d.y-.1),O=f>0?x.pyramidBlockWidth:x.blockWidth,w=f>0?x.pyramidBlockHeight:x.blockHeight,C=1,I=Math.max(0,Math.floor(y.x/O)-C),E=Math.max(0,Math.floor(y.y/w)-C),P=Math.floor((y.x+S-1)/O)+C,R=Math.floor((y.y+T-1)/w)+C;for(let i=E;i<=R;i++)for(let e=I;e<=P;e++)g.add(`${f}/${i}/${e}`)}m.forEach((e,t)=>{if(!g.has(t)){const e=m.get(t);(null==e||e.isResolved||e.isRejected)&&m.delete(t)}}),f.extent={xmin:n.xmin,ymin:n.ymin,xmax:n.xmax,ymax:n.ymax}}}}]);
//# sourceMappingURL=21.47837852.chunk.js.map