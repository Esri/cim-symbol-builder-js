(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[252],{875:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return X}));var i=r(0),a=r(192),s=(r(289),r(345),r(347),r(348),r(103),r(260),r(257),r(385),r(264)),o=r(47),n=r(24),l=r(8),p=r(11),d=r(2),c=r(371),y=r(12),u=r(31),b=r(16),h=r(1),f=(r(9),r(5),r(46)),j=(r(4),r(19)),O=r(3),g=r(42),m=r(227),v=r(391),I=r(386),w=r(375),L=r(373),F=r(374),S=r(758),E=r(955),T=r(102),_=r(249),x=r(364),P=r(956),A=r(396),D=r(376),R=r(43),U=r(829),N=r(232),Q=r(352),q=r(414),k=r(10);let C=class extends k.a{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};Object(i.a)([Object(h.b)({type:String,json:{read:!0,write:!0}})],C.prototype,"name",void 0),Object(i.a)([Object(h.b)({type:String,json:{read:!0,write:!0}})],C.prototype,"field",void 0),Object(i.a)([Object(h.b)({type:[Number],json:{read:!0,write:!0}})],C.prototype,"currentRangeExtent",void 0),Object(i.a)([Object(h.b)({type:[Number],json:{read:!0,write:!0}})],C.prototype,"fullRangeExtent",void 0),Object(i.a)([Object(h.b)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],C.prototype,"type",void 0),C=Object(i.a)([Object(O.a)("esri.layers.support.RangeInfo")],C);const V=C;var G=r(398),K=r(72),M=r(388),W=r(133);const z=["3DObject","Point"],J=p.a.getLogger("esri.layers.SceneLayer"),Z=Object(A.a)();let B=class extends(Object(S.b)(Object(I.a)(Object(w.a)(Object(L.a)(Object(F.a)(Object(c.a)(Object(v.a)(m.a)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new n.a,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,i,a,s;const o=null==(r=this.getFeatureType(null==t?void 0:t.feature))||null==(i=r.domains)?void 0:i[e];return o&&"inherited"!==o.type?o:null!=(a=null==(s=this.getField(e))?void 0:s.domain)?a:null}getFeatureType(e){return e&&Object(d.j)(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return Object(d.j)(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return Object(d.j)(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return Object(d.j)(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new D.a(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:U.c.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return $[this.profile]||"mesh"}set renderer(e){Object(R.k)(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=Object(d.j)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:E.a,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsUploadWithItemId:a,supportsReturnServiceEditsInSourceSpatialReference:s},data:{supportsZ:o,supportsM:n,isVersioned:l,supportsAttachment:p},operations:{supportsEditing:c,supportsUpdate:y,supportsQuery:u,supportsQueryAttachments:b}}=e,h=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:s,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:a},data:{supportsAttachment:p,supportsZ:o,supportsM:n,isVersioned:l},operations:{supportsQuery:u,supportsQueryAttachments:b,supportsEditing:c&&h,supportsAdd:!1,supportsDelete:!1,supportsUpdate:y&&h}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){null!=e?this._override("editingEnabled",e):this._clearOverride("editingEnabled")}get defaultPopupTemplate(){return Object(d.j)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e)),e||void 0}get displayField(){return Object(d.j)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&H[r]?H[r]:(J.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=Object(d.j)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.s).then(()=>this._fetchService(t)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>Object(G.a)(this,{origin:"service"},t)).then(()=>Object(R.k)(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new K.a;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e})}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(J.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Object(M.a)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return Object(d.j)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),Object(d.i)(this.associatedLayer))throw new l.a("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new l.a("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new l.a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new l.a("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const i of this.statisticsInfo)if(i.name===r.name){const e=Object(b.B)(this.parsedUrl.path,i.href);return Object(o.default)(e,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(e=>e.data)}throw new l.a("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(S.a.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(S.a.SAVE,e)}async applyEdits(e,t){const i=await r.e(18).then(r.bind(null,985));if(await this.load(),Object(d.i)(this.associatedLayer))throw new l.a(this.type+"-layer:not-editable","Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===z.indexOf(e.layerType))throw new l.a("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l.a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new l.a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const a=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=a;break;case"vertex-reference-frame":r=!0,i=!a;break;default:r=!1}}if(!r)throw new l.a("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new l.a("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new l.a("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(t=>t.name===e.name)),r=!!(Object(d.j)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(Object(d.i)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(Object(d.i)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=Object(f.a)(this);for(let r=0;r<e.length;r++){const i=e[r],a=this.originIdOf(i),s=this.associatedLayer.originIdOf(i);a<s&&(s===g.a.SERVICE||s===g.a.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],s)}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new P.a(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(r){Object(y.l)(r)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Object(u.g)(()=>this.popupEnabled&&null!=this.popupTemplate);const e="this SceneLayer: "+this.title;null==this.attributeStorageInfo?J.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+e):J.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+e)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&J.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&J.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};Object(i.a)([Object(h.b)({types:{key:"type",base:_.a,typeMap:{selection:x.a}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],B.prototype,"featureReduction",void 0),Object(i.a)([Object(h.b)({type:[V],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],B.prototype,"rangeInfos",void 0),Object(i.a)([Object(h.b)({json:{read:!1}})],B.prototype,"associatedLayer",void 0),Object(i.a)([Object(h.b)({type:["show","hide"]})],B.prototype,"listMode",void 0),Object(i.a)([Object(h.b)({type:["ArcGISSceneServiceLayer"]})],B.prototype,"operationalLayerType",void 0),Object(i.a)([Object(h.b)({json:{read:!1},readOnly:!0})],B.prototype,"type",void 0),Object(i.a)([Object(h.b)({...Z.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],B.prototype,"fields",void 0),Object(i.a)([Object(h.b)()],B.prototype,"types",null),Object(i.a)([Object(h.b)()],B.prototype,"typeIdField",null),Object(i.a)([Object(h.b)()],B.prototype,"formTemplate",null),Object(i.a)([Object(h.b)({readOnly:!0})],B.prototype,"fieldsIndex",null),Object(i.a)([Object(h.b)({type:q.a,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],B.prototype,"floorInfo",void 0),Object(i.a)([Object(h.b)(Z.outFields)],B.prototype,"outFields",void 0),Object(i.a)([Object(h.b)({type:U.c,readOnly:!0,json:{read:!1}})],B.prototype,"nodePages",void 0),Object(i.a)([Object(j.a)("service","nodePages",["nodePages","pointNodePages"])],B.prototype,"readNodePages",null),Object(i.a)([Object(h.b)({type:[U.b],readOnly:!0})],B.prototype,"materialDefinitions",void 0),Object(i.a)([Object(h.b)({type:[U.d],readOnly:!0})],B.prototype,"textureSetDefinitions",void 0),Object(i.a)([Object(h.b)({type:[U.a],readOnly:!0})],B.prototype,"geometryDefinitions",void 0),Object(i.a)([Object(h.b)({readOnly:!0})],B.prototype,"serviceUpdateTimeStamp",void 0),Object(i.a)([Object(h.b)({readOnly:!0})],B.prototype,"attributeStorageInfo",void 0),Object(i.a)([Object(h.b)({readOnly:!0})],B.prototype,"statisticsInfo",void 0),Object(i.a)([Object(h.b)({type:n.a.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],B.prototype,"excludeObjectIds",void 0),Object(i.a)([Object(h.b)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],B.prototype,"definitionExpression",void 0),Object(i.a)([Object(h.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],B.prototype,"path",void 0),Object(i.a)([Object(h.b)(T.b)],B.prototype,"elevationInfo",null),Object(i.a)([Object(h.b)({type:String})],B.prototype,"geometryType",null),Object(i.a)([Object(h.b)(T.d)],B.prototype,"labelsVisible",void 0),Object(i.a)([Object(h.b)({type:[N.a],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:Q.a},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Q.a},write:!0}})],B.prototype,"labelingInfo",void 0),Object(i.a)([Object(h.b)(T.e)],B.prototype,"legendEnabled",void 0),Object(i.a)([Object(h.b)({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,i;if("number"==typeof e&&e>=0&&e<=1)return e;const a=null==(r=t.layerDefinition)||null==(i=r.drawingInfo)?void 0:i.transparency;return void 0!==a?Object(W.b)(a):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],B.prototype,"opacity",void 0),Object(i.a)([Object(h.b)({types:s.b,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],B.prototype,"renderer",null),Object(i.a)([Object(h.b)({json:{read:!1}})],B.prototype,"cachedDrawingInfo",void 0),Object(i.a)([Object(j.a)("service","cachedDrawingInfo")],B.prototype,"readCachedDrawingInfo",null),Object(i.a)([Object(h.b)({readOnly:!0,json:{read:!1}})],B.prototype,"capabilities",null),Object(i.a)([Object(h.b)({type:Boolean,json:{read:!1}})],B.prototype,"editingEnabled",null),Object(i.a)([Object(h.b)(T.j)],B.prototype,"popupEnabled",void 0),Object(i.a)([Object(h.b)({type:a.a,json:{name:"popupInfo",write:!0}})],B.prototype,"popupTemplate",void 0),Object(i.a)([Object(h.b)({readOnly:!0,json:{read:!1}})],B.prototype,"defaultPopupTemplate",null),Object(i.a)([Object(h.b)({type:String,json:{read:!1}})],B.prototype,"objectIdField",void 0),Object(i.a)([Object(j.a)("service","objectIdField",["objectIdField","fields"])],B.prototype,"readObjectIdField",null),Object(i.a)([Object(h.b)({type:String,json:{read:!1}})],B.prototype,"globalIdField",void 0),Object(i.a)([Object(j.a)("service","globalIdField",["globalIdField","fields"])],B.prototype,"readGlobalIdField",null),Object(i.a)([Object(h.b)({readOnly:!0,type:String,json:{read:!1}})],B.prototype,"displayField",null),Object(i.a)([Object(h.b)({type:String,json:{read:!1}})],B.prototype,"profile",void 0),Object(i.a)([Object(j.a)("service","profile",["store.profile"])],B.prototype,"readProfile",null),Object(i.a)([Object(h.b)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],B.prototype,"normalReferenceFrame",void 0),Object(i.a)([Object(h.b)(T.m)],B.prototype,"screenSizePerspectiveEnabled",void 0),B=Object(i.a)([Object(O.a)("esri.layers.SceneLayer")],B);const H={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},$={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},X=B}}]);
//# sourceMappingURL=252.151d283c.chunk.js.map