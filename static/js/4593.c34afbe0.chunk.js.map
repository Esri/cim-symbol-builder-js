{"version":3,"file":"static/js/4593.c34afbe0.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/sheet/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/sheet/sheet.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/sheet/sheet.scss?tag=calcite-sheet&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/observers.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/openCloseComponent.ts"],"sourcesContent":["export const CSS = {\n  scrim: \"scrim\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  content: \"content\",\n  containerEmbedded: \"container--embedded\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { ensureId, focusFirstTabbable, getElementDir } from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { LogicalFlowPosition, Scale } from \"../interfaces\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { CSS } from \"./resources\";\nimport { DisplayMode } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-sheet\",\n  styleUrl: \"sheet.scss\",\n  shadow: true,\n})\nexport class Sheet implements OpenCloseComponent, FocusTrapComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *  Passes a function to run before the component closes.\n   *\n   * @returns {Promise<void>}\n   */\n  @Prop() beforeClose: (el: HTMLCalciteSheetElement) => Promise<void>;\n\n  /**\n   * Specifies the display mode - `\"float\"` (content is separated detached),\n   * or `\"overlay\"` (displays on top of center content).\n   */\n  @Prop({ reflect: true }) displayMode: DisplayMode = \"overlay\";\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop() embedded = false;\n\n  /** When `true`, disables the default close on escape behavior. */\n  @Prop({ reflect: true }) escapeDisabled = false;\n\n  /**\n   * When `position` is `\"block-start\"` or `\"block-end\"`, specifies the height of the component.\n   */\n  @Prop({ reflect: true }) heightScale: Scale = \"m\";\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * Specifies the label of the component.\n   */\n  @Prop() label!: string;\n\n  /** When `true`, displays and positions the component.  */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  toggleSheet(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openSheet();\n    } else {\n      this.closeSheet();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(): void {\n    onToggleOpenCloseComponent(this);\n  }\n\n  /**\n   * We use an internal property to handle styles for when a modal is actually opened, not just when the open attribute is applied. This is a property because we need to apply styles to the host element and to keep the styles present while beforeClose is .\n   *\n   * @internal.\n   */\n  @Prop({ mutable: true, reflect: true }) opened = false;\n\n  /** When `true`, disables the closing of the component when clicked outside. */\n  @Prop({ reflect: true }) outsideCloseDisabled = false;\n\n  /** Determines where the component will be positioned. */\n  @Prop({ reflect: true }) position: LogicalFlowPosition = \"inline-start\";\n\n  /**\n   * When `position` is `\"inline-start\"` or `\"inline-end\"`, specifies the width of the component.\n   */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    // when sheet initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      requestAnimationFrame(() => this.openSheet());\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    deactivateFocusTrap(this);\n    this.embedded = false;\n  }\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    return (\n      <Host\n        aria-describedby={this.contentId}\n        aria-label={this.label}\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: this.opened,\n            [CSS.containerEmbedded]: this.embedded,\n            [CSS_UTILITY.rtl]: dir === \"rtl\",\n          }}\n          ref={this.setTransitionEl}\n        >\n          <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          <div\n            class={{\n              [CSS.content]: true,\n            }}\n            ref={this.setContentId}\n          >\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  @Element() el: HTMLCalciteSheetElement;\n\n  private contentId: string;\n\n  private initialOverflowCSS: string;\n\n  private ignoreOpenChange = false;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && !this.escapeDisabled && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteSheetBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteSheetClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteSheetBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteSheetOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button - the first focusable item.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onBeforeOpen(): void {\n    this.calciteSheetBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteSheetOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calciteSheetBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteSheetClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  private setContentId = (el: HTMLDivElement): void => {\n    this.contentId = ensureId(el);\n  };\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteSheetOpen\", this.openEnd);\n  };\n\n  private openSheet(): void {\n    this.el.addEventListener(\"calciteSheetOpen\", this.openEnd);\n    this.opened = true;\n    if (!this.embedded) {\n      this.initialOverflowCSS = document.documentElement.style.overflow;\n      // use an inline style instead of a utility class to avoid global class declarations.\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    }\n  }\n\n  private handleOutsideClose = (): void => {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n\n    this.open = false;\n  };\n\n  private closeSheet = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    this.opened = false;\n    this.removeOverflowHiddenClass();\n  };\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", this.initialOverflowCSS);\n  }\n\n  private handleMutationObserver(): void {\n    this.updateFocusTrapElements();\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-sheet-scrim-background: Specifies the background color of the sheet scrim.\n * @prop --calcite-sheet-width: When `position` is `\"inline-start\"` or `\"inline-end\"`, specifies the width of the component.\n * @prop --calcite-sheet-max-width: When `position` is `\"inline-start\"` or `\"inline-end\"`, specifies the maximum width of the component.\n * @prop --calcite-sheet-min-width: When `position` is `\"inline-start\"` or `\"inline-end\"`, specifies the minimum width of the component.\n * @prop --calcite-sheet-height:  When `position` is `\"block-start\"` or `\"block-end\"`, specifies the height of the component.\n * @prop --calcite-sheet-max-height:  When `position` is `\"block-start\"` or `\"block-end\"`, specifies the maximum height of the component.\n * @prop --calcite-sheet-min-height:  When `position` is `\"block-start\"` or `\"block-end\"`, specifies the minimum height of the component.\n *\n */\n\n:host {\n  @apply flex absolute z-overlay inset-0;\n  visibility: hidden !important;\n  // the sheet should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-sheet-scrim-background-internal: #{rgba($blk-240, 0.85)};\n  --calcite-scrim-shadow-block-start-internal: 0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);\n  --calcite-scrim-shadow-block-end-internal: 0 -4px 8px -1px rgba(0, 0, 0, 0.08), 0 -2px 4px -1px rgba(0, 0, 0, 0.04);\n  --calcite-scrim-shadow-inline-start-internal: 4px 0 8px -1px rgba(0, 0, 0, 0.08), 2px 0 4px -1px rgba(0, 0, 0, 0.04);\n  --calcite-scrim-shadow-inline-end-internal: -4px 0 8px -1px rgba(0, 0, 0, 0.08), -2px 0 4px -1px rgba(0, 0, 0, 0.04);\n}\n\n.calcite--rtl {\n  --calcite-scrim-shadow-inline-start-internal: -4px 0 8px -1px rgba(0, 0, 0, 0.08), -2px 0 4px -1px rgba(0, 0, 0, 0.04);\n  --calcite-scrim-shadow-inline-end-internal: 4px 0 8px -1px rgba(0, 0, 0, 0.08), 2px 0 4px -1px rgba(0, 0, 0, 0.04);\n}\n\n.container {\n  @apply text-color-2\n    fixed\n    flex\n    overflow-y-hidden\n    opacity-0\n    z-overlay\n    invisible;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-medium),\n    opacity var(--calcite-internal-animation-timing-medium) $easing-function;\n}\n\n:host([position=\"inline-start\"]) .container {\n  @apply justify-start;\n  inset-block: 0;\n  inset-inline: 0 auto;\n  --calcite-sheet-hidden-position-internal: translate3d(-1rem, 0, 0);\n}\n\n:host([position=\"inline-end\"]) .container {\n  @apply justify-end;\n  inset-block: 0;\n  inset-inline: auto 0;\n  --calcite-sheet-hidden-position-internal: translate3d(1rem, 0, 0);\n}\n\n:host([position=\"block-start\"]) .container {\n  @apply items-start;\n  inset-block: 0 auto;\n  inset-inline: 0;\n  --calcite-sheet-hidden-position-internal: translate3d(0, -1rem, 0);\n}\n\n:host([position=\"block-end\"]) .container {\n  @apply items-end;\n  inset-block: auto 0;\n  inset-inline: 0;\n  --calcite-sheet-hidden-position-internal: translate3d(0, 1rem, 0);\n}\n\n:host([display-mode=\"float\"]) .content {\n  @apply shadow-2-sm;\n}\n\n:host([display-mode=\"overlay\"][position=\"inline-start\"]) .container {\n  box-shadow: var(--calcite-scrim-shadow-inline-start-internal);\n}\n\n:host([display-mode=\"overlay\"][position=\"inline-end\"]) .container {\n  box-shadow: var(--calcite-scrim-shadow-inline-end-internal);\n}\n\n:host([display-mode=\"overlay\"][position=\"block-start\"]) .container {\n  box-shadow: var(--calcite-scrim-shadow-block-start-internal);\n}\n\n:host([display-mode=\"overlay\"][position=\"block-end\"]) .container {\n  box-shadow: var(--calcite-scrim-shadow-block-end-internal);\n}\n\n:host([position^=\"inline\"]) .container,\n:host([position^=\"inline\"]) .content {\n  inline-size: var(--calcite-sheet-width-internal);\n  max-inline-size: var(--calcite-sheet-max-width-internal);\n  min-inline-size: var(--calcite-sheet-min-width-internal);\n}\n\n:host([position^=\"block\"]) .container,\n:host([position^=\"block\"]) .content {\n  block-size: var(--calcite-sheet-height-internal);\n  max-block-size: var(--calcite-sheet-max-height-internal);\n  min-block-size: var(--calcite-sheet-min-height-internal);\n}\n\n:host([display-mode=\"float\"][position^=\"inline\"]) .container {\n  block-size: calc(100% - 1.5rem);\n  max-block-size: calc(100% - 1.5rem);\n  min-block-size: calc(100% - 1.5rem);\n}\n:host([display-mode=\"float\"][position^=\"block\"]) .container {\n  inline-size: calc(100% - 1.5rem);\n  max-inline-size: calc(100% - 1.5rem);\n  min-inline-size: calc(100% - 1.5rem);\n}\n\n:host([position^=\"inline\"][width-scale=\"s\"]) {\n  --calcite-sheet-width-internal: var(--calcite-sheet-width, 15vw);\n  --calcite-sheet-max-width-internal: var(--calcite-sheet-max-width, 360px);\n  --calcite-sheet-min-width-internal: var(--calcite-sheet-min-width, 260px);\n}\n\n:host([position^=\"inline\"][width-scale=\"m\"]) {\n  --calcite-sheet-width-internal: var(--calcite-sheet-width, 25vw);\n  --calcite-sheet-max-width-internal: var(--calcite-sheet-max-width, 420px);\n  --calcite-sheet-min-width-internal: var(--calcite-sheet-min-width, 300px);\n}\n\n:host([position^=\"inline\"][width-scale=\"l\"]) {\n  --calcite-sheet-width-internal: var(--calcite-sheet-width, 45vw);\n  --calcite-sheet-max-width-internal: var(--calcite-sheet-max-width, 680px);\n  --calcite-sheet-min-width-internal: var(--calcite-sheet-min-width, 340px);\n}\n\n:host([position^=\"block\"][height-scale=\"s\"]) {\n  --calcite-sheet-min-height-internal: var(--calcite-sheet-min-height, 160px);\n  --calcite-sheet-height-internal: var(--calcite-sheet-height, 30vh);\n  --calcite-sheet-max-height-internal: var(--calcite-sheet-max-height, 30vh);\n}\n\n:host([position^=\"block\"][height-scale=\"m\"]) {\n  --calcite-sheet-min-height-internal: var(--calcite-sheet-min-height, 200px);\n  --calcite-sheet-height-internal: var(--calcite-sheet-height, 45vh);\n  --calcite-sheet-max-height-internal: var(--calcite-sheet-max-height, 50vh);\n}\n\n:host([position^=\"block\"][height-scale=\"l\"]) {\n  --calcite-sheet-min-height-internal: var(--calcite-sheet-min-height, 240px);\n  --calcite-sheet-height-internal: var(--calcite-sheet-height, 60vh);\n  --calcite-sheet-max-height-internal: var(--calcite-sheet-max-height, 70vh);\n}\n\n.scrim {\n  --calcite-scrim-background: var(--calcite-sheet-scrim-background, var(--calcite-sheet-scrim-background-internal));\n  @apply fixed inset-0 flex overflow-y-hidden;\n}\n\n:host([opened]) {\n  visibility: visible !important;\n}\n\n.content {\n  @apply relative box-border block p-0 z-modal max-h-full max-w-full overflow-y-hidden;\n  background-color: theme(\"colors.background.foreground.1\");\n  max-block-size: 100%;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-medium) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-medium),\n    opacity var(--calcite-internal-animation-timing-medium) $easing-function;\n  transform: var(--calcite-sheet-hidden-position-internal);\n}\n\n.container--open .content {\n  transform: translate3d(0, 0, 0);\n}\n\n:host([display-mode=\"float\"]) .content,\n:host([display-mode=\"float\"]) .container {\n  @apply rounded;\n}\n\n:host([display-mode=\"float\"]) .container {\n  @apply p-3;\n}\n\n.container--open {\n  @apply opacity-100 visible;\n  transition-delay: 0ms;\n  .content {\n    @apply pointer-events-auto visible opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-medium) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-medium) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-medium) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-medium) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n:host([position=\"inline-start\"]) .content,\n:host([position=\"inline-end\"]) .content {\n  @apply h-full;\n}\n\n:host([position=\"block-start\"]) .content,\n:host([position=\"block-end\"]) .content {\n  @apply w-full;\n}\n\n/**\n * Conditional styles for when Sheet is slotted in Shell\n */\n:host([position]) .container--embedded {\n  @apply absolute pointer-events-auto;\n  inline-size: 100%;\n  max-inline-size: 100%;\n  min-inline-size: 100%;\n  block-size: 100%;\n  max-block-size: 100%;\n  min-block-size: 100%;\n  calcite-scrim {\n    @apply absolute;\n  }\n}\n\n@include base-component();\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n"],"names":["CSS","Sheet","openTransitionProp","ignoreOpenChange","mutationObserver","createObserver","this","handleMutationObserver","setContentId","el","contentId","ensureId","setTransitionEl","transitionEl","openEnd","setFocus","removeEventListener","handleOutsideClose","outsideCloseDisabled","open","closeSheet","async","beforeClose","_error","requestAnimationFrame","opened","removeOverflowHiddenClass","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","toggleSheet","value","openSheet","handleOpenedChange","onToggleOpenCloseComponent","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","connectedCallback","observe","childList","subtree","connectFocusTrap","disconnectedCallback","disconnect","embedded","render","dir","getElementDir","h","Host","key","label","role","class","CSS_UTILITY","rtl","ref","onClick","handleEscape","event","escapeDisabled","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","updateFocusTrapElements","onBeforeOpen","calciteSheetBeforeOpen","emit","onOpen","calciteSheetOpen","onBeforeClose","calciteSheetBeforeClose","onClose","calciteSheetClose","addEventListener","initialOverflowCSS","document","documentElement","style","overflow","setProperty","type","callback","options","isBrowser","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","target","push","unobserve","newObservedEntries","filter","observed","takeRecords","forEach","IntersectionObserver","ResizeObserver","getObserver","internalReadTask","readTask","isOpen","component","whenTransitionDone"],"sourceRoot":""}