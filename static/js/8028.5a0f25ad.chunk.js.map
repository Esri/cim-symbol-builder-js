{"version":3,"file":"static/js/8028.5a0f25ad.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/pagination/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/pagination/pagination.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/pagination/pagination.scss?tag=calcite-pagination&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/calcite-design-tokens/dist/es6/global.js","../node_modules/@esri/calcite-components/dist/esm/src/utils/responsive.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  list: \"list\",\n  listItem: \"list-item\",\n  page: \"page\",\n  selected: \"selected\",\n  chevron: \"chevron\",\n  disabled: \"disabled\",\n  ellipsis: \"ellipsis\",\n};\n\nexport const ICONS = {\n  next: \"chevron-right\",\n  previous: \"chevron-left\",\n  first: \"chevron-start\",\n  last: \"chevron-end\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { breakpoints } from \"../../utils/responsive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICONS } from \"./resources\";\nimport { PaginationMessages } from \"./assets/pagination/t9n\";\n\nexport interface PaginationDetail {\n  start: number;\n  totalItems: number;\n  startItem: number;\n}\n\nconst firstAndLastPageCount = 2;\nconst ellipsisCount = 2;\n\nconst maxItemBreakpoints = {\n  large: 11,\n  medium: 9,\n  small: 7,\n  xsmall: 5,\n  xxsmall: 1,\n};\n\n@Component({\n  tag: \"calcite-pagination\",\n  styleUrl: \"pagination.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class Pagination\n  implements LocalizedComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PaginationMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PaginationMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the number of items per page. */\n  @Prop({ mutable: true, reflect: true }) pageSize = 20;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the starting item number. */\n  @Prop({ mutable: true, reflect: true }) startItem = 1;\n\n  /** Specifies the total number of items. */\n  @Prop({ reflect: true }) totalItems = 0;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  handleTotalPages(): void {\n    if (this.pageSize < 1) {\n      this.pageSize = 1;\n    }\n    this.totalPages = this.totalItems / this.pageSize;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePaginationElement;\n\n  @State() defaultMessages: PaginationMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n  }\n\n  @State() maxItems = maxItemBreakpoints.xxsmall;\n\n  @State() totalPages: number;\n\n  @State() lastStartItem: number;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  @Watch(\"totalPages\")\n  handleLastStartItemChange(): void {\n    const { totalItems, pageSize, totalPages } = this;\n\n    this.lastStartItem =\n      (totalItems % pageSize === 0 ? totalItems - pageSize : Math.floor(totalPages) * pageSize) + 1;\n  }\n\n  @State() isXXSmall: boolean;\n\n  @Watch(\"maxItems\")\n  handleIsXXSmall(): void {\n    this.isXXSmall = this.maxItems === maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeObserver = createObserver(\"resize\", (entries) =>\n    entries.forEach(this.resizeHandler),\n  );\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the selected page changes.\n   */\n  @Event({ cancelable: false }) calcitePaginationChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    this.handleTotalPages();\n    this.handleLastStartItemChange();\n    this.handleIsXXSmall();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.setMaxItemsToBreakpoint(this.el.clientWidth);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /** Go to the next page of results. */\n  @Method()\n  async nextPage(): Promise<void> {\n    this.startItem = Math.min(this.lastStartItem, this.startItem + this.pageSize);\n  }\n\n  /** Go to the previous page of results. */\n  @Method()\n  async previousPage(): Promise<void> {\n    this.startItem = Math.max(1, this.startItem - this.pageSize);\n  }\n\n  /**\n   * Set a specified page as active.\n   *\n   * @param page\n   */\n  @Method()\n  async goTo(page: number | \"start\" | \"end\"): Promise<void> {\n    switch (page) {\n      case \"start\":\n        this.startItem = 1;\n        break;\n      case \"end\":\n        this.startItem = this.lastStartItem;\n        break;\n      default: {\n        if (page >= Math.ceil(this.totalPages)) {\n          this.startItem = this.lastStartItem;\n        } else if (page <= 0) {\n          this.startItem = 1;\n        } else {\n          this.startItem = (page - 1) * this.pageSize + 1;\n        }\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setMaxItemsToBreakpoint(width: number): void {\n    if (!breakpoints || !width) {\n      return;\n    }\n\n    if (width >= breakpoints.width.medium) {\n      this.maxItems = maxItemBreakpoints.large;\n      return;\n    }\n\n    if (width >= breakpoints.width.small) {\n      this.maxItems = maxItemBreakpoints.medium;\n      return;\n    }\n\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = maxItemBreakpoints.small;\n      return;\n    }\n\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = maxItemBreakpoints.xsmall;\n      return;\n    }\n\n    this.maxItems = maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeHandler = ({ contentRect: { width } }: ResizeObserverEntry): void =>\n    this.setMaxItemsToBreakpoint(width);\n\n  private firstClicked = (): void => {\n    this.startItem = 1;\n    this.emitUpdate();\n  };\n\n  private lastClicked = (): void => {\n    this.startItem = this.lastStartItem;\n    this.emitUpdate();\n  };\n\n  private previousClicked = async (): Promise<void> => {\n    await this.previousPage();\n    this.emitUpdate();\n  };\n\n  private nextClicked = async (): Promise<void> => {\n    await this.nextPage();\n    this.emitUpdate();\n  };\n\n  private showStartEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      Math.floor(this.startItem / this.pageSize) >\n        this.maxItems - firstAndLastPageCount - ellipsisCount\n    );\n  }\n\n  private showEndEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      (this.totalItems - this.startItem) / this.pageSize >\n        this.maxItems - firstAndLastPageCount - (ellipsisCount - 1)\n    );\n  }\n\n  private emitUpdate() {\n    this.calcitePaginationChange.emit();\n  }\n\n  private handlePageClick = (event: Event) => {\n    const target = event.target as HTMLButtonElement;\n    this.startItem = parseInt(target.value, 10);\n    this.emitUpdate();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderEllipsis(type: \"start\" | \"end\"): VNode {\n    return (\n      <span class={CSS.ellipsis} data-test-ellipsis={type} key={type}>\n        &hellip;\n      </span>\n    );\n  }\n\n  renderItems(): VNode[] {\n    const { totalItems, pageSize, startItem, maxItems, totalPages, lastStartItem, isXXSmall } =\n      this;\n\n    const items: VNode[] = [];\n\n    if (isXXSmall) {\n      items.push(this.renderPage(startItem));\n      return items;\n    }\n\n    const renderFirstPage = totalItems > pageSize;\n    const renderStartEllipsis = this.showStartEllipsis();\n    const renderEndEllipsis = this.showEndEllipsis();\n\n    if (renderFirstPage) {\n      items.push(this.renderPage(1));\n    }\n\n    if (renderStartEllipsis) {\n      items.push(this.renderEllipsis(\"start\"));\n    }\n\n    const remainingItems =\n      maxItems -\n      firstAndLastPageCount -\n      (renderEndEllipsis ? 1 : 0) -\n      (renderStartEllipsis ? 1 : 0);\n\n    let end: number;\n    let nextStart: number;\n\n    // if we don't need ellipses render the whole set\n    if (totalPages - 1 <= remainingItems) {\n      nextStart = 1 + pageSize;\n      end = lastStartItem - pageSize;\n    } else {\n      // if we're within max pages of page 1\n      if (startItem / pageSize < remainingItems) {\n        nextStart = 1 + pageSize;\n        end = 1 + remainingItems * pageSize;\n      } else {\n        // if we're within max pages of last page\n        if (startItem + remainingItems * pageSize >= totalItems) {\n          nextStart = lastStartItem - remainingItems * pageSize;\n          end = lastStartItem - pageSize;\n        } else {\n          // if we're within the center pages\n          nextStart = startItem - pageSize * ((remainingItems - 1) / 2);\n          end = startItem + pageSize * ((remainingItems - 1) / 2);\n        }\n      }\n    }\n\n    for (let i = 0; i < remainingItems && nextStart <= end; i++) {\n      items.push(this.renderPage(nextStart));\n      nextStart = nextStart + pageSize;\n    }\n\n    if (renderEndEllipsis) {\n      items.push(this.renderEllipsis(\"end\"));\n    }\n\n    items.push(this.renderPage(lastStartItem));\n\n    return items;\n  }\n\n  renderPage(start: number): VNode {\n    const { pageSize } = this;\n    const page = Math.floor(start / pageSize) + (pageSize === 1 ? 0 : 1);\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const displayedPage = numberStringFormatter.localize(page.toString());\n    const selected = start === this.startItem;\n\n    return (\n      <li class={CSS.listItem}>\n        <button\n          aria-current={selected ? \"page\" : \"false\"}\n          class={{\n            [CSS.page]: true,\n            [CSS.selected]: selected,\n          }}\n          onClick={this.handlePageClick}\n          value={start}\n        >\n          {displayedPage}\n        </button>\n      </li>\n    );\n  }\n\n  renderPreviousChevron(): VNode {\n    const { pageSize, startItem, messages } = this;\n\n    const disabled = pageSize === 1 ? startItem <= pageSize : startItem < pageSize;\n\n    return (\n      <button\n        aria-label={messages.previous}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"previous\"\n        disabled={disabled}\n        key=\"previous\"\n        onClick={this.previousClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.previous} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderNextChevron(): VNode {\n    const { totalItems, pageSize, startItem, messages } = this;\n\n    const disabled =\n      pageSize === 1 ? startItem + pageSize > totalItems : startItem + pageSize > totalItems;\n\n    return (\n      <button\n        aria-label={messages.next}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"next\"\n        disabled={disabled}\n        key=\"next-button\"\n        onClick={this.nextClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.next} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderFirstChevron(): VNode {\n    const { messages, startItem, isXXSmall } = this;\n\n    const disabled = startItem === 1;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.first}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"first-button\"\n        onClick={this.firstClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.first} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderLastChevron(): VNode {\n    const { messages, startItem, isXXSmall, lastStartItem } = this;\n\n    const disabled = startItem === lastStartItem;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.last}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"last-button\"\n        onClick={this.lastClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.last} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  render(): VNode {\n    return (\n      <ul class={CSS.list}>\n        <li class={CSS.listItem}>{this.renderFirstChevron()}</li>\n        <li class={CSS.listItem}>{this.renderPreviousChevron()}</li>\n        {this.renderItems()}\n        <li class={CSS.listItem}>{this.renderNextChevron()}</li>\n        <li class={CSS.listItem}>{this.renderLastChevron()}</li>\n      </ul>\n    );\n  }\n}\n",":host {\n  @apply flex;\n  writing-mode: horizontal-tb;\n}\n\n.list {\n  @apply flex list-none m-0 p-0;\n}\n\n.list-item {\n  @apply flex m-0 p-0;\n}\n\n:host([scale=\"s\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-n2h h-6 px-1;\n    min-inline-size: theme(\"width.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-n1h h-8 px-2;\n    min-inline-size: theme(\"width.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-0h h-11;\n    min-inline-size: theme(\"width.11\");\n  }\n\n  & .chevron {\n    @apply px-2.5;\n  }\n\n  & .page,\n  & .ellipsis {\n    @apply px-3;\n  }\n}\n\n// focus styles\n:host button {\n  @apply focus-base;\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n.chevron,\n.page,\n.ellipsis {\n  @apply p-0\n    m-0\n    text-0h\n    text-color-3\n    font-inherit\n    box-border\n    flex\n    items-center\n    border-none\n    border-opacity-0\n    justify-center\n    align-baseline\n    bg-transparent;\n}\n\n.chevron,\n.page {\n  @apply cursor-pointer;\n  border-block: 2px solid transparent;\n\n  &:hover {\n    @apply text-color-1 transition-default;\n  }\n}\n\n.page {\n  &:hover {\n    @apply border-b-color-2;\n  }\n  &.selected {\n    @apply text-color-1 border-b-color-brand font-medium;\n  }\n}\n\n.chevron {\n  &:hover {\n    @apply bg-foreground-2;\n    color: theme(\"backgroundColor.brand\");\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &.disabled {\n    @apply pointer-events-none bg-transparent;\n    & > calcite-icon {\n      @apply opacity-disabled;\n    }\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","/**\n * Do not edit directly\n * Generated on Tue, 01 Oct 2024 00:09:19 GMT\n */\n\nexport const calciteBorderWidthNone = \"0\";\nexport const calciteBorderWidthSm = \"1px\";\nexport const calciteBorderWidthMd = \"2px\";\nexport const calciteBorderWidthLg = \"4px\";\nexport const calciteColorBackground = {\"light\":\"#f8f8f8\",\"dark\":\"#353535\"};\nexport const calciteColorBackgroundNone = \"rgba(255, 255, 255, 0)\";\nexport const calciteColorForeground1 = {\"light\":\"#ffffff\",\"dark\":\"#2b2b2b\"};\nexport const calciteColorForeground2 = {\"light\":\"#f3f3f3\",\"dark\":\"#202020\"};\nexport const calciteColorForeground3 = {\"light\":\"#eaeaea\",\"dark\":\"#151515\"};\nexport const calciteColorForegroundCurrent = {\"light\":\"#c7eaff\",\"dark\":\"#214155\"};\nexport const calciteColorTransparent = {\"light\":\"rgba(0, 0, 0, 0)\",\"dark\":\"rgba(255, 255, 255, 0)\"};\nexport const calciteColorTransparentHover = {\"light\":\"rgba(0, 0, 0, 0.04)\",\"dark\":\"rgba(255, 255, 255, 0.04)\"};\nexport const calciteColorTransparentPress = {\"light\":\"rgba(0, 0, 0, 0.08)\",\"dark\":\"rgba(255, 255, 255, 0.08)\"};\nexport const calciteColorTransparentScrim = {\"light\":\"rgba(255, 255, 255, 0.85)\",\"dark\":\"rgba(0, 0, 0, 0.85)\"};\nexport const calciteColorTransparentTint = {\"light\":\"rgba(255, 255, 255, 0.8)\",\"dark\":\"rgba(43, 43, 43, 0.8)\"};\nexport const calciteColorBrand = {\"light\":\"#007ac2\",\"dark\":\"#009af2\"};\nexport const calciteColorBrandHover = {\"light\":\"#00619b\",\"dark\":\"#007ac2\"};\nexport const calciteColorBrandPress = {\"light\":\"#004874\",\"dark\":\"#00619b\"};\nexport const calciteColorBrandUnderline = {\"light\":\"rgba(0, 97, 155, 0.4)\",\"dark\":\"rgba(0, 160, 255, 0.4)\"};\nexport const calciteColorStatusInfo = {\"light\":\"#00619b\",\"dark\":\"#00a0ff\"};\nexport const calciteColorStatusInfoHover = {\"light\":\"#004874\",\"dark\":\"#3db8ff\"};\nexport const calciteColorStatusInfoPress = {\"light\":\"#00304d\",\"dark\":\"#009af2\"};\nexport const calciteColorStatusSuccess = {\"light\":\"#35ac46\",\"dark\":\"#36da43\"};\nexport const calciteColorStatusSuccessHover = {\"light\":\"#288835\",\"dark\":\"#3bed52\"};\nexport const calciteColorStatusSuccessPress = {\"light\":\"#1a6324\",\"dark\":\"#00b81b\"};\nexport const calciteColorStatusWarning = {\"light\":\"#edd317\",\"dark\":\"#ffc900\"};\nexport const calciteColorStatusWarningHover = {\"light\":\"#d9bc00\",\"dark\":\"#ffee33\"};\nexport const calciteColorStatusWarningPress = {\"light\":\"#bfa200\",\"dark\":\"#f5d000\"};\nexport const calciteColorStatusDanger = {\"light\":\"#d83020\",\"dark\":\"#fe583e\"};\nexport const calciteColorStatusDangerHover = {\"light\":\"#a82b1e\",\"dark\":\"#ff0015\"};\nexport const calciteColorStatusDangerPress = {\"light\":\"#7c1d13\",\"dark\":\"#d90012\"};\nexport const calciteColorInverse = {\"light\":\"#353535\",\"dark\":\"#f8f8f8\"};\nexport const calciteColorInverseHover = {\"light\":\"#2b2b2b\",\"dark\":\"#ffffff\"};\nexport const calciteColorInversePress = {\"light\":\"#202020\",\"dark\":\"#f3f3f3\"};\nexport const calciteColorText1 = {\"light\":\"#151515\",\"dark\":\"#ffffff\"};\nexport const calciteColorText2 = {\"light\":\"#4a4a4a\",\"dark\":\"#bfbfbf\"};\nexport const calciteColorText3 = {\"light\":\"#6a6a6a\",\"dark\":\"#9f9f9f\"};\nexport const calciteColorTextInverse = {\"light\":\"#ffffff\",\"dark\":\"#151515\"};\nexport const calciteColorTextLink = {\"light\":\"#00619b\",\"dark\":\"#00a0ff\"};\nexport const calciteColorBorder1 = {\"light\":\"#cacaca\",\"dark\":\"#555555\"};\nexport const calciteColorBorder2 = {\"light\":\"#d4d4d4\",\"dark\":\"#4a4a4a\"};\nexport const calciteColorBorder3 = {\"light\":\"#dfdfdf\",\"dark\":\"#404040\"};\nexport const calciteColorBorderInput = {\"light\":\"#949494\",\"dark\":\"#757575\"};\nexport const calciteColorBorderGhost = {\"light\":\"rgba(0, 0, 0, 0.3)\",\"dark\":\"rgba(117, 117, 117, 0.3)\"};\nexport const calciteColorBorderWhite = {\"light\":\"#ffffff\",\"dark\":\"#f8f8f8\"};\nexport const calciteContainerSizeHeightXxs = {\"min\":\"0\",\"max\":\"154px\"}; // Small handheld devices and mini-windows\nexport const calciteContainerSizeHeightXs = {\"min\":\"155px\",\"max\":\"328px\"}; // Handheld devices\nexport const calciteContainerSizeHeightSm = {\"min\":\"329px\",\"max\":\"504px\"}; // Small tablets\nexport const calciteContainerSizeHeightMd = {\"min\":\"505px\",\"max\":\"678px\"}; // Small laptops\nexport const calciteContainerSizeHeightLg = {\"min\":\"679px\",\"max\":\"854px\"}; // Large laptops and desktop computers\nexport const calciteContainerSizeHeightXl = {\"min\":\"855px\"}; // Projectors and televisions\nexport const calciteContainerSizeWidthXxs = {\"min\":\"0\",\"max\":\"320px\"}; // Small handheld devices and mini-windows\nexport const calciteContainerSizeWidthXs = {\"min\":\"321px\",\"max\":\"476px\"}; // Handheld devices\nexport const calciteContainerSizeWidthSm = {\"min\":\"477px\",\"max\":\"768px\"}; // Small tablets\nexport const calciteContainerSizeWidthMd = {\"min\":\"769px\",\"max\":\"1152px\"}; // Small laptops\nexport const calciteContainerSizeWidthLg = {\"min\":\"1153px\",\"max\":\"1440px\"}; // Large laptops and desktop computers\nexport const calciteContainerSizeWidthXl = {\"min\":\"1441px\"}; // Projectors and televisions\nexport const calciteContainerSizeMargin = \"24px\";\nexport const calciteContainerSizeGutter = \"16px\";\nexport const calciteContainerSizeContentFluid = \"100%\"; // for fluid grid widths\nexport const calciteContainerSizeContentFixed = \"1440px\"; // only for lg breakpoint fixed grid width\nexport const calciteCornerRadius = \"0\";\nexport const calciteCornerRadiusSharp = \"0\";\nexport const calciteCornerRadiusRound = \"4px\";\nexport const calciteCornerRadiusPill = \"100%\";\nexport const calciteFontFamily = [\"Avenir Next\",\"Avenir\",\"Helvetica Neue\",\"sans-serif\"]; // Primary font with fallbacks\nexport const calciteFontFamilyCode = [\"Monaco\",\"Consolas\",\"Andale Mono\",\"Lucida Console\",\"monospace\"]; // Font family for code with fallbacks\nexport const calciteFontWeightLight = \"300\"; // For Avenir Next World (secondary font family)\nexport const calciteFontWeightNormal = \"400\"; // For backwards compatibility only. This token will be removed from the published tokens in the next major in favor of the more descriptive word \"regular\"\nexport const calciteFontWeightRegular = \"400\";\nexport const calciteFontWeightMedium = \"500\";\nexport const calciteFontWeightSemibold = \"600\";\nexport const calciteFontWeightBold = \"700\";\nexport const calciteFontSizeXs = \"10px\";\nexport const calciteFontSizeSm = \"12px\";\nexport const calciteFontSize = \"14px\";\nexport const calciteFontSizeMd = \"16px\";\nexport const calciteFontSizeLg = \"18px\";\nexport const calciteFontSizeXl = \"20px\";\nexport const calciteFontSizeXxl = \"24px\";\nexport const calciteFontStyleEmphasis = \"italic\"; // used in ratings\nexport const calciteFontLineHeightFixedSm = \"12px\";\nexport const calciteFontLineHeightFixedBase = \"16px\";\nexport const calciteFontLineHeightFixedLg = \"20px\";\nexport const calciteFontLineHeightFixedXl = \"24px\";\nexport const calciteFontLineHeightRelative = \"auto\"; // 1\nexport const calciteFontLineHeightRelativeTight = \"125%\"; // 1.25\nexport const calciteFontLineHeightRelativeSnug = \"137.5%\"; // 1.375\nexport const calciteFontLineHeightRelativeNormal = \"150%\"; // 1.5\nexport const calciteFontLineHeightRelativeRelaxed = \"162.5%\"; // 1.625\nexport const calciteFontLineHeightRelativeLoose = \"200%\"; // 2\nexport const calciteFontLetterSpacingTight = \"-0.4\";\nexport const calciteFontLetterSpacingNormal = \"0\";\nexport const calciteFontLetterSpacingWide = \"0.4\";\nexport const calciteFontParagraphSpacingNormal = \"4px\";\nexport const calciteFontTextDecorationNone = \"none\";\nexport const calciteFontTextDecorationUnderline = \"underline\";\nexport const calciteFontTextCaseNone = \"none\";\nexport const calciteFontTextCaseUppercase = \"uppercase\";\nexport const calciteFontTextCaseLowercase = \"lowercase\";\nexport const calciteFontTextCaseCapitalize = \"capitalize\";\nexport const calciteOpacityLight = \"0.4\";\nexport const calciteOpacityHalf = \"0.5\";\nexport const calciteOpacityDark = \"0.85\";\nexport const calciteOpacityFull = \"1\";\nexport const calciteOpacityDisabled = \"0.5\";\nexport const calciteShadowNone = {\"x\":\"0\",\"y\":\"0\",\"blur\":\"0\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0)\"};\nexport const calciteShadowSm = [{\"x\":\"0\",\"y\":\"2\",\"blur\":\"8\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.04)\"},{\"x\":\"0\",\"y\":\"4\",\"blur\":\"16\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.08)\"}];\nexport const calciteShadowMd = [{\"x\":\"0\",\"y\":\"4\",\"blur\":\"20\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.08)\"},{\"x\":\"0\",\"y\":\"12\",\"blur\":\"32\",\"spread\":\"-2\",\"color\":\"rgba(#000000, 0.1)\"}];\nexport const calciteSizePx = \"1px\";\nexport const calciteSizeXxxs = \"2px\";\nexport const calciteSizeXxs = \"4px\";\nexport const calciteSizeXs = \"6px\";\nexport const calciteSizeSm = \"8px\";\nexport const calciteSizeSmPlus = \"10px\";\nexport const calciteSizeMd = \"12px\";\nexport const calciteSizeMdPlus = \"14px\";\nexport const calciteSizeLg = \"16px\";\nexport const calciteSizeXl = \"20px\";\nexport const calciteSizeXxl = \"24px\";\nexport const calciteSizeXxxl = \"32px\";\nexport const calciteSpacingPx = \"1px\";\nexport const calciteSpacingBase = \"2px\";\nexport const calciteSpacingXxs = \"4px\";\nexport const calciteSpacingXs = \"6px\";\nexport const calciteSpacingSm = \"8px\";\nexport const calciteSpacingMd = \"12px\";\nexport const calciteSpacingLg = \"14px\";\nexport const calciteSpacingXl = \"16px\";\nexport const calciteSpacingXxl = \"20px\";\nexport const calciteSpacingXxxl = \"32px\";\nexport const calciteTypography = {\"fontFamily\":[\"Avenir Next\",\"Avenir\",\"Helvetica Neue\",\"sans-serif\"],\"fontSize\":\"14px\",\"fontWeight\":\"400\",\"letterSpacing\":\"0\",\"lineHeight\":\"16px\",\"paragraphSpacing\":\"4px\",\"textCase\":\"none\",\"textDecoration\":\"none\"};\nexport const calciteTypographyLightMinus3h = {\"fontSize\":\"10px\",\"fontWeight\":\"300\",\"lineHeight\":\"12px\"};\nexport const calciteTypographyLightMinus2h = {\"fontSize\":\"12px\",\"fontWeight\":\"300\"};\nexport const calciteTypographyLightMinus1h = {\"fontWeight\":\"300\"};\nexport const calciteTypographyLight0h = {\"fontSize\":\"16px\",\"fontWeight\":\"300\",\"lineHeight\":\"20px\"};\nexport const calciteTypographyLight1h = {\"fontSize\":\"18px\",\"fontWeight\":\"300\",\"lineHeight\":\"24px\"};\nexport const calciteTypographyRegularMinus3h = {\"lineHeight\":\"12px\",\"fontSize\":\"10px\"};\nexport const calciteTypographyRegularMinus2h = {\"fontSize\":\"12px\"};\nexport const calciteTypographyRegularMinus1h = {\"fontFamily\":[\"Avenir Next\",\"Avenir\",\"Helvetica Neue\",\"sans-serif\"],\"fontSize\":\"14px\",\"fontWeight\":\"400\",\"letterSpacing\":\"0\",\"lineHeight\":\"16px\",\"paragraphSpacing\":\"4px\",\"textCase\":\"none\",\"textDecoration\":\"none\"};\nexport const calciteTypographyRegular0h = {\"lineHeight\":\"20px\",\"fontSize\":\"16px\"};\nexport const calciteTypographyRegular1h = {\"lineHeight\":\"24px\",\"fontSize\":\"18px\"};\nexport const calciteTypographyMediumMinus3h = {\"fontWeight\":\"500\",\"lineHeight\":\"12px\",\"fontSize\":\"10px\"};\nexport const calciteTypographyMediumMinus2h = {\"fontWeight\":\"500\",\"fontSize\":\"12px\"};\nexport const calciteTypographyMediumMinus1h = {\"fontWeight\":\"500\"};\nexport const calciteTypographyMedium0h = {\"fontWeight\":\"500\",\"lineHeight\":\"20px\",\"fontSize\":\"16px\"};\nexport const calciteTypographyMedium1h = {\"fontWeight\":\"500\",\"lineHeight\":\"24px\",\"fontSize\":\"18px\"};\nexport const calciteTypographyBoldMinus3h = {\"fontWeight\":\"600\",\"lineHeight\":\"12px\",\"fontSize\":\"10px\"};\nexport const calciteTypographyBoldMinus2h = {\"fontWeight\":\"600\",\"fontSize\":\"12px\"};\nexport const calciteTypographyBoldMinus1h = {\"fontWeight\":\"600\"};\nexport const calciteTypographyBold0h = {\"fontWeight\":\"600\",\"lineHeight\":\"20px\",\"fontSize\":\"16px\"};\nexport const calciteTypographyBold1h = {\"fontWeight\":\"600\",\"lineHeight\":\"24px\",\"fontSize\":\"18px\"};\nexport const calciteTypographyWrapLight0 = {\"fontWeight\":\"300\",\"lineHeight\":\"137.5%\",\"fontSize\":\"16px\"};\nexport const calciteTypographyWrapLight1 = {\"fontWeight\":\"300\",\"lineHeight\":\"137.5%\",\"fontSize\":\"18px\"};\nexport const calciteTypographyWrapLight2 = {\"fontWeight\":\"300\",\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyWrapLight3 = {\"fontWeight\":\"300\",\"lineHeight\":\"125%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyWrapLightMinus2 = {\"fontWeight\":\"300\",\"lineHeight\":\"137.5%\",\"fontSize\":\"12px\"};\nexport const calciteTypographyWrapLightMinus1 = {\"fontWeight\":\"300\",\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyWrapRegular0 = {\"lineHeight\":\"137.5%\",\"fontSize\":\"16px\"};\nexport const calciteTypographyWrapRegular1 = {\"lineHeight\":\"137.5%\",\"fontSize\":\"18px\"};\nexport const calciteTypographyWrapRegular2 = {\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyWrapRegular3 = {\"lineHeight\":\"137.5%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyWrapRegularMinus2 = {\"lineHeight\":\"137.5%\",\"fontSize\":\"12px\"};\nexport const calciteTypographyWrapRegularMinus1 = {\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyWrapMedium0 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"16px\"};\nexport const calciteTypographyWrapMedium1 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"18px\"};\nexport const calciteTypographyWrapMedium2 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyWrapMedium3 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyWrapMediumMinus2 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"12px\"};\nexport const calciteTypographyWrapMediumMinus1 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyWrapBold0 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"16px\"};\nexport const calciteTypographyWrapBold1 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"18px\"};\nexport const calciteTypographyWrapBold2 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyWrapBold3 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyWrapBoldMinus2 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"12px\"};\nexport const calciteTypographyWrapBoldMinus1 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyHierarchyDisplay1 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyHierarchyDisplay2 = {\"fontWeight\":\"600\",\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyHierarchyHeading1 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"24px\"};\nexport const calciteTypographyHierarchyHeading2 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"20px\"};\nexport const calciteTypographyHierarchyHeading3 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"18px\"};\nexport const calciteTypographyHierarchyHeading4 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\",\"fontSize\":\"16px\"};\nexport const calciteTypographyHierarchyHeading5 = {\"fontWeight\":\"500\",\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyHierarchyBodySnug = {\"lineHeight\":\"137.5%\"};\nexport const calciteTypographyHierarchyBody = {\"fontFamily\":[\"Avenir Next\",\"Avenir\",\"Helvetica Neue\",\"sans-serif\"],\"fontSize\":\"14px\",\"fontWeight\":\"400\",\"letterSpacing\":\"0\",\"lineHeight\":\"16px\",\"paragraphSpacing\":\"4px\",\"textCase\":\"none\",\"textDecoration\":\"none\"};\nexport const calciteTypographyHierarchyOverline = {\"lineHeight\":\"12px\",\"textCase\":\"uppercase\",\"fontWeight\":\"700\"};\nexport const calciteTypographyHierarchyCaption = {\"lineHeight\":\"137.5%\",\"fontSize\":\"12px\"};\nexport const calciteZIndexDeep = \"-999999\";\nexport const calciteZIndex = \"1\";\nexport const calciteZIndexSticky = \"300\";\nexport const calciteZIndexHeader = \"400\";\nexport const calciteZIndexToast = \"500\";\nexport const calciteZIndexDropdown = \"600\";\nexport const calciteZIndexOverlay = \"700\";\nexport const calciteZIndexModal = \"800\";\nexport const calciteZIndexPopup = \"900\";\nexport const calciteZIndexTooltip = \"901\";\n","import {\n  calciteContainerSizeWidthLg,\n  calciteContainerSizeWidthMd,\n  calciteContainerSizeWidthSm,\n  calciteContainerSizeWidthXs,\n  calciteContainerSizeWidthXxs,\n} from \"@esri/calcite-design-tokens/dist/es6/global\";\n\nexport interface Breakpoints {\n  width: {\n    large: number;\n    medium: number;\n    small: number;\n    xsmall: number;\n    xxsmall: number;\n  };\n}\n\n/**\n * A breakpoints lookup object.\n */\nexport const breakpoints: Breakpoints = {\n  width: {\n    large: cssLengthToNumber(calciteContainerSizeWidthLg.max),\n    medium: cssLengthToNumber(calciteContainerSizeWidthMd.max),\n    small: cssLengthToNumber(calciteContainerSizeWidthSm.max),\n    xsmall: cssLengthToNumber(calciteContainerSizeWidthXs.max),\n    xxsmall: cssLengthToNumber(calciteContainerSizeWidthXxs.max),\n  },\n};\n\nfunction cssLengthToNumber(length: string): number {\n  return parseInt(length);\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","ICONS","maxItemBreakpoints","Pagination","resizeObserver","createObserver","entries","forEach","this","resizeHandler","contentRect","width","setMaxItemsToBreakpoint","firstClicked","startItem","emitUpdate","lastClicked","lastStartItem","previousClicked","async","previousPage","nextClicked","nextPage","handlePageClick","event","target","parseInt","value","onMessagesChange","handleTotalPages","pageSize","totalPages","totalItems","effectiveLocaleChange","updateMessages","effectiveLocale","numberStringFormatter","numberFormatOptions","locale","numberingSystem","useGrouping","groupSeparator","handleLastStartItemChange","Math","floor","handleIsXXSmall","isXXSmall","maxItems","connectedCallback","connectLocalized","connectMessages","observe","el","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","clientWidth","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","setFocus","componentFocusable","focus","min","max","goTo","page","ceil","breakpoints","medium","small","xsmall","xxsmall","showStartEllipsis","showEndEllipsis","calcitePaginationChange","emit","renderEllipsis","type","h","class","key","renderItems","items","push","renderPage","renderFirstPage","renderStartEllipsis","renderEndEllipsis","remainingItems","end","nextStart","i","start","displayedPage","localize","toString","selected","onClick","renderPreviousChevron","messages","disabled","previous","flipRtl","icon","scale","getIconScale","renderNextChevron","next","renderFirstChevron","first","renderLastChevron","last","render","componentScale","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","resolveMap","WeakMap","promiseMap","component","set","get","componentLoaded","isBrowser","forceUpdate","large","cssLengthToNumber","length","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","tagName","toLowerCase","replace","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}