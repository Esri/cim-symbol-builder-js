{"version":3,"file":"static/js/7663.3fb070ae.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/smartMapping/statistics/support/utils.js","../node_modules/@arcgis/core/smartMapping/statistics/support/statsWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{unwrap as t,isSome as n}from\"../../../core/maybe.js\";import{pt2px as r}from\"../../../core/screenUtils.js\";import i from\"../../../geometry/SpatialReference.js\";import{quantizePoint as o}from\"../../../geometry/support/quantizationUtils.js\";import{isWrappable as s,getInfo as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import{isNumericField as a,numericTypes as u}from\"../../../layers/support/fieldUtils.js\";import{evaluateDensityKernel as f,createValueFunction as c}from\"../../../renderers/support/heatmapUtils.js\";import{processNullValue as m,getNormalizedValue as d}from\"../../../statistics/utils.js\";import{loadArcade as p}from\"../../../support/arcadeOnDemand.js\";import h from\"../../../geometry/Point.js\";let y=null;function $(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function I(e,n,r,i){const a=s(r)?l(r):null,u=a?Math.round((a.valid[1]-a.valid[0])/n.scale[0]):null;return e.map((e=>{const r=new h(t(e.geometry));return o(n,r,r,r.hasZ,r.hasM),e.geometry=a?$(r,u,i[0]):r,e}))}function g(e,t=18,n,i,o,s){const l=new Float64Array(o*s);t=Math.round(r(t));let a=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,m=0,d=0,p=0,h=0;const y=c(i,n);for(const{geometry:r,attributes:c}of e){const{x:e,y:n}=r,i=Math.max(0,e-t),$=Math.max(0,n-t),I=Math.min(s,n+t),g=Math.min(o,e+t),j=+y(c);for(let r=$;r<I;r++)for(let s=i;s<g;s++){const i=r*o+s,c=f(s-e,r-n,t),y=l[i];m=l[i]+=c*j;const $=m-y;d+=$,p+=$*$,m<a&&(a=m),m>u&&(u=m),h++}}if(!h)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const $=(u-a)/2;return{mean:d/h,stdDev:Math.sqrt((p-d*d/h)/h),min:a,max:u,mid:$,count:h}}async function j(e,t){if(!t)return[];const{field:n,field2:r,field3:o,fieldDelimiter:s}=e,l=e.valueExpression,a=e.normalizationType,u=e.normalizationField,f=e.normalizationTotal,c=[],h=e.viewInfoParams;let $=null,I=null;if(l){if(!y){const{arcadeUtils:e}=await p();y=e}$=y.createFunction(l),I=h&&y.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new i(h.spatialReference)})}const g=e.fieldInfos,j=!(t[0]&&\"declaredClass\"in t[0]&&\"esri.Graphic\"===t[0].declaredClass)&&g?{fields:g}:null;return t.forEach((e=>{const t=e.attributes;let i;if(l){const t=j?{...e,layer:j}:e,n=y.createExecContext(t,I);i=y.executeFunction($,n)}else t&&(i=t[n],r&&(i=`${m(i)}${s}${m(t[r])}`,o&&(i=`${i}${s}${m(t[o])}`)));if(a&&\"number\"==typeof i&&isFinite(i)){const e=t&&parseFloat(t[u]);i=d(i,a,e,f)}c.push(i)})),c}function x(e){const t=e.field,n=e.normalizationType,r=e.normalizationField;let i;return\"field\"===n?i=\"(NOT \"+r+\" = 0)\":\"log\"!==n&&\"natural-log\"!==n&&\"square-root\"!==n||(i=`(${t} > 0)`),i}function F(t,n){return new e(t,n)}function b(e,t,n){const r=null!=t?e+\" >= \"+t:\"\",i=null!=n?e+\" <= \"+n:\"\";let o=\"\";return o=r&&i?N(r,i):r||i,o?\"(\"+o+\")\":\"\"}function v(e,t,n,r){let i=null;return t?t.name!==e.objectIdField&&r.includes(t.type)||(i=F(n,\"'field' should be one of these types: \"+r.join(\",\"))):i=F(n,\"'field' is not defined in the layer schema\"),i}function E(e,t,n){let r;return t?t.name!==e.objectIdField&&a(t)||(r=F(n,\"'field' should be one of these numeric types: \"+u.join(\",\"))):r=F(n,\"'field' is not defined in the layer schema\"),r}function N(e,t){let r=n(e)?e:\"\";return n(t)&&t&&(r=r?\"(\"+r+\") AND (\"+t+\")\":t),r}function w(e,t){if(e&&\"intersects\"!==e.spatialRelationship)return F(t,\"Only 'intersects' spatialRelationship is supported for featureFilter\")}function M(e,t,n){const r=U({layer:e,fields:t});if(r.length)return F(n,\"Unknown fields: \"+r.join(\", \")+\". You can only use fields defined in the layer schema\");const i=T({layer:e,fields:t});return i.length?F(n,\"Unsupported fields: \"+i.join(\", \")+\". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\"):void 0}function U(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function T(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}function z(e,t,n){const r=[],i=[],o=[],s=[],l=[];e.forEach(((e,t)=>{const a=e.field?\"field\":\"expression\",u=e.field||e.valueExpression;e.field?(l.push(u),i.push(`var ${a}${t} = Number($feature[\"${u}\"]);`)):(r.push(`function getValueForExpr${t}() {\\n  ${u} \\n}`),i.push(`var ${a}${t} = Number(getValueForExpr${t}());`)),n||o.push(`${a}${t} = IIf(${a}${t} < 0, 0, ${a}${t});`),s.push(`${a}${t}`)}));let a=\"return sum;\";const u=r.length?null:l.reduce(((e,t)=>`${e} + ${t}`));let f=null;t||n?t?n||(a=\"return IIf(sum >= 0, sum, null);\",u&&(f=`(( ${u} ) >= 0)`)):(a=\"return IIf(sum != 0, sum, null);\",u&&(f=`(( ${u} ) <> 0)`)):(a=\"return IIf(sum > 0, sum, null);\",u&&(f=`(( ${u} ) > 0)`));return{valueExpression:[r.length?r.join(\"\\n\"):\"\",i.join(\"\\n\"),o.join(\"\\n\"),`var sum = ${s.join(\" + \")};`,a].filter(Boolean).join(\"\\n\\n\"),sqlExpression:u,sqlWhere:f}}export{g as calculateHeatmapStats,F as createError,j as getDataValues,b as getRangeExpr,x as getSQLFilterForNormalization,z as getSumOfAttributesExpr,N as mergeWhereClauses,I as quantizeFeatures,M as verifyBasicFieldValidity,v as verifyFieldType,w as verifyFilterValidty,E as verifyNumericField};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{getDataValues as a,quantizeFeatures as i,calculateHeatmapStats as e}from\"./utils.js\";import{isNullCountSupported as n,calculateStringStatistics as l,calculateStatistics as t,processSummaryStatisticsResult as o,calculateUniqueValuesCount as s,createUVResult as r,calculateClassBreaks as m,resolveCBResult as f,calculateHistogram as u}from\"../../../statistics/utils.js\";async function d(i){const{attribute:e,features:s}=i,{normalizationType:r,normalizationField:m,minValue:f,maxValue:u,fieldType:d}=e,p=await a({field:e.field,valueExpression:e.valueExpression,normalizationType:r,normalizationField:m,normalizationTotal:e.normalizationTotal,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},s),v=n({normalizationType:r,normalizationField:m,minValue:f,maxValue:u}),c={value:.5,fieldType:d},z=\"esriFieldTypeString\"===d?l({values:p,supportsNullCount:v,percentileParams:c}):t({values:p,minValue:f,maxValue:u,useSampleStdDev:!r,supportsNullCount:v,percentileParams:c});return o(z,\"esriFieldTypeDate\"===d)}async function p(i){const{attribute:e,features:n}=i,l=await a({field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:e.valueExpression,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n),t=s(l);return r(t,e.domains,e.returnAllCodedValues,e.fieldDelimiter)}async function v(i){const{attribute:e,features:n}=i,{field:l,normalizationType:t,normalizationField:o,normalizationTotal:s,classificationMethod:r}=e,u=await a({field:l,valueExpression:e.valueExpression,normalizationType:t,normalizationField:o,normalizationTotal:s,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n),d=m(u,{field:l,normalizationType:t,normalizationField:o,normalizationTotal:s,classificationMethod:r,standardDeviationInterval:e.standardDeviationInterval,numClasses:e.numClasses,minValue:e.minValue,maxValue:e.maxValue});return f(d,r)}async function c(i){const{attribute:e,features:n}=i,{field:l,normalizationType:t,normalizationField:o,normalizationTotal:s,classificationMethod:r}=e,m=await a({field:l,valueExpression:e.valueExpression,normalizationType:t,normalizationField:o,normalizationTotal:s,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n);return u(m,{field:l,normalizationType:t,normalizationField:o,normalizationTotal:s,classificationMethod:r,standardDeviationInterval:e.standardDeviationInterval,numBins:e.numBins,minValue:e.minValue,maxValue:e.maxValue})}async function z(a){const{attribute:n,features:l}=a,{field:t,radius:o,fieldOffset:s,transform:r,spatialReference:m,size:f}=n,u=i(l,r,m,f),{count:d,min:p,max:v,mean:c,stdDev:z}=e(u,o,s,t,f[0],f[1]);return{count:d,min:p,max:v,avg:c,stddev:z}}export{v as classBreaks,z as heatmapStatistics,c as histogram,d as summaryStatistics,p as uniqueValues};\n"],"names":["y","async","j","e","t","field","n","field2","r","field3","o","fieldDelimiter","s","l","valueExpression","a","normalizationType","u","normalizationField","f","normalizationTotal","c","h","viewInfoParams","$","I","arcadeUtils","p","createFunction","getViewInfo","viewingMode","scale","spatialReference","i","g","fieldInfos","declaredClass","fields","forEach","attributes","layer","createExecContext","executeFunction","m","isFinite","parseFloat","d","push","attribute","features","minValue","maxValue","fieldType","v","value","z","values","supportsNullCount","percentileParams","useSampleStdDev","domains","returnAllCodedValues","classificationMethod","standardDeviationInterval","numClasses","numBins","radius","fieldOffset","transform","size","Math","round","valid","map","geometry","hasZ","hasM","x","count","min","max","mean","stdDev","Float64Array","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","stddev","mid","sqrt","avg"],"sourceRoot":""}