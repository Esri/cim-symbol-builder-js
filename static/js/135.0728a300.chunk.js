"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[135],{67612:(e,t,n)=>{n.d(t,{a:()=>i,c:()=>s});var r=n(97799),o=n(26871);function s(e,t){if(!e.isEmpty())switch(e.getGeometryType()){case r.G.enumPolygon:return a(e);case r.G.enumPolyline:return g(e.getImpl());case r.G.enumLine:case r.G.enumBezier:case r.G.enumEllipticArc:return function(e){const t=e.calculateLength2D();return 0===t?e.getStartXY():e.calculateWeightedCentroid2D().mul(1/t)}(e);case r.G.enumMultiPoint:return function(e){const t=new o.K(0),n=new o.K(0),r=e.getImpl(),s=r.getAttributeStreamRef(0),i=r.getPointCount(),a=new o.P;for(let o=0;o<i;o++)s.queryPoint2D(2*o,a),t.add(a.x),n.add(a.y);const u=new o.P;return u.setCoords(t.getResult(),n.getResult()),u.divThis(i)}(e);case r.G.enumEnvelope:return e.getCenterXY();case r.G.enumPoint:return e.getXY();default:return o.P.construct(Number.NaN,Number.NaN)}return o.P.construct(Number.NaN,Number.NaN)}function i(e,t){return a(e,t)}function a(e,t=-1){const n=new o.K(0),r=new o.K(0),s=e.getImpl();let i;const a=s.hasNonLinearSegments();let g;const m=s.getXY(0);if(-1===t){if(g=s.calculateArea2D(),0===g)return l(e);a&&(i=s.querySegmentIterator());for(let e=0,t=s.getPathCount();e<t;e++)u(m,s,e,n,r),a&&c(m,i,n,r)}else{if(g=s.calculateRingArea2D(t),0===g)return l(e,t);a&&(i=s.querySegmentIterator(),i.resetToPath(t)),u(m,s,t,n,r),a&&c(m,i,n,r)}const P=new o.P,d=new o.P;return P.setCoords(n.getResult(),r.getResult()),d.assign(P.mul(1/g).add(m)),d}function u(e,t,n,r,s){const i=t.getPathStart(n),a=t.getPathEnd(n);if(a-i<3)return;const u=t.getAttributeStreamRef(0),c=u.readPoint2D(2*i),l=u.readPoint2D(2*(i+1));l.subThis(c);const g=new o.K(0),m=t.hasNonLinearSegments(),P=1/3,d=new o.P;for(let o=i+2;o<a;o++){u.queryPoint2D(2*o,d),d.subThis(c);const e=.5*d.crossProduct(l);m&&g.add(e);const t=P*e;r.add((l.x+d.x)*t),s.add((l.y+d.y)*t),l.setCoordsPoint2D(d)}const h=m?g.getResult():t.calculateRingArea2D(n),f=c.sub(e).mul(h);r.add(f.x),s.add(f.y)}function c(e,t,n,o){let s;for(t.nextPath()||(0,r.d)("centroid");null!==(s=t.nextCurve());){const t=s.calculateWeightedAreaCentroid2D(e);n.add(t.x),o.add(t.y)}}function l(e,t=-1){return g(e.getImpl(),t)}function g(e,t=-1){const n=-1===t?e.calculateLength2D():e.calculatePathLength2D(t);if(0===n)return function(e,t=-1){if(-1!==t)return e.getXY(e.getPathStart(t));const n=new o.K(0),r=new o.K(0);for(let o=0;o<e.getPathCount();++o){const t=e.getXY(e.getPathStart(o));n.add(t.x),r.add(t.y)}return o.P.construct(n.getResult(),r.getResult()).mul(1/e.getPathCount())}(e,t);const r=new o.K(0),s=new o.K(0),i=e.querySegmentIterator();for(-1!==t&&i.resetToPath(t);i.nextPath();){const n=i.getPathIndex(),o=e.getXY(e.getPathStart(n));for(;i.hasNextSegment();){const e=i.nextSegment(),t=e.calculateLength2D();if(0===t)continue;const n=e.calculateWeightedCentroid2D().sub(o.mul(t));r.add(n.x),s.add(n.y)}const a=o.mul(e.calculatePathLength2D(n));if(r.add(a.x),s.add(a.y),-1!==t)break}const a=new o.P;return a.setCoords(r.getResult(),s.getResult()),a.mul(1/n)}},78429:(e,t,n)=>{n.d(t,{O:()=>m});var r=n(97799),o=n(21557),s=n(26871),i=n(82103);function a(){return u(new s.P,-1,Number.NaN)}function u(e,t,n){return{m_coordinate:e.clone(),m_vertexIndex:t,m_geometryIndex:0,m_distance:n,m_bRightSide:!1,isEmpty:c}}function c(){return Number.isNaN(this.m_distance)}function l(e,t,n=-1,a=-1){if(e.isEmpty())return 3;const u=e.getGeometryType();if((0,r.f)(u))return function(e,t,n,o){if(n>=0||o>=0)return(0,r.a)("");if(e.isDegenerate(0))return e.getStartXY().equals(t)?2:3;if(!e.isCurve()){const n=s.P.orientationRobust(t,e.getStartXY(),e.getEndXY());return n<0?1:n>0?0:2}const i=e.getClosestCoordinate(t,!1),a=e.getTangent(i),u=e.getCoord2D(i),c=s.P.orientationRobust(t,u,u.add(a));return c<0?1:c>0?0:2}(e,t,n,a);if(u===r.G.enumPolygon)return function(e,t,n,s){(n>=0||s>=0)&&(0,r.a)("");const a=new o.Envelope2D;e.queryEnvelope(a);const u=(0,i.h)(e,t,0);return 0===u?0:1===u?1:2}(e,t,n,a);if(u===r.G.enumPolyline)return function(e,t,n,o){(n<0&&o>=0||n>=0&&o<0)&&(0,r.a)("");const i=e.querySegmentIterator();if(n<0){let e=Number.MAX_VALUE,r=0;for(;i.nextPath();)for(;i.hasNextSegment();){const a=i.nextSegment(),u=a.getClosestCoordinate(t,!1),c=a.getCoord2D(u),l=s.P.sqrDistance(c,t);l<e?(r=1,n=i.getStartPointIndex(),o=i.getPathIndex(),e=l):l===e&&r++}if(0===r)return 3;if(1===r)return i.resetToVertex(n,o),l(i.nextSegment(),t)}const a=function(e,t,n,r){const o={i1:-1,i2:-1,bRight1:!1,bRight2:!1};if(o.i1=function(e,t,n){for(e.resetToVertex(t,n);e.hasNextSegment();)if(!e.nextSegment().isDegenerate(0))return e.getStartPointIndex();for(e.resetToVertex(t,n);e.hasPreviousSegment();)if(!e.previousSegment().isDegenerate(0))return e.getStartPointIndex();return-1}(t,n,r),-1!==o.i1){t.resetToVertex(o.i1,-1);const n=t.nextSegment(),r=n.getClosestCoordinate(e,!1),i=n.getCoord2D(r),a=s.P.sqrDistance(i,e);{const t=i.clone();t.subThis(n.getStartXY());const r=e.clone();r.subThis(n.getStartXY()),o.bRight1=t.crossProduct(r)<0}if(o.i2=function(e,t){for(e.resetToVertex(t,-1),e.nextSegment();e.hasNextSegment();)if(!e.nextSegment().isDegenerate(0))return e.getStartPointIndex();return-1}(t,o.i1),-1!==o.i2){t.resetToVertex(o.i2,-1);const n=t.nextSegment(),r=n.getClosestCoordinate(e,!1),i=n.getCoord2D(r);if(s.P.sqrDistance(i,e)>a)o.i2=-1;else{const t=i.clone();t.subThis(n.getStartXY());const r=e.clone();r.subThis(n.getStartXY()),o.bRight2=t.crossProduct(r)<0}}if(-1===o.i2&&(o.i2=function(e,t){for(e.resetToVertex(t,-1);e.hasPreviousSegment();)if(!e.previousSegment().isDegenerate(0))return e.getStartPointIndex();return-1}(t,o.i1),-1!==o.i2)){t.resetToVertex(o.i2,-1);const n=t.nextSegment(),r=n.getClosestCoordinate(e,!1),i=n.getCoord2D(r);if(s.P.sqrDistance(i,e)>a)o.i2=-1;else{const t=i.clone();t.subThis(n.getStartXY());const r=e.clone();r.subThis(n.getStartXY()),o.bRight2=t.crossProduct(r)<0;const s=o.i1;o.i1=o.i2,o.i2=s;const a=o.bRight1;o.bRight1=o.bRight2,o.bRight2=a}}}return o}(t,i,n,o);if(-1!==a.i1&&-1===a.i2)return a.bRight1?1:0;if(-1!==a.i1&&-1!==a.i2){if(a.bRight1===a.bRight2)return a.bRight1?1:0;{i.resetToVertex(a.i1,-1);const e=i.nextSegment().getTangent(1);i.resetToVertex(a.i2,-1);const t=i.nextSegment().getTangent(0);return e.crossProduct(t)>=0?1:0}}return i.resetToVertex(n,o),l(i.nextSegment(),t)}(e,t,n,a);if(u===r.G.enumEnvelope){const n=new o.Envelope2D;return e.queryEnvelope(n),n.contains(t)?n.containsExclusive(t)?1:2:0}return 3}var g=n(91523);class m{getOperatorType(){return 10500}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}getNearestCoordinate(e,t,n,o){if(t.isNAN()&&(0,r.a)("NAN xy coordinates are not allowed"),e.isEmpty())return a();switch(e.getGeometryType()){case r.G.enumPoint:return this.pointGetNearestVertex(e,t);case r.G.enumMultiPoint:return this.multiVertexGetNearestVertex(e,t);case r.G.enumPolyline:case r.G.enumPolygon:return this.multiPathGetNearestCoordinate(e,t,n,o);default:(0,r.t)("")}}getNearestVertex(e,t){if(t.isNAN()&&(0,r.a)("NAN xy coordinates are not allowed"),e.isEmpty())return a();switch(e.getGeometryType()){case r.G.enumPoint:return this.pointGetNearestVertex(e,t);case r.G.enumMultiPoint:case r.G.enumPolyline:case r.G.enumPolygon:return this.multiVertexGetNearestVertex(e,t);default:(0,r.t)("")}}getNearestVertices(e,t,n,o){if(0===o&&(0,r.a)(""),t.isNAN()&&(0,r.a)("NAN xy coordinates are not allowed"),e.isEmpty())return[];switch(e.getGeometryType()){case r.G.enumPoint:return this.pointGetNearestVertices(e,t,n,o);case r.G.enumMultiPoint:case r.G.enumPolyline:case r.G.enumPolygon:return this.multiVertexGetNearestVertices(e,t,n,o);default:(0,r.t)("")}}multiPathGetNearestCoordinate(e,t,n,a){if(e.getGeometryType()===r.G.enumPolygon&&n){const n=new o.Envelope2D;e.queryEnvelope(n);const r=(0,g.a)(null,n,!1);let s;if(s=(0,i.h)(e,t,a?0:r),0!==s){const e=u(t,-1,0);return a&&(e.m_bRightSide=!0),e}}const c=e.querySegmentIterator(),m=new s.P;let P=-1,d=-1,h=Number.MAX_VALUE,f=0;for(;c.nextPath();)for(;c.hasNextSegment();){const e=c.nextSegment(),n=e.getClosestCoordinate(t,!1),r=e.getCoord2D(n),o=s.P.sqrDistance(r,t);o<h?(f=1,m.assign(r),P=c.getStartPointIndex(),d=c.getPathIndex(),h=o):o===h&&f++}-1===P&&(0,r.a)("");const N=u(m,P,Math.sqrt(h));if(a)if(e.getGeometryType()!==r.G.enumPolygon){let n=!1;if(f>1){const r=l(e,t,P,d);n=0!==r&&3!==r}else{c.resetToVertex(P,d);n=0!==l(c.nextSegment(),t)}N.m_bRightSide=n}else n||0!==(0,i.h)(e,t,0)&&(N.m_bRightSide=!0);return N}pointGetNearestVertex(e,t){const n=e.getXY();return u(n,0,s.P.distance(n,t))}multiVertexGetNearestVertex(e,t){const n=e.getAttributeStreamRef(0),r=e.getPointCount();let o=-1;const i=new s.P;let a=Number.MAX_VALUE;const c=new s.P;for(let u=0;u<r;u++){n.queryPoint2D(2*u,c);const e=s.P.sqrDistance(c,t);e<a&&(i.assign(c),o=u,a=e)}return u(i,o,Math.sqrt(a))}pointGetNearestVertices(e,t,n,r){const o=[];if(0!==r){const r=n*n,i=e.getXY(),a=s.P.sqrDistance(i,t);a<=r&&o.push(u(i,0,Math.sqrt(a)))}return o}multiVertexGetNearestVertices(e,t,n,r){const o=[];if(0!==r){const i=e.getAttributeStreamRef(0),a=e.getPointCount();o.length=r+1;const c=n*n;for(let e=0;e<a;e++){const n=i.read(2*e),r=i.read(2*e+1),a=t.x-n,l=t.y-r,g=a*a+l*l;g<=c&&o.push(u(s.P.construct(n,r),e,Math.sqrt(g)))}o.sort(((e,t)=>e.m_distance-t.m_distance))}return o.slice(0,r)}}},135:(e,t,n)=>{n.d(t,{a:()=>i,e:()=>s,l:()=>u,s:()=>a});var r=n(4207),o=n(58067);function s(e){return(0,o.toPoint)((0,r.g7)((0,o.fromGeometry)(e)),(0,o.getSpatialReference)(e))}function i(e){const t=e.map(o.fromGeometry),n=(0,o.getSpatialReference)(e);return(0,r.zo)(t).map((e=>(0,o.toPoint)(e,n)))}const a=(0,r.fz)(),u=Object.freeze(Object.defineProperty({__proto__:null,execute:s,executeMany:i,supportsCurves:a},Symbol.toStringTag,{value:"Module"}))},4207:(e,t,n)=>{n.d(t,{fz:()=>f,g7:()=>d,zo:()=>h});var r=n(68707),o=n(97799),s=n(91523),i=n(63331),a=n(21557),u=n(26871),c=n(82103),l=n(67612),g=n(78429);class m extends r.G{progress_(){}tock(){return!0}getRank(){return 1}constructor(e,t){super(),this.m_index=-1,this.m_progressCounter=0,this.m_progressTracker=t,this.m_inputGeoms=e}next(){const e=this.m_inputGeoms.next();return e?((0,o.c)(e),this.m_index=this.m_inputGeoms.getGeometryID(),this.labelPoint(e)):null}getGeometryID(){return this.m_index}labelPoint(e){if(null===e&&(0,o.a)("null pointer is not allowed"),e.getGeometryType()===o.G.enumPoint)return e;if(e.isEmpty())return new s.P({vd:e.getDescription()});switch(e.getGeometryType()){case o.G.enumPolygon:return this.labelPointPolygon(e);case o.G.enumPolyline:return this.labelPointPolyline(e);case o.G.enumMultiPoint:return this.labelPointMultiPoint(e);case o.G.enumEnvelope:return this.labelPointEnvelope(e);default:(0,o.a)("geometry is not supported")}}labelPointPolygon(e){const t=new a.Envelope2D;e.queryEnvelope(t);const n=(0,s.c)(null,t,!0).total();let r=null,m=e;if(e.hasNonLinearSegments()){const t=new i.a({copy:e}),s=(0,c.aj)(t,.25*n,n);(0,o.g)(s!==e),r=s,m=r}let P=0,d=0;for(let o=0,s=m.getPathCount();o<s;++o){const e=Math.abs(m.calculateRingArea2D(o));e>d&&(d=e,P=o)}const h=new u.P;if(Math.abs(d)<=2*n*n?h.setNAN():h.assign((0,l.a)(m,P)),Number.isNaN(h.x)){const e=new a.Envelope2D;return m.queryPathEnvelope(P,e),new s.P({pt:e.getCenter()})}if(m.getPointCount()<4)return new s.P({x:h.x,y:h.y});const f=u.P.getNAN(),N=[f.clone(),f.clone(),f.clone(),f.clone()],x=[Number.NaN,Number.NaN,Number.NaN,Number.NaN],y=[Number.NaN,Number.NaN,Number.NaN,Number.NaN];let p=!1,b=(new g.O).getNearestCoordinate(m,h,!0,!1);if(0===b.m_distance&&(p=!0,N[0]=h,b=(new g.O).getNearestCoordinate(m,h,!1,!1),b.m_distance>.25*t.minDimension()*1.66666666))return new s.P({x:h.x,y:h.y});x[0]=b.m_distance,y[0]=0;const S=new u.P;let w=!1,C=.25,D=-1;const G=new a.Envelope2D;m.queryPathEnvelope(P,G);do{let e=Number.NaN;if(N[1]=this.calculateParacentroid_(m,(0,u.q)(G.xmin,G.xmax,C),n),N[1].isNAN()||(b=(new g.O).getNearestCoordinate(m,N[1],!1,!1),e=b.m_distance),e>n&&1===(0,c.h)(m,N[1],n))w=!0,x[1]=e,y[1]=u.P.sqrDistance(N[1],h);else if(e>D&&(D=e,S.setCoordsPoint2D(N[1])),C-=.01,C<.1){if(!(D>=0))break;w=!0,x[1]=D,N[1]=S,y[1]=u.P.sqrDistance(N[1],h)}}while(!w);w=!1,C=.5,D=-1;let E=.01,_=1;do{let e=Number.NaN;if(N[2]=this.calculateParacentroid_(m,(0,u.q)(G.xmin,G.xmax,C),n),N[2].isNAN()||(b=(new g.O).getNearestCoordinate(m,N[2],!1,!1),e=b.m_distance),e>n&&1===(0,c.h)(m,N[2],n))w=!0,x[2]=e,y[2]=u.P.sqrDistance(N[2],h);else if(e>D&&(D=e,S.setCoordsPoint2D(N[2])),C=.5+E*_,E+=.01,_*=-1,C<.3||C>.7){if(!(D>=0))break;w=!0,x[2]=D,N[2]=S,y[2]=u.P.sqrDistance(N[2],h)}}while(!w);w=!1,C=.75,D=-1;do{let e=Number.NaN;if(N[3]=this.calculateParacentroid_(m,(0,u.q)(G.xmin,G.xmax,C),n),N[3].isNAN()||(b=(new g.O).getNearestCoordinate(m,N[3],!1,!1),e=b.m_distance),e>n&&1===(0,c.h)(m,N[3],n))w=!0,x[3]=e,y[3]=u.P.sqrDistance(N[3],h);else if(e>D&&(D=e,S.setCoordsPoint2D(N[3])),C+=.01,C>.9){if(!(D>=0))break;w=!0,x[3]=D,N[3]=S,y[3]=u.P.sqrDistance(N[3],h)}}while(!w);const v=[0,1,2,3],T=p?0:1;for(let o=T;o<4;o++)for(let e=T;e<3;e++){const t=y[e],n=y[e+1];if((0,u.r)(t,n)>0){const r=v[e];v[e]=v[e+1],v[e+1]=r,y[e]=n,y[e+1]=t}}let A=T,q=0,R=0;for(let o=T;o<4;o++){switch(o){case 0:R=2*x[v[o]];break;case 1:R=1.66666666*x[v[o]];break;case 2:R=1.33333333*x[v[o]];break;case 3:R=x[v[o]]}R>q&&(q=R,A=v[o])}return(0,o.g)(!N[A].isNAN()),new s.P({x:N[A].x,y:N[A].y})}labelPointPolyline(e){const t=new u.P;if(e.getPointCount()>2*e.getPathCount()){let n=-1,r=-Number.MAX_VALUE;for(let t=0,a=e.getPathCount();t<a;t++)if(e.getPathSize(t)>2){const o=e.calculatePathLength2D(t);o>r&&(r=o,n=t)}const o=e.getPathStart(n),s=e.getPathEnd(n),i=Math.trunc((o+s)/2);t.assign(e.getXY(i))}else{let n=-Number.MAX_VALUE;const r=e.querySegmentIterator();for(;r.nextPath();)if(r.hasNextSegment()){const e=r.nextSegment(),o=e.calculateLength2D();o>n&&(n=o,t.assign(e.getCoord2D(e.lengthToT(.5*o))))}}return new s.P({x:t.x,y:t.y})}labelPointMultiPoint(e){const t=new a.Envelope2D;e.queryEnvelope(t);const n=t.getCenter(),r=(new g.O).getNearestCoordinate(e,n,!1,!1).m_coordinate;return new s.P({x:r.x,y:r.y})}labelPointEnvelope(e){const t=e.getCenterXY();return new s.P({x:t.x,y:t.y})}calculateParacentroid_(e,t,n){const r=new a.Envelope2D;e.queryEnvelope(r);const s=new u.P(t,0);let c=Number.MAX_VALUE,l=Number.MAX_VALUE,g=!1,m=!1;const P=new i.L;P.setStartXYCoords(s.x,r.ymin-1),P.setEndXYCoords(s.x,r.ymax+1);const d=new a.Envelope2D,h=new u.P,f=new u.P,N=(0,u.m)(u.P,2),x=e.querySegmentIterator();for(;x.nextPath();)for(;x.hasNextSegment();){const e=x.nextSegment();if(e.queryEnvelope(d),(0,o.g)(e.isMonotoneQuickAndDirty()),h.setCoordsPoint2D(P.getStartXY()),f.setCoordsPoint2D(P.getEndXY()),0===d.clipLine(h,f))continue;if(1!==P.intersect(e,N,null,null,n))continue;const t=N[0].y;c>l?t<c&&(c=t,g=!0):t<l&&(l=t,m=!0)}return g&&m?s.y=(c+l)/2:s.setNAN(),s}}const P=new class{getOperatorType(){return 10203}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}executeMany(e,t){return new m(e,t)}execute(e,t){return new m(null,t).labelPoint(e)}};function d(e){return P.execute(e,null)}function h(e){const t=P.executeMany(new r.S(e),null);return Array.from(t)}function f(){return P.supportsCurves()}}}]);
//# sourceMappingURL=135.0728a300.chunk.js.map