"use strict";(globalThis.webpackChunkmy_app=globalThis.webpackChunkmy_app||[]).push([[22475],{75941:(e,t,r)=>{r.d(t,{O:()=>i});class i{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get outerSize(){return this._outer.size}get(e,t){return this._outer.get(e)?.get(t)}getInner(e){return this._outer.get(e)}set(e,t,r){const i=this._outer.get(e);i?i.set(t,r):this._outer.set(e,new Map([[t,r]]))}delete(e,t){const r=this._outer.get(e);r&&(r.delete(t),0===r.size&&this._outer.delete(e))}forEach(e){this._outer.forEach(((t,r)=>e(t,r)))}forAll(e){this._outer.forEach(((t,r)=>t.forEach(((t,i)=>e(t,r,i)))))}}},22475:(e,t,r)=>{r.r(t),r.d(t,{BufferObject:()=>i.g,FramebufferObject:()=>s.H,Program:()=>n.B,ProgramCache:()=>h.J,Renderbuffer:()=>o.l,ShaderCompiler:()=>c.Z,Texture:()=>a.g,VertexArrayObject:()=>u.Z,createProgram:()=>f.r,glslifyDefineMap:()=>l.I});var i=r(76718),s=r(12331),n=r(44488),h=r(46082),o=r(62881),c=r(78403),a=r(29492),u=r(36911),l=r(2086),f=r(26373)},12331:(e,t,r)=>{r.d(t,{H:()=>l});r(81806);var i=r(76460),s=r(30726),n=r(76718),h=r(61678),o=r(93345),c=r(78331),a=r(62881),u=r(29492);class l{constructor(e,t,r){if(this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(o.vt.FramebufferObject,this),null!=t){const r=f(t)?t:new u.g(e,t);this._colorAttachments.set(o.r6,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(o.r6)}if(null!=r)if(function(e){return f(e)||function(e){return _(e)===c.d.TextureDescriptor}(e)}(r))this._depthStencilTexture=f(r)?r:new u.g(e,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function(e){return _(e)===c.d.Renderbuffer}(r)?r:new a.l(e,r);this._depthStencilBuffer=t,this._validateRenderbufferDescriptor(t.descriptor)}}dispose(){const{_colorAttachments:e,_glName:t}=this;if(0===e.size&&!this._depthStencilBuffer&&!this._depthStencilTexture&&!t)return;const{_context:r}=this,i=r.getBoundFramebufferObject();e.forEach(((e,t)=>this.detachColorTexture(t)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),r.gl.deleteFramebuffer(t),this._glName=null,r.bindFramebuffer(i===this?null:i),r.instanceCounter.decrement(o.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(o.r6)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const e=this._colorAttachments.get(o.r6)??this._depthStencilTexture??this._depthStencilBuffer;return e?.descriptor?.width??0}get height(){const e=this._colorAttachments.get(o.r6)??this._depthStencilTexture??this._depthStencilBuffer;return e?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((e,[t,r])=>e+r.usedMemory),this.depthStencil?.usedMemory??0)}static{this._MAX_COLOR_ATTACHMENTS=-1}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&f(t)?t:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(e,t=o.r6){if(!e)return;this._validateColorAttachmentPoint(t);const{descriptor:r}=e;this._validateTextureDescriptor(r),this.detachColorTexture(t)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=o.r6){const t=this._colorAttachments.get(e);if(t)return this._initialized&&this._context.temporaryBindFramebufferObject(this,(()=>{this._framebufferTexture2D(null,e)})),this._colorAttachments.delete(e),t}setColorTextureTarget(e,t=o.r6,r=0){const i=this._colorAttachments.get(t);i&&(e===o.Ap.TEXTURE_2D_ARRAY?this._framebufferTextureLayer(i.glName,t,o.R.FRAMEBUFFER,0,r):this._framebufferTexture2D(i.glName,t,e,o.R.FRAMEBUFFER,0))}attachDepthStencil(e){if(e)switch(e.type){case c.d.Texture:return this._attachDepthStencilTexture(e);case c.d.Renderbuffer:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){if(null==e)return;const{descriptor:t}=e,{pixelFormat:r,dataType:i}=t;r===o.j7.DEPTH_STENCIL||r===o.j7.DEPTH_COMPONENT?r!==o.j7.DEPTH_STENCIL||i===o.ld.UNSIGNED_INT_24_8?r!==o.j7.DEPTH_COMPONENT||i===o.ld.UNSIGNED_INT||i===o.ld.UNSIGNED_SHORT?(this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,p(r))),this._depthStencilTexture?.dispose(),this._depthStencilTexture=e):console.error("Depth texture must have data type of UNSIGNED_INT or UNSIGNED_SHORT!"):console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"):console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!")}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&this._context.temporaryBindFramebufferObject(this,(()=>{this._framebufferTexture2D(null,p(e.descriptor.pixelFormat))})),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){if(null==e)return;const t=e.descriptor;if(this._validateRenderbufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const{gl:r}=this._context,i=this._getGLAttachmentPoint(t);r.framebufferRenderbuffer(o.R.FRAMEBUFFER,i,r.RENDERBUFFER,e.glName)}this._depthStencilBuffer=e}detachDepthStencilBuffer(){const e=this._depthStencilBuffer;if(e&&this._initialized){const{_context:t}=this,r=t.getBoundFramebufferObject();t.bindFramebuffer(this);const{gl:i}=t,s=this._getGLAttachmentPoint(e.descriptor);i.framebufferRenderbuffer(o.R.FRAMEBUFFER,s,i.RENDERBUFFER,null),t.bindFramebuffer(r)}return this._depthStencilBuffer=null,e}invalidateAttachments(e){const{_context:t}=this;t.temporaryBindFramebufferObject(this,(()=>t.gl.invalidateFramebuffer(o.R.FRAMEBUFFER,e)),!0)}copyToTexture(e,t,r,i,s,n,h){(e<0||t<0||s<0||n<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const c=h.descriptor;h.descriptor.target!==o.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==c?.width||null==c?.height||e+r>this.width||t+i>this.height||s+r>c.width||n+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const a=this._context,l=a.bindTexture(h,u.g.TEXTURE_UNIT_FOR_UPDATES);a.setActiveTexture(u.g.TEXTURE_UNIT_FOR_UPDATES),a.bindFramebuffer(this),a.gl.copyTexSubImage2D(o.Ap.TEXTURE_2D,0,s,n,e,t,r,i),a.bindTexture(l,u.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,r,i,s,n,h){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,r,i,s,n,h)}async readPixelsAsync(e,t,r,i,s,h,c){const{gl:a}=this._context,u=n.g.createPixelPack(this._context,o._U.STREAM_READ,c.byteLength);this._context.bindBuffer(u);const l=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),a.readPixels(e,t,r,i,s,h,0),this._context.unbindBuffer(o.NZ.PIXEL_PACK_BUFFER),this._context.bindFramebuffer(l),await u.getSubDataAsync(c),u.dispose()}resize(e,t){if(this.width===e&&this.height===t)return;const r={width:e,height:t};d(r,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((e=>e.resize(r.width,r.height))),this._depthStencilTexture?.resize(r.width,r.height),this._initialized&&(d(r,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(r.width,r.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=o.R.FRAMEBUFFER){const{gl:t}=this._context;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const r=t.createFramebuffer();if(t.bindFramebuffer(e,r),this._colorAttachments.forEach(((t,r)=>{const i=m(t);i===o.Ap.TEXTURE_2D_ARRAY?this._framebufferTextureLayer(t.glName,r,e,0,0):this._framebufferTexture2D(t.glName,r,i,e)})),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e,r,t.RENDERBUFFER,this._depthStencilBuffer.glName)}else if(this._depthStencilTexture){const t=p(this._depthStencilTexture.descriptor.pixelFormat);this._framebufferTexture2D(this._depthStencilTexture.glName,t,m(this._depthStencilTexture),e)}(0,h.en)()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(e,t=o.r6,r=o.Ap.TEXTURE_2D,i=o.R.FRAMEBUFFER,s=0){this._context.gl.framebufferTexture2D(i,t,r,e,s)}_framebufferTextureLayer(e,t=o.r6,r=o.R.FRAMEBUFFER,i=0,s=0){this._context.gl.framebufferTextureLayer(r,t,e,i,s)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(o.R.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthStencilBuffer=(0,s.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,p(this._depthStencilTexture.descriptor.pixelFormat))),this._depthStencilTexture=(0,s.WD)(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==o.Ap.TEXTURE_2D&&e.target!==o.Ap.TEXTURE_CUBE_MAP&&e.target!==o.Ap.TEXTURE_2D_ARRAY&&console.error("Texture type must be TEXTURE_2D, TEXTURE_2D_ARRAY or TEXTURE_CUBE_MAP!"),d(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderbufferDescriptor(e){d(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case o.SB.DEPTH_COMPONENT16:case o.SB.DEPTH_COMPONENT24:case o.SB.DEPTH_COMPONENT32F:return o.xL;case o.iE.DEPTH24_STENCIL8:case o.iE.DEPTH32F_STENCIL8:return o.nI;case o.Xo.STENCIL_INDEX8:return o.uH}}_validateColorAttachmentPoint(e){if(-1===l._MAX_COLOR_ATTACHMENTS){const{gl:e}=this._context;l._MAX_COLOR_ATTACHMENTS=e.getParameter(e.MAX_COLOR_ATTACHMENTS)}const t=e-o.r6;t+1>l._MAX_COLOR_ATTACHMENTS&&i.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${l._MAX_COLOR_ATTACHMENTS} color attachments`)}}function f(e){return _(e)===c.d.Texture}function _(e){return null!=e&&"type"in e?e.type:null}function d(e,t){const r=Math.max(e.width,e.height);if(r>t){i.A.getLogger("esri.views.webgl.FramebufferObject").warnOnce(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);const s=t/r;return e.width=Math.round(e.width*s),e.height=Math.round(e.height*s),!1}return!0}function m(e){return e.descriptor.target===o.Ap.TEXTURE_CUBE_MAP?o.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:e.descriptor.target===o.Ap.TEXTURE_2D_ARRAY?o.Ap.TEXTURE_2D_ARRAY:o.Ap.TEXTURE_2D}function p(e){return e===o.j7.DEPTH_COMPONENT?o.xL:o.nI}},46082:(e,t,r)=>{r.d(t,{J:()=>n});r(81806);var i=r(75941),s=r(44488);class n{constructor(e){this._rctx=e,this._store=new i.O}dispose(){this._store.forAll((e=>e.dispose())),this._store.clear()}acquire(e,t,r,i){const n=this._store.get(e,t);if(null!=n)return n.ref(),n;const h=new s.B(this._rctx,e,t,r,i);return h.ref(),this._store.set(e,t,h),h}get test(){}}},62881:(e,t,r)=>{r.d(t,{l:()=>h});var i=r(93345),s=r(78331),n=r(88800);class h{constructor(e,t){this._context=e,this._descriptor=t,this.type=s.d.Renderbuffer,this._context.instanceCounter.increment(i.vt.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:n,height:h,internalFormat:o,multisampled:c}=t;c?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,o,n,h):r.renderbufferStorage(r.RENDERBUFFER,o,n,h),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}get usedMemory(){return(0,n.e)(this._descriptor)}resize(e,t){const r=this._descriptor;if(r.width===e&&r.height===t)return;r.width=e,r.height=t;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(i.vt.Renderbuffer,this),this._context=null)}}},88800:(e,t,r)=>{r.d(t,{e:()=>n,q:()=>s});var i=r(27207);class s{constructor(e,t=0,r=t){this.internalFormat=e,this.width=t,this.height=r,this.multisampled=!1,this.samples=1}}function n(e){return e.width<=0||e.height<=0||null==e.internalFormat?0:e.width*e.height*(0,i.IB)(e.internalFormat)}},2086:(e,t,r)=>{function i(e){const{options:t,value:r}=e;return"number"==typeof t[r]}function s(e){let t="";for(const r in e){const s=e[r];if("boolean"==typeof s)s&&(t+=`#define ${r}\n`);else if("number"==typeof s)t+=`#define ${r} ${s.toFixed()}\n`;else if("object"==typeof s)if(i(s)){const{value:e,options:i,namespace:n}=s,h=n?`${n}_`:"";for(const r in i)t+=`#define ${h}${r} ${i[r].toFixed()}\n`;t+=`#define ${r} ${h}${e}\n`}else{const e=s.options;let i=0;for(const r in e)t+=`#define ${e[r]} ${(i++).toFixed()}\n`;t+=`#define ${r} ${e[s.value]}\n`}}return t}r.d(t,{I:()=>s})}}]);
//# sourceMappingURL=22475.128e920a.chunk.js.map