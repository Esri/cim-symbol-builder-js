{"version":3,"file":"static/js/2780.1e7864c8.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/tile-select/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/tile-select/tile-select.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tile-select/tile-select.scss?tag=calcite-tile-select&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/tile-select-group/tile-select-group.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/tile-select-group/tile-select-group.scss?tag=calcite-tile-select-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/guid.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/logger.ts"],"sourcesContent":["export const CSS = {\n  checked: \"checked\",\n  description: \"description\",\n  descriptionOnly: \"description-only\",\n  disabled: \"disabled\",\n  heading: \"heading\",\n  headingOnly: \"heading-only\",\n  icon: \"icon\",\n  iconOnly: \"icon-only\",\n  inputAlignmentEnd: \"input-alignment-end\",\n  inputAlignmentStart: \"input-alignment-start\",\n  inputEnabled: \"input-enabled\",\n  largeVisual: \"large-visual\",\n  tile: \"tile\",\n  tileContentContainer: \"tile-content-container\",\n  tileContent: \"tile-content\",\n  tileDescription: \"tile-description\",\n  tileHeading: \"tile-heading\",\n  tileLargeVisual: \"tile--large-visual\",\n  widthAuto: \"width-auto\",\n  widthFull: \"width-full\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Alignment, Width } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { logger } from \"../../utils/logger\";\nimport { TileSelectType } from \"./interfaces\";\nimport { CSS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"tile-select\",\n  removalVersion: 4,\n  suggested: [\"tile\", \"tile-group\"],\n});\n\n/**\n * @deprecated Use the `calcite-tile` component instead.\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-tile-select\",\n  styleUrl: \"tile-select.scss\",\n  shadow: true,\n})\nexport class TileSelect implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  @Watch(\"checked\")\n  checkedChanged(newChecked: boolean): void {\n    this.input.checked = newChecked;\n  }\n\n  /** A description for the component, which displays below the heading. */\n  @Prop({ reflect: true }) description: string;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** The component header text, which displays between the icon and description. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the name of the component on form submission. */\n  @Prop({ reflect: true }) name;\n\n  @Watch(\"name\")\n  nameChanged(newName: string): void {\n    this.input.name = newName;\n  }\n\n  /** When `true`, displays an interactive input based on the `type` property. */\n  @Prop({ reflect: true }) inputEnabled = false;\n\n  /** When `inputEnabled` is `true`, specifies the placement of the interactive input on the component. */\n  @Prop({ reflect: true }) inputAlignment: Extract<\"end\" | \"start\", Alignment> = \"start\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"radio\"` is for single selection, and\n   *\n   * `\"checkbox\"` is for multiple selections.\n   */\n  @Prop({ reflect: true }) type: TileSelectType = \"radio\";\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) width: Extract<\"auto\" | \"full\", Width> = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileSelectElement;\n\n  private input: HTMLCalciteCheckboxElement | HTMLCalciteRadioButtonElement;\n\n  guid = `calcite-tile-select-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  /** The focused state of the tile-select. */\n  @State() focused = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits a custom change event.\n   *\n   * For checkboxes it emits when checked or unchecked.\n   *\n   * For radios it only emits when checked.\n   */\n  @Event({ cancelable: false }) calciteTileSelectChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return this.input?.setFocus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteCheckboxChange\")\n  checkboxChangeHandler(event: CustomEvent): void {\n    const checkbox = event.target as HTMLCalciteCheckboxElement;\n    if (checkbox === this.input) {\n      this.checked = checkbox.checked;\n    }\n    event.stopPropagation();\n    this.calciteTileSelectChange.emit();\n  }\n\n  @Listen(\"calciteInternalCheckboxFocus\")\n  @Listen(\"calciteInternalCheckboxBlur\")\n  checkboxFocusBlurHandler(event: CustomEvent): void {\n    const checkbox = event.target as HTMLCalciteCheckboxElement;\n    if (checkbox === this.input) {\n      this.focused = event.detail;\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteRadioButtonChange\")\n  radioButtonChangeHandler(event: CustomEvent): void {\n    const radioButton = event.target as HTMLCalciteRadioButtonElement;\n    if (radioButton === this.input) {\n      this.checked = radioButton.checked;\n    }\n    event.stopPropagation();\n    this.calciteTileSelectChange.emit();\n  }\n\n  @Listen(\"calciteInternalRadioButtonCheckedChange\")\n  radioButtonCheckedChangeHandler(event: CustomEvent): void {\n    const radioButton = event.target as HTMLCalciteRadioButtonElement;\n    if (radioButton === this.input) {\n      this.checked = radioButton.checked;\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalRadioButtonFocus\")\n  @Listen(\"calciteInternalRadioButtonBlur\")\n  radioButtonFocusBlurHandler(event: CustomEvent): void {\n    const radioButton = event.target as HTMLCalciteRadioButtonElement;\n    if (radioButton === this.input) {\n      this.focused = radioButton.focused;\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"click\")\n  clickHandler(event: MouseEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const target = event.target as HTMLElement;\n    const targets = [\"calcite-tile\", \"calcite-tile-select\"];\n    if (targets.includes(target.localName)) {\n      this.input.click();\n    }\n  }\n\n  @Listen(\"pointerenter\")\n  pointerEnterHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const { localName } = this.input;\n\n    if (localName === \"calcite-radio-button\" || localName === \"calcite-checkbox\") {\n      this.input.hovered = true;\n    }\n  }\n\n  @Listen(\"pointerleave\")\n  pointerLeaveHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const { localName } = this.input;\n\n    if (localName === \"calcite-radio-button\" || localName === \"calcite-checkbox\") {\n      this.input.hovered = false;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.renderInput();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.input.parentNode.removeChild(this.input);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderInput(): void {\n    this.input =\n      this.type === \"radio\"\n        ? /* we need to call createElement(x) separately to ensure supporting components are properly bundled */\n          document.createElement(\"calcite-radio-button\")\n        : document.createElement(\"calcite-checkbox\");\n    this.input.checked = this.checked;\n    this.input.disabled = this.disabled;\n    this.input.hidden = this.el.hidden;\n    this.input.id = this.guid;\n    this.input.label = this.heading || this.name || \"\";\n\n    if (this.name) {\n      this.input.name = this.name;\n    }\n\n    if (this.value) {\n      this.input.value = this.value != null ? this.value.toString() : \"\";\n    }\n\n    this.el.insertAdjacentElement(\"beforeend\", this.input);\n  }\n\n  render(): VNode {\n    const {\n      checked,\n      description,\n      disabled,\n      focused,\n      heading,\n      icon,\n      inputAlignment,\n      inputEnabled,\n      width,\n      iconFlipRtl,\n    } = this;\n    const isLargeVisual = heading && icon && !description;\n    const renderIcon = Boolean(icon);\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div\n          class={{\n            checked,\n            container: true,\n            [CSS.description]: Boolean(description),\n            [CSS.descriptionOnly]: Boolean(!heading && !icon && description),\n            disabled,\n            focused,\n            [CSS.heading]: Boolean(heading),\n            [CSS.headingOnly]: heading && !icon && !description,\n            [CSS.icon]: renderIcon,\n            [CSS.iconOnly]: !heading && icon && !description,\n            [CSS.inputAlignmentEnd]: inputAlignment === \"end\",\n            [CSS.inputAlignmentStart]: inputAlignment === \"start\",\n            [CSS.inputEnabled]: inputEnabled,\n            [CSS.largeVisual]: isLargeVisual,\n            [CSS.widthAuto]: width === \"auto\",\n            [CSS.widthFull]: width === \"full\",\n          }}\n        >\n          <div class={{ [CSS.tile]: true, [CSS.tileLargeVisual]: isLargeVisual }}>\n            {icon && (\n              <div class={{ [CSS.icon]: renderIcon }}>\n                <calcite-icon flipRtl={iconFlipRtl} icon={icon} scale=\"l\" />\n              </div>\n            )}\n            <div class={CSS.tileContentContainer}>\n              <div class={CSS.tileContent}>\n                {heading && <div class={CSS.tileHeading}>{heading}</div>}\n                {description && <div class={CSS.tileDescription}>{description}</div>}\n              </div>\n            </div>\n          </div>\n          <slot />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n","$spacing: $baseline * 0.5;\n\n:host {\n  @apply block;\n\n  .container {\n    background-color: var(--calcite-color-foreground-1);\n    box-shadow: 0 0 0 1px var(--calcite-color-border-2);\n    box-sizing: border-box;\n    cursor: pointer;\n    display: inline-block;\n    block-size: 100%;\n    max-inline-size: 300px;\n    padding: $spacing;\n    position: relative;\n    vertical-align: top;\n    @apply transition-default;\n\n    &.checked {\n      @apply z-default;\n      box-shadow: 0 0 0 1px var(--calcite-color-brand);\n    }\n\n    &.heading-only {\n      align-items: center;\n    }\n\n    &:not(.input-enabled) {\n      ::slotted(calcite-checkbox),\n      ::slotted(calcite-radio-button) {\n        @apply sr-only;\n      }\n    }\n\n    &.focused {\n      @apply focus-base;\n      &:not(.disabled) {\n        &:not(.input-enabled) {\n          @apply focus-inset;\n          outline-offset: -4px;\n          box-shadow:\n            0 0 0 1px var(--calcite-color-brand),\n            inset 0 0 0 2px var(--calcite-color-foreground-1);\n        }\n      }\n    }\n\n    &.input-enabled {\n      &.input-alignment-start {\n        &.width-auto {\n          &.heading-only,\n          &.icon-only,\n          &.description-only,\n          &.heading.description,\n          &.icon.description,\n          &.heading.icon.description {\n            display: inline-grid;\n            grid-template-columns: max-content 1fr;\n          }\n        }\n        &.heading-only,\n        &.icon-only,\n        &.description-only,\n        &.heading.description,\n        &.icon.description,\n        &.heading.icon.description {\n          gap: $spacing;\n        }\n        .tile {\n          @apply order-1;\n        }\n        &.large-visual {\n          ::slotted(calcite-checkbox),\n          ::slotted(calcite-radio-button) {\n            position: absolute;\n            inset-block-start: $spacing;\n            inset-inline-start: $spacing;\n          }\n        }\n      }\n      &.input-alignment-end {\n        &.width-auto {\n          &.heading-only,\n          &.icon-only {\n            display: inline-grid;\n            grid-gap: $spacing;\n            grid-template-columns: max-content 1fr;\n          }\n        }\n        &.heading-only,\n        &.icon-only {\n          gap: $spacing;\n        }\n        &.description-only,\n        &.heading.description,\n        &.icon.description,\n        &.heading.icon.description {\n          ::slotted(calcite-checkbox),\n          ::slotted(calcite-radio-button) {\n            position: absolute;\n            inset-block-start: $spacing;\n            inset-inline-end: $spacing;\n          }\n        }\n        &.large-visual {\n          ::slotted(calcite-checkbox),\n          ::slotted(calcite-radio-button) {\n            position: absolute;\n            inset-block-start: $spacing;\n            inset-inline-end: $spacing;\n          }\n        }\n      }\n    }\n\n    &.width-full {\n      @apply flex max-w-none;\n      .tile {\n        @apply flex-auto;\n      }\n    }\n  }\n}\n\n.tile {\n  @apply bg-foreground-1\n    box-border\n    duration-150\n    ease-in-out\n    flex\n    flex-col\n    gap-2\n    pointer-events-none\n    select-none\n    text-color-3;\n}\n\n.tile-content-container {\n  @apply flex\n    focus-base\n    items-stretch\n    p-0\n    text-color-2\n    w-full;\n}\n\n.tile-content {\n  @apply flex\n    flex-auto\n    flex-col\n    gap-2;\n  // set width handles slotted content and heading word wrap\n  inline-size: 10%;\n}\n\n.tile-heading {\n  @apply break-words\n    duration-150\n    ease-in-out\n    font-medium\n    pointer-events-none\n    text-color-2\n    text-n1-wrap;\n}\n\n.tile-description {\n  @apply break-words\n    duration-150\n    ease-in-out\n    pointer-events-none\n    text-color-3\n    text-n2-wrap;\n}\n\n.tile--large-visual {\n  @apply grid justify-center\n    text-center;\n  min-block-size: theme(\"spacing.48\");\n  .icon {\n    @apply self-end;\n  }\n  calcite-icon {\n    block-size: 64px;\n    inline-size: 64px;\n  }\n  .tile-content-container {\n    @apply self-center;\n  }\n}\n\n:host(:hover) {\n  .container {\n    &:not(.input-enabled) {\n      box-shadow: 0 0 0 1px var(--calcite-color-brand);\n    }\n  }\n}\n\n:host(:hover),\n.checked {\n  .tile-heading {\n    @apply text-color-1;\n  }\n  .tile-description {\n    @apply text-color-2;\n  }\n}\n\n@include disabled();\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { logger } from \"../../utils/logger\";\nimport { TileSelectGroupLayout } from \"./interfaces\";\n\nlogger.deprecated(\"component\", {\n  name: \"tile-select-group\",\n  removalVersion: 4,\n  suggested: [\"tile\", \"tile-group\"],\n});\n\n/**\n * @deprecated Use the `calcite-tile-group` component instead.\n * @slot - A slot for adding `calcite-tile-select` elements.\n */\n@Component({\n  tag: \"calcite-tile-select-group\",\n  styleUrl: \"tile-select-group.scss\",\n  shadow: true,\n})\nexport class TileSelectGroup implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Defines the layout of the component.\n   *\n   * Use `\"horizontal\"` for rows, and `\"vertical\"` for a single column.\n   */\n  @Prop({ reflect: true }) layout: TileSelectGroupLayout = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileSelectGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <slot />\n      </InteractiveContainer>\n    );\n  }\n}\n",":host {\n  @apply flex flex-wrap;\n  ::slotted(calcite-tile-select) {\n    @apply mb-px;\n    margin-inline-end: theme(\"spacing.px\");\n  }\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n}\n\n@include disabled();\n@include base-component();\n","function gen(counts: number[]): string {\n  return counts\n    .map((count) => {\n      let out = \"\";\n      for (let i = 0; i < count; i++) {\n        out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n      }\n      return out;\n    })\n    .join(\"-\");\n}\n\nexport const guid = (): string => gen([2, 1, 1, 1, 3]);\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import type { JSX } from \"../components\";\nimport { logLevel } from \"./config\";\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"trace\" | \"off\";\n\ntype Message = string;\ntype MajorVersion = number;\n\ntype DeprecatedContext = \"component\" | \"property\" | \"method\" | \"event\" | \"slot\";\n\ntype DeprecatedParams = {\n  name: string;\n  suggested?: string | string[];\n  component?: string;\n  removalVersion: MajorVersion | \"future\";\n};\n\ntype SimpleComponentName<T> = T extends `calcite-${infer Name}` ? Name : T;\n\ntype ComponentDeprecatedParams = Omit<DeprecatedParams, \"name\"> & {\n  name: SimpleComponentName<keyof JSX.IntrinsicElements>;\n};\n\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set<string>();\n\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10,\n} as const;\n\nfunction willLog(level: LogLevel): boolean {\n  return logLevels[level] >= logLevels[logLevel];\n}\n\nfunction forwardToConsole(level: LogLevel, ...data: any[]): void {\n  if (!willLog(level)) {\n    return;\n  }\n\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\n\nlet listFormatter: Intl.ListFormat;\n\nexport const logger = {\n  debug: (message: Message) => forwardToConsole(\"debug\", message),\n  info: (message: Message) => forwardToConsole(\"info\", message),\n  warn: (message: Message) => forwardToConsole(\"warn\", message),\n  error: (message: Message) => forwardToConsole(\"error\", message),\n  trace: (message: Message) => forwardToConsole(\"trace\", message),\n\n  deprecated,\n} as const;\n\n/**\n * Logs a deprecation warning to the console.\n *\n * @param context the context in which the deprecation is occurring\n * @param params the deprecation details\n */\nfunction deprecated(context: Exclude<DeprecatedContext, \"component\">, params: DeprecatedParams): void;\nfunction deprecated(context: Extract<DeprecatedContext, \"component\">, params: ComponentDeprecatedParams): void;\nfunction deprecated(\n  context: DeprecatedContext,\n  { component, name, suggested, removalVersion }: DeprecatedParams | ComponentDeprecatedParams,\n): void {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n\n  loggedDeprecations.add(key);\n\n  const multiSuggestions = Array.isArray(suggested);\n\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n\n  forwardToConsole(\"warn\", message);\n}\n"],"names":["CSS","logger","deprecated","name","removalVersion","suggested","TileSelect","guid","checkedChanged","newChecked","this","input","checked","nameChanged","newName","setFocus","componentFocusable","checkboxChangeHandler","event","checkbox","target","stopPropagation","calciteTileSelectChange","emit","checkboxFocusBlurHandler","focused","detail","radioButtonChangeHandler","radioButton","radioButtonCheckedChangeHandler","radioButtonFocusBlurHandler","clickHandler","disabled","includes","localName","click","pointerEnterHandler","hovered","pointerLeaveHandler","connectedCallback","renderInput","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","parentNode","removeChild","componentDidRender","updateHostInteraction","type","document","createElement","hidden","el","id","label","heading","value","toString","insertAdjacentElement","render","description","icon","inputAlignment","inputEnabled","width","iconFlipRtl","isLargeVisual","renderIcon","Boolean","h","InteractiveContainer","key","class","container","flipRtl","scale","TileSelectGroup","map","count","out","i","Math","random","substring","join","interceptedClick","HTMLElement","prototype","call","onPointerDown","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","requestAnimationFrame","loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","forwardToConsole","level","data","logLevel","willLog","console","listFormatter","message","context","has","add","multiSuggestions","Array","isArray","Intl","ListFormat","style","format","suggestion"],"sourceRoot":""}