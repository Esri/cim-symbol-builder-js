{"version":3,"file":"static/js/4529.4f7fda68.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/dropdown/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/dropdown/dropdown.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/dropdown/dropdown.scss?tag=calcite-dropdown&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/key.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["export const SLOTS = {\n  dropdownTrigger: \"trigger\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusElement,\n  focusElementInGroup,\n  focusFirstTabbable,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingUIComponent,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { RequestedItem } from \"../dropdown-group/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { ItemKeyboardEvent } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown-group` elements. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set.\n * @slot trigger - A slot for the element that triggers the `calcite-dropdown`.\n */\n@Component({\n  tag: \"calcite-dropdown\",\n  styleUrl: \"dropdown.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Dropdown\n  implements InteractiveComponent, LoadableComponent, OpenCloseComponent, FloatingUIComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, the component will remain open after a selection is made.\n   *\n   * If the `selectionMode` of the selected `calcite-dropdown-item`'s containing `calcite-dropdown-group` is `\"none\"`, the component will always close.\n   *\n   */\n  @Prop({ reflect: true }) closeOnSelectDisabled = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * Specifies the component's fallback `calcite-dropdown-item` `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the maximum number of `calcite-dropdown-item`s to display before showing a scroller.\n   * Value must be greater than `0`, and does not include `groupTitle`'s from `calcite-dropdown-group`.\n   */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the container element.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteDropdownItemElement[] = [];\n\n  /**\n   * Specifies the action to open the component from the container element.\n   */\n  @Prop({ reflect: true }) type: \"hover\" | \"click\" = \"click\";\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) widthScale: Scale;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n    this.updateGroupScale();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.referenceEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n    this.updateItems();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  render(): VNode {\n    const { open, guid } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class=\"calcite-trigger-container\"\n            id={`${guid}-menubutton`}\n            onClick={this.toggleDropdown}\n            onKeyDown={this.keyDownHandler}\n            ref={this.setReferenceEl}\n          >\n            <slot\n              aria-controls={`${guid}-menu`}\n              aria-expanded={toAriaBoolean(open)}\n              aria-haspopup=\"menu\"\n              name={SLOTS.dropdownTrigger}\n              onSlotchange={this.updateTriggers}\n            />\n          </div>\n          <div\n            aria-hidden={toAriaBoolean(!open)}\n            class=\"calcite-dropdown-wrapper\"\n            ref={this.setFloatingEl}\n          >\n            <div\n              aria-labelledby={`${guid}-menubutton`}\n              class={{\n                [\"calcite-dropdown-content\"]: true,\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: open,\n              }}\n              id={`${guid}-menu`}\n              ref={this.setScrollerAndTransitionEl}\n              role=\"menu\"\n            >\n              <slot onSlotchange={this.updateGroups} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when a `calcite-dropdown-item`'s selection changes. */\n  @Event({ cancelable: false }) calciteDropdownSelect: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteDropdownBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteDropdownOpen: EventEmitter<void>;\n\n  @Listen(\"click\", { target: \"window\" })\n  closeCalciteDropdownOnClick(event: PointerEvent): void {\n    if (this.disabled || !this.open || event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    this.closeCalciteDropdown(false);\n  }\n\n  @Listen(\"calciteInternalDropdownCloseRequest\")\n  closeCalciteDropdownOnEvent(event: Event): void {\n    this.closeCalciteDropdown();\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteDropdownOpen\", { target: \"window\" })\n  closeCalciteDropdownOnOpenEvent(event: Event): void {\n    if (event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"pointerenter\")\n  pointerEnterHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.toggleDropdown();\n  }\n\n  @Listen(\"pointerleave\")\n  pointerLeaveHandler(): void {\n    if (this.disabled || this.type !== \"hover\") {\n      return;\n    }\n\n    this.closeCalciteDropdown();\n  }\n\n  private getTraversableItems(): HTMLCalciteDropdownItemElement[] {\n    return this.items.filter((item) => !item.disabled && !item.hidden);\n  }\n\n  @Listen(\"calciteInternalDropdownItemKeyEvent\")\n  calciteInternalDropdownItemKeyEvent(event: CustomEvent<ItemKeyboardEvent>): void {\n    const { keyboardEvent } = event.detail;\n    const target = keyboardEvent.target as HTMLCalciteDropdownItemElement;\n    const traversableItems = this.getTraversableItems();\n\n    switch (keyboardEvent.key) {\n      case \"Tab\":\n        this.open = false;\n        this.updateTabIndexOfItems(target);\n        break;\n      case \"ArrowDown\":\n        focusElementInGroup(traversableItems, target, \"next\");\n        break;\n      case \"ArrowUp\":\n        focusElementInGroup(traversableItems, target, \"previous\");\n        break;\n      case \"Home\":\n        focusElementInGroup(traversableItems, target, \"first\");\n        break;\n      case \"End\":\n        focusElementInGroup(traversableItems, target, \"last\");\n        break;\n    }\n\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalDropdownItemSelect\")\n  handleItemSelect(event: CustomEvent<RequestedItem>): void {\n    this.updateSelectedItems();\n    event.stopPropagation();\n    this.calciteDropdownSelect.emit();\n    if (\n      !this.closeOnSelectDisabled ||\n      event.detail.requestedDropdownGroup.selectionMode === \"none\"\n    ) {\n      this.closeCalciteDropdown();\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownElement;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  private items: HTMLCalciteDropdownItemElement[] = [];\n\n  private groups: HTMLCalciteDropdownGroupElement[] = [];\n\n  /** trigger elements */\n  private triggers: HTMLElement[];\n\n  floatingEl: HTMLDivElement;\n\n  referenceEl: HTMLDivElement;\n\n  private scrollerEl: HTMLDivElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeObserverCallback(entries));\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  guid = `calcite-dropdown-${guid()}`;\n\n  private focusLastDropdownItem = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  updateTriggers = (event: Event): void => {\n    this.triggers = (event.target as HTMLSlotElement).assignedElements({\n      flatten: true,\n    }) as HTMLElement[];\n\n    this.reposition(true);\n  };\n\n  updateItems = (): void => {\n    this.items = this.groups\n      .map((group) => Array.from(group?.querySelectorAll(\"calcite-dropdown-item\")))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n    this.updateSelectedItems();\n\n    this.reposition(true);\n\n    this.items.forEach((item) => (item.scale = this.scale));\n  };\n\n  updateGroups = (event: Event): void => {\n    const groups = (event.target as HTMLSlotElement)\n      .assignedElements({ flatten: true })\n      .filter((el): el is HTMLCalciteDropdownGroupElement => el?.matches(\"calcite-dropdown-group\"));\n\n    this.groups = groups;\n\n    this.updateItems();\n    this.updateGroupScale();\n  };\n\n  private updateGroupScale(): void {\n    this.groups?.forEach((group) => (group.scale = this.scale));\n  }\n\n  resizeObserverCallback = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach((entry) => {\n      const { target } = entry;\n      if (target === this.referenceEl) {\n        this.setDropdownWidth();\n      } else if (target === this.scrollerEl) {\n        this.setMaxScrollerHeight();\n      }\n    });\n  };\n\n  setDropdownWidth = (): void => {\n    const { referenceEl, scrollerEl } = this;\n    const referenceElWidth = referenceEl?.clientWidth;\n\n    if (!referenceElWidth || !scrollerEl) {\n      return;\n    }\n\n    scrollerEl.style.minWidth = `${referenceElWidth}px`;\n  };\n\n  setMaxScrollerHeight = (): void => {\n    const { scrollerEl } = this;\n    if (!scrollerEl) {\n      return;\n    }\n\n    this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    this.reposition(true);\n  };\n\n  setScrollerAndTransitionEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.scrollerEl = el;\n\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.calciteDropdownBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteDropdownOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteDropdownBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteDropdownClose.emit();\n  }\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    this.resizeObserver.observe(el);\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (!event.composedPath().includes(this.referenceEl)) {\n      return;\n    }\n\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.closeCalciteDropdown();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.open && event.shiftKey && key === \"Tab\") {\n      this.closeCalciteDropdown();\n      event.preventDefault();\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      this.toggleDropdown();\n      event.preventDefault();\n    } else if (key === \"ArrowDown\" || key === \"ArrowUp\") {\n      this.focusLastDropdownItem = key === \"ArrowUp\";\n      this.open = true;\n      this.el.addEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n    }\n  };\n\n  private updateSelectedItems(): void {\n    this.selectedItems = this.items.filter((item) => item.selected);\n  }\n\n  private getMaxScrollerHeight(): number {\n    const { maxItems, items } = this;\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n    let groupHeaderHeight: number;\n\n    this.groups.forEach((group) => {\n      if (maxItems > 0 && itemsToProcess < maxItems) {\n        Array.from(group.children).forEach((item: HTMLCalciteDropdownItemElement, index) => {\n          if (index === 0) {\n            if (isNaN(groupHeaderHeight)) {\n              groupHeaderHeight = item.offsetTop;\n            }\n\n            maxScrollerHeight += groupHeaderHeight;\n          }\n\n          if (itemsToProcess < maxItems) {\n            maxScrollerHeight += item.offsetHeight;\n            itemsToProcess += 1;\n          }\n        });\n      }\n    });\n\n    return items.length > maxItems ? maxScrollerHeight : 0;\n  }\n\n  private closeCalciteDropdown(focusTrigger = true) {\n    this.open = false;\n\n    if (focusTrigger) {\n      focusElement(this.triggers[0]);\n    }\n  }\n\n  private focusOnFirstActiveOrDefaultItem = (): void => {\n    const selectedItem = this.getTraversableItems().find((item) => item.selected);\n    const target: HTMLCalciteDropdownItemElement =\n      selectedItem ||\n      (this.focusLastDropdownItem ? this.items[this.items.length - 1] : this.items[0]);\n\n    this.focusLastDropdownItem = false;\n\n    if (!target) {\n      return;\n    }\n\n    focusElement(target);\n  };\n\n  private onOpenEnd = (): void => {\n    this.focusOnFirstActiveOrDefaultItem();\n    this.el.removeEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n  };\n\n  private toggleDropdown = () => {\n    this.open = !this.open;\n    if (this.open) {\n      this.el.addEventListener(\"calciteDropdownOpen\", this.onOpenEnd);\n    }\n  };\n\n  private updateTabIndexOfItems(target: HTMLCalciteDropdownItemElement): void {\n    this.items.forEach((item: HTMLCalciteDropdownItemElement) => {\n      item.tabIndex = target !== item ? -1 : 0;\n    });\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-dropdown-width: Specifies the width of the component's wrapper.\n */\n\n:host {\n  @apply inline-block;\n}\n\n@include disabled();\n\n:host .calcite-dropdown-wrapper {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n}\n\n@include floating-ui-elem-anim(\".calcite-dropdown-wrapper\");\n:host([open]) .calcite-dropdown-wrapper {\n  @include floating-ui-wrapper-active();\n}\n\n:host .calcite-dropdown-content {\n  @apply bg-foreground-1\n    w-auto\n    overflow-y-auto\n    overflow-x-hidden\n    max-h-menu;\n  inline-size: var(--calcite-dropdown-width);\n}\n.calcite-trigger-container {\n  @apply relative flex flex-auto h-full;\n  @include word-break;\n}\n\n@media (forced-colors: active) {\n  /* use real border since box-shadow is removed in high contrast mode */\n  :host([open]) .calcite-dropdown-wrapper {\n    border: 1px solid canvasText;\n  }\n}\n\n// width\n:host([width-scale=\"s\"]) {\n  --calcite-dropdown-width: theme(\"spacing.48\");\n}\n:host([width-scale=\"m\"]) {\n  --calcite-dropdown-width: theme(\"spacing.56\");\n}\n:host([width-scale=\"l\"]) {\n  --calcite-dropdown-width: theme(\"spacing.64\");\n}\n\n@include base-component();\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","export function isActivationKey(key: string): boolean {\n  return key === \"Enter\" || key === \" \";\n}\n\nexport const numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport const letterKeys = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["SLOTS","Dropdown","proxyCustomElement","HTMLElement","items","groups","mutationObserver","createObserver","this","updateItems","resizeObserver","entries","resizeObserverCallback","openTransitionProp","guid","focusLastDropdownItem","setFilteredPlacements","el","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","updateTriggers","event","triggers","target","assignedElements","flatten","reposition","map","group","Array","from","querySelectorAll","reduce","previousValue","currentValue","updateSelectedItems","forEach","item","scale","updateGroups","filter","matches","updateGroupScale","entry","referenceEl","setDropdownWidth","scrollerEl","setMaxScrollerHeight","referenceElWidth","clientWidth","style","minWidth","maxScrollerHeight","getMaxScrollerHeight","maxHeight","setScrollerAndTransitionEl","observe","transitionEl","setReferenceEl","connectFloatingUI","floatingEl","setFloatingEl","keyDownHandler","composedPath","includes","defaultPrevented","key","open","shiftKey","closeCalciteDropdown","preventDefault","isActivationKey","toggleDropdown","addEventListener","onOpenEnd","focusOnFirstActiveOrDefaultItem","getTraversableItems","find","selected","length","focusElement","removeEventListener","defaultMenuPlacement","openHandler","onToggleOpenCloseComponent","disabled","handleDisabledChange","value","flipPlacementsHandler","maxItemsHandler","overlayPositioningHandler","placementHandler","handlePropsChange","setFocus","componentFocusable","focusFirstTabbable","connectedCallback","childList","subtree","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnect","disconnectFloatingUI","render","h","Host","InteractiveContainer","class","id","onClick","onKeyDown","ref","toAriaBoolean","name","onSlotchange","FloatingCSS","animation","animationActive","role","delayed","placement","overlayPositioning","type","closeCalciteDropdownOnClick","closeCalciteDropdownOnEvent","stopPropagation","closeCalciteDropdownOnOpenEvent","pointerEnterHandler","pointerLeaveHandler","hidden","calciteInternalDropdownItemKeyEvent","keyboardEvent","detail","traversableItems","updateTabIndexOfItems","focusElementInGroup","handleItemSelect","calciteDropdownSelect","emit","closeOnSelectDisabled","requestedDropdownGroup","selectionMode","onBeforeOpen","calciteDropdownBeforeOpen","onOpen","calciteDropdownOpen","onBeforeClose","calciteDropdownBeforeClose","onClose","calciteDropdownClose","selectedItems","maxItems","groupHeaderHeight","itemsToProcess","children","index","isNaN","offsetTop","offsetHeight","focusTrigger","tabIndex","interceptedClick","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","element","blockInteraction","restoreInteraction","removeAttribute","CSS","inert","numberKeys","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","async","componentLoaded","isBrowser","forceUpdate","requestAnimationFrame","callback","options","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","push","unobserve","newObservedEntries","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}