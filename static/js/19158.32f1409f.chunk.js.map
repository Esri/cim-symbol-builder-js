{"version":3,"file":"static/js/19158.32f1409f.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-icon/customElement.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { g as getAssetPath, c as customElement } from \"../../chunks/runtime.js\";\nimport { isServer, nothing, svg, html } from \"lit\";\nimport { LitElement, safeClassMap } from \"@arcgis/lumina\";\nimport { g as getElementDir, t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { l as logger } from \"../../chunks/logger.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  flipRtl: \"flip-rtl\"\n};\nconst iconCache = {};\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\nfunction generateIconId({ icon, scale }) {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`)).then((resp) => resp.json()).catch(() => {\n      logger.error(`${props.icon} (${props.scale}) icon failed to load`);\n      return \"\";\n    });\n  }\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n  return path;\n}\nfunction getCachedIconData(props) {\n  return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n  return iconCache[id];\n}\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n    name = parts.map((part, partIndex) => {\n      return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n        const isFirstCharInName = partIndex === 0 && offset === 0;\n        if (isFirstCharInName) {\n          return match;\n        }\n        return match.toUpperCase();\n      });\n    }).join(\"\");\n  }\n  return numberLeadingName ? `i${name}` : name;\n}\nconst styles = css`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Icon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.visible = false;\n    this.flipRtl = false;\n    this.icon = null;\n    this.preload = false;\n    this.scale = \"m\";\n  }\n  static {\n    this.properties = { pathData: [16, {}, { state: true }], visible: [16, {}, { state: true }], flipRtl: [7, {}, { reflect: true, type: Boolean }], icon: [3, {}, { reflect: true }], preload: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], textLabel: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.preload) {\n      this.visible = true;\n      this.loadIconPathData();\n      return;\n    }\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"icon\") && (this.hasUpdated || this.icon !== null) || changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.loadIconPathData();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n  async loadIconPathData() {\n    const { icon, scale, visible } = this;\n    if (isServer || !icon || !visible) {\n      return;\n    }\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || await fetchIcon(fetchIconProps);\n    if (icon !== this.icon) {\n      return;\n    }\n    this.pathData = pathData;\n  }\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, { rootMargin: \"50px\" });\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver.observe(this.el);\n  }\n  render() {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    this.el.ariaHidden = toAriaBoolean(!semantic);\n    this.el.ariaLabel = semantic ? textLabel : null;\n    this.el.role = semantic ? \"img\" : null;\n    return html`<svg aria-hidden=true class=${safeClassMap({\n      [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n      svg: true\n    })} fill=currentColor height=100% viewBox=${`0 0 ${size} ${size}`} width=100% xmlns=http://www.w3.org/2000/svg>${paths.map((path) => typeof path === \"string\" ? svg`<path d=${path ?? nothing} />` : svg`<path d=${path.d ?? nothing} opacity=${(\"opacity\" in path ? path.opacity : 1) ?? nothing} />`)}</svg>`;\n  }\n}\ncustomElement(\"calcite-icon\", Icon);\nexport {\n  Icon\n};\n"],"names":["CSS","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","icon","scale","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","substring","getCachedIconDataByKey","id","styles","css","Icon","LitElement","constructor","super","arguments","this","visible","flipRtl","preload","properties","pathData","state","reflect","type","Boolean","textLabel","connectedCallback","loadIconPathData","waitUntilVisible","willUpdate","changes","has","hasUpdated","disconnectedCallback","intersectionObserver","disconnect","isServer","fetchIconProps","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","logger","error","path","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","el","render","dir","getElementDir","semantic","paths","concat","ariaHidden","toAriaBoolean","ariaLabel","role","html","safeClassMap","svg","nothing","d","opacity","customElement"],"sourceRoot":""}