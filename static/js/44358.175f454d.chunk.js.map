{"version":3,"file":"static/js/44358.175f454d.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/chunks/component.js","../node_modules/@esri/calcite-components/dist/chunks/form.js","../node_modules/@esri/calcite-components/dist/chunks/interactive.js","../node_modules/@esri/calcite-components/dist/chunks/key.js","../node_modules/@esri/calcite-components/dist/chunks/label.js","../node_modules/@esri/calcite-components/dist/chunks/logger.js","../node_modules/@esri/calcite-components/dist/components/calcite-checkbox/customElement.js","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logger } from \"./logger.js\";\nfunction getIconScale(componentScale) {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\nfunction warnIfMissingRequiredProp(component, newProp, deprecatedProp) {\n  if (!component[newProp] && !component[deprecatedProp]) {\n    logger.warn(`[${component.el.localName}] \"${newProp.toString()}\" or \"${deprecatedProp.toString()}\" is required.`);\n  }\n}\nfunction isHidden(el) {\n  return el.hidden || el.itemHidden;\n}\nasync function componentFocusable(component) {\n  await component.componentOnReady();\n  await component.updateComplete;\n}\nexport {\n  componentFocusable as c,\n  getIconScale as g,\n  isHidden as i,\n  warnIfMissingRequiredProp as w\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html, isServer } from \"lit\";\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary } from \"./dom.js\";\nconst componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\"\n];\nfunction getClearValidationEventName(componentTag) {\n  const componentTagCamelCase = componentTag.split(\"-\").map((part, index) => index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`).join(\"\");\n  const clearValidationEvent = `${componentTagCamelCase}${componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"}`;\n  return clearValidationEvent;\n}\nconst hiddenFormInputSlotName = \"hidden-form-input\";\nfunction isCheckable(component) {\n  return \"checked\" in component;\n}\nconst onFormResetMap = /* @__PURE__ */ new WeakMap();\nconst formComponentSet = /* @__PURE__ */ new WeakSet();\nfunction hasRegisteredFormComponentParent(form, formComponentEl) {\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(formComponentEl.parentElement, \"[form]\");\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n  let hasRegisteredFormComponentParent2 = false;\n  form.addEventListener(formComponentRegisterEventName, (event) => {\n    hasRegisteredFormComponentParent2 = event.composedPath().some((element) => formComponentSet.has(element));\n    event.stopPropagation();\n  }, { once: true });\n  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {\n    bubbles: true,\n    composed: true\n  }));\n  return hasRegisteredFormComponentParent2;\n}\nfunction displayValidationMessage(component, { status, message, icon }) {\n  if (\"status\" in component) {\n    component.status = status;\n  }\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\n    component.validationIcon = icon;\n  }\n  if (\"validationMessage\" in component && !component.validationMessage) {\n    component.validationMessage = message;\n  }\n}\nfunction getValidationComponent(el) {\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\n  }\n  return el;\n}\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\nfunction invalidHandler(event) {\n  const hiddenInput = event?.target;\n  const hiddenInputMessage = hiddenInput?.validationMessage;\n  const formComponent = getValidationComponent(hiddenInput?.parentElement);\n  if (!formComponent) {\n    return;\n  }\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n  event?.preventDefault();\n  if (\"validity\" in formComponent) {\n    formComponent.validity = hiddenInput?.validity;\n  }\n  formComponent.dispatchEvent(invalidEvent);\n  displayValidationMessage(formComponent, {\n    message: hiddenInputMessage,\n    icon: true,\n    status: \"invalid\"\n  });\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(clearValidationEvent, () => {\n    if (\"status\" in formComponent) {\n      formComponent.status = \"idle\";\n    }\n    if (\"validationIcon\" in formComponent && (formComponent.validationIcon === \"\" || formComponent.validationIcon === true)) {\n      formComponent.validationIcon = false;\n    }\n    if (\"validationMessage\" in formComponent && formComponent.validationMessage === hiddenInputMessage) {\n      formComponent.validationMessage = \"\";\n    }\n    if (\"validity\" in formComponent) {\n      formComponent.validity = hiddenInput?.validity;\n    }\n  }, { once: true });\n}\nfunction submitForm(component) {\n  const { formEl } = component;\n  if (!formEl) {\n    return false;\n  }\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll(\"[status=invalid]\");\n    for (const el of invalidEls) {\n      if (el?.validationMessage) {\n        el?.setFocus();\n        break;\n      }\n    }\n  });\n  return true;\n}\nfunction resetForm(component) {\n  component.formEl?.reset();\n}\nfunction connectForm(component) {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n  const boundOnFormReset = onFormReset.bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\nfunction findAssociatedForm(component) {\n  const { el, form } = component;\n  return form ? queryElementRoots(el, { id: form }) : closestElementCrossShadowBoundary(el, \"form\");\n}\nfunction onFormReset() {\n  if (\"status\" in this) {\n    this.status = \"idle\";\n  }\n  if (\"validationIcon\" in this) {\n    this.validationIcon = false;\n  }\n  if (\"validationMessage\" in this) {\n    this.validationMessage = \"\";\n  }\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n  this.value = this.defaultValue;\n  this.onFormReset?.();\n}\nfunction disconnectForm(component) {\n  const { el, formEl } = component;\n  if (!formEl) {\n    return;\n  }\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\nfunction afterConnectDefaultValueSet(component, value) {\n  component.defaultValue = value;\n}\nconst internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\nconst hiddenInputInputHandler = (event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\nconst removeHiddenInputChangeEventListener = (input) => input.removeEventListener(\"input\", hiddenInputInputHandler);\nfunction syncHiddenFormInput(component) {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n  if (isServer) {\n    return;\n  }\n  const inputs = el.querySelectorAll(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n  const values = Array.isArray(value) ? value : [value];\n  const extra = [];\n  const seen = /* @__PURE__ */ new Set();\n  inputs.forEach((input) => {\n    const valueMatch = values.find((val) => (\n      /* intentional non-strict equality check */\n      val == input.value\n    ));\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n  let docFrag;\n  values.forEach((value2) => {\n    if (seen.has(value2)) {\n      return;\n    }\n    let input = extra.pop();\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.ariaHidden = \"true\";\n      input.slot = hiddenFormInputSlotName;\n    }\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n    docFrag.append(input);\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n    defaultSyncHiddenFormInput(component, input, value2);\n  });\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\nfunction defaultSyncHiddenFormInput(component, input, value) {\n  const { defaultValue, disabled, form, name, required } = component;\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n    input.defaultChecked = component.defaultChecked;\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n  component.syncHiddenFormInput?.(input);\n  const validationComponent = getValidationComponent(component.el);\n  if (validationComponent && \"validity\" in validationComponent) {\n    for (const key in { ...input?.validity }) {\n      validationComponent.validity[key] = input.validity[key];\n    }\n  }\n}\nconst HiddenFormInputSlot = ({ component }) => {\n  syncHiddenFormInput(component);\n  return html`<slot name=${hiddenFormInputSlotName}></slot>`;\n};\nexport {\n  HiddenFormInputSlot as H,\n  afterConnectDefaultValueSet as a,\n  connectForm as c,\n  disconnectForm as d,\n  findAssociatedForm as f,\n  internalHiddenInputInputEvent as i,\n  resetForm as r,\n  submitForm as s\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html } from \"lit-html\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nfunction interceptedClick() {\n  const { disabled } = this;\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\nfunction onPointerDown(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.preventDefault();\n  }\n}\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\nfunction onNonBubblingWhenDisabledMouseEvent(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\nconst captureOnlyOptions = { capture: true };\nfunction updateHostInteraction(component) {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    blockInteraction(component);\n    return;\n  }\n  restoreInteraction(component);\n  component.el.removeAttribute(\"aria-disabled\");\n}\nfunction blockInteraction(component) {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\nfunction addInteractionListeners(element) {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nfunction restoreInteraction(component) {\n  delete component.el.click;\n  removeInteractionListeners(component.el);\n}\nfunction removeInteractionListeners(element) {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nconst CSS = {\n  container: \"interaction-container\"\n};\nconst InteractiveContainer = ({ children, disabled }) => html`<div class=${safeClassMap(CSS.container)} .inert=${disabled}>${children}</div>`;\nexport {\n  InteractiveContainer as I,\n  updateHostInteraction as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport {\n  isActivationKey as i,\n  numberKeys as n\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary, m as isBefore } from \"./dom.js\";\nconst labelClickEvent = \"calciteInternalLabelClick\";\nconst labelConnectedEvent = \"calciteInternalLabelConnected\";\nconst labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = /* @__PURE__ */ new WeakMap();\nconst onLabelClickMap = /* @__PURE__ */ new WeakMap();\nconst onLabelConnectedMap = /* @__PURE__ */ new WeakMap();\nconst onLabelDisconnectedMap = /* @__PURE__ */ new WeakMap();\nconst unlabeledComponents = /* @__PURE__ */ new Set();\nconst findLabelForComponent = (componentEl) => {\n  const { id } = componentEl;\n  const forLabel = id && queryElementRoots(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` });\n  if (forLabel) {\n    return forLabel;\n  }\n  const parentLabel = closestElementCrossShadowBoundary(componentEl, labelTagName);\n  if (!parentLabel || // labelable components within other custom elements are not considered labelable\n  hasAncestorCustomElements(parentLabel, componentEl)) {\n    return null;\n  }\n  return parentLabel;\n};\nfunction hasAncestorCustomElements(label, componentEl) {\n  let traversedElements;\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n  const listener = (event) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath();\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n  const ancestorCustomElements = traversedElements.filter((el) => el !== componentEl && el !== label).filter((el) => el.tagName?.includes(\"-\"));\n  return ancestorCustomElements.length > 0;\n}\nfunction connectLabel(component) {\n  if (!component) {\n    return;\n  }\n  const labelEl = findLabelForComponent(component.el);\n  if (onLabelClickMap.has(labelEl) && labelEl === component.labelEl || !labelEl && unlabeledComponents.has(component)) {\n    return;\n  }\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n  if (labelEl) {\n    component.labelEl = labelEl;\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\nfunction disconnectLabel(component) {\n  if (!component) {\n    return;\n  }\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n  if (!component.labelEl) {\n    return;\n  }\n  const labelables = labelToLabelables.get(component.labelEl);\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder)\n  );\n  component.labelEl = null;\n}\nfunction sortByDOMOrder(a, b) {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\nfunction getLabelText(component) {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\nfunction onLabelClick(event) {\n  const labelClickTarget = event.detail.sourceEvent.target;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n  if (labelableChildClicked) {\n    return;\n  }\n  const firstLabelable = labelables[0];\n  if (firstLabelable.disabled) {\n    return;\n  }\n  firstLabelable.onLabelClick(event);\n}\nfunction onLabelConnected() {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\nfunction onLabelDisconnected() {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\nasync function associateExplicitLabelToUnlabeledComponent(label) {\n  await label.componentOnReady();\n  const alreadyLabeled = labelToLabelables.has(label);\n  if (alreadyLabeled) {\n    return;\n  }\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n  if (!forComponentEl) {\n    return;\n  }\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\nexport {\n  associateExplicitLabelToUnlabeledComponent as a,\n  labelDisconnectedEvent as b,\n  connectLabel as c,\n  disconnectLabel as d,\n  getLabelText as g,\n  labelConnectedEvent as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logLevel } from \"./runtime.js\";\nconst loggedDeprecations = /* @__PURE__ */ new Set();\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10\n};\nfunction willLog(level) {\n  return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n  if (!willLog(level)) {\n    return;\n  }\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n  debug: (message) => forwardToConsole(\"debug\", message),\n  info: (message) => forwardToConsole(\"info\", message),\n  warn: (message) => forwardToConsole(\"warn\", message),\n  error: (message) => forwardToConsole(\"error\", message),\n  trace: (message) => forwardToConsole(\"trace\", message),\n  deprecated\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n  loggedDeprecations.add(key);\n  const multiSuggestions = Array.isArray(suggested);\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n  forwardToConsole(\"warn\", message);\n}\nexport {\n  logger as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { C as CSS_UTILITY, c as customElement } from \"../../chunks/runtime.js\";\nimport { svg, html } from \"lit-html\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { LitElement, createEvent, safeClassMap, nothing } from \"@arcgis/lumina\";\nimport { g as getElementDir } from \"../../chunks/dom.js\";\nimport { c as connectForm, d as disconnectForm, H as HiddenFormInputSlot } from \"../../chunks/form.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { i as isActivationKey } from \"../../chunks/key.js\";\nimport { c as connectLabel, d as disconnectLabel, g as getLabelText } from \"../../chunks/label.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  toggle: \"toggle\",\n  check: \"check-svg\"\n};\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host([scale=s]) .check-svg,:host([scale=s]) .toggle{inline-size:var(--calcite-checkbox-size, .75rem);block-size:var(--calcite-checkbox-size, .75rem)}:host([scale=m]) .check-svg,:host([scale=m]) .toggle{inline-size:var(--calcite-checkbox-size, var(--calcite-font-size--1));block-size:var(--calcite-checkbox-size, var(--calcite-font-size--1))}:host([scale=l]) .check-svg,:host([scale=l]) .toggle{inline-size:var(--calcite-checkbox-size, 1rem);block-size:var(--calcite-checkbox-size, 1rem)}:host{position:relative;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}:host .check-svg{pointer-events:none;box-sizing:border-box;display:block;overflow:hidden;background-color:var(--calcite-color-foreground-1);fill:currentColor;stroke:currentColor;stroke-width:1;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;box-shadow:inset 0 0 0 1px var(--calcite-checkbox-border-color, var(--calcite-color-border-input));color:var(--calcite-checkbox-icon-color, var(--calcite-color-background))}:host([status=invalid]:not([checked])) .check-svg{box-shadow:inset 0 0 0 1px var(--calcite-color-status-danger)}:host([status=invalid]:not([checked])) .toggle:focus{outline:2px solid var(--calcite-color-status-danger);outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}:host([checked]) .check-svg,:host([indeterminate]) .check-svg{background-color:var(--calcite-color-brand);box-shadow:inset 0 0 0 1px var(--calcite-color-brand)}:host([hovered]) .toggle .check-svg,:host .toggle:hover .check-svg{box-shadow:inset 0 0 0 2px var(--calcite-checkbox-border-color-hover, var(--calcite-color-brand))}.toggle{position:relative;outline-color:transparent}.toggle:active,.toggle:focus,.toggle:focus-visible{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.toggle:after,.toggle:before{inset-block-start:50%;inset-inline-start:50%;min-block-size:1.5rem;min-inline-size:1.5rem;position:absolute}.toggle:not(.calcite--rtl):after{content:\"\";transform:translate(-50%) translateY(-50%)}.toggle.calcite--rtl:before{content:\"\";transform:translate(50%) translateY(-50%)}@media (forced-colors: active){.check-svg{border:1px solid currentColor}}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}::slotted(input[slot=hidden-form-input]){margin:0!important;opacity:0!important;outline:none!important;padding:0!important;position:absolute!important;inset:0!important;transform:none!important;-webkit-appearance:none!important;z-index:-1!important}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Checkbox extends LitElement {\n  constructor() {\n    super();\n    this.checkedPath = \"M5.5 12L2 8.689l.637-.636L5.5 10.727l8.022-7.87.637.637z\";\n    this.indeterminatePath = \"M13 8v1H3V8z\";\n    this.onLabelClick = () => {\n      this.toggle();\n    };\n    this.toggleEl = createRef();\n    this.checked = false;\n    this.disabled = false;\n    this.hovered = false;\n    this.indeterminate = false;\n    this.required = false;\n    this.scale = \"m\";\n    this.status = \"idle\";\n    this.validity = {\n      valid: false,\n      badInput: false,\n      customError: false,\n      patternMismatch: false,\n      rangeOverflow: false,\n      rangeUnderflow: false,\n      stepMismatch: false,\n      tooLong: false,\n      tooShort: false,\n      typeMismatch: false,\n      valueMissing: false\n    };\n    this.calciteCheckboxChange = createEvent({ cancelable: false });\n    this.calciteInternalCheckboxBlur = createEvent({ cancelable: false });\n    this.calciteInternalCheckboxFocus = createEvent({ cancelable: false });\n    this.listen(\"click\", this.clickHandler);\n    this.listen(\"keydown\", this.keyDownHandler);\n  }\n  static {\n    this.properties = { checked: [7, {}, { reflect: true, type: Boolean }], disabled: [7, {}, { reflect: true, type: Boolean }], form: [3, {}, { reflect: true }], hovered: [7, {}, { reflect: true, type: Boolean }], indeterminate: [7, {}, { reflect: true, type: Boolean }], label: 1, name: [3, {}, { reflect: true }], required: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], status: [3, {}, { reflect: true }], validity: [0, {}, { attribute: false }], value: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    this.toggleEl.value?.focus();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    connectLabel(this);\n    connectForm(this);\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n  syncHiddenFormInput(input) {\n    input.type = \"checkbox\";\n  }\n  getPath() {\n    return this.indeterminate ? this.indeterminatePath : this.checked ? this.checkedPath : \"\";\n  }\n  toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.setFocus();\n      this.indeterminate = false;\n      this.calciteCheckboxChange.emit();\n    }\n  }\n  keyDownHandler(event) {\n    if (isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  }\n  clickHandler() {\n    this.toggle();\n  }\n  onToggleBlur() {\n    this.calciteInternalCheckboxBlur.emit(false);\n  }\n  onToggleFocus() {\n    this.calciteInternalCheckboxFocus.emit(true);\n  }\n  render() {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div .ariaChecked=${this.checked} .ariaLabel=${getLabelText(this)} class=${safeClassMap({\n      [CSS.toggle]: true,\n      [CSS_UTILITY.rtl]: rtl\n    })} @blur=${this.onToggleBlur} @focus=${this.onToggleFocus} role=checkbox tabindex=${(this.disabled ? void 0 : 0) ?? nothing} ${ref(this.toggleEl)}><svg aria-hidden=true class=${safeClassMap(CSS.check)} viewBox=\"0 0 16 16\">${svg`<path d=${this.getPath() ?? nothing} />`}</svg><slot></slot></div>${HiddenFormInputSlot({ component: this })}` });\n  }\n}\ncustomElement(\"calcite-checkbox\", Checkbox);\nexport {\n  Checkbox\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["getIconScale","componentScale","warnIfMissingRequiredProp","component","newProp","deprecatedProp","logger","warn","el","localName","toString","isHidden","hidden","itemHidden","async","componentFocusable","componentOnReady","updateComplete","componentsWithInputEvent","hiddenFormInputSlotName","isCheckable","onFormResetMap","WeakMap","formComponentSet","WeakSet","getValidationComponent","nodeName","closestElementCrossShadowBoundary","invalidEvent","CustomEvent","bubbles","composed","invalidHandler","event","hiddenInput","target","hiddenInputMessage","validationMessage","formComponent","parentElement","componentTag","toLowerCase","componentTagParts","split","length","preventDefault","validity","dispatchEvent","status","message","icon","validationIcon","displayValidationMessage","clearValidationEvent","map","part","index","toUpperCase","slice","join","includes","getClearValidationEventName","addEventListener","once","submitForm","formEl","requestSubmit","removeEventListener","requestAnimationFrame","invalidEls","querySelectorAll","setFocus","resetForm","reset","connectForm","value","associatedForm","findAssociatedForm","form","formComponentEl","formComponentRegisterEventName","hasRegisteredFormComponentParent2","composedPath","some","element","has","stopPropagation","hasRegisteredFormComponentParent","defaultValue","defaultChecked","checked","boundOnFormReset","onFormReset","bind","set","add","queryElementRoots","id","this","disconnectForm","get","delete","afterConnectDefaultValueSet","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","defaultSyncHiddenFormInput","disabled","name","required","tabIndex","setAttribute","removeAttribute","syncHiddenFormInput","validationComponent","key","HiddenFormInputSlot","ownerDocument","isServer","inputs","forEach","remove","values","Array","isArray","extra","seen","Set","docFrag","valueMatch","find","val","push","value2","pop","createElement","ariaHidden","slot","createDocumentFragment","append","html","interceptedClick","HTMLElement","prototype","click","call","onPointerDown","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","contains","document","activeElement","blur","blockInteraction","restoreInteraction","CSS","InteractiveContainer","children","safeClassMap","isActivationKey","numberKeys","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","findLabelForComponent","componentEl","forLabel","selector","parentLabel","label","traversedElements","customElementAncestorCheckEventType","listener","indexOf","ancestorCustomElements","filter","tagName","hasAncestorCustomElements","connectLabel","labelEl","boundOnLabelDisconnected","onLabelDisconnected","labelables","sort","sortByDOMOrder","onLabelClick","disconnectLabel","labelable","a","b","isBefore","getLabelText","textContent","trim","labelClickTarget","detail","sourceEvent","clickedLabelable","firstLabelable","onLabelConnected","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","forComponentEl","getElementById","for","loggedDeprecations","logLevels","trace","debug","info","error","off","forwardToConsole","level","data","logLevel","willLog","console","listFormatter","deprecated","context","suggested","removalVersion","multiSuggestions","Intl","ListFormat","style","type","format","suggestion","styles","css","Checkbox","LitElement","constructor","super","checkedPath","indeterminatePath","toggle","toggleEl","createRef","hovered","indeterminate","scale","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","calciteCheckboxChange","createEvent","cancelable","calciteInternalCheckboxBlur","calciteInternalCheckboxFocus","listen","clickHandler","keyDownHandler","properties","reflect","Boolean","attribute","focus","connectedCallback","updated","disconnectedCallback","getPath","emit","onToggleBlur","onToggleFocus","render","rtl","getElementDir","CSS_UTILITY","nothing","ref","svg","customElement","s","notifyChildrenConnectedChanged","i","t","e","_$AN","_$AO","o","_$AM","size","r","c","h","n","_$AH","CHILD","_$AP","_$AQ","f","arguments","_$AT","isConnected","_$AU","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","update","G","rt","lt","ct","ht","options","host","globalThis"],"sourceRoot":""}